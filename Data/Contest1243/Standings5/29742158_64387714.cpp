#pragma GCC optimize("Ofast")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
#define int long long int
using namespace std;

//Solution generated by Ashish on 06-11-2019 at 20:36:34

void desperate_optimization(bool submitting=true,int precision=10)
{
  if(!submitting) return;
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  cout.setf(ios::fixed);
  cout.setf(ios::showpoint);
  cout.precision(precision);
}

int32_t main()
{
  desperate_optimization(true);
  int t;
  cin>>t;
  while(t--)
  {
  	int n;
  	cin>>n;
  	string s,t;
  	cin>>s>>t;
  	vector<int> freq(26,0);
  	for(int i=0;i<n;i++)
  	{
  		freq[s[i]-'a']++;
  		freq[t[i]-'a']++;
  	}
  	vector<pair<int,int>> moves;
  	for(int i=0;i<26;i++)
  	{
  		if(freq[i]%2!=0)
  		{
  			cout<<"No\n";
  			goto nextCase;
  		}
  	}

  	for(int i=0;i<n;i++)
  	{
  		//Making t[i] equal to s[i]
  		if(s[i]==t[i]) continue;
  		for(int j=i+1;j<n;j++)
  		{
  			if(s[j]==s[i])
  			{
  				swap(s[j],t[i]);
  				moves.push_back({j,i});
  				goto nextPos;
  			}
  		}

  		for(int j=i+1;j<n;j++)
  		{
  			if(t[j]==s[i])
  			{
  				swap(s[j],t[j]);
  				swap(s[j],t[i]);
  				moves.push_back({j,j});
  				moves.push_back({j,i});
  				goto nextPos;
  			}
  		}
  		assert(0);
  		nextPos:
  		int z;
  	}
  	assert(moves.size()<=2*n);
  	cout<<"Yes\n";
  	cout<<moves.size()<<'\n';
  	for(auto itr:moves) cout<<itr.first+1<<' '<<itr.second+1<<'\n';
  	nextCase:
  	int party;
  }


  return 0;
}
