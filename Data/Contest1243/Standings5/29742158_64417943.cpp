#pragma GCC optimize("Ofast")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
#define int long long int
using namespace std;

//Solution generated by Ashish on 06-11-2019 at 20:36:34

void desperate_optimization(bool submitting=true,int precision=10)
{
  if(!submitting) return;
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  cout.setf(ios::fixed);
  cout.setf(ios::showpoint);
  cout.precision(precision);
}
const int N=100005;
int n,m;
set<int> g[N];
set<int> unvisited;
int32_t main()
{
  desperate_optimization(true);
  cin>>n>>m;
  for(int i=0;i<m;i++)
  {
  	int u,v;
  	cin>>u>>v;
  	u--;
  	v--;
  	g[u].insert(v);
  	g[v].insert(u);
  }
  for(int i=0;i<n;i++) unvisited.insert(i);
  int sizeSum=0;
	int answer=n-1;
  for(int i=0;i<n;i++)
  {
  	if(unvisited.count(i)==0) continue;
  	//For component with 0 weighted edges containing node i
  	unvisited.erase(i);
  	set<int> currentSubset;
  	currentSubset.insert(i);
  	while(currentSubset.size())
  	{
			int x=*(currentSubset.begin());
			currentSubset.erase(x);
			set<int> todelete;
			for(auto itr:unvisited)
			{
				if(g[x].count(itr)) continue;
				currentSubset.insert(itr);
				// unvisited.erase(itr);
				todelete.insert(itr);
				answer--;
			}	  		
			for(auto itr:todelete)
				unvisited.erase(itr);
  	}
  }
  cout<<answer;






  return 0;
}
