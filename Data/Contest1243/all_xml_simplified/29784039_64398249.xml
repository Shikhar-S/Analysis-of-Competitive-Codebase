include directive file typedef type name name name using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name if condition expr name then block type pseudo expr_stmt expr name operator expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr name name index expr literal type number operator literal type char expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type boolean break if condition expr name then block expr_stmt expr name name index expr literal type number operator literal type char break if condition expr name then block type pseudo expr_stmt expr name operator if condition expr name name index expr literal type number operator literal type char then block expr_stmt expr call name argument_list argument expr literal type string continue expr_stmt expr name operator literal type string operator name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr name name index expr name function type name name parameter_list block comment type block expr_stmt expr call name argument_list comment type block 
