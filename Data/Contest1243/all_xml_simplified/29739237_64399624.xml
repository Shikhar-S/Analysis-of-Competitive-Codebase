include directive file include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name name index expr name operator literal type number function specifier type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo return expr literal type number return expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr operator name name index expr name operator name name index expr name operator operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string break expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name if condition expr name then block type pseudo continue decl_stmt decl type name name init expr literal type number while condition expr literal type number block expr_stmt expr name operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue if condition expr name name index expr name name index expr name operator literal type char operator literal type number operator name name index expr name name index expr name operator literal type char operator literal type number operator literal type number then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue if condition expr name name index expr name operator name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number break if condition expr name then block type pseudo break if condition expr operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue else block expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number if condition expr name then block type pseudo break if condition expr call name argument_list then block type pseudo break if condition expr name operator literal type number operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr name name index expr name return expr literal type number 
