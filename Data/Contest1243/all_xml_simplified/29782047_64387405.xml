include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file typedef type name name name using namespace name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name else block type pseudo return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name argument_list type generic argument expr name name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr call name argument_list argument expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo return if condition expr name operator literal type number then block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name operator name operator call name argument_list argument expr literal type number argument expr name argument expr name operator literal type number decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list operator literal type number operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number expr_stmt expr name operator return expr name decl_stmt decl type name name init expr literal type number operator literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number decl type ref prev name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name operator name name index expr name operator name name index expr name then block expr_stmt expr name operator name expr_stmt expr name operator literal type boolean elseif if condition expr operator name operator name operator name name index expr name operator name name index expr name then block if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean else block type pseudo break elseif if condition expr name operator name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean break comment type block if condition expr name then block expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name 
