include directive file using namespace name function type name name parameter_list parameter decl type name name name block decl_stmt decl type name name name init expr call name argument_list argument expr name if condition expr name operator literal type number operator name operator literal type number then block return expr literal type boolean if condition expr name operator literal type number operator literal type number operator name operator literal type number operator literal type number then block return expr literal type boolean for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator literal type number block if condition expr name operator name operator literal type number operator operator name operator operator name operator literal type number operator operator literal type number operator then block return expr literal type boolean return expr literal type boolean function type name name argument_list type generic argument expr name name name parameter_list parameter decl type name name name block decl_stmt decl type name name name init expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name name if condition expr call name argument_list argument expr name then block expr_stmt expr call name name operator name argument_list argument expr name return expr name for control init decl type name name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator name operator literal type number then block if condition expr name operator name operator name then block expr_stmt expr call name name operator name argument_list argument expr name else block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator name return expr name function type name name name parameter_list parameter decl type name name name parameter decl type name name name block if condition expr name operator literal type number then block return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list block decl_stmt decl type name name name expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator literal type number operator literal type string return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name init expr call name argument_list argument expr name decl_stmt decl type name name name init expr call name name operator name argument_list decl_stmt decl type name name name init expr literal type number for control init decl type name name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator call name argument_list argument expr name name index expr name argument expr name expr_stmt expr name operator name operator literal type string return expr literal type number 
