include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value typedef type name name name using namespace name comment type line comment type line comment type line comment type line decl_stmt decl type specifier name name init expr operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name init expr name expr_stmt expr name operator name expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr operator name else expr name function specifier type name name parameter_list block decl_stmt decl type name name while condition expr operator name operator call name argument_list operator operator literal type char operator name operator literal type char operator name operator literal type char block type pseudo empty_stmt return expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block return expr name operator name namespace name block typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name operator literal type number decl type ref prev name decl type ref prev name decl type ref prev name name index expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr literal type number operator literal type number decl type ref prev name name index expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator name operator expr name operator name if condition expr name operator literal type number then block type pseudo return expr operator name operator name operator operator name elseif if condition expr name operator literal type number then block type pseudo return expr operator operator operator name operator operator name operator literal type number operator operator name operator operator literal type number operator operator operator name operator operator name operator operator operator literal type number operator literal type number operator operator literal type number operator operator operator name operator operator operator name else block decl_stmt decl type name name init expr operator name operator call name argument_list argument expr name operator operator name name operator name operator name operator literal type number decl_stmt decl type name name init expr operator name operator name operator name operator name operator operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr name operator name operator expr name operator literal type number decl_stmt decl type name name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument block if condition expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator operator name for control init decl type name name init expr literal type number condition expr operator name operator name name index expr name operator name operator operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name if condition expr operator operator name operator name name index expr name operator then block type pseudo break function specifier type name name parameter_list block expr_stmt expr name operator literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number do block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name condition expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name operator literal type number for control init condition expr operator name operator literal type number incr expr name operator literal type number operator expr operator name block type pseudo empty_stmt decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name decl type ref prev name while condition expr name operator block expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name if condition expr name operator literal type number operator name operator literal type number operator name operator name operator literal type number then block type pseudo return expr literal type boolean expr_stmt expr name operator name return expr name operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type boolean if condition expr name operator name then block type pseudo return expr name name index expr name operator name if condition expr operator name operator literal type number then block type pseudo return expr literal type boolean macro name argument_list argument argument literal type number argument literal type number if condition expr call name argument_list argument expr call name argument_list operator operator name operator literal type number operator operator literal type number argument expr name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr operator operator name operator literal type number operator operator operator operator name operator literal type number operator then block type pseudo expr_stmt expr name operator literal type number operator expr name operator literal type number operator expr name operator literal type number elseif if condition expr operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type number elseif if condition expr operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type number else block if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name operator name return expr name operator name function type name name parameter_list parameter decl type name name block while condition expr literal type number block decl_stmt decl type name name init expr call name argument_list operator name decl type ref prev name decl type ref prev name init expr literal type number modifier decl type ref prev name init expr name modifier decl type ref prev name init expr name decl type ref prev name init expr call name argument_list operator literal type number operator literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr operator name operator operator name operator operator call name argument_list argument expr name argument expr name argument expr name operator name operator operator name operator expr name operator expr_stmt expr operator name operator operator name operator operator call name argument_list argument expr name argument expr name argument expr name operator name operator operator name while condition expr name operator name block decl_stmt decl type name name init expr call name argument_list argument expr name operator name operator name argument expr name argument expr name if condition expr operator name then block type pseudo return expr call name argument_list argument expr name argument expr name if condition expr operator operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator literal type number operator name operator name then block type pseudo return expr name expr_stmt expr name operator name expr_stmt expr operator name operator operator name operator operator call name argument_list argument expr name argument expr name argument expr name operator name operator operator name expr_stmt expr operator name operator operator name operator operator call name argument_list argument expr name argument expr name argument expr name operator name operator operator name expr_stmt expr name operator operator name operator function type name name parameter_list parameter decl type name name block macro name argument_list argument argument literal type number argument if condition expr operator operator name operator name name index expr name operator then block type pseudo expr_stmt expr name operator name name index expr name operator expr name name index expr name operator operator name name index expr name if condition expr name operator name then block for control init condition expr name operator literal type number incr expr name operator name name index expr name block type pseudo expr_stmt expr name name index expr name operator operator name name index expr name elseif if condition expr call name argument_list argument expr name then block type pseudo expr_stmt expr name name index expr name operator operator name else block decl_stmt decl type name name init expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator name function type name name parameter_list block expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name operator name macro name argument_list argument argument literal type number argument if condition expr operator name operator name name index expr name operator name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator operator literal type number else block expr_stmt expr operator name name index expr name operator literal type number function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list decl_stmt decl type name name macro name argument_list argument argument literal type number argument expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name name index expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name argument_list type generic argument expr name modifier name block if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block expr_stmt expr call name argument_list argument expr name argument expr name operator literal type number argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name operator name name index expr name argument expr name operator literal type number argument expr name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name return expr name empty_stmt function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name operator name name init expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string argument expr name elseif if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr literal type number operator name else block expr_stmt expr call name argument_list argument expr literal type string argument expr literal type number return expr literal type number 
