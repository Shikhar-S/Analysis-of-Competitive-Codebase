define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file comment type line using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number comment type line comment type line decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator for control init expr name operator name operator name block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type string operator name goto name for control init decl type name name init expr literal type number condition expr name operator literal type number operator name incr expr name operator block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator break for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator break for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name goto name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name goto name if condition expr name operator literal type number then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name break label name empty_stmt if condition expr call name name operator name argument_list operator literal type number operator name then block expr_stmt expr name operator literal type string operator name operator call name name operator name argument_list operator name for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name else block type pseudo expr_stmt expr name operator literal type string operator name label name empty_stmt return expr literal type number 
