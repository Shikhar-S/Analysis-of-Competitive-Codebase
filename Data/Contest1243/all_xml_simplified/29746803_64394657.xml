include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file typedef type name name name define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr literal type number function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl_stmt decl type name name while condition expr name operator block expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr call name argument_list argument expr name name index expr name operator literal type char operator expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr call name argument_list argument expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block type pseudo continue decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator operator name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator operator name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator operator name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break expr_stmt expr name operator literal type string operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type char operator name name index expr name operator name operator literal type number operator name return expr literal type number 
