include directive file using namespace name typedef type name name name name decl_stmt decl type name name decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator operator expr name name index expr name name index expr name operator for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string goto name expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator expr call name name operator name argument_list argument expr name argument expr name goto name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator expr call name name operator name argument_list argument expr name argument expr name break label name empty_stmt expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name operator literal type number argument expr name name operator name operator literal type number label name empty_stmt return expr literal type number 
