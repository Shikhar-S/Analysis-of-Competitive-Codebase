include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl type ref prev name decl type ref prev name function type name name parameter_list block expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr name operator block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type number break if condition expr operator name then block expr_stmt expr name operator literal type string else block while condition expr name operator name block if condition expr call name name operator name argument_list operator name operator name then block break for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name operator name name index expr name operator name name index expr name then block continue if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name break for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name break if condition expr operator name operator call name name operator name argument_list operator name operator name then block expr_stmt expr name operator literal type string continue if condition expr name operator name then block expr_stmt expr name operator literal type string expr_stmt expr name operator operator name operator call name name operator name argument_list operator literal type string for control init decl type name name argument_list type generic argument expr name argument expr name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator literal type string else block expr_stmt expr name operator literal type string return expr literal type number 
