include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block for control init expr call name argument_list argument expr literal type string argument expr operator name condition expr name operator incr block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr name argument expr name operator expr name operator literal type boolean expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator operator expr name name index expr name name index expr name operator literal type char operator for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr operator name then block expr_stmt expr call name argument_list argument expr literal type string continue for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name operator name operator literal type number argument expr name operator name argument expr name name index expr name operator name if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name else block expr_stmt expr name operator call name argument_list argument expr name operator name operator literal type number argument expr name operator name argument expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr call name argument_list argument expr name argument expr name then block expr_stmt expr call name argument_list argument expr literal type string continue expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init expr specifier name index expr name operator name operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number argument expr name operator literal type number 
