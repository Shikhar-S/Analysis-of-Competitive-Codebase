comment type block include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value typedef type name name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean for control init decl type name name range expr name block if condition expr name name operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name then block expr_stmt expr name operator literal type string operator name continue decl_stmt decl type name name decl_stmt decl type name name init expr call name name operator name argument_list for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block type pseudo continue expr_stmt expr name operator literal type boolean for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block type pseudo continue if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator literal type number expr name name index expr name operator literal type number break if condition expr name then block for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block type pseudo continue if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator literal type number expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator literal type number expr name name index expr name operator literal type number break if condition expr name operator name operator call name name operator name argument_list operator literal type number operator name then block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name else block type pseudo expr_stmt expr name operator literal type string operator name return expr literal type number 
