ifdef directive name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file else directive include directive file endif directive using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list argument expr name block operator operator decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list parameter decl type name name block return expr call name argument_list operator name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name operator literal type number for control init condition expr name incr expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name comment type line function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block expr_stmt expr name operator name operator literal type string return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator name operator expr name operator literal type number block decl_stmt decl type name name init expr literal type number while condition expr name operator name operator literal type number block expr_stmt expr name operator name expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type number operator literal type string else block expr_stmt expr name operator name name index expr literal type number operator literal type string 
