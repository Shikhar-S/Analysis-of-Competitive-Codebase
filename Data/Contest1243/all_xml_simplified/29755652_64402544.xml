include directive file define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name while condition expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name name index expr name operator literal type char operator macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator literal type number break if condition expr name then block type pseudo continue decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number if condition expr call name name operator name argument_list operator literal type number then block if condition expr name name index expr literal type number operator name operator name name index expr literal type number operator name operator name name index expr literal type number operator name operator name name index expr literal type number operator name then block type pseudo expr_stmt expr name operator literal type number operator expr call name argument_list argument expr literal type string if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string 
