include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name ifdef directive name define directive macro name parameter_list parameter type name modifier value else directive define directive macro name parameter_list parameter type name modifier endif directive ifdef directive name define directive macro name parameter_list parameter type name modifier value else directive define directive macro name parameter_list parameter type name modifier endif directive using namespace name comment type line struct name block public type default function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name operator literal type string return expr operator name decl name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name macro name argument_list argument argument block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr call name name operator name argument_list if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type string elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block decl_stmt decl type name name init expr name name index expr literal type number decl_stmt decl type name name init expr name name index expr literal type number if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string 
