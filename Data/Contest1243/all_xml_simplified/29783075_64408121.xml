include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list block decl_stmt decl type name name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator operator expr name name index expr name name index expr name operator decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block type pseudo if condition expr name name operator name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl type ref prev name for control init decl type name name range expr name block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name name index expr name comment type line for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block decl_stmt decl type name name init expr literal type number comment type line if condition expr name name index expr name operator name operator name name index expr name operator name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name break if condition expr operator name then block for control init decl type name name init expr name condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name expr name name index expr name operator literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator literal type number operator name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name expr name name index expr name operator literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator literal type number operator name break comment type line expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type char return expr literal type number 
