comment type line include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr operator literal type number operator name operator decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr operator literal type number operator name operator decl type ref prev name name index expr operator literal type number operator name operator function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type boolean if condition expr name name index expr name operator name operator literal type number then block type pseudo return expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number if condition expr name name index expr name operator name then block expr_stmt expr call name argument_list argument expr name operator operator literal type number operator operator name operator literal type number operator operator expr_stmt expr name name index expr name operator name name index expr name operator operator literal type number operator operator name operator literal type number operator operator expr_stmt expr name name index expr name operator operator literal type number return decl_stmt decl type name name init expr name operator operator literal type number operator operator name operator literal type number operator operator for control init decl type name name range expr name name index expr name block decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr name decl type ref prev name init expr name if condition expr name operator operator name name index expr name operator name operator operator name then block type pseudo continue decl_stmt decl type name name init expr literal type boolean while condition expr name block decl_stmt decl type name name init expr name operator operator name name index expr name operator name operator if condition expr name operator literal type number operator call name name operator name argument_list argument expr name operator literal type number operator operator operator name operator operator literal type number operator operator name name index expr name operator literal type number operator operator operator operator literal type number operator name operator name operator then block expr_stmt expr name operator literal type boolean break if condition expr name operator name then block break expr_stmt expr name operator name expr_stmt expr name operator name name index expr name expr_stmt expr name operator operator literal type number operator operator name name index expr name operator literal type number operator operator if condition expr name then block expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator name name index expr name if condition expr name name index expr name then block expr_stmt expr name name index expr name operator name return function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number if condition expr name name index expr name operator operator literal type number then block expr_stmt expr name name index expr name operator name name index expr name index expr literal type number expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name operator operator literal type number operator operator name operator literal type number operator operator return decl_stmt decl type name name init expr name decl type ref prev name init expr name name index expr name decl type ref prev name init expr name operator operator literal type number operator operator name operator literal type number operator operator decl type ref prev name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name while condition expr literal type boolean block decl_stmt decl type name name init expr name operator operator name name index expr name operator name operator if condition expr name operator name then block expr_stmt expr name name index expr name operator name break expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name name index expr name expr_stmt expr name operator operator literal type number operator operator name name index expr name operator literal type number operator operator expr_stmt expr call name argument_list argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean operator expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name operator expr name name index expr name operator call name argument_list argument expr name operator expr name operator name operator expr name name index expr name operator name operator expr name name index expr name operator name if condition expr name operator name then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr operator literal type number operator name operator operator literal type number if condition expr operator name name index expr operator literal type number operator name operator operator literal type number then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr operator literal type number operator name operator operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type char operator name name index expr name operator literal type char return expr literal type number 
