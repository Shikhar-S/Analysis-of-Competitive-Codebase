include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name constructor name parameter_list parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number member_init_list call name argument_list argument expr name call name argument_list argument expr name block empty_stmt decl_stmt decl type name name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator operator call name argument_list argument expr name operator literal type number argument expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr name name index expr name operator operator call name argument_list argument expr name operator literal type number argument expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr name operator literal type number break if condition expr name then block type pseudo continue expr_stmt expr name operator literal type number break if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name operator literal type number argument expr name name index expr name operator name operator literal type number else block expr_stmt expr call name argument_list argument expr literal type string 
