comment type line include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type boolean typedef type name name name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number decl_stmt decl type name specifier name init expr literal type number operator literal type number decl_stmt decl type name specifier name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name define directive macro name value decl_stmt decl type name name name index expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo return expr name operator literal type string operator expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number break if condition expr operator name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name operator name operator name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number break if condition expr operator name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name break if condition expr call name name operator name argument_list operator literal type number operator name then block expr_stmt expr name operator literal type string operator name operator call name name operator name argument_list operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator name else block type pseudo expr_stmt expr name operator literal type string operator name expr_stmt expr call name name operator name argument_list function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name init expr literal type number comment type line expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list comment type line 
