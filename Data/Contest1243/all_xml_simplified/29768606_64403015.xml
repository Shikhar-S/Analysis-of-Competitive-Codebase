include directive file using namespace name define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list argument expr call name argument_list argument expr literal type number function specifier type name name parameter_list block return expr call name argument_list argument expr operator name operator call name argument_list decl_stmt decl type name name function type name name parameter_list block expr_stmt expr name operator name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator expr_stmt expr name operator literal type boolean break if condition expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type boolean break if condition expr name then block type pseudo continue expr_stmt expr name operator literal type number operator name break if condition expr name operator literal type number operator name then block expr_stmt expr name operator literal type string operator literal type char expr_stmt expr name operator name operator literal type char for control init decl type name name argument_list type generic argument expr name argument expr name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator literal type char else block expr_stmt expr name operator literal type string operator literal type char function type name name parameter_list block decl_stmt decl type name name argument_list expr_stmt expr call name argument_list return expr literal type number 
