include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean operator expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator operator expr call name name operator name argument_list argument expr name if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr name operator literal type string continue else block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type number break expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type number break if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string 
