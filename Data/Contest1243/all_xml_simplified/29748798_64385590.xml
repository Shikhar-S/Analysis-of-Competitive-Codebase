define directive macro name include directive file include directive file using namespace name define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number typedef type name name name typedef type name name name name decl_stmt decl type specifier name name init expr operator literal type number operator operator literal type number decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number expr literal type number expr literal type number expr operator literal type number expr operator literal type number decl_stmt decl type name name name index init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number expr literal type number expr operator literal type number expr operator literal type number expr literal type number decl_stmt decl type specifier name name init expr literal type number define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string endif directive function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive struct name block public type default decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr operator name then expr name else expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator operator name operator name operator operator name operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr operator name operator name operator operator operator name operator name operator operator operator name operator name operator operator operator name operator name operator operator literal type number empty_stmt function type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name parameter decl type name name argument_list type generic argument expr name argument expr name name block decl_stmt decl type name name init expr name name operator name operator name name operator name decl type ref prev name init expr name name operator name operator name name operator name return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number operator name return expr name operator name operator name operator name operator call name argument_list argument expr name argument expr name operator literal type number operator name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr name operator name operator literal type number then block type pseudo return expr literal type number return expr literal type number function type name name parameter_list block decl_stmt decl type name name argument_list argument expr name name argument expr name argument expr name name argument expr name operator name argument expr name operator name operator name argument expr name name argument_list type generic argument expr name name argument expr name name operator literal type number argument expr operator name name operator literal type number name operator name name operator operator block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator operator expr call name name operator name argument_list argument expr name if condition expr name operator literal type number then expr_stmt expr block expr name operator literal type string operator name continue expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number if condition expr name operator name then block expr_stmt expr name operator literal type string operator name continue expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type string operator name continue expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number if condition expr name operator name then block expr_stmt expr name operator literal type string operator name continue expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number if condition expr name operator name then block expr_stmt expr name operator literal type string operator name continue expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name expr_stmt expr operator operator return expr literal type number 
