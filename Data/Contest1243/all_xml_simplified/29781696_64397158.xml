include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value pragma directive name name name name name name pragma directive name name name name name pragma directive name name name literal name using namespace name using namespace name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list argument expr call name argument_list argument expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name then block type pseudo return expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr name name index expr name index expr name operator literal type number decl type ref prev name init expr name name index expr name index expr name while condition expr name name operator name block decl_stmt decl type name name init expr call name name operator name argument_list argument expr name if condition expr name operator call name name operator name argument_list operator operator name operator name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr operator name else block type pseudo break function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name name index expr name operator name name index expr name then block type pseudo return expr_stmt expr name operator decl_stmt decl type name name init expr name name index expr name decl type ref prev name init expr name name index expr name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name for control init decl type name name range expr name name index expr name block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list empty_stmt function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name name operator name argument_list expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type string operator name expr_stmt expr name operator literal type string operator name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block type pseudo expr_stmt expr name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number break if condition expr name operator name then block expr_stmt expr name operator literal type string expr_stmt expr name operator name name operator name operator literal type string for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator literal type string else block expr_stmt expr name operator literal type string return expr literal type number comment type block 
