pragma directive name name name name name include directive file define directive macro name value typedef type name name name typedef type name name name name using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number struct name block public type default function specifier type name name parameter_list block decl_stmt decl specifier type specifier name name init expr literal type number operator literal type number operator literal type number decl_stmt decl specifier type name name name index expr name modifier decl type ref prev name modifier decl type ref prev name return expr operator name operator name operator operator operator name operator operator name operator name operator operator call name argument_list argument expr name argument expr literal type number argument expr name argument expr name operator operator expr ternary condition expr name operator name then expr operator literal type number else expr operator name operator function type operator template parameter_list parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name block decl_stmt decl specifier type name name decl type ref prev name expr_stmt expr name operator call name argument_list operator expr name operator literal type number for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block if condition expr name operator operator literal type number then block type pseudo return expr operator name expr_stmt expr name operator name operator literal type char for control init expr name operator literal type number condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type char operator expr_stmt expr call name argument_list argument expr operator name operator operator name operator decl name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block expr_stmt expr name name index expr name operator literal type number operator name operator operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number operator name operator literal type number operator operator name name index expr name operator name expr_stmt expr name name index expr name operator literal type number operator literal type number operator name operator operator name name index expr name operator literal type number operator literal type number operator name operator name name index expr name operator literal type number operator literal type number operator name operator literal type number operator operator name name index expr name operator name expr_stmt expr name name index expr name operator literal type number operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator literal type number operator literal type number operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name name index expr name operator name operator name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator name operator operator name name index expr name operator name operator name name index expr name operator name operator literal type number operator operator name expr_stmt expr name name index expr name operator name operator name return expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr operator name name index expr name operator name operator name name index expr name operator name operator operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number argument expr name argument expr name argument expr name expr_stmt expr name name index expr name operator name operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number operator literal type number operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name operator name operator expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator literal type number operator expr name name index expr name operator name operator literal type number if condition expr name operator name then block expr_stmt expr name name index expr name operator name operator name name index expr name operator name operator literal type number return decl_stmt decl type name name init expr operator name operator name operator operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name argument expr name expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number argument expr name operator literal type number argument expr name expr_stmt expr name name index expr name operator name operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number operator literal type number operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name name index expr name operator name operator name operator name name index expr name operator name then block type pseudo return expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr operator name name index expr name operator name operator name name index expr name operator name operator operator literal type number decl_stmt decl type name name init expr literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator literal type number operator literal type number argument expr name argument expr name return expr name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name name index expr name operator for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator name then block expr_stmt expr name operator name operator name break 
