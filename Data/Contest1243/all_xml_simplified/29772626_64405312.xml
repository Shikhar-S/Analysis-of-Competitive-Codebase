include directive file include directive file include directive file include directive file include directive file define directive macro name value using namespace name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char return expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name name index expr literal type number index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number function type name name parameter_list block expr_stmt expr name operator call name argument_list while condition expr name operator block expr_stmt expr name operator call name argument_list expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number then block type pseudo expr_stmt expr operator name operator expr name name index expr name operator name name index expr name operator literal type number operator expr name name index expr name operator name name index expr name operator literal type number operator expr name name index expr name operator name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string argument expr name continue decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr name name index expr name operator name name index expr name then block type pseudo continue expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string break if condition expr name then block type pseudo continue if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name name index expr name index expr literal type number argument expr name name index expr name name index expr name index expr literal type number else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number comment type block 
