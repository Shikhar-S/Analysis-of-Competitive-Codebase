include directive file using namespace name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name name block expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block for control init decl type name name range expr name block type pseudo expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name parameter type name name type name name argument_list type generic argument expr name argument expr name name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr call name argument_list argument expr name name operator name operator name name operator name argument expr name name operator name operator name name operator name function type operator template parameter_list parameter type name name parameter type name name type name name argument_list type generic argument expr name argument expr name name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr call name argument_list argument expr name name operator name operator name name operator name argument expr name name operator name operator name name operator name struct name block public type default decl_stmt decl type name name operator name name decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name then block type pseudo for control init decl type name name init expr name operator name condition expr name operator name incr expr name operator name block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name comment type line function type name name name parameter_list parameter decl type name name name parameter decl type name name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name name block decl_stmt decl type name name name init expr literal type number expr_stmt expr name operator name expr_stmt expr name operator name while condition expr name block if condition expr name operator literal type number then block expr_stmt expr name operator name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name function type name name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name name block decl_stmt decl type name name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name return expr name function type name name parameter_list parameter decl type name name name block decl_stmt decl type name name operator name name argument_list type generic argument expr name name name argument_list argument expr literal type number argument expr call name name name argument_list type generic argument expr name name operator name argument_list if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number operator literal type number then block type pseudo return expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name name init expr call name argument_list argument expr name operator operator name operator literal type number operator operator literal type number decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name operator literal type number argument expr name if condition expr name operator literal type number then block type pseudo return expr literal type number return expr literal type number function type name name name parameter_list parameter decl type name name name parameter decl type name name name block decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name name init expr literal type number while condition expr name operator literal type number block expr_stmt expr name operator operator call name argument_list argument expr name argument expr name argument expr name operator name operator operator name expr_stmt expr name operator operator call name argument_list argument expr name argument expr name argument expr name operator name operator operator name expr_stmt expr name operator operator call name argument_list argument expr name argument expr name argument expr name operator name operator operator name expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name operator name argument expr name return expr name function type name name name parameter_list parameter decl type name name name block decl_stmt decl type name name name init expr name decl_stmt decl type name name name init expr literal type number while condition expr name operator name block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name operator return expr name function type name name parameter_list parameter decl type name name name parameter decl type name name argument_list type generic argument expr name name argument expr name modifier name block expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list operator name name index expr name operator call name argument_list argument expr name incr expr name operator block while condition expr name operator name name index expr name operator literal type number block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name operator name name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator function type name name parameter_list parameter decl type name name name parameter decl type name name argument_list type generic argument expr name name modifier name block expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list operator name name index expr name operator call name argument_list argument expr name incr expr name operator block while condition expr name operator name name index expr name operator literal type number block expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr name operator name name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument expr name name function type name name name parameter_list parameter decl type name name name block decl_stmt decl type name name argument_list type generic argument expr name name argument expr name modifier name init expr name comment type line expr_stmt expr call name argument_list argument expr name argument expr name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator name name operator name operator operator name name operator name operator literal type number operator return expr name function type name name parameter_list parameter decl type name name name parameter decl type name name argument_list type generic argument expr name name argument expr name modifier name block decl_stmt decl type name name argument_list type generic argument expr name name name expr_stmt expr call name argument_list argument expr name argument expr name if condition expr operator call name argument_list argument expr call name name operator name argument_list then block decl_stmt decl type name name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name name init expr call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator name expr_stmt expr call name name operator name argument_list for control init decl type name name range expr name block type pseudo expr_stmt expr name name index expr name operator decl_stmt decl type name name argument_list argument expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name function type name name name parameter_list parameter decl type name name name block if condition expr name operator literal type number then block type pseudo return expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list comment type block if condition expr call name name operator name argument_list operator literal type number then block type pseudo return expr name name index expr literal type number return expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name name expr_stmt expr name operator name decl_stmt decl type name name name init expr call name argument_list argument expr name expr_stmt expr name operator name operator name return expr literal type number 
