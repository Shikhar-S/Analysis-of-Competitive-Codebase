include directive file using namespace name typedef type name name name name typedef type name name name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator literal type number expr_stmt expr name operator operator name operator name operator operator name return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name while condition expr name operator literal type number operator literal type number block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator literal type number comment type line comment type line for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name incr expr name operator name operator literal type number block comment type line while condition expr name operator name operator literal type number block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name operator name comment type line comment type line if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block comment type line expr_stmt expr call name name operator name argument_list argument expr operator name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number operator name comment type block else block comment type block block decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name name index expr literal type number operator name else block type pseudo expr_stmt expr name operator literal type number operator name 
