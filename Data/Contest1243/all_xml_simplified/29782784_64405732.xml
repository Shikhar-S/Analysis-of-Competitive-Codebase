include directive file using namespace name struct name block public type default decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr operator literal type number function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator literal type number then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name operator expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name argument_list argument expr call name argument_list argument expr name decl_stmt decl type specifier name name init expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator call name argument_list operator name then block decl_stmt decl type name name init expr literal type number while condition expr name operator block decl_stmt decl type name name init expr call name argument_list operator name if condition expr name operator name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name then block type pseudo continue expr_stmt expr call name name operator name argument_list argument expr name argument expr name else block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr call name name operator name argument_list argument expr name argument expr call name name operator name argument_list for control init decl type name name range expr name block expr_stmt expr call name name operator name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number for control init expr name operator name operator name name operator name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number operator literal type char 
