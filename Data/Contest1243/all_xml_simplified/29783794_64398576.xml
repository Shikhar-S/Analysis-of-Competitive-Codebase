include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr call name argument_list argument expr operator name operator operator literal type number decl_stmt decl type name name function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block macro name argument_list argument block if condition expr name name index expr name operator name name index expr name then block else block decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name argument expr name argument expr name expr_stmt expr name operator literal type boolean break if condition expr operator name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name argument expr name argument expr name expr_stmt expr name operator literal type boolean break if condition expr operator name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name argument expr name argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name argument expr name argument expr name operator literal type number expr_stmt expr name operator literal type boolean break if condition expr operator name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name argument expr name operator literal type number argument expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name argument expr name operator literal type number argument expr name expr_stmt expr name operator literal type boolean break if condition expr operator name operator name name index expr name operator name name index expr name then block return expr literal type boolean return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number macro name argument_list argument block expr_stmt expr operator name name index expr name name index expr name operator literal type char macro name argument_list argument block expr_stmt expr operator name name index expr name name index expr name operator literal type char macro name argument_list argument literal type number if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type string return expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name if condition expr operator name operator call name name operator name argument_list operator literal type number operator name then block expr_stmt expr call name name operator name argument_list expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name if condition expr name then block expr_stmt expr name operator literal type string expr_stmt expr name operator call name argument_list argument expr name operator literal type char macro name argument_list argument block expr_stmt expr name operator name name index expr name operator name operator literal type char operator name name index expr name operator name operator literal type char else block expr_stmt expr name operator literal type string function type name name parameter_list block ifndef directive name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number endif directive comment type line decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list return expr literal type number 
