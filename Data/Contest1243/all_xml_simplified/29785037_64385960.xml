include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr operator name operator name operator operator operator name operator name operator then block return expr literal type boolean return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string continue decl_stmt decl type name name init expr literal type boolean decl type ref prev name init expr literal type boolean decl type ref prev name init expr literal type boolean decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator name name index expr name then block if condition expr operator name then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type boolean elseif if condition expr operator name then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type boolean if condition expr operator call name argument_list argument expr name argument expr name argument expr name argument expr name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator literal type boolean break else block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator literal type boolean break if condition expr operator name operator operator name then block expr_stmt expr call name argument_list argument expr literal type string elseif if condition expr operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
