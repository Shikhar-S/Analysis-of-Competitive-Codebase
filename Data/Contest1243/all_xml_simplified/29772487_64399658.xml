include directive file comment type line namespace block using namespace name typedef type name name name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name block return expr literal type boolean function template parameter_list parameter type name name type name name parameter_list parameter decl type name block return expr literal type boolean function type name name parameter_list parameter decl type name block return expr literal type boolean comment type line function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type specifier name modifier name range expr name block expr_stmt expr name operator name operator operator ternary condition expr call name argument_list argument expr name then expr literal type string else expr literal type string operator expr_stmt expr name operator literal type string return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block while condition expr name block decl_stmt decl type name name init expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name return expr name function type name name argument_list type generic argument expr name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr call name name operator name argument_list expr_stmt expr name name index expr literal type number operator name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name return expr name class name super name block private type default comment type line function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name modifier name init expr name block expr_stmt expr name operator name operator literal type string throw expr call name argument_list comment type line function_decl type name name parameter_list function type name name parameter_list block define directive macro name value expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name init expr literal type number comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo try block expr_stmt expr call name argument_list catch parameter_list parameter decl type name block return expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name operator literal type number operator name operator name incr expr operator name block if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr operator name operator call name name operator name argument_list operator literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name name index expr name operator name name index expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator name name index expr name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr name name index expr literal type number if condition expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr lambda capture argument name parameter_list parameter decl name then block return expr name operator name block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type number 
