include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list operator operator name operator name operator literal type number operator define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name function name parameter_list block comment type line expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type char operator name decl_stmt decl type name name init expr literal type char operator name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr name operator literal type string continue if condition expr name operator literal type number then block expr_stmt expr name operator literal type string continue if condition expr name operator literal type number then block expr_stmt expr name operator literal type string continue if condition expr name operator literal type number then block decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break decl_stmt decl type name name init expr literal type number macro name argument_list argument argument argument literal type number if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break decl_stmt decl type name name init expr literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean break expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type boolean macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean break if condition expr name then block expr_stmt expr name operator literal type string continue if condition expr name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string operator literal type string 
