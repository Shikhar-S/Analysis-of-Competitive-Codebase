include directive file using namespace name define directive macro name value define directive macro name value decl_stmt decl type name name name index expr literal type number function type name name parameter_list block macro name block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name operator name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string continue for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr operator name operator literal type number operator expr operator name operator literal type number operator expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr operator name operator literal type number operator expr operator name operator literal type number operator expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type boolean break if condition expr name then block for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr operator name operator literal type number operator expr operator name operator literal type number operator expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator literal type string return expr literal type number 
