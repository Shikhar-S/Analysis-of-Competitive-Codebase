include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name name index expr name operator literal type char operator operator expr name name index expr name name index expr name operator literal type char operator macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator literal type number then block type pseudo return expr literal type number expr_stmt expr call name name operator name argument_list while condition expr literal type number block macro name argument_list argument argument literal type number argument macro name argument_list argument argument literal type number argument if condition expr name operator name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type number break if condition expr name then block type pseudo continue break expr_stmt expr call name argument_list argument expr operator call name argument_list argument expr name operator literal type number operator name operator expr_stmt expr name operator literal type string expr_stmt expr name operator call name argument_list argument expr name operator literal type string macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator literal type string return expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block if condition expr operator call name argument_list then block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
