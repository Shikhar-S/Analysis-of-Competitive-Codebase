pragma directive name name name literal name include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive comment type line expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name argument_list argument expr call name name operator name argument_list operator literal type number operator call name argument_list argument expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type string continue if condition expr call name argument_list argument expr call name name operator name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number if condition expr name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number then block expr_stmt expr name operator literal type string continue expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number if condition expr name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string continue if condition expr call name argument_list argument expr call name name operator name argument_list operator literal type number then block decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator operator name incr expr operator name block if condition expr call name name operator name argument_list argument expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name then block expr_stmt expr name operator literal type string continue else block expr_stmt expr name operator literal type string continue return expr literal type number 
