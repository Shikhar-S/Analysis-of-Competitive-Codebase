include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name name index expr name operator literal type boolean function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type boolean while condition expr name block expr_stmt expr name operator literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name operator operator name name index expr name operator name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name break for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name operator name operator name operator name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name break for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name operator name operator name operator name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name break for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name then block decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator literal type boolean break if condition expr operator name then block type pseudo return expr operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator operator literal type number then block type pseudo return expr operator literal type number expr_stmt expr name operator name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr literal type boolean expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator operator literal type number operator name operator literal type number operator name then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name operator name operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name return expr literal type number 
