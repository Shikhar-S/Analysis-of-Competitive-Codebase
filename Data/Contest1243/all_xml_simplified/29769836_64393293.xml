include directive file using namespace name typedef type name name name typedef type name name name name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block decl_stmt decl specifier type name name decl_stmt decl specifier type name name for control init expr name operator name operator literal type number condition expr name operator literal type char operator literal type char operator name incr expr name operator name operator literal type char operator expr name operator call name argument_list block type pseudo empty_stmt for control init expr name operator literal type number condition expr literal type char operator name operator name operator literal type char incr expr operator name operator literal type number operator operator name operator literal type char operator expr name operator call name argument_list block type pseudo empty_stmt expr_stmt expr name operator ternary condition expr name then expr operator name else expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr name operator name operator literal type number then block while condition expr name operator name operator literal type number block type pseudo expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name init expr call name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator name name index expr literal type number operator name else block expr_stmt expr name operator literal type number operator name return expr literal type number 
