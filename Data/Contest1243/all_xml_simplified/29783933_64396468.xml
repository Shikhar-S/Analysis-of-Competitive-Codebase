comment type line comment type line using namespace name include directive file include directive file include directive file ifdef directive name decl_stmt decl type name name init expr literal type boolean else directive decl_stmt decl type name name init expr literal type boolean endif directive define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value using name init type name name using name init type name name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number comment type line include directive file include directive file include directive file include directive file include directive file comment type line struct name block public type default decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr operator literal type number function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name name operator name operator name name operator name then block type pseudo return expr name name operator name operator name name operator name return expr name name operator name operator name name operator name comment type line decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block for control init decl type name name init expr name name index expr name operator literal type char operator call name argument_list condition expr name operator name name index expr name operator literal type char operator call name argument_list incr expr name operator block if condition expr name name operator name operator name operator name name operator name operator name then block expr_stmt expr name name index expr name operator literal type char operator call name argument_list argument expr name break function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator literal type char operator call name argument_list argument expr block expr name expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number comment type line function type name name parameter_list block ifdef directive name decl_stmt decl type name name argument_list argument expr literal type string decl_stmt decl type name name argument_list argument expr literal type string endif directive decl_stmt decl type name comment type line name name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr block expr literal type number expr name macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr block expr literal type number expr name decl_stmt decl type name name init expr literal type boolean macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator call name argument_list operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name range expr name name index expr name name index expr name operator literal type char block if condition expr name name operator name operator name then block if condition expr name name operator name operator literal type number then comment type line block expr_stmt expr call name argument_list argument expr name name operator name argument expr name else comment type line block expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name break expr_stmt expr name operator call name name operator name argument_list operator literal type char macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator literal type char operator name name index expr name operator literal type string 
