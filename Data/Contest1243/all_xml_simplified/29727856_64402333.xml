include directive file using namespace name typedef type name name name typedef type name name name decl_stmt decl type name name argument_list argument expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number ifdef directive name decl_stmt decl type name modifier name init expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type specifier name name init expr literal type char operator literal type char operator literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name comment type block decl_stmt decl type name name name index expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator operator expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator operator name name index expr name operator literal type number operator operator literal type number if condition expr name then block expr_stmt expr name operator literal type string decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name expr_stmt expr call name name operator name argument_list argument expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name break comment type line comment type line expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init expr name index expr name operator name operator name block expr_stmt expr name operator name operator literal type number operator literal type string operator name operator literal type number operator literal type string else block expr_stmt expr name operator literal type string return expr literal type number 
