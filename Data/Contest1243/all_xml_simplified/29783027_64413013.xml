include directive file include directive file include directive file include directive file include directive file using namespace name struct name block public type default decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr call name name argument_list type generic argument expr name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr call name name argument_list type generic argument expr name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr operator name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr operator name name index expr name operator call name argument_list operator name name index expr name operator call name argument_list operator operator literal type number operator literal type number then block expr_stmt expr name operator literal type boolean if condition expr operator name then block expr_stmt expr name operator literal type string operator name else block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name else block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name expr_stmt expr name operator literal type string operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name return expr literal type number 
