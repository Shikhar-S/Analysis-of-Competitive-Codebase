include directive file using namespace name typedef type name name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number while condition expr call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name then block type pseudo break comment type line for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name operator name operator name then block type pseudo break if condition expr name name index expr name operator literal type number operator name then block type pseudo continue while condition expr name operator name name index expr name operator call name argument_list operator name name index expr name index expr name operator name operator name operator name block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr operator literal type number if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator name name index expr name index expr name if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr name operator name operator name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list operator name expr_stmt expr name operator function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number return expr literal type number 
