pragma directive name name name literal name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file function type name name parameter_list comment type block block decl_stmt decl type name name expr_stmt expr name name operator name operator name while condition expr name operator operator literal type number block decl_stmt decl type name name expr_stmt expr name name operator name operator name decl_stmt decl type name name operator name name decl type ref prev name expr_stmt expr name name operator name operator name operator name decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block comment type line decl_stmt decl type name name init expr name name index expr name if condition expr name operator name name index expr name then block type pseudo continue comment type line decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo continue expr_stmt expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo continue expr_stmt expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr name operator name then block type pseudo expr_stmt expr name name operator name operator literal type string else block expr_stmt expr name name operator name operator literal type string expr_stmt expr name name operator name operator call name name operator name argument_list operator literal type char for control init expr name index expr name operator name operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number argument expr name operator literal type number 
