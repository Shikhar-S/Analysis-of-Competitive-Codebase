include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name operator name index expr name operator name name operator name index expr name then block expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init expr name operator name operator name name operator name index expr name operator name block expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block continue if condition expr call name name operator name argument_list argument expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr call name name operator name argument_list while condition expr name operator call name name operator name argument_list block if condition expr name name operator name index expr name operator call name name operator name argument_list argument expr operator name operator literal type number then block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list argument expr operator name expr_stmt expr name operator call name name operator name argument_list argument expr name continue expr_stmt expr name operator decl_stmt decl type name name init expr literal type number while condition expr operator call name name operator name argument_list block expr_stmt expr call name name operator name argument_list argument expr operator call name name operator name argument_list expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr call name name operator name argument_list while condition expr name operator call name name operator name argument_list block if condition expr name name operator name index expr name operator call name name operator name argument_list argument expr operator name operator literal type number then block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list argument expr operator name expr_stmt expr name operator call name name operator name argument_list argument expr name continue expr_stmt expr name operator expr_stmt expr name operator name operator name 
