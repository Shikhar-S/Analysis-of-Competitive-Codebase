include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name struct name block public type default decl_stmt decl type name name decl_stmt decl type name name decl name name index expr name operator literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name then block break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name then block break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name if condition expr operator name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name then block break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name then block break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name else block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
