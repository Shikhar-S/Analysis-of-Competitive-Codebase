include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name init expr literal type number decl type ref prev name init expr operator literal type number operator literal type number operator decl_stmt decl type name modifier name init expr literal type null decl_stmt decl type name modifier name init expr literal type null decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number constructor name parameter_list parameter decl type name name parameter decl type name name member_init_list call name argument_list argument expr name call name argument_list argument expr name block constructor_decl name parameter_list specifier function type name name parameter_list block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr operator name then block expr_stmt expr name operator operator call name argument_list argument expr name argument expr name if condition expr operator name then block expr_stmt expr name operator operator call name argument_list argument expr name operator literal type number argument expr name function type name name parameter_list block expr_stmt expr call name argument_list if condition expr name then block expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list if condition expr name operator name then block return if condition expr name operator name operator name operator name then block expr_stmt expr name operator name expr_stmt expr call name argument_list return expr_stmt expr call name argument_list decl_stmt decl type name name init expr operator name operator name operator operator literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list if condition expr name operator name then block expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name return expr_stmt expr call name argument_list decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name argument expr name else block expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list if condition expr name operator name then block return expr literal type number if condition expr name operator name operator name operator name then block return expr name decl_stmt decl type name name init expr operator name operator name operator operator literal type number return expr call name argument_list argument expr call name name operator name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name argument expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name argument expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name range expr name block expr_stmt expr name operator name operator literal type string return expr name function type operator type name name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block if condition expr name name operator name operator name name operator name then block type pseudo return expr literal type boolean if condition expr name name operator name operator name name operator name then block type pseudo return expr literal type boolean return expr name name operator name operator name name operator name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator name name index expr name then block continue expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name for control init decl type name name range expr name block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator literal type char operator literal type char incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type boolean if condition expr name then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator name name index expr name then block continue decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name else block for control init decl type name name init expr name operator literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name break expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name for control init decl type name name init expr literal type number condition expr name operator literal type char operator literal type char incr expr name operator block expr_stmt expr name name index expr name operator literal type number comment type block 
