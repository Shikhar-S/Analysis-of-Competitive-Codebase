include directive file include directive file include directive file using namespace name using namespace name typedef type name name name typedef type name name name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name name index expr name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name name index expr name name index expr name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name index expr name expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list expr_stmt expr call name name operator name argument_list argument expr name argument expr name while condition expr name name index expr name operator name block decl_stmt decl type name name init expr name operator operator name name index expr name operator name operator if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo return decl_stmt decl type name name init expr name name index expr name if condition expr name name index expr name operator name operator name operator name then block type pseudo return expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name operator name comment type line decl_stmt decl type name name init expr literal type number for control init expr name operator name operator name block expr_stmt expr name operator operator literal type number operator name name operator name operator if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block if condition expr call name argument_list argument expr name operator name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr operator literal type number operator name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name name index expr name incr expr name operator block expr_stmt expr call name argument_list argument expr name argument expr name name index expr name index expr name expr_stmt expr call name name operator name argument_list argument expr operator literal type number operator name operator argument expr literal type boolean expr_stmt expr name name index expr literal type number operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr operator literal type number operator name operator for control init decl type name name init expr literal type number condition expr name operator operator literal type number operator name operator incr expr name operator block if condition expr operator name name index expr name operator call name argument_list then block expr_stmt expr call name name operator name argument_list argument expr name comment type line comment type line for control init decl type name name init expr literal type number condition expr name operator operator literal type number operator name operator incr expr name operator block for control init decl type name name range expr name block if condition expr operator name operator name operator operator name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name operator name break if condition expr name name index expr operator literal type number operator name operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string decl_stmt decl type name name init expr operator literal type number operator name operator operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr name while condition expr name operator literal type number block comment type line decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name index expr name operator name operator call name argument_list argument expr name name index expr name index expr name operator name argument expr name name index expr name index expr operator name operator literal type number operator name operator operator name operator name operator literal type number comment type line expr_stmt expr name operator name name index expr name for control init expr name operator name operator name block expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name else block expr_stmt expr call name argument_list argument expr literal type string function type name name parameter_list block decl_stmt decl type name name init expr literal type number comment type line while condition expr name operator block expr_stmt expr call name argument_list expr_stmt expr call name argument_list return expr literal type number 
