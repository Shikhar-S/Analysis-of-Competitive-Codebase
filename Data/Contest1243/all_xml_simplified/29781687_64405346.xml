include directive file define directive macro name value define directive macro name value define directive macro name value comment type line define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value comment type line define directive macro name value define directive macro name value define directive macro name value ifdef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier value define directive macro name value endif directive using namespace name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name typedef type name name name decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number comment type line function specifier type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number function specifier type name name parameter_list block decl_stmt decl type name name name asm expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block if condition expr call name argument_list argument expr operator name operator literal type string operator operator call name argument_list argument expr literal type string then block expr_stmt expr call name argument_list argument expr operator name operator literal type string operator operator call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr operator name operator literal type string operator operator call name argument_list argument expr literal type string argument expr name function type name name parameter_list parameter decl type specifier name name name index init expr literal type string block if condition expr call name argument_list argument expr name argument expr literal type string then block expr_stmt expr call name argument_list argument expr name argument expr literal type string argument expr name else block type pseudo expr_stmt expr name operator literal type string operator name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block ifdef directive name comment type line endif directive expr_stmt expr call name argument_list decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name name index expr name name index expr name index expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type string return expr literal type number decl_stmt decl type name name init expr name operator name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr name decl type ref prev name init expr name while condition expr literal type boolean block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator operator literal type number operator name operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr name operator operator name name index expr name operator name name index expr name index expr name operator if condition expr operator call name name operator name argument_list argument expr name then block expr_stmt expr name operator literal type number break expr_stmt expr call name argument_list argument expr name argument expr name operator name name index expr name if condition expr name name index expr name then block type pseudo break if condition expr name operator name operator name operator name operator name then block type pseudo expr_stmt expr name name index expr name operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name name index expr name name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator operator literal type number operator name operator incr expr name operator block expr_stmt expr name name index expr name operator operator literal type number if condition expr name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr name condition expr name incr expr name operator operator operator name operator literal type number operator operator name operator block if condition expr name name index expr name operator operator literal type number operator name name index expr name operator name operator call name argument_list then block expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr operator literal type number operator name operator operator literal type number if condition expr name name index expr name operator operator literal type number then block expr_stmt expr name operator literal type string else block decl_stmt decl type name name init expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name while condition expr name block decl_stmt decl type name name init expr operator name name index expr name operator name operator for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr operator ternary condition expr name operator literal type number then expr name name index expr name operator call name argument_list operator literal type number else expr name operator literal type number operator decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name argument expr name operator name name index expr name index expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name index expr name operator name argument expr name name index expr name index expr name expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type string operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name operator literal type char operator name name index expr name operator name operator literal type number operator name return expr literal type number 
