include directive file define directive macro name value define directive macro name parameter_list parameter type name value using namespace name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number if condition expr name operator literal type number then block type pseudo return expr name operator name operator name else block type pseudo return expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator literal type char return expr name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator literal type char return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block if condition expr name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string elseif if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string expr_stmt expr name operator literal type string expr_stmt expr call name name operator name argument_list return expr literal type number 
