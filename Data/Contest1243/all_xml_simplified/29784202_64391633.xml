include directive file using namespace name typedef type name name name comment type line comment type line comment type line comment type line typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number comment type line comment type block define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name comment type line expr_stmt expr name operator name operator name expr_stmt expr name operator literal type number comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr operator name operator name operator expr name name index expr name operator name expr_stmt expr name name index expr operator name operator name operator expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name operator expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr operator name operator name operator expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name break decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator literal type boolean if condition expr operator name then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type string operator name name index expr name operator literal type number operator name return expr literal type number 
