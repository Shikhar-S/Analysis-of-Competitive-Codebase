define directive macro name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr name else expr operator name decl_stmt decl type name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name for control init decl type name name range expr name block expr_stmt expr name name index expr name operator for control init decl type name name range expr name block expr_stmt expr name name index expr name operator decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block if condition expr name name operator name operator literal type number then block expr_stmt expr name operator literal type number if condition expr name then block expr_stmt expr name operator literal type string operator name continue decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr name operator literal type number break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr name operator literal type number break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr name operator literal type number break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr name operator literal type number break expr_stmt expr name operator literal type string operator name expr_stmt expr name operator call name argument_list argument expr name operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name return expr literal type number 
