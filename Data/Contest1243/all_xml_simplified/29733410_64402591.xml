comment type line comment type line include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name define directive macro name value function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr name name index expr call name argument_list argument expr name argument expr literal type number argument expr name argument expr name operator literal type char expr_stmt expr name operator literal type number if directive expr name function type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name init expr literal type number for control init condition expr operator call name argument_list argument expr name name index expr name operator name name index expr name operator literal type char incr expr name operator block type pseudo empty_stmt expr_stmt expr name operator operator name operator name name index expr name operator literal type char operator for control init condition expr call name argument_list argument expr name name index expr name incr expr name operator block type pseudo expr_stmt expr name operator name operator literal type number operator name name index expr name operator literal type char return expr ternary condition expr name then expr operator name else expr name else directive function type name name parameter_list block decl_stmt decl type name name init expr literal type number for control init condition expr operator call name argument_list argument expr name name index expr name incr expr name operator block type pseudo empty_stmt for control init condition expr call name argument_list argument expr name name index expr name incr expr name operator block type pseudo expr_stmt expr name operator name operator literal type number operator name name index expr name operator literal type char return expr name endif directive function type name name parameter_list block for control init condition expr call name argument_list argument expr name name index expr name incr expr name operator block type pseudo empty_stmt return expr name name index expr name operator function type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number for control init condition expr call name argument_list argument expr name name index expr name incr expr name operator block type pseudo empty_stmt for control init condition expr operator call name argument_list argument expr name name index expr name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator operator name name index expr name expr_stmt expr name name index expr name operator literal type char return expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr call name argument_list decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list while condition expr name operator block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number for control init decl type specifier specifier modifier name range expr name name index expr name block type pseudo expr_stmt expr name name index expr call name argument_list argument expr name operator for control init decl type name name name argument_list type generic argument expr name operator name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr block decl_stmt decl type name name init expr operator name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator else block type pseudo expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list operator literal type number 
