include directive file using namespace name define directive macro name value comment type line define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list value define directive macro name parameter_list value define directive macro name value decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name name index expr name decl_stmt decl type name name name argument_list type generic argument expr name operator name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr call name name operator name argument_list function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator call name argument_list argument expr name operator call name argument_list argument expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo return if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name function type name name parameter_list block comment type line expr_stmt expr name decl_stmt decl type name name decl type ref prev name while condition expr name operator name operator name block expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr name name index expr name operator call name argument_list expr_stmt expr call name name operator name argument_list argument expr block expr name expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr name name index expr name name operator name then block type pseudo continue decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name name operator name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator literal type number for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator call name argument_list argument expr operator name operator literal type number then block if condition expr operator call name argument_list argument expr name argument expr operator name then block expr_stmt expr call name argument_list argument expr name argument expr operator name expr_stmt expr call name name operator name argument_list argument expr operator name expr_stmt expr call name name operator name argument_list argument expr operator name for control init decl type name name range expr name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr operator name name index expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name operator literal type number operator name return expr literal type number 
