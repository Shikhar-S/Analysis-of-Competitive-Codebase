include directive file using namespace name define directive macro name value decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator literal type number argument expr call name argument_list argument expr name name index expr name argument expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator call name name operator name argument_list for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name operator name operator name name index expr name operator name name operator name then block expr_stmt expr name operator operator literal type number for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name operator name operator name name index expr name operator name name operator name then block type pseudo continue if condition expr name name index expr name operator name name operator name operator name name index expr name operator name name operator name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name name operator name expr name name index expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name name operator name expr name name index expr name operator name name operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name name operator name argument expr name name index expr name operator name name operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name name operator name argument expr name name index expr name operator name name operator name else block expr_stmt expr name operator operator literal type number for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name operator name operator name name index expr name operator name name operator name then block type pseudo continue if condition expr name name index expr name operator name name operator name operator name name index expr name operator name name operator name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr name operator literal type number break expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name name operator name expr name name index expr name operator name name operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name name operator name argument expr name name index expr name operator name name operator name if condition expr name operator literal type number operator call name name operator name argument_list operator operator literal type number operator name operator then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name else block expr_stmt expr call name argument_list argument expr literal type string 
