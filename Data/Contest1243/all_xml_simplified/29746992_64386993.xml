include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file ifdef directive name include directive file endif directive define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name index expr literal type number index expr literal type number init expr block expr operator literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number expr literal type number expr literal type number expr literal type number comment type line decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name block for control init condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo return expr name return expr operator literal type number function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list endif directive decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number argument expr name operator literal type number decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number argument expr name name index expr name if condition expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr name block expr name expr name else block expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name name index expr name if condition expr name operator operator literal type number then block expr_stmt expr name operator literal type boolean break expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr name block expr name expr name expr_stmt expr call name name operator name argument_list argument expr name block expr name expr name if condition expr operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name argument_list argument expr name argument expr name ifdef directive name expr_stmt expr call name argument_list endif directive return expr literal type number 
