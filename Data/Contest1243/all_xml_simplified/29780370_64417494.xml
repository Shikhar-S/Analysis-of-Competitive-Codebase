include directive file using namespace name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name operator name while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator name operator operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr call name argument_list argument expr name argument expr name condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator operator name name index expr name operator name name index expr name operator literal type number operator operator name return expr name name index expr name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name parameter decl type name name parameter decl type name name block macro name argument_list argument argument argument block if condition expr name name index expr name operator name operator name operator name operator name then block type pseudo return expr name return expr operator literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number macro name argument_list argument argument block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator literal type char decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator literal type char expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator decl_stmt decl type name name init expr literal type boolean macro name argument_list argument argument literal type number block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name then block type pseudo expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string if condition expr name name operator name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name operator literal type string else block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument block comment type line if condition expr name name index expr name operator name operator name name index expr name operator name then block type pseudo continue else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name operator name argument expr name comment type line if condition expr name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name operator name argument expr name if condition expr name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name else block decl_stmt decl type name name macro name argument_list argument argument argument block if condition expr name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name operator name break comment type line expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr name operator continue expr_stmt expr name operator name name operator name operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list comment type line return expr literal type number 
