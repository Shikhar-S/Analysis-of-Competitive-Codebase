include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name then block return expr name return expr operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name then block return expr name return expr operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block comment type line comment type line decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr call name name operator name argument_list decl_stmt decl type name name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator name name index expr name then block continue decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number argument expr name name index expr name if condition expr name operator operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name name index expr name if condition expr name operator operator literal type number then block expr_stmt expr name operator literal type number break expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr name operator continue else block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number if condition expr name name index expr literal type number operator name name index expr literal type number then block expr_stmt expr name operator literal type number if condition expr operator name then block expr_stmt expr name operator literal type string continue else block expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator literal type string return expr literal type number 
