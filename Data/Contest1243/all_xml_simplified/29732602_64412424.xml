include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number literal type char literal type number decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator literal type number block type pseudo if condition expr name name index expr name then block type pseudo for control init decl type name name init expr name operator name condition expr name operator name incr expr name operator name operator literal type number block type pseudo expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name macro name argument_list argument argument literal type number argument if condition expr name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name return expr name typedef type name name name name typedef type name name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name operator name operator name operator call name argument_list argument expr call name argument_list argument expr name operator call name argument_list argument expr name operator call name argument_list argument expr name return expr name operator name operator operator name operator literal type number operator operator name operator operator name operator operator name operator name operator function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init condition expr name incr expr name operator call name argument_list argument expr name argument expr name argument expr name operator expr name operator literal type number block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name return expr name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number operator name operator literal type number operator literal type number operator literal type number then block type pseudo return expr name operator literal type number operator literal type number decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number decl type ref prev name init expr call name argument_list argument expr name operator literal type number decl type ref prev name init expr name operator name macro name argument_list argument argument block comment type line decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name decl type ref prev name init expr name while condition expr name operator literal type number operator name operator name operator literal type number operator name operator name operator name operator block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name if condition expr name operator name operator literal type number operator name operator name then block type pseudo return expr literal type number return expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name macro name argument_list argument argument literal type number argument block if condition expr name operator name operator literal type number operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name argument_list argument expr name operator literal type number then block type pseudo break if condition expr name operator name operator name operator name operator name operator call name argument_list argument expr name argument expr operator name operator name operator call name argument_list argument expr operator name operator name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator name comment type line if condition expr call name argument_list argument expr name operator literal type number then block expr_stmt expr name operator name operator name elseif if condition expr call name argument_list argument expr name operator literal type number then block expr_stmt expr name operator name name index expr literal type number operator name else block expr_stmt expr name operator literal type number operator name 
