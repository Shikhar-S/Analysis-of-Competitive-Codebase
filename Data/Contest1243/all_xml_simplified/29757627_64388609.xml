include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type boolean while condition expr name operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr operator name continue decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr operator name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name break if condition expr operator name then block expr_stmt expr name operator literal type boolean break expr_stmt expr operator name if condition expr name then block expr_stmt expr name operator literal type string continue if condition expr call name name operator name argument_list operator literal type number operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type boolean expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator name operator literal type char operator name name index expr name operator name operator literal type char 
