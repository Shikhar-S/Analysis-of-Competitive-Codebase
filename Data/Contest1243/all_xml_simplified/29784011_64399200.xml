include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr operator literal type number operator literal type number operator operator literal type number typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name decl type ref prev name init expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name comment type line decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name block if condition expr operator name name index expr name then block decl_stmt decl type name name init expr name name index expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name operator name else block comment type line comment type line macro name argument_list argument argument literal type number argument block comment type line decl_stmt decl type name name init expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator name name index expr name index expr name operator name decl_stmt decl type name name init expr name name index expr name index expr name operator name decl type ref prev name init expr name name index expr name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name name index expr name name index expr name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type string return expr literal type number expr_stmt expr name operator name macro name argument_list argument argument literal type number argument block macro name argument_list argument argument block comment type line comment type line decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name while condition expr name operator name operator name block if condition expr name operator operator literal type number operator name operator then block expr_stmt expr name operator literal type number break expr_stmt expr name operator literal type number expr_stmt expr name operator operator literal type number operator name operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr name operator name name index expr name operator name comment type line if condition expr operator call name name operator name argument_list argument expr name then block expr_stmt expr name operator literal type number break expr_stmt expr name operator name name index expr name expr_stmt expr name operator name if condition expr operator name then block if condition expr name operator name then block if condition expr operator name name index expr name then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type number else block for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator operator name operator literal type number operator operator name block comment type line if condition expr name name index expr name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name break if condition expr operator name name index expr operator literal type number operator name operator operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr operator literal type number operator name operator operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator literal type string operator name name index expr name operator literal type number operator literal type string return expr literal type number 
