pragma directive name name name literal name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr name operator name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list comment type block block decl_stmt decl type name name expr_stmt expr name name operator name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr name operator name operator literal type number then block expr_stmt expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator name if condition expr name operator name operator name then block type pseudo expr_stmt expr name operator expr_stmt expr name name operator name operator operator ternary condition expr name operator name then expr name else expr name operator operator literal type char return expr literal type number 
