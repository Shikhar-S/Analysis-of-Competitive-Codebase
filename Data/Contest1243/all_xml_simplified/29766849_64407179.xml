include directive file using namespace name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr literal type number init expr block decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type number break if condition expr operator name then block type pseudo expr_stmt expr name operator literal type string else block decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name index expr name operator literal type char operator call name argument_list argument expr name operator literal type number if condition expr name operator name name index expr name operator literal type char operator call name argument_list then block expr_stmt expr name operator name name index expr name operator literal type char operator call name argument_list argument expr name operator literal type number if condition expr name operator name name index expr name operator literal type char operator call name argument_list then block expr_stmt expr name operator name name index expr name decl_stmt decl type name name init expr name name index expr name operator literal type char operator call name argument_list argument expr name operator literal type number if condition expr name operator name name index expr name operator literal type char operator call name argument_list then block expr_stmt expr name operator name name index expr name operator literal type char operator call name argument_list argument expr name operator literal type number if condition expr name operator name name index expr name operator literal type char operator call name argument_list then block expr_stmt expr name operator literal type number break else block expr_stmt expr call name argument_list argument expr name name index expr operator name argument expr name name index expr operator name expr_stmt expr call name name operator name argument_list argument expr block expr operator name expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr call name argument_list argument expr name name index expr operator name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr operator name expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr name else block expr_stmt expr call name argument_list argument expr name name index expr operator name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr operator name expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr name else block expr_stmt expr call name argument_list argument expr name name index expr operator name argument expr name name index expr operator name expr_stmt expr call name name operator name argument_list argument expr block expr operator name expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr operator name else block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr operator name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr operator name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr operator name operator literal type char operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr operator name if condition expr name operator name operator name operator operator name operator call name name operator name argument_list operator literal type number operator name then block expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator literal type string else block type pseudo expr_stmt expr name operator literal type string 
