include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value using namespace name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block decl_stmt decl type name name init expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block decl_stmt decl type name name init expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block return expr operator name operator operator name name operator literal type number operator name operator operator name using namespace name using template parameter_list parameter type name name parameter type name name init expr name name operator name name argument_list type generic argument expr name name init type name name argument_list type generic argument expr name argument expr name argument expr name argument expr name argument expr name comment type line comment type line comment type line using template parameter_list parameter type name name parameter type name name parameter type name name init expr name name operator name name argument_list type generic argument expr name name init type name name argument_list type generic argument expr name argument expr name argument expr name argument expr name argument expr name function type name name parameter_list parameter decl type name name name index parameter decl type name name name index block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name init expr operator literal type number decl type ref prev name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name elseif if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name else block expr_stmt expr name operator literal type string return if condition expr name operator operator literal type number operator name operator operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type string return expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type string return else block expr_stmt expr name operator literal type string return elseif if condition expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type string return else block expr_stmt expr name operator literal type string return function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list expr_stmt expr name operator name return expr literal type number 
