comment type block include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number typedef type name name name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function type name name parameter_list parameter decl type name name block return expr literal type char operator name operator literal type char function type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr literal type number argument expr name function type name name parameter_list parameter decl type specifier name modifier name block return expr call name argument_list argument expr operator name operator name function type name name parameter_list parameter decl type name name block return expr operator ternary condition expr name then expr literal type string else expr literal type string operator function_decl template parameter_list parameter type name name type name name parameter_list parameter decl type name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr literal type string operator call name argument_list argument expr name name operator name operator literal type string operator call name argument_list argument expr name name operator name operator literal type string function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type string for control init decl type specifier specifier modifier name range expr name block if condition expr operator name then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name return expr name operator literal type string function type name name parameter_list block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator literal type string operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name operator define directive macro name parameter_list parameter type modifier value function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr operator name name operator name operator name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number return expr name function specifier type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number operator expr name operator literal type number return expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr call name argument_list argument expr name operator name argument expr name argument expr name argument expr name expr_stmt expr name operator name operator operator name operator name operator operator name expr_stmt expr name operator name return expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list parameter decl type name name block comment type line decl_stmt decl type name name init expr operator literal type number while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list argument expr name if condition expr name operator call name name operator name argument_list then block type pseudo break decl_stmt decl type name name init expr operator name comment type line if condition expr operator name name index expr name operator call name argument_list argument expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr call name name operator name argument_list argument expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number operator literal type string return expr literal type number 
