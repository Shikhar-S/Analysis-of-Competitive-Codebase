comment type block include directive file define directive macro name value using namespace name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number for control init expr name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr operator name then block expr_stmt expr call name argument_list argument expr literal type string continue decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr operator literal type number for control init expr name operator name condition expr name operator name incr expr name operator block if condition expr name operator name name index expr name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name continue for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name operator name name index expr name then block expr_stmt expr name operator name break expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name operator literal type number argument expr name name operator name operator literal type number return expr literal type number 
