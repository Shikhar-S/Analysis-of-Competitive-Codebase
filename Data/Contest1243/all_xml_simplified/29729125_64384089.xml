include directive file using namespace name decl_stmt decl type name name name index init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr operator literal type number expr operator literal type number decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number expr operator literal type number expr literal type number expr operator literal type number typedef type name name argument_list type generic argument expr name name name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator ternary condition expr operator operator name operator name operator operator name operator then expr name operator name else expr name operator name operator name expr_stmt expr name operator literal type number if condition expr name then block type pseudo expr_stmt expr name operator ternary condition expr operator operator name operator name operator operator name operator then expr name operator name else expr name operator name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator literal type number argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number argument expr name return expr call name argument_list argument expr name argument expr name argument expr name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr operator call name argument_list operator operator name operator literal type number operator operator operator literal type number if condition expr call name argument_list argument expr name argument expr name operator literal type number argument expr name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator literal type number then expr name else expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name comment type line block if condition expr call name argument_list argument expr name operator name operator name then block type pseudo return expr literal type number return expr ternary condition expr name operator name then expr operator literal type number else expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator name then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr name operator call name argument_list argument expr name argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number return expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block if condition expr operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator name argument expr name argument expr name expr_stmt expr name operator name operator name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator literal type number operator operator name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr operator name operator literal type number operator then expr operator name operator name operator literal type number operator operator name else expr operator name operator name operator literal type number operator operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type string operator name return if condition expr name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number then block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name function type name name parameter_list block comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name comment type line while condition expr name operator block type pseudo expr_stmt expr call name argument_list 
