include directive file using namespace name using name init type name name using name init type name name name using name init type name name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number ifdef directive name include directive file else directive define directive macro name parameter_list parameter type modifier value endif directive function type name name parameter_list parameter decl type name name block expr_stmt expr name operator operator ternary condition expr name then expr literal type string else expr literal type string operator operator literal type string function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type number continue decl_stmt decl type name name argument_list argument expr literal type number argument expr literal type number macro name argument_list argument argument block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number block if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type number break expr_stmt expr call name argument_list argument expr name if condition expr operator name then block type pseudo continue decl_stmt decl type name name macro name argument_list argument argument literal type number block if condition expr name name index expr name operator name name index expr name then block type pseudo continue macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name goto name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name goto name label name empty_stmt expr_stmt expr name operator call name argument_list argument expr name operator literal type string macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator literal type string return expr literal type number 
