include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name function type name name parameter_list block decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list then block expr_stmt expr name operator literal type string return decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr operator literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block type pseudo continue if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type number expr_stmt expr name operator name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type number expr_stmt expr name operator name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name break if condition expr name operator operator literal type number then block expr_stmt expr name operator literal type string return if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name else block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name if condition expr call name name operator name argument_list operator literal type number operator name then block expr_stmt expr name operator literal type string return expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name function type name name parameter_list parameter decl type name block expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list return expr literal type number 
