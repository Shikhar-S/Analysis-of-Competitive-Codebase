include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block comment type line comment type line expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator call name argument_list operator operator name operator literal type number operator then block comment type line comment type line comment type line expr_stmt expr name operator name break expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name comment type line decl_stmt decl type name name init expr literal type number while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list comment type line for control init decl type name name init expr literal type number condition expr name operator operator name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name decl_stmt decl type name name init expr name name index expr name index expr name operator literal type number comment type line if condition expr name operator name operator literal type number then block continue while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list argument expr name if condition expr name operator call name name operator name argument_list then block break decl_stmt decl type name name init expr operator operator name operator comment type line if condition expr name operator name then block break expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name comment type line if condition expr call name name operator name argument_list then block if condition expr call name name operator name argument_list then block continue decl_stmt decl type name name init expr operator operator operator call name name operator name argument_list operator operator expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator name return expr literal type number 
