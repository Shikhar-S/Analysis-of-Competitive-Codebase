include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name name index expr literal type number index expr name operator literal type char index expr literal type number operator operator expr name name index expr name name index expr literal type number index expr name operator literal type char index expr literal type number operator expr_stmt expr name name index expr name name index expr literal type number index expr name operator literal type char index expr literal type number operator operator expr name name index expr name name index expr literal type number index expr name operator literal type char index expr literal type number operator decl_stmt decl type name name init expr name name index expr literal type number index expr name expr_stmt expr name name index expr literal type number index expr name operator name name index expr literal type number index expr name expr_stmt expr name name index expr literal type number index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name operator name name index expr literal type number operator name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr literal type number index expr name operator literal type char index expr literal type number operator expr_stmt expr name name index expr name name index expr literal type number index expr name operator literal type char index expr literal type number operator expr_stmt expr name name index expr name name index expr literal type number index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr literal type number index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr operator name then block expr_stmt expr name operator literal type string continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr literal type number index expr name operator name name index expr literal type number index expr name then block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr literal type number index expr name operator name name index expr literal type number index expr name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr name argument expr name continue else block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr literal type number index expr name operator name name index expr literal type number index expr name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr name argument expr name continue else block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator continue expr_stmt expr name operator literal type string expr_stmt expr name operator operator name operator call name name operator name argument_list operator literal type char for control init decl type name name argument_list type generic argument expr name argument expr name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator literal type char expr_stmt expr call name name operator name argument_list return expr literal type number 
