include directive file include directive file define directive macro name value using namespace name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name comment type block function name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr name operator name then block expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator literal type char else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
