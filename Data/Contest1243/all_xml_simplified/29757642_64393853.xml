include directive file define directive macro name value define directive macro name parameter_list parameter type name modifier value using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name name init expr literal type number operator literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator else block decl_stmt decl type name name init expr name operator name operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name else block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number argument expr name operator literal type number argument expr name argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name operator literal type number operator literal type number function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr operator ternary condition expr name name index expr name then expr operator literal type number else expr name operator decl_stmt decl type name name init expr name operator name operator literal type number if condition expr name name index expr name operator literal type number operator literal type number then block type pseudo return expr call name argument_list argument expr name operator literal type number argument expr name argument expr name else block type pseudo return expr call name argument_list argument expr name operator literal type number operator literal type number argument expr name operator literal type number argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr operator literal type number if condition expr name operator name operator name operator name then block type pseudo return expr call name argument_list argument expr name argument expr name argument expr name decl_stmt decl type name name init expr name operator name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number operator literal type number argument expr name operator literal type number argument expr name argument expr call name argument_list argument expr name operator literal type number argument expr name argument expr name return expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block expr_stmt expr name name index expr name operator name return expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name name index expr name block decl_stmt decl type name name init expr name if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr name operator name decl_stmt decl type name name decl_stmt decl type name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr call name name operator name argument_list argument expr name argument expr name operator operator literal type number then block decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name while condition expr call name name operator name argument_list operator literal type boolean block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block decl_stmt decl type name name init expr name name operator name decl type ref prev name init expr name name operator name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name argument expr name while condition expr name operator operator literal type number block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator call name name operator name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name range expr name block expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block if condition expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name then block expr_stmt expr name operator expr_stmt expr name operator name operator literal type string return expr literal type number comment type block 
