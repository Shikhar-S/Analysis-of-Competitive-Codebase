include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr literal type number comment type line decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr call name argument_list argument expr name argument expr name then block type pseudo return expr_stmt expr name name index expr call name argument_list argument expr name operator name name index expr call name argument_list argument expr name expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list block expr_stmt expr name operator name operator name macro name argument_list argument argument block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator call name argument_list expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block comment type line expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block if condition expr call name name operator name argument_list argument expr block expr name expr name operator literal type number then block if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block expr_stmt expr name operator expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name operator literal type number operator name name index expr name operator name operator literal type number operator name then block type pseudo break decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr name operator call name name operator name argument_list operator literal type number operator name function type name name parameter_list block expr_stmt expr call name argument_list expr_stmt expr call name argument_list 
