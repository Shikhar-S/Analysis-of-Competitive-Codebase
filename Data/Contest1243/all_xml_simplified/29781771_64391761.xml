include directive file using namespace name typedef type name name name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument block decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number break if condition expr name then block type pseudo continue macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr operator name then block expr_stmt expr name operator literal type number break if condition expr operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type char macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type char operator name name index expr name operator name operator literal type number operator literal type char return expr literal type number 
