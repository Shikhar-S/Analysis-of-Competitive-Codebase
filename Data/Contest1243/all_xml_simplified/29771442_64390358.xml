include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value using namespace name typedef type name name name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator call name argument_list argument expr name argument expr name operator name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type specifier name name init expr literal type string decl type ref prev name init expr literal type string function type name name parameter_list block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument block expr_stmt expr operator name name index expr name name index expr name expr_stmt expr operator name name index expr name name index expr name for control init decl type name name range expr name block if condition expr name name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name block macro name argument_list argument argument argument block if condition expr name name index expr name operator name then block type pseudo return expr name return expr operator literal type number function type name name parameter_list block if condition expr operator call name argument_list then block expr_stmt expr name operator name operator name return typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name argument expr name operator literal type number if condition expr name operator operator literal type number then block decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name continue expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name argument expr name operator literal type number if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr name operator operator literal type number decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name if condition expr name then block expr_stmt expr name operator name operator literal type string operator name operator name expr_stmt expr call name argument_list argument expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number expr_stmt expr name operator call name argument_list argument expr name if condition expr name then block type pseudo expr_stmt expr name operator name operator literal type string operator name operator name expr_stmt expr call name argument_list return expr literal type number 
