include directive file include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name operator literal type number function specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr name operator name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr name operator literal type number argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name name index expr name operator literal type char operator operator expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator operator expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator operator literal type number if condition expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo continue if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr operator name operator call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr operator name operator call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr operator name operator call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr operator name operator call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr operator name operator call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr operator name operator call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name comment type line 
