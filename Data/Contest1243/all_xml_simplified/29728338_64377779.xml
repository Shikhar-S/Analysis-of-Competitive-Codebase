include directive file define directive macro name parameter_list parameter type name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value using namespace name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr operator name operator name operator then expr literal type number else expr literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name return function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name return function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block type pseudo if condition expr name name index expr name then block type pseudo for control init decl type name name init expr operator name operator literal type number operator condition expr name operator name incr expr name operator name block type pseudo expr_stmt expr name name index expr name operator literal type number return function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block type pseudo if condition expr name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr operator name operator literal type number operator condition expr name operator name incr expr name operator name block type pseudo expr_stmt expr name name index expr name operator literal type number return function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block type pseudo if condition expr name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr operator name operator literal type number operator condition expr name operator operator name operator name incr expr name operator name block type pseudo expr_stmt expr name name index expr name operator literal type number return function type name name parameter_list parameter decl type name name block if condition expr operator literal type char operator name operator name operator literal type char operator operator operator literal type char operator name operator name operator literal type char operator then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type string for control init decl type name name range expr name block type pseudo if condition expr name operator name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr literal type number operator name operator name operator name operator literal type number operator name operator name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block for control init decl type name name init expr operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr call name argument_list argument expr name operator call name argument_list argument expr name operator literal type number operator operator call name argument_list argument expr name operator name argument expr name operator name argument expr name argument expr name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type boolean if condition expr operator operator name operator literal type number operator operator name operator literal type number then block type pseudo return expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator literal type number block type pseudo if condition expr operator operator name operator name operator then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type boolean if condition expr operator operator name operator literal type number operator operator name operator literal type number then block type pseudo return expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator literal type number block type pseudo if condition expr operator operator name operator name operator then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr operator name operator call name name operator name argument_list decl_stmt decl type name name init expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name block decl_stmt decl type name name init expr operator name operator call name name operator name argument_list decl_stmt decl type name name init expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block while condition expr name block decl_stmt decl type name name init expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block while condition expr name block decl_stmt decl type name name init expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name function type name name parameter_list parameter decl type name name block if condition expr operator name then block type pseudo return expr literal type string decl_stmt decl type name name init expr literal type string while condition expr name block expr_stmt expr name operator literal type char operator operator name operator literal type number operator expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name return expr name function type name name parameter_list parameter decl type name name block if condition expr operator name then block type pseudo return expr literal type string decl_stmt decl type name name init expr literal type string while condition expr name block expr_stmt expr name operator literal type char operator operator name operator literal type number operator expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name return expr name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block if condition expr operator name then block type pseudo return expr block expr literal type char decl_stmt decl type name name argument_list type generic argument expr name name while condition expr name block expr_stmt expr call name name operator name argument_list argument expr literal type char operator operator name operator literal type number operator expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name return expr name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block if condition expr operator name then block type pseudo return expr block expr literal type char decl_stmt decl type name name argument_list type generic argument expr name name while condition expr name block expr_stmt expr call name name operator name argument_list argument expr literal type char operator operator name operator literal type number operator expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name return expr name decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name decl_stmt decl type name name init expr call name name operator name operator name argument_list define directive macro name parameter_list parameter type name value endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type string operator literal type char continue expr_stmt expr call name argument_list argument expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number if condition expr name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number then block type pseudo expr_stmt expr name operator literal type string operator literal type char else block type pseudo expr_stmt expr name operator literal type string operator literal type char ifdef directive name decl_stmt decl type name name init expr call name name operator name operator name argument_list expr_stmt expr name operator literal type string operator call name name operator name name argument_list type generic argument expr name name operator name argument_list argument expr name operator name operator call name argument_list operator literal type string operator name endif directive return expr literal type number 
