include directive file using namespace name using name init type name name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value decl_stmt decl type name name argument_list argument expr literal type number ifdef directive name define directive macro name parameter_list parameter type name value define directive macro name parameter_list value define directive macro name value else directive define directive macro name parameter_list parameter type name value define directive macro name parameter_list value define directive macro name value endif directive function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name name index expr literal type number for control init decl type name name range expr name block expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr block expr literal type number expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr block expr literal type number expr name comment type block decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type boolean break if condition expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator literal type boolean break if condition expr name then block type pseudo continue if condition expr operator name then block expr_stmt expr name operator literal type string return expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr call name name operator name argument_list operator literal type number operator name expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init expr name index expr name operator name operator name block expr_stmt expr name operator name operator literal type number operator literal type string operator name operator literal type number operator literal type string function type name name parameter_list parameter decl type name block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list return expr literal type number 
