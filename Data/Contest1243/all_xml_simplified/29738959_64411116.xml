include directive file using namespace name define directive macro name value function type name name parameter_list block decl_stmt decl type name name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block expr_stmt expr name operator literal type string continue decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name while condition expr name operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator continue for control init decl type name name init expr name condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name break expr_stmt expr name operator expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator literal type string return expr literal type number 
