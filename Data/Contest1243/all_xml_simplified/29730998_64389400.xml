pragma directive name name name literal name include directive file using namespace name typedef type name name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type modifier value decl_stmt decl type specifier name name init expr literal type number function specifier type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator operator name then expr operator literal type number else expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name block expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list argument expr name for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name function template parameter_list parameter type name name type name name argument_list type generic argument expr name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name argument_list type generic argument expr name name init expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name operator call name name operator name argument_list return expr name function type name name parameter_list parameter decl type name name parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block type pseudo if condition expr operator operator name operator name operator then block decl_stmt decl type name name init expr literal type number while condition expr operator operator name operator name operator block type pseudo expr_stmt expr name operator operator expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number function type name name parameter_list block ifdef directive name comment type line endif directive expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo return expr operator operator name operator literal type string operator decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name argument_list argument expr name argument expr name comment type line comment type line if condition expr call name argument_list argument expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator call name name operator name argument_list operator name operator name return expr literal type number warning directive 
