include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value typedef type name name argument_list type generic argument expr name argument expr name argument expr name name typedef type name name name typedef type name name name name typedef type name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block return expr ternary condition expr operator name operator name name index expr name operator then expr name else expr operator name name index expr name operator call name argument_list argument expr name name index expr name operator function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator call name argument_list operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator name for control init decl type name name range expr name name index expr name block type pseudo expr_stmt expr name name index expr name operator literal type boolean for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr literal type number operator call name argument_list argument expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block type pseudo continue expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr literal type boolean for control init decl type name name range expr name name index expr name block for control init decl type name name range expr name name index expr name block if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name then block type pseudo continue expr_stmt expr name operator literal type boolean break if condition expr name then block type pseudo expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr call name argument_list argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name argument_list type generic argument expr name name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr name operator name operator literal type number 
