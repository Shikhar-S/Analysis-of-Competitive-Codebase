comment type block include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type specifier name name block comment type block comment type line return expr operator name operator name operator operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type specifier name name block if condition expr name operator name operator literal type number then block type pseudo return expr ternary condition expr name operator literal type number then expr name operator literal type number else expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator literal type number return expr name operator name function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name parameter decl type name name parameter decl type name name block if condition expr operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator name expr_stmt expr name operator name operator operator name operator name operator return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type specifier name name block return expr ternary condition expr name operator name operator name then expr name operator name operator name else expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type specifier name name block return expr ternary condition expr name operator name then expr name operator name operator name else expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type specifier name name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name operator operator name operator name operator name operator operator name return expr name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr_stmt expr name name index expr name operator name decl_stmt decl type name name operator name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name decl type ref prev name if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator name block expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name decl_stmt decl type name name operator name name argument_list type generic argument expr name name name index expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list expr_stmt expr name operator call name argument_list decl_stmt decl type name name decl type ref prev name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name operator expr name name index expr name operator name operator literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument block expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr name name index expr name operator call name argument_list expr_stmt expr operator name if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type number argument expr name name index expr name index expr literal type number operator literal type number decl_stmt decl type name name init expr name name index expr name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number operator expr name operator name name index expr name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator call name name operator name argument_list operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name else block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name then block type pseudo expr_stmt expr operator name expr_stmt expr name name operator name operator name operator literal type number 
