include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr operator name operator literal type char operator operator operator name operator literal type char operator block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr operator name operator literal type char operator operator operator name operator literal type char operator block expr_stmt expr name operator name operator literal type number operator operator name operator literal type char operator expr_stmt expr name operator call name argument_list return expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name name index expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr name name index expr name operator call name argument_list macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name name index expr name operator name for control init decl type name name init expr call name argument_list argument expr literal type number condition expr name operator name incr expr name operator call name argument_list argument expr name operator literal type number block type pseudo if condition expr name name index expr name operator name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list expr_stmt expr name operator call name argument_list macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator call name argument_list argument expr name operator literal type number block type pseudo expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number return expr literal type number 
