include directive file define directive macro name value define directive macro name value using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr call name name operator name argument_list argument expr name name index expr name operator call name name operator name argument_list then block expr_stmt expr name name index expr name name index expr name operator literal type number else block expr_stmt expr name name index expr name name index expr name operator if condition expr call name name operator name argument_list argument expr name name index expr name operator call name name operator name argument_list then block expr_stmt expr name name index expr name name index expr name operator literal type number else block expr_stmt expr name name index expr name name index expr name operator decl_stmt decl type name name init expr literal type boolean for control init decl type name name range expr name block comment type line if condition expr name name operator name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name if condition expr operator name then block expr_stmt expr name operator literal type string else block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr literal type boolean if condition expr name name index expr name operator name name index expr name then block comment type line for control init decl type name name init expr name operator literal type number condition expr name operator call name name operator name argument_list incr expr name operator comment type line block if condition expr name name index expr name operator name name index expr name then block comment type line expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name comment type line expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr name operator literal type boolean break if condition expr operator name then block for control init decl type name name init expr name operator literal type number condition expr name operator call name name operator name argument_list incr expr name operator comment type line block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name comment type line expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr_stmt expr name operator literal type boolean break comment type line if condition expr name operator name then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator literal type char comment type line 
