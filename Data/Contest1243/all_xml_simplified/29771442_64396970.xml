include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value using namespace name typedef type name name name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator call name argument_list argument expr name argument expr name operator name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name operator expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr literal type boolean if condition expr name operator literal type number then block type pseudo return expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block if condition expr name operator name operator literal type number then block return expr literal type boolean return expr literal type boolean function type name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block while condition expr name operator name operator literal type number block expr_stmt expr operator name name index expr name expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name block if condition expr call name argument_list argument expr name then block expr_stmt expr name operator name operator name else block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block expr_stmt expr name operator name name operator name expr_stmt expr operator name if condition expr name operator literal type number then block expr_stmt expr name operator name operator name else block expr_stmt expr name operator literal type number operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name if condition expr literal type number then block macro name argument_list argument argument expr_stmt expr name name index expr name operator name macro name argument_list argument argument block macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr call name argument_list argument expr name operator name if condition expr name operator literal type number then block if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name macro name argument_list argument argument block expr_stmt expr name operator call name argument_list argument expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr name return expr literal type number 
