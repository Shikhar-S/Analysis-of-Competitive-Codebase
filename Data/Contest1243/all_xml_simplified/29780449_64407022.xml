comment type line comment type line include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number define directive macro name value define directive macro name value decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name operator name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block while condition expr call name name operator name argument_list block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr call name name operator name argument_list expr_stmt expr name operator call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list if condition expr name operator name name index expr name operator call name argument_list operator name operator literal type number then block type pseudo return expr literal type boolean elseif if condition expr name name index expr name index expr name operator name then block type pseudo return expr literal type boolean else block type pseudo return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator call name argument_list expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name operator operator name operator operator name if condition expr operator call name argument_list argument expr name argument expr name then block comment type line expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name operator operator name operator operator name expr name operator operator name operator operator name expr_stmt expr call name argument_list while condition expr call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name operator operator name operator operator name if condition expr operator call name argument_list argument expr name argument expr name operator name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator operator name operator operator name expr name operator operator name operator operator name expr_stmt expr call name argument_list function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator call name argument_list expr name decl_stmt decl type name name init expr literal type number while condition expr call name name operator name argument_list block expr_stmt expr name operator call name name operator name argument_list decl_stmt decl type name name init expr name operator operator name operator operator name if condition expr operator name name index expr name then block expr_stmt expr name operator expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator literal type number operator literal type string return expr literal type number comment type block 
