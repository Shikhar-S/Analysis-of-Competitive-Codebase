include directive file define directive macro name value using namespace name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr literal type number decl type ref prev name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator operator expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator literal type string continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue comment type line expr_stmt expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator name name index expr name continue comment type line expr_stmt expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type char while condition expr operator call name name operator name argument_list block expr_stmt expr name operator call name name operator name argument_list operator name operator literal type number operator literal type char operator call name name operator name argument_list operator name operator literal type number operator literal type char expr_stmt expr call name name operator name argument_list 
