include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value comment type line comment type line using namespace name typedef type name name name typedef type name name name name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string if condition expr call name name operator name argument_list operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list operator literal type number incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name name index expr call name name operator name argument_list operator literal type number expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string if condition expr call name name operator name argument_list operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list operator literal type number incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name name index expr call name name operator name argument_list operator literal type number expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator literal type string decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator operator name name operator name operator operator literal type string operator operator name name operator name operator if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr operator name expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator literal type string decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator operator name name operator name operator operator literal type string operator operator name name operator name operator if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr operator name expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator operator operator name operator if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr operator name expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator operator operator name operator if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr operator name expr_stmt expr name operator literal type string return expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block for control init decl type name name range expr name name index expr name block if condition expr name name index expr name operator literal type number then block ifdef directive name expr_stmt expr name operator literal type string operator name operator literal type string operator name name index expr name operator name endif directive expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean ifdef directive name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator literal type string operator name operator literal type string expr_stmt expr name operator name operator name endif directive expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name ifdef directive name expr_stmt expr name operator literal type string operator name operator name endif directive for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name range expr name name index expr name block type pseudo expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type boolean while condition expr name block expr_stmt expr name operator literal type boolean for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name operator name name index expr name operator call name argument_list operator name then block ifdef directive name expr_stmt expr name operator literal type string operator name operator literal type string operator name name index expr name operator call name argument_list operator literal type string operator name operator literal type string endif directive expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator expr_stmt expr name operator literal type boolean ifdef directive name expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block expr_stmt expr name operator name operator literal type string expr_stmt expr name operator name endif directive for control init decl type name name range expr name name index expr name block comment type line if condition expr name name index expr name then block type pseudo continue comment type line decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name index expr name operator literal type number for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block expr_stmt expr name name index expr name index expr name operator literal type number expr_stmt expr name operator if condition expr name name index expr name operator call name argument_list operator name operator name then block expr_stmt expr name name index expr name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr name operator literal type number else block expr_stmt expr name name index expr name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr literal type number for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name ifdef directive name expr_stmt expr name operator literal type string expr_stmt expr name operator literal type string for control init decl type name name range expr name block expr_stmt expr name operator name operator literal type string expr_stmt expr name operator name endif directive for control init decl type name name range expr name block ifdef directive name expr_stmt expr name operator name operator literal type string endif directive for control init decl type name name range expr name block if condition expr name name index expr name index expr name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name ifdef directive name expr_stmt expr name operator name name index expr name index expr name operator literal type string endif directive ifdef directive name expr_stmt expr name operator name endif directive decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block expr_stmt expr name name index expr name operator literal type number for control init decl type name name range expr name block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator name ifdef directive name expr_stmt expr name operator literal type string operator name operator literal type string operator name operator name endif directive expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator operator name operator literal type number operator operator name ifdef directive name expr_stmt expr name operator literal type string endif directive return expr literal type number 
