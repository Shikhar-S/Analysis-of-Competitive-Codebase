include directive file using namespace name decl_stmt decl type name name name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name decl type ref prev name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator name while condition expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name operator name name index expr name then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr literal type number operator literal type number expr_stmt expr name name index expr name operator literal type number while condition expr call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list operator name decl type ref prev name init expr call name name operator name argument_list operator name expr_stmt expr call name name operator name argument_list if condition expr name operator name name index expr name then block type pseudo continue expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list for control init decl type name name range expr name block type pseudo if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name block type pseudo if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name comment type line expr_stmt expr name operator name return expr literal type number 
