include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list value define directive macro name parameter_list value define directive macro name parameter_list parameter type name value function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr literal type number expr_stmt expr name operator name operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name name index expr name operator literal type number operator for control init decl type name name range expr name block type pseudo if condition expr name operator literal type number operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list block expr_stmt expr call name argument_list ifndef directive name expr_stmt expr call name argument_list endif directive decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name if condition expr operator call name argument_list argument expr name argument expr name then block type pseudo expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string decl_stmt decl type name name argument_list type generic argument expr name name for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr literal type boolean for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr operator name then block for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name break if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type number operator name operator literal type number operator literal type string operator literal type number operator name else block expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name 
