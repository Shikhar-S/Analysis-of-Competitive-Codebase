include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block for control init expr call name argument_list argument expr literal type string argument expr operator name condition expr name operator incr expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name block for control init expr call name argument_list argument expr literal type string argument expr operator name argument expr name operator literal type number argument expr name operator literal type number operator expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator operator expr name name index expr name name index expr name operator literal type char operator for control init expr name operator name operator literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string for control init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name name index expr name then block for control init expr name operator name operator literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo break if condition expr name operator name operator literal type number then block for control init expr name operator name operator literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo break expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name else block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init expr name operator name operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name argument expr name name operator name expr_stmt expr call name name operator name argument_list 
