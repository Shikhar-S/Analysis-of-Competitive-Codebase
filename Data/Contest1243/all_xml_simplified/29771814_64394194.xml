include directive file define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name name index expr name then block type pseudo return expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name return expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name return expr literal type number return expr literal type number function type name name parameter_list parameter decl type name name block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name return for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name return function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr call name argument_list argument expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name if condition expr call name argument_list argument expr name then block type pseudo continue expr_stmt expr name operator literal type string break expr_stmt expr name operator name operator literal type string if condition expr name operator literal type string then block expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator literal type string expr_stmt expr call name name operator name argument_list return expr literal type number 
