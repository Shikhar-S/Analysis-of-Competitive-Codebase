include directive file using namespace name function type name name parameter_list block comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean operator expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr literal type number init expr block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator operator expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr operator name then block expr_stmt expr name operator literal type string continue decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue comment type line decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator expr name operator literal type boolean break if condition expr name then block type pseudo continue comment type line for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name break expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type char for control init decl type name name argument_list type generic argument expr name argument expr name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator literal type char return expr literal type number 
