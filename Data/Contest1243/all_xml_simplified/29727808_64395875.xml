include directive file define directive macro name value using namespace name decl_stmt decl type name name name index expr call name argument_list argument expr literal type number operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type string operator name break if condition expr name operator literal type number then block type pseudo continue decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block type pseudo continue expr_stmt expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type string operator name break if condition expr name operator literal type number then block type pseudo continue expr_stmt expr name operator literal type string operator name expr_stmt expr name operator operator name operator call name name operator name argument_list operator name decl_stmt decl type name name init expr literal type number while condition expr name operator call name name operator name argument_list block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator name expr_stmt expr name operator return expr literal type number 
