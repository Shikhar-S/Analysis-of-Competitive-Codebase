define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name while condition expr name block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name return expr name decl_stmt decl type name name name index expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block return expr name name index expr name operator call name argument_list argument expr name name index expr name else block type pseudo return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr call name argument_list argument expr name operator name name index expr call name argument_list argument expr name decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator literal type char operator name operator literal type char operator name operator literal type char operator name operator literal type char operator name operator literal type char then block type pseudo return expr literal type boolean else block type pseudo return expr literal type boolean empty_stmt function type name name argument_list type generic argument expr name name parameter_list parameter decl type specifier name name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block while condition expr name operator literal type number operator name name index expr name operator name name index expr name block type pseudo expr_stmt expr name operator name name index expr name operator literal type number if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator expr_stmt expr name name index expr name operator name return expr name function type name name parameter_list block expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name while condition expr call name name operator name argument_list operator literal type number operator name block decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name if condition expr call name name operator name argument_list operator literal type number then block break decl_stmt decl type name name init expr name name index expr name name index expr literal type number decl_stmt decl type name name init expr operator literal type number for control init decl type name name range expr name block if condition expr name name index expr name operator name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator name name index expr name name index expr name then block decl_stmt decl type name name init expr name name index expr name name index expr literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name name index expr literal type number expr_stmt expr name name index expr name name index expr literal type number operator name name index expr name name index expr name expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr name operator literal type boolean break if condition expr operator name then block expr_stmt expr name operator literal type boolean break else block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name name index expr literal type number expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name name index expr literal type number expr_stmt expr name name index expr name name index expr literal type number operator name expr_stmt expr name operator literal type boolean if condition expr name then block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name else block expr_stmt expr name operator literal type string operator name 
