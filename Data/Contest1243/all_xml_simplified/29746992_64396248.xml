include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file ifdef directive name include directive file endif directive define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name index expr literal type number index expr literal type number init expr block expr operator literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number expr literal type number expr literal type number expr literal type number comment type line decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list endif directive expr_stmt expr call name argument_list argument expr name argument expr literal type boolean argument expr sizeof argument_list argument expr name expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type boolean decl_stmt decl type name name init expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block expr_stmt expr name name index expr operator name operator name for control init decl type name name init expr literal type number condition expr name operator name operator name operator name name index expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type boolean if condition expr name operator name name index expr name operator literal type number then block break expr_stmt expr call name argument_list argument expr literal type string argument expr operator name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name operator name name index expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name name index expr name while condition expr name operator name name index expr name operator literal type number block type pseudo expr_stmt expr name operator name name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr literal type number ifdef directive name expr_stmt expr call name argument_list endif directive return expr literal type number 
