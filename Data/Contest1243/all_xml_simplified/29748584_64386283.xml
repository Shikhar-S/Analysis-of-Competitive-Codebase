include directive file using namespace name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block break if condition expr name operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name else block for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block break if condition expr name operator name then block expr_stmt expr name operator literal type boolean break expr_stmt expr name operator expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name index expr literal type number argument expr name name index expr name index expr literal type number return expr literal type number 
