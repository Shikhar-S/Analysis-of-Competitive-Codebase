include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name break if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name break if condition expr name name index expr name operator name name index expr name then block type pseudo continue expr_stmt expr name operator literal type number break if condition expr operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator literal type string ifdef directive name expr_stmt expr name operator literal type string operator literal type number operator call name argument_list operator name operator literal type string endif directive comment type line return expr literal type number 
