include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name argument expr name name name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl specifier type name name init expr literal type number decl_stmt decl specifier type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number decl type ref prev name init expr block expr operator literal type number expr literal type number expr literal type number expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name operator name operator literal type number operator name operator name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number macro name argument_list argument argument block expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name operator literal type char operator expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name operator literal type char operator decl_stmt decl type name name init expr literal type boolean macro name argument_list argument argument literal type number if condition expr call name name operator name argument_list argument expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr operator name then block expr_stmt expr name operator literal type string operator name continue decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number block if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list argument expr name then block type pseudo continue decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list argument expr name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator name continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list argument expr name then block expr_stmt expr name operator name break expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number operator call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator name expr_stmt expr name operator call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number operator name expr_stmt expr name operator literal type string operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument block expr_stmt expr name operator call name name operator name argument_list argument expr name operator name operator literal type number operator literal type string operator call name name operator name argument_list argument expr name operator name operator literal type number operator name 
