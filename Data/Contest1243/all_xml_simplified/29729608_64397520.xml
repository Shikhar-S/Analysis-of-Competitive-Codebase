comment type block include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name argument_list type generic argument expr name operator name name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name name index expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name init expr literal type number while condition expr operator call name name operator name argument_list block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr operator name for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name name index expr operator name operator literal type number operator expr call name name operator name argument_list argument expr operator name operator expr name name index expr operator name operator operator name elseif if condition expr operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr operator name operator operator operator name operator operator operator operator name name index expr operator name operator then block expr_stmt expr name name index expr operator name operator literal type number expr_stmt expr call name name operator name argument_list argument expr operator name expr_stmt expr name name index expr operator name operator operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name range expr name name index expr name block if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr operator name expr_stmt expr name operator name operator literal type char return expr literal type number 
