include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using name init type name name using name init type name name operator name name argument_list type generic argument expr name argument expr name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function type operator template parameter_list parameter type name name parameter type name name type name name operator name modifier name name parameter_list parameter decl type name name operator name modifier name parameter decl type name name operator name name argument_list type generic argument expr name argument expr name name block return expr name operator name name operator name operator literal type string operator name name operator name function type operator template parameter_list parameter type name name type name name operator name modifier name name parameter_list parameter decl type name name operator name modifier name parameter decl type name name operator name name argument_list type generic argument expr name name block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator operator ternary condition expr name operator literal type number operator call name name operator name argument_list then expr literal type string else expr literal type string operator return expr name function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr name operator name operator operator name operator name operator literal type boolean operator function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr name operator name operator operator name operator name operator literal type boolean operator function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr operator literal type number block if condition expr operator name operator literal type number operator operator operator name operator operator literal type number operator name operator name operator literal type number operator then block return expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block expr_stmt expr name operator ternary condition expr operator name operator operator literal type number operator then expr operator name operator name operator operator name else expr name operator name expr_stmt expr name operator ternary condition expr operator name operator operator literal type number operator then expr operator name operator name operator operator name else expr name operator name expr_stmt expr name operator literal type number return expr name comment type line decl_stmt decl type specifier name name init expr literal type number operator literal type number comment type line class template parameter_list parameter type name name name block private type default private decl_stmt decl type name name operator name name argument_list type generic argument expr name name decl_stmt decl type name name public constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name argument expr operator literal type number call name argument_list argument expr name block comment type line function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator literal type number then block return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block return expr literal type boolean if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name return expr literal type boolean comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name comment type line function type name name parameter_list parameter decl type name name block return expr operator name name index expr call name argument_list argument expr name comment type line function type name name parameter_list block decl_stmt decl type name name operator name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name return expr call name name operator name argument_list function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean decl_stmt decl type name name decl type ref prev name expr_stmt expr name name operator name operator name operator name decl_stmt decl type name name operator name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name name operator name operator name operator name expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name operator name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument expr_stmt expr call name name operator name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr operator call name name operator name argument_list decl_stmt decl type name name operator name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean while condition expr name block expr_stmt expr name operator literal type boolean decl_stmt decl type name name init expr literal type boolean for control init decl type name name range expr name block for control init decl type name name range expr name block if condition expr call name name operator name argument_list argument expr block expr call name name operator name argument_list argument expr name argument expr name macro name expr name operator name operator name operator name operator operator call name name operator name argument_list then block expr_stmt expr name operator literal type boolean expr_stmt expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name break if condition expr name then block type pseudo break expr_stmt expr name operator expr_stmt expr name name operator name operator name operator literal type number return expr literal type number 
