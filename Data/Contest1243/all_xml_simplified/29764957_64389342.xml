comment type block comment type line comment type line comment type line include directive file using namespace name define directive macro name value define directive macro name parameter_list value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number argument expr literal type number decl type ref prev name function type name name parameter_list block expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block if condition expr name name index expr name then block for control init decl type name name init expr name operator name condition expr name operator name incr expr name operator name block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name function type name name parameter_list block expr_stmt expr call name argument_list decl_stmt decl type name name expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator literal type number return decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr name decl type ref prev name init expr literal type number decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name operator name name index expr name operator name incr expr operator name block comment type line if condition expr name operator name name index expr name operator literal type number then block expr_stmt expr operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name if condition expr name operator literal type number then block expr_stmt expr name operator literal type number return while condition expr name operator name name index expr name operator literal type number block type pseudo expr_stmt expr name operator name name index expr name if condition expr name operator literal type number then block type pseudo break if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name if condition expr name operator literal type number then block if condition expr name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type number function type name name parameter_list block expr_stmt expr call name argument_list decl_stmt decl type name name init expr literal type number comment type line while condition expr name operator block expr_stmt expr call name argument_list return expr literal type number 
