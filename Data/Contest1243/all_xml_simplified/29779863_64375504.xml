include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name function_decl type name name parameter_list parameter decl type name name parameter decl type name name function_decl type name name parameter_list parameter decl type name name parameter decl type name name function_decl type name name argument_list type generic argument expr name name parameter_list parameter decl type name name parameter decl type name name function_decl type name name parameter_list parameter decl type name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name init expr call name argument_list argument expr literal type number operator literal type number function type name name parameter_list block comment type line comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name macro name argument_list argument argument expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name expr_stmt expr name operator literal type number macro name argument_list argument argument if condition expr name name index expr name operator name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name expr_stmt expr name operator name operator literal type string function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr literal type number if condition expr name operator literal type number operator name then block type pseudo expr_stmt expr name operator name operator name if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator operator name operator name operator literal type number operator expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator literal type number then expr name else expr call name argument_list argument expr name argument expr name operator name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type string decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name elseif if condition expr name operator literal type string then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr name operator literal type string if condition expr name operator literal type string then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr name operator literal type string return expr name comment type line comment type line comment type line comment type line comment type line comment type line function type name name parameter_list parameter decl type name name block if condition expr operator name operator literal type number operator literal type number operator name operator literal type number operator operator name operator literal type number then block type pseudo return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator literal type number block type pseudo if condition expr name operator name operator literal type number then block type pseudo return expr literal type number return expr literal type number 
