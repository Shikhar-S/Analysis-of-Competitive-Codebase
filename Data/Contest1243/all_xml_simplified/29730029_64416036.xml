include directive file define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator operator operator name operator call name argument_list operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator call name argument_list operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator call name argument_list operator operator name operator literal type number operator operator call name argument_list operator operator operator name operator name operator literal type number operator function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name while condition expr operator call name argument_list argument expr name operator call name argument_list block type pseudo empty_stmt do block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type number condition expr call name argument_list argument expr name operator call name argument_list function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number function specifier type name name parameter_list parameter decl type name name block while condition expr call name name operator name argument_list operator name block type pseudo expr_stmt expr name operator literal type char operator name decl_stmt decl type name name for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator literal type number incr expr name operator name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name operator name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name operator literal type number operator name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name return expr name function type operator specifier type name name name parameter_list parameter decl type name name parameter decl type name name block if condition expr call name name operator name argument_list operator call name name operator name argument_list then block type pseudo return expr operator call name name operator name argument_list operator call name name operator name argument_list operator for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo return expr operator name name index expr name operator name name index expr name operator return expr literal type boolean function type operator specifier type name name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator function type operator specifier type name name name parameter_list parameter decl type name name parameter decl type name name block for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list operator name incr expr name operator block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name name index expr name operator name name index expr name operator operator ternary condition expr name operator call name name operator name argument_list then expr name name index expr name else expr literal type number operator operator name expr_stmt expr name operator operator name name index expr name operator name operator if condition expr name then block type pseudo expr_stmt expr name name index expr name operator name if condition expr call name name operator name argument_list operator literal type number operator operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list return expr name function type operator specifier type name name name parameter_list parameter decl type name name parameter decl type name name block for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator call name name operator name argument_list operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator operator ternary condition expr name operator call name name operator name argument_list then expr name name index expr name else expr literal type number operator operator name expr_stmt expr name operator operator name name index expr name operator literal type number operator if condition expr name then block type pseudo expr_stmt expr name name index expr name operator name while condition expr call name name operator name argument_list operator literal type number operator operator call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list return expr name function type operator specifier type name name name parameter_list parameter decl type name name parameter decl type name name block for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator call name name operator name argument_list operator name incr expr name operator block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name operator name while condition expr call name name operator name argument_list operator literal type number operator operator call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list return expr name function type operator specifier type name name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr name operator name operator name while condition expr call name name operator name argument_list operator literal type number operator operator call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list return expr name function specifier type name name parameter_list parameter decl type name name block if condition expr call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type number else block type pseudo expr_stmt expr name operator call name name operator name argument_list for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator call name argument_list argument expr literal type char operator name name index expr name expr_stmt expr name operator literal type char function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name argument_list argument expr literal type string argument expr literal type string then block expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name operator name operator name expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr name operator name then block expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type char else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
