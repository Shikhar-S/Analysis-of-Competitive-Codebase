pragma directive name name name name literal name pragma directive name name name literal name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value comment type line using namespace name typedef type name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number comment type line decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name operator call name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number comment type line decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo continue expr_stmt expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr operator name expr_stmt expr name operator literal type number break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number break if condition expr operator name then block expr_stmt expr name operator literal type string operator name break if condition expr name then block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type char operator name name index expr name operator name operator literal type number operator name return expr literal type number 
