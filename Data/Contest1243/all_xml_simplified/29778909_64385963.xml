include directive file pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name using namespace name comment type block define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value comment type block decl_stmt decl type specifier name name name init expr literal type number operator literal type number decl_stmt decl type specifier name name name init expr literal type number operator literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number comment type block function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name modifier name init expr operator call name argument_list argument expr name decl_stmt decl type name modifier name init expr operator call name argument_list argument expr name if condition expr operator name then block expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list function_decl type name name parameter_list comment type block decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name comment type block function type name name parameter_list block decl_stmt decl type name name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number operator literal type number then block type pseudo return expr literal type number return expr literal type number comment type block function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr name operator name operator name function type name name parameter_list block expr_stmt expr call name argument_list if condition expr call name argument_list then block expr_stmt expr name operator literal type string operator name return decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type number break if condition expr name then block expr_stmt expr name operator literal type string operator name return decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break else block expr_stmt expr name operator literal type string operator name return break if condition expr operator name then block expr_stmt expr name operator literal type string operator name return else block type pseudo break for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type string operator name return expr_stmt expr name operator literal type string operator name function type name name parameter_list block function type name name parameter_list block expr_stmt expr call name argument_list expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list 
