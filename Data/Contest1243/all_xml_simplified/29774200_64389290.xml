comment type block include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list block ifdef directive name comment type line expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive comment type line decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name comment type line decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl type ref prev name expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr operator name block type pseudo if condition expr operator name name index expr name operator name name index expr name operator operator literal type number operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr operator name then block expr_stmt expr name operator literal type string continue decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo continue if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name break expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator name comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line 
