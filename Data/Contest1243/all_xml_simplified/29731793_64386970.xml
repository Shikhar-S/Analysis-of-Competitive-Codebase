include directive file decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name operator name name argument_list type generic argument expr name name name index expr literal type number index expr name decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr name operator literal type char function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name decl_stmt decl type name name init expr name name index expr name decl type ref prev name init expr name name index expr name expr_stmt expr name name index expr literal type number index expr call name argument_list argument expr name operator call name argument_list argument expr name expr_stmt expr name name index expr literal type number index expr call name argument_list argument expr name operator call name argument_list argument expr name expr_stmt expr name name index expr literal type number index expr call name argument_list argument expr name operator call name argument_list argument expr name expr_stmt expr name name index expr literal type number index expr call name argument_list argument expr name operator call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name operator name argument_list argument expr literal type null expr_stmt expr name name operator name operator name while condition expr name operator block expr_stmt expr name name operator name operator name operator operator name operator literal type number operator operator operator name operator literal type number operator for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr literal type number index expr name operator call name argument_list expr_stmt expr name name index expr literal type number index expr name operator call name argument_list expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name expr_stmt expr operator name name index expr name expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name expr_stmt expr operator name name index expr name expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr operator name then block expr_stmt expr name name operator name operator literal type string operator literal type char continue for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr literal type number index expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr literal type number index expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name continue decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name if condition expr operator name name index expr literal type number index expr name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr literal type number index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name argument expr name elseif if condition expr operator name name index expr literal type number index expr name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr literal type number index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name else block expr_stmt expr name operator literal type boolean break expr_stmt expr name name index expr literal type number index expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr operator name then block expr_stmt expr name name operator name operator literal type string operator literal type char else block expr_stmt expr name name operator name operator literal type string operator literal type char expr_stmt expr name name operator name operator call name name operator name argument_list operator literal type char for control init expr name operator name operator name block expr_stmt expr name name operator name operator name name operator name operator literal type char operator name name operator name operator literal type char comment type line comment type line return expr literal type number 
