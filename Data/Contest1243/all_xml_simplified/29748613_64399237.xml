include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value typedef type name name name define directive macro name value typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block return expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string decl_stmt decl type name typename name name argument_list type generic argument expr name operator name name for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator operator name return expr name operator literal type string function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string decl_stmt decl type name typename name name argument_list type generic argument expr name operator name name for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator operator name return expr name operator literal type string function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator literal type string decl_stmt decl type name typename name name argument_list type generic argument expr name argument expr name operator name name for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator name name operator name operator literal type string operator name name operator name return expr name operator literal type string define directive macro name parameter_list parameter type name value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name while condition expr name operator name operator literal type number block expr_stmt expr name operator name operator name if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator name name index expr literal type number operator literal type string else block expr_stmt expr name operator literal type number operator literal type string return expr literal type number 
