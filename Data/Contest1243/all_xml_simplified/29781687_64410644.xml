include directive file define directive macro name value define directive macro name value define directive macro name value comment type line define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value comment type line define directive macro name value define directive macro name value define directive macro name value ifdef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier value define directive macro name value endif directive using namespace name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name typedef type name name name decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number comment type line function specifier type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number function specifier type name name parameter_list block decl_stmt decl type name name name asm expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block if condition expr call name argument_list argument expr operator name operator literal type string operator operator call name argument_list argument expr literal type string then block expr_stmt expr call name argument_list argument expr operator name operator literal type string operator operator call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr operator name operator literal type string operator operator call name argument_list argument expr literal type string argument expr name function type name name parameter_list parameter decl type specifier name name name index init expr literal type string block if condition expr call name argument_list argument expr name argument expr literal type string then block expr_stmt expr call name argument_list argument expr name argument expr literal type string argument expr name else block type pseudo expr_stmt expr name operator literal type string operator name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name range expr name name index expr name block while condition expr literal type boolean block decl_stmt decl type name name init expr call name name operator name argument_list argument expr name if condition expr name operator call name name operator name argument_list operator name operator operator name operator operator name operator name then block expr_stmt expr call name argument_list argument expr operator name else block type pseudo break expr_stmt expr name operator name function type name name parameter_list block ifdef directive name comment type line endif directive expr_stmt expr call name argument_list expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number return expr literal type number 
