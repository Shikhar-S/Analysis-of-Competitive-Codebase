include directive file using namespace name typedef type name name name name typedef type name name name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator literal type number expr_stmt expr name operator operator name operator name operator operator name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr name operator literal type string operator name elseif if condition expr call name name operator name argument_list operator literal type number then block decl_stmt decl type name name init expr name decl type ref prev name init expr name decl_stmt decl type name name init expr name name index expr name name index expr literal type number decl_stmt decl type name name init expr name name index expr name name index expr literal type number expr_stmt expr name name index expr name name index expr literal type number operator name expr_stmt expr name name index expr name name index expr literal type number operator name if condition expr name operator name then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator name operator expr name operator name decl_stmt decl type name name init expr name name index expr name name index expr literal type number decl_stmt decl type name name init expr name name index expr name name index expr literal type number expr_stmt expr name name index expr name name index expr literal type number operator name expr_stmt expr name name index expr name name index expr literal type number operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name 
