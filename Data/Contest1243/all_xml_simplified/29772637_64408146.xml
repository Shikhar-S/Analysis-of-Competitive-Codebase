include directive file include directive file include directive file using namespace name define directive macro name value decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue expr_stmt expr call name argument_list argument expr literal type string decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr name operator block if condition expr name name index expr name operator literal type char operator literal type number then block type pseudo continue decl_stmt decl type name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator expr name operator name name index expr name if condition expr name operator name operator name operator name then block type pseudo continue elseif if condition expr name operator name then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator expr name operator literal type number elseif if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number elseif if condition expr name operator name then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator expr name operator literal type number elseif if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number elseif if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name while condition expr operator call name name operator name argument_list block expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list operator literal type number argument expr call name name operator name argument_list operator literal type number expr_stmt expr call name name operator name argument_list operator expr call name name operator name argument_list return expr literal type number 
