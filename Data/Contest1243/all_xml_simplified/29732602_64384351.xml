include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name macro name argument_list argument argument expr_stmt expr name name index expr name operator literal type char operator macro name argument_list argument argument expr_stmt expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type boolean macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator literal type boolean break if condition expr name then block type pseudo continue decl_stmt decl type name name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean expr_stmt expr name operator call name argument_list argument expr name operator literal type number if condition expr call name argument_list argument expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr literal type number decl type ref prev name init expr name name index expr literal type number expr_stmt expr name operator operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator expr_stmt expr name operator operator ternary condition expr name then expr literal type string else expr literal type string operator operator name 
