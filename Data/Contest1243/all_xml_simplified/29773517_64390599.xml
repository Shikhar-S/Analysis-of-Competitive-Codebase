include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr literal type number operator name function type name name parameter_list block macro name argument_list argument argument literal type number argument literal type number if condition expr operator name name index expr name operator name name index expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr operator operator name name index expr name operator name name index expr name operator then block type pseudo continue macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name name index expr name operator literal type char operator expr name name index expr name operator name name index expr name operator literal type char expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator operator name name index expr name operator name operator operator operator name name index expr name operator name operator macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr operator name name index expr literal type number operator name if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr operator name name index expr literal type number operator name macro name argument_list argument argument literal type number argument literal type number literal type number expr_stmt expr name name index expr operator name operator block expr name name index expr name operator literal type number operator literal type number expr name name index expr name operator literal type number operator expr call name argument_list argument expr name name index expr name name index expr name operator name argument expr name name index expr name name index expr name operator name macro name argument_list argument argument literal type number argument literal type number literal type number expr_stmt expr name name index expr operator name operator block expr name name index expr name operator literal type number expr name name index expr name operator literal type number operator literal type number operator expr call name argument_list argument expr name name index expr name name index expr name operator name argument expr name name index expr name name index expr name operator name if condition expr name name index expr literal type number operator literal type number then block expr_stmt expr name name index expr operator name operator block expr name name index expr name name index expr literal type number expr name name index expr name name index expr literal type number operator expr call name argument_list argument expr name name index expr name name index expr name operator name argument expr name name index expr name name index expr name operator name expr_stmt expr name name index expr operator name operator block expr name name index expr name name index expr literal type number expr name name index expr name name index expr literal type number operator expr call name argument_list argument expr name name index expr name name index expr name operator name argument expr name name index expr name name index expr name operator name if condition expr name operator literal type number operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name function type name name parameter_list block for control init expr call name argument_list argument expr literal type string argument expr operator name condition expr name operator incr block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr name operator literal type number argument expr name operator literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name name index expr name operator literal type char operator expr name name index expr name operator name name index expr name operator literal type char operator expr name name index expr name name index expr name operator operator expr name name index expr name name index expr name operator expr_stmt expr call name argument_list 
