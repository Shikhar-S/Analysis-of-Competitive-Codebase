include directive file using namespace name using name init type name name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name init expr literal type string decl type ref prev name init expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator literal type number break if condition expr operator name then block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator literal type number break if condition expr operator name then block expr_stmt expr name operator literal type number break if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name argument expr name name operator name else block type pseudo expr_stmt expr call name argument_list argument expr literal type string 
