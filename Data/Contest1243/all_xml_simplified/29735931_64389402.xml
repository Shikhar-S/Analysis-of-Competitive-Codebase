include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name name index expr name operator name name index expr name expr_stmt expr operator name name index expr name operator expr name name index expr name operator literal type boolean function specifier type name name parameter_list parameter decl type name name block expr_stmt expr operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name while condition expr operator call name name operator name argument_list block expr_stmt expr name operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list for control init decl type name name range expr name name index expr name block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name init expr name name index expr literal type number condition expr name incr expr name operator name name index expr name block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr call name argument_list argument expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type boolean function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator literal type number operator expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr name operator literal type number operator expr name name index expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator literal type number while condition expr name name index expr name block expr_stmt expr name name index expr name name index expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number return expr literal type number 
