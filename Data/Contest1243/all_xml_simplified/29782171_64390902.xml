include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number argument expr name expr_stmt expr name operator operator name operator name operator operator name if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator literal type number argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr literal type number elseif if condition expr name operator literal type number then block type pseudo return expr literal type number else block type pseudo return expr operator operator call name argument_list argument expr name operator literal type number argument expr name operator name operator operator name operator function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr operator name operator name operator then expr name else expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr operator name operator name operator then expr name else expr name function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name init expr name expr_stmt expr name operator name expr_stmt expr name operator name return function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name using namespace name function type name name parameter_list block decl_stmt decl type name name name init expr literal type number comment type line while condition expr name operator block decl_stmt decl type name name decl type ref prev name init expr operator literal type number decl type ref prev name init expr literal type number expr_stmt expr name operator name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator operator name operator call name argument_list argument expr name operator literal type number incr expr operator name block if condition expr name operator name operator literal type number then block expr_stmt expr name operator name while condition expr name operator name operator literal type number block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean expr_stmt expr name operator name break if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name elseif if condition expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type char return expr literal type number 
