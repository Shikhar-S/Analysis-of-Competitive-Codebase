include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl_stmt decl type name name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name while condition expr name operator literal type number block while condition expr name name index expr name operator name operator name name index expr name operator name operator name name index expr name operator literal type number block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator name operator name name index expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr operator name operator name expr_stmt expr name name index expr name operator literal type number while condition expr name operator name operator literal type number block type pseudo expr_stmt expr operator name name index expr name operator expr name operator name decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr operator name operator name expr_stmt expr name name index expr name operator literal type number while condition expr name operator name operator literal type number block type pseudo expr_stmt expr operator name name index expr name operator expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init condition expr name incr expr name operator literal type number operator expr name operator name operator name block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name return expr name function name parameter_list block macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator name then block for control init decl type name name init expr literal type number operator name condition expr name operator literal type number incr expr name operator name block type pseudo expr_stmt expr name name index expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr operator name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument block if condition expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator name operator literal type number then block type pseudo continue decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr call name argument_list argument expr name name index expr name argument expr name operator name operator literal type number operator literal type number operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator name expr_stmt expr name operator name 
