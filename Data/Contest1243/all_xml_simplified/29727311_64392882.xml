include directive file using namespace name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name operator name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr name then block expr_stmt expr name operator literal type string else block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number break expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator name name index expr name operator name operator literal type char operator name name index expr name operator name operator literal type char return expr literal type number 
