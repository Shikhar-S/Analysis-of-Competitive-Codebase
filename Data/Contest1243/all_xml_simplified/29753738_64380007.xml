include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name decl type ref prev name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo break if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type string operator name else block if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name return expr literal type number 
