comment type block format doxygen include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number comment type block format doxygen decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name while condition expr name operator block expr_stmt expr name operator name operator operator name operator literal type number operator operator operator name operator literal type number operator expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean for control init expr name operator name operator name block if condition expr name name operator name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name continue expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name if condition expr operator name name index expr name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr name continue decl_stmt decl type name name init expr operator name name index expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name if condition expr operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator literal type char expr_stmt expr name operator literal type string operator operator name operator literal type number operator operator call name argument_list operator name operator operator name operator literal type string operator name return expr literal type number 
