include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break for control init decl type name name init expr name operator literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator name name index expr name operator name operator literal type boolean then block expr_stmt expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break if condition expr name operator literal type boolean then block type pseudo goto name label name empty_stmt comment type line if condition expr name operator literal type boolean then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator literal type string return expr literal type number 
