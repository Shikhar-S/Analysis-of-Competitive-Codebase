include directive file pragma directive name name name literal name using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name name index parameter decl type name name name index parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name operator name name index expr name expr_stmt expr name name index expr name operator name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number operator literal type number operator name operator literal type number operator literal type number then block type pseudo return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator literal type number block type pseudo if condition expr name operator name operator literal type number operator name operator operator name operator literal type number operator operator literal type number then block type pseudo return expr literal type number return expr literal type number function type name name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name operator name then block type pseudo expr_stmt expr name operator name operator name decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name return expr name decl_stmt decl type name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name operator name while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name return expr name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr literal type number name function type name name parameter_list block expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block type pseudo expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr operator name operator name operator name operator operator name incr expr name operator literal type number block type pseudo if condition expr operator name name index expr name then block type pseudo for control init condition expr name operator name incr expr name operator name operator name block type pseudo expr_stmt expr name name index expr name operator literal type boolean function type name name parameter_list block expr_stmt expr name expr_stmt expr name operator name operator expr call name argument_list if condition expr call name argument_list argument expr name operator name operator literal type number then block expr_stmt expr name operator name return expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name operator call name name operator name argument_list operator literal type number incr expr name operator block type pseudo if condition expr name operator name operator literal type number then block if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name argument_list argument expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type number return expr literal type number expr_stmt expr name operator operator call name name operator name argument_list return expr literal type number 
