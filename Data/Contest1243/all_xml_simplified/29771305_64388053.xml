include directive file using namespace name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value function type name name parameter_list block decl_stmt decl type name ifndef directive name name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive macro name block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator literal type string continue else block type pseudo expr_stmt expr name operator literal type string decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name expr_stmt expr name operator operator literal type number macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr call name name operator name argument_list macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char operator name operator name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr literal type number expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name name index expr literal type number argument expr name name index expr name name index expr literal type number expr_stmt expr name operator call name name operator name argument_list for control init expr name operator literal type number condition expr name operator name incr expr name operator literal type number block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name operator literal type number else block expr_stmt expr name operator call name name operator name argument_list for control init expr name operator literal type number condition expr name operator name incr expr name operator literal type number block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char operator name operator name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator call name name operator name argument_list for control init expr name operator literal type number condition expr name operator name incr expr name operator literal type number block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name operator literal type number expr_stmt expr name operator call name name operator name argument_list expr_stmt expr name operator name operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name return expr literal type number 
