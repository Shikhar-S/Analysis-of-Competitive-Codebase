comment type block include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name name operator name argument_list decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break if condition expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name else block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name else block break expr_stmt expr name operator operator ternary condition expr name operator name then expr literal type string else expr literal type string operator operator name if condition expr name operator name then block expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator literal type number operator name name operator name operator name 
