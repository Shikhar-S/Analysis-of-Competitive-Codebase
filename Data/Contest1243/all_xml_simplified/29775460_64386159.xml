include directive file using namespace name typedef type name name name name typedef type name name name typedef type name name name define directive macro name parameter_list value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name init expr name block expr_stmt expr name operator name operator expr name operator name operator expr name operator name return expr name decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list struct name block public type default function specifier type name name parameter_list parameter decl type name name block comment type line expr_stmt expr name operator literal type number expr_stmt expr name operator operator name operator operator name operator literal type number operator operator operator literal type number expr_stmt expr name operator operator name operator operator name operator literal type number operator operator operator literal type number return expr name operator operator name operator literal type number operator function type operator type name name name parameter_list parameter decl type name name specifier block decl_stmt decl specifier type specifier name name init expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list return expr call name argument_list argument expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr name if condition expr name operator literal type number then block expr_stmt expr name operator literal type number operator expr name return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr name operator name operator literal type number then block decl_stmt decl type name name init expr literal type number while condition expr name operator name operator literal type number block expr_stmt expr name operator expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr literal type number if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type number operator expr name else block expr_stmt expr name operator name name index expr literal type number operator name operator expr name expr_stmt expr name operator literal type string operator literal type number operator call name argument_list operator name operator literal type string return expr literal type number 
