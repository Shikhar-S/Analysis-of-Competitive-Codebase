include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr name operator name operator name operator name operator name operator name operator name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name operator name operator name argument expr name operator literal type number if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name decl type ref prev name macro name argument_list argument argument block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name name index expr name if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr name operator literal type string operator name elseif if condition expr operator operator name name index expr literal type number operator name name index expr literal type number operator name name index expr literal type number operator name name index expr literal type number operator then block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr literal type number init expr block macro name argument_list argument argument block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator macro name argument_list argument argument literal type number block if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type string operator name return decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name name index expr literal type number while condition expr name operator name block comment type line comment type line expr_stmt expr name operator name name index expr name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name break macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name break expr_stmt expr name operator comment type line comment type line comment type line expr_stmt expr name operator literal type string operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list return expr literal type number 
