include directive file using namespace name typedef type name name name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator operator name operator name operator name operator operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name return expr name comment type line function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator name operator name incr expr operator name block type pseudo if condition expr name operator name operator literal type number then block type pseudo return expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block decl_stmt decl type name name init expr call name argument_list operator operator name operator literal type number operator operator literal type number if condition expr call name argument_list argument expr name argument expr name operator literal type number then block type pseudo return expr literal type boolean comment type line return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator literal type number return expr name struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name block expr_stmt expr call name name operator name argument_list argument expr literal type number operator name operator literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number operator name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr operator name name index expr name then block type pseudo return expr_stmt expr name name index expr name operator name name index expr name if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type number operator literal type number operator name name index expr name operator expr name name index expr name operator literal type number operator literal type number operator name name index expr name expr_stmt expr name name index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name init expr literal type number parameter decl type name name init expr operator literal type number parameter decl type name name init expr literal type number block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name if condition expr name name argument_list type generic argument expr name operator name name then block type pseudo return if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr name operator name return expr call name argument_list argument expr name argument expr name argument expr name decl_stmt decl type name name init expr operator name operator name operator operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr name operator literal type number operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator literal type number argument expr name argument expr name operator literal type number operator literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator literal type number operator literal type number argument expr name name index expr name operator literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr literal type number parameter decl type name name init expr operator literal type number parameter decl type name name init expr literal type number block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name if condition expr name name argument_list type generic argument expr name operator name name then block type pseudo return expr name if condition expr name operator name operator name operator name then block type pseudo return expr name name index expr name decl_stmt decl type name name init expr operator name operator name operator operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name operator literal type number operator literal type number argument expr call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr name argument expr name operator literal type number operator literal type number return expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name constructor name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr operator name name index expr name operator name operator then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block comment type line expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name modifier name parameter decl type specifier name name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number argument expr literal type number for control init decl type name name range expr name name index expr name block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number for control init decl type name name range expr name block type pseudo expr_stmt expr name name index expr name operator literal type char operator for control init decl type name name range expr name block type pseudo expr_stmt expr name name index expr name operator literal type char operator for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr operator name then block expr_stmt expr name operator literal type string continue comment type line comment type line comment type line decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name name index expr name operator expr call name name operator name argument_list argument expr name comment type line comment type line comment type line comment type line comment type line comment type line define directive macro name value while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list if condition expr name name operator name operator name name operator name then block expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list continue decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block type pseudo if condition expr name name operator name operator name name index expr name operator name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr name name index expr name operator name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name macro name expr operator macro name argument_list expr_stmt expr name operator expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list continue for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block type pseudo if condition expr name name operator name operator name name index expr name operator name then block expr_stmt expr name operator name break comment type line expr_stmt expr call name name operator name argument_list argument expr block expr call name name operator name argument_list macro name expr operator macro name argument_list expr_stmt expr call name name operator name argument_list argument expr block expr call name name operator name argument_list expr name name index expr name expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator name operator name name operator name expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr name operator literal type number operator name then block type pseudo expr_stmt expr name operator literal type number if condition expr name then block expr_stmt expr name operator literal type string expr_stmt expr name operator name operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator literal type char else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
