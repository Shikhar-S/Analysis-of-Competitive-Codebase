include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name name name function specifier type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list while condition expr name operator block expr_stmt expr name operator call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name operator literal type number for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr operator name operator name name index expr name operator expr name name index expr name operator name name index expr name operator expr name name index expr name operator name for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator literal type number operator operator expr name name index expr name name index expr name operator literal type char operator literal type number operator decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type number break if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string continue for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr literal type number if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type specifier name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type number expr_stmt expr name name index expr operator name operator name name index expr name operator expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name then block type pseudo break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type number expr_stmt expr name name index expr operator name operator name name index expr name operator expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr operator name operator name name index expr name operator expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr name name index expr name return expr literal type number comment type block 
