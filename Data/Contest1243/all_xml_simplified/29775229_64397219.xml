include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr name operator expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr name operator expr name name index expr name name index expr name operator literal type char operator operator expr name name index expr name name index expr name operator literal type char operator for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name operator literal type number then block expr_stmt expr name operator literal type string return decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block while condition expr name name index expr name operator call name argument_list operator operator name name index expr name operator call name argument_list operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list while condition expr name name index expr name operator call name argument_list operator operator name name index expr name operator call name argument_list operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr name name index expr name operator literal type char decl type ref prev name init expr name name index expr name operator literal type char if condition expr name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number continue if condition expr name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number continue if condition expr name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr name name index expr name operator literal type char expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr name operator continue if condition expr name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr name name index expr name operator literal type char expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr name operator expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name continue expr_stmt expr name operator literal type string return if condition expr call name name operator name argument_list operator literal type number operator name then block expr_stmt expr name operator literal type string return expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator literal type char function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list 
