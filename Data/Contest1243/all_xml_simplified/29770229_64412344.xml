include directive file using namespace name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name name operator name argument_list decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type number break if condition expr name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string operator name decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator block expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name operator operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name operator operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type number if condition expr operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break expr_stmt expr name operator name operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator name return expr literal type number 
