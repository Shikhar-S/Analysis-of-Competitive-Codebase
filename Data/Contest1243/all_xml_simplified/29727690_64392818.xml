comment type line pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name include directive file define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number using namespace name define directive macro name ifdef directive name define directive macro name parameter_list parameter type modifier value function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name block expr_stmt expr name operator name operator literal type string operator name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name parameter decl type name modifier modifier name block decl_stmt decl type specifier name modifier name init expr call name argument_list argument expr name operator literal type number argument expr literal type char expr_stmt expr call name name operator name argument_list argument expr name argument expr name operator name operator literal type string operator name operator literal type string expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator else directive define directive macro name parameter_list parameter type modifier endif directive decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name operator name name index expr name operator name then block type pseudo return expr name return expr operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue if condition expr name name index expr name operator name name index expr name then block type pseudo continue if condition expr name name index expr name operator name then block type pseudo return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type char comment type line comment type line decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator if condition expr name operator name then block comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name operator name name index expr name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name if condition expr name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name else block expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name argument expr name else block comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name operator name name index expr name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name if condition expr name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name else block expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr operator name then block type pseudo expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name expr_stmt expr call name argument_list expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name return expr literal type number 
