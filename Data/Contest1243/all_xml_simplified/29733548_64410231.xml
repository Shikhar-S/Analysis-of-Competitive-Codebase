include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator name name index expr name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name range expr name name index expr name block expr_stmt expr name name index expr call name argument_list argument expr name operator for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr block decl_stmt decl type name name init expr call name argument_list argument expr operator name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr operator name argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator expr_stmt expr name operator else block type pseudo expr_stmt expr name operator for control init decl type name name range expr name name index expr name block type pseudo expr_stmt expr name name index expr call name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name operator name return expr literal type number 
