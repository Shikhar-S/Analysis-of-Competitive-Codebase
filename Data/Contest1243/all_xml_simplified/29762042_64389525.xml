include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name ifdef directive name define directive macro name parameter_list parameter type name modifier value else directive define directive macro name parameter_list parameter type name modifier endif directive ifdef directive name define directive macro name parameter_list parameter type name modifier value else directive define directive macro name parameter_list parameter type name modifier endif directive using namespace name comment type line struct name block public type default function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name operator literal type string return expr operator name decl name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name argument_list argument expr literal type number argument expr literal type number macro name argument_list argument argument block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type boolean macro name argument_list argument argument literal type number block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string if condition expr name operator name then block expr_stmt expr name operator literal type string continue decl_stmt decl type name name macro name argument_list argument argument block if condition expr name name index expr name operator name name index expr name then block type pseudo continue macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break else block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break expr_stmt expr name operator call name name operator name argument_list operator literal type string macro name argument_list argument argument block expr_stmt expr name operator operator name name index expr name operator name operator literal type number operator operator literal type string operator operator name name index expr name operator name operator literal type number operator operator literal type string 
