include directive file define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name operator literal type number function type name name parameter_list block decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr operator name name index expr literal type number operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr literal type number operator name name index expr name operator name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator name operator literal type number if condition expr name operator name name index expr name operator literal type number then block type pseudo break decl_stmt decl type name name init expr literal type number comment type line comment type line decl_stmt decl type name name name name index expr literal type number index expr literal type number decl_stmt decl type name name function type name name parameter_list parameter decl type name name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number decl_stmt decl type name name name init expr name for control init decl type name name init expr literal type number condition expr name name index expr name operator name operator name name index expr name incr expr name operator block expr_stmt expr name name index expr name index expr literal type number operator literal type number if condition expr name operator name name index expr name operator literal type number then block decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr name index expr literal type number operator name name index expr name while condition expr name operator name name index expr name operator literal type number block expr_stmt expr name name index expr name index expr literal type number operator expr_stmt expr name operator name name index expr name expr_stmt expr name operator decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block expr_stmt expr name name index expr name index expr literal type number operator name expr_stmt expr name name index expr name operator index expr literal type number operator literal type number return expr name decl_stmt decl type name name decl_stmt decl type name name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string argument expr name elseif if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr literal type number index expr literal type number else block type pseudo expr_stmt expr call name argument_list argument expr literal type string function type name name parameter_list block expr_stmt expr call name argument_list decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list comment type block 
