include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator literal type number for control init decl type name modifier name range expr name block expr_stmt expr name operator name for control init decl type name modifier name range expr name block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number for control init expr name operator name operator name block expr_stmt expr name name index expr name operator literal type char operator for control init expr name operator name operator name block expr_stmt expr name name index expr name operator literal type char operator for control init condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type string operator name break if condition expr name operator literal type number then block continue expr_stmt expr name operator literal type string operator name expr_stmt expr name operator literal type number while condition expr name operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator continue decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list operator name operator literal type number argument expr call name name operator name argument_list argument expr name name index expr name operator call name name operator name argument_list if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator continue expr_stmt expr name operator call name argument_list argument expr call name name operator name argument_list operator name operator literal type number argument expr call name name operator name argument_list argument expr name name index expr name operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr name operator expr_stmt expr name operator call name name operator name argument_list operator name for control init expr name operator name operator name block expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr literal type number return expr literal type number 
