include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator decl_stmt decl type name name init expr literal type boolean for control init decl type name name range expr name block type pseudo if condition expr name name operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name break expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator name expr_stmt expr call name argument_list argument expr call name name operator name argument_list operator operator name operator literal type number operator 
