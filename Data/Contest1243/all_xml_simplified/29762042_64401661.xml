include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name ifdef directive name define directive macro name parameter_list parameter type name modifier value else directive define directive macro name parameter_list parameter type name modifier endif directive ifdef directive name define directive macro name parameter_list parameter type name modifier value else directive define directive macro name parameter_list parameter type name modifier endif directive using namespace name comment type line struct name block public type default function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name operator literal type string return expr operator name decl name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list argument expr name argument expr literal type boolean expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type boolean macro name argument_list argument argument literal type number argument for control init decl type name name init expr literal type number operator name condition expr name operator name incr expr name operator name block type pseudo expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr literal type boolean macro name argument_list argument argument if condition expr name name index expr name operator name operator name operator name operator name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr name then block expr_stmt expr name operator name operator literal type string return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr literal type number operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr call name argument_list argument expr name argument expr name operator name operator name name index expr name then block expr_stmt expr name operator name operator literal type string return expr literal type number if condition expr call name argument_list argument expr name argument expr name operator name operator name name index expr name then block expr_stmt expr name operator name operator literal type string return expr literal type number expr_stmt expr name operator literal type string return expr literal type number 
