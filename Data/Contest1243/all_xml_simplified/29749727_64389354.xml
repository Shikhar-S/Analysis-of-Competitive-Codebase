comment type line comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value typedef type name name name define directive macro name value decl_stmt decl type name name name index expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type string operator name return for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name for control init expr name operator name operator literal type number condition expr name operator name operator name name index expr name operator name name index expr name incr expr name operator block type pseudo empty_stmt if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name continue for control init expr name operator name operator literal type number condition expr name operator name operator name name index expr name operator name name index expr name incr expr name operator block type pseudo empty_stmt expr_stmt expr call name argument_list argument expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type string operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name function type name name parameter_list block expr_stmt expr name ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list return expr literal type number 
