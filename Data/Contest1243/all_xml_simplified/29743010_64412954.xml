include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name function specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name decl_stmt decl type name name init expr literal type boolean expr_stmt expr name operator call name argument_list if condition expr name operator name then block type pseudo return expr literal type boolean while condition expr name operator literal type char operator operator name name argument_list type generic argument expr literal type char operator name literal type char operator block type pseudo expr_stmt expr name operator call name argument_list if condition expr name operator literal type char then block expr_stmt expr name operator literal type boolean expr_stmt expr name operator literal type number else block type pseudo expr_stmt expr name operator name operator literal type char while condition expr name operator call name argument_list operator expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator literal type number operator expr name operator name operator literal type char if condition expr name then block type pseudo expr_stmt expr name operator operator name return expr literal type boolean function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name name index expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name while condition expr call name name operator name argument_list operator literal type number block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name name argument_list type generic argument expr name operator name name expr_stmt expr call name name operator name argument_list for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr operator name name index expr name operator call name argument_list argument expr operator name then block expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr operator name expr_stmt expr call name name operator name argument_list argument expr operator name expr_stmt expr call name name operator name argument_list argument expr operator name for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr operator name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number operator name operator literal type number operator name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number operator literal type number operator name operator literal type number operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr operator name operator name decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block if condition expr name operator operator name operator operator literal type number operator name operator operator name operator literal type number operator operator literal type number then block type pseudo return expr literal type number return expr literal type number function type name name parameter_list block expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list operator literal type number return expr literal type number 
