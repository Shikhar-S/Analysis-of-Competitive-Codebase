include directive file using namespace name typedef type name name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator operator expr name name index expr name name index expr name operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr operator name block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr operator operator operator name name index expr name name index expr name operator call name argument_list operator if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name else block expr_stmt expr name operator operator operator operator name name index expr name name index expr name operator call name argument_list operator expr_stmt expr call name argument_list argument expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name range expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name argument expr name name operator name return expr literal type number 
