comment type line include directive file include directive file pragma directive name name name name name name pragma directive name name name name literal name using namespace name comment type line comment type line typedef type name name name typedef type name name name name typedef type name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name define directive macro name value define directive macro name value define directive macro name value function specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name operator name argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number argument expr name expr_stmt expr name operator operator name operator name operator operator name if condition expr name operator literal type number then block type pseudo return expr operator name operator name operator operator name else block type pseudo return expr name define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name name index parameter decl type name name block if condition expr name name index expr name operator name operator name then block type pseudo return expr name expr_stmt expr name name index expr name operator name operator call name argument_list argument expr name argument expr name name index expr name operator name return expr name name index expr name operator name function type name name parameter_list parameter decl type name name name index parameter decl type name name parameter decl type name name block if condition expr name name index expr name operator name operator name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator name operator name elseif if condition expr name name index expr name operator name operator name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator name operator name else block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name modifier name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name name argument_list type generic argument expr name operator name name comment type line expr_stmt expr name operator for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr block if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr operator name operator call name name operator name argument_list then block expr_stmt expr call name argument_list argument expr name argument expr operator name expr_stmt expr name operator call name name operator name argument_list else block type pseudo expr_stmt expr name operator comment type line comment type line comment type line comment type line comment type line function type name name parameter_list block expr_stmt expr name comment type line decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name while condition expr operator call name name operator name argument_list block expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr operator operator operator call name name operator name argument_list operator operator comment type line expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator call name name operator name argument_list operator literal type number operator name return expr literal type number 
