include directive file using namespace name using name init type name name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr call name name operator name argument_list incr expr operator name block expr_stmt expr name operator name name index expr name if condition expr name operator call name argument_list argument expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type string function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block decl_stmt decl type name name init expr name while condition expr name operator name operator literal type number block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block if condition expr name operator name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr name operator name operator name return expr literal type number decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block if condition expr name operator name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr name then block expr_stmt expr name operator name operator name else block expr_stmt expr name operator literal type number operator name 
