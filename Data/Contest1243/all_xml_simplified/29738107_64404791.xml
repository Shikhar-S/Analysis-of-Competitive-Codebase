include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator break if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string continue else block type pseudo expr_stmt expr call name argument_list argument expr literal type string decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name operator literal type number break comment type line comment type line expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator name name index expr name operator literal type number operator literal type string operator name name index expr name operator literal type number operator name 
