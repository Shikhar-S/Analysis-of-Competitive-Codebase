include directive file using namespace name define directive macro name value function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr literal type number for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type char operator for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char return expr ternary condition expr name then expr operator name else expr name define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name function name parameter_list block comment type line expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator literal type char operator name operator expr name operator literal type char operator name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr name operator literal type string operator literal type string continue elseif if condition expr name operator literal type number then block expr_stmt expr name operator literal type string operator literal type string continue elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr literal type boolean decl type ref prev name init expr literal type boolean decl_stmt decl type name name decl type ref prev name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break macro name argument_list argument argument argument literal type number if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean break expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean break if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type string operator literal type string else block type pseudo expr_stmt expr name operator literal type string operator literal type string comment type line 
