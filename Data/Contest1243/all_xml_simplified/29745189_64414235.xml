comment type block include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name name typedef type name name name typedef type name name name typedef type name name name name typedef type name name name typedef type name name name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number while condition expr operator call name argument_list argument expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator expr_stmt expr name operator call name argument_list expr_stmt expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block if condition expr operator name then block type pseudo return expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number elseif if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr operator name else block type pseudo expr_stmt expr call name argument_list argument expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator literal type boolean function type name name parameter_list parameter decl type name name block expr_stmt expr name operator decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list macro name argument_list argument argument literal type number argument block if condition expr operator name name index expr name name index expr name index expr name then block type pseudo expr_stmt expr name name index expr name name index expr name index expr name operator literal type boolean for control init decl type name name init expr name name index expr literal type number condition expr name incr expr name operator name name index expr name block if condition expr operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument block if condition expr operator name name index expr name name index expr name index expr name then block type pseudo expr_stmt expr name name index expr name name index expr name index expr name operator literal type boolean function type name name parameter_list block ifdef directive name comment type line comment type line endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name operator literal type number operator expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number while condition expr name name index expr name block expr_stmt expr name name index expr name name index expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number operator name return expr literal type number 
