comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number comment type line decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name comment type block decl_stmt decl type name name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name comment type block function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number comment type line comment type line comment type block expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr literal type boolean for control init condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name operator name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr name operator literal type boolean then block expr_stmt expr name operator literal type string operator name continue else block expr_stmt expr name operator literal type string operator name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name else block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name break comment type line expr_stmt expr name name operator name operator name operator literal type number expr_stmt expr name name operator name operator name decl_stmt decl type name name init expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name comment type line expr_stmt expr name name operator name operator name operator literal type number expr_stmt expr name name operator name operator name expr_stmt expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo continue expr_stmt expr name operator call name name operator name argument_list operator name decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator name return expr literal type number 
