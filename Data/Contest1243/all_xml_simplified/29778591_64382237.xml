include directive file include directive file include directive file using namespace name using namespace name typedef type name name name typedef type name name name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr name operator name operator name function type name name parameter_list block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr literal type number for control init decl type name name range expr name block expr_stmt expr name name index expr name operator literal type char operator for control init decl type name name range expr name block expr_stmt expr name name index expr name operator literal type char operator for control init decl type name name range expr name block if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator literal type boolean break if condition expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number break expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator call name argument_list argument expr name operator name for control init expr name operator name operator name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name function type name name parameter_list block decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list expr_stmt expr call name argument_list return expr literal type number 
