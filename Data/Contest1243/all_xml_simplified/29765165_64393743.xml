include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file pragma directive name name name name name name using namespace name define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value typedef type name name name typedef type name name name name typedef type name name decl_stmt decl type specifier name name init expr call name name name argument_list type generic argument expr name operator name argument_list decl_stmt decl type specifier name name init expr call name name name argument_list type generic argument expr name operator name argument_list decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type char condition expr name operator literal type char incr expr name operator block if condition expr operator name name index expr name operator call name argument_list operator name name index expr name operator call name argument_list operator operator literal type number then block expr_stmt expr name operator literal type string operator name return decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block continue decl_stmt decl type name name init expr name name index expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name else block expr_stmt expr name operator name name index expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name expr_stmt expr name name index expr name name index expr name operator literal type number operator call name argument_list argument expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator literal type number operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator expr_stmt expr name operator literal type string operator name operator call name name operator name argument_list operator name for control init expr name operator name operator name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name function specifier type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null function type name name parameter_list block expr_stmt expr call name argument_list decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list return expr literal type number 
