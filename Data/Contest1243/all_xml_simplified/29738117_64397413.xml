define directive macro name define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file typedef type name name name using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number comment type line struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name function type name name parameter_list block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr literal type number for control init expr name operator name operator name block expr_stmt expr operator name name index expr name operator literal type char for control init expr name operator name operator name block expr_stmt expr operator name name index expr name operator literal type char decl_stmt decl type name name init expr literal type boolean for control init expr name operator name operator name block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr name operator call name argument_list argument expr literal type number ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive comment type line ifndef directive name comment type line comment type line endif directive comment type line decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name operator name if condition expr operator call name argument_list then block expr_stmt expr name operator literal type string operator name continue expr_stmt expr name operator literal type string operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type boolean while condition expr name block expr_stmt expr name operator literal type boolean for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block decl_stmt decl type name name init expr name expr_stmt expr name operator decl_stmt decl type name name init expr call name name operator name argument_list for control init condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr operator name operator name name index expr operator name then block expr_stmt expr name operator literal type boolean expr_stmt expr name operator name break if condition expr name operator call name name operator name argument_list then block expr_stmt expr call name name operator name argument_list argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr name name index expr operator name argument expr name name index expr operator name expr_stmt expr call name name operator name argument_list argument expr name if condition expr name name index expr operator name operator name name index expr operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name break while condition expr operator call name name operator name argument_list block expr_stmt expr call name argument_list argument expr name name index expr operator call name name operator name argument_list argument expr name name index expr operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr operator call name name operator name argument_list argument expr operator call name name operator name argument_list expr_stmt expr name operator literal type boolean while condition expr name block expr_stmt expr name operator literal type boolean for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block decl_stmt decl type name name init expr name expr_stmt expr name operator decl_stmt decl type name name init expr call name name operator name argument_list for control init condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr operator name operator name name index expr operator name then block expr_stmt expr name operator literal type boolean expr_stmt expr name operator name break if condition expr name operator call name name operator name argument_list then block expr_stmt expr call name name operator name argument_list argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr name name index expr operator name argument expr name name index expr operator name expr_stmt expr call name name operator name argument_list argument expr name if condition expr name name index expr operator name operator name name index expr operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name break expr_stmt expr name operator call name name operator name argument_list operator name for control init expr name operator name operator name block expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator name return expr literal type number 
