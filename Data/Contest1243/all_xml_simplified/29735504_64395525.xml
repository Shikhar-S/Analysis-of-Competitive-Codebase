include directive file using namespace name define directive macro name value decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name parameter decl type name name argument_list type generic argument expr name name block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char operator for control init decl type name name init expr literal type number condition expr name operator literal type char operator literal type char incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name parameter decl type name name argument_list type generic argument expr name name block decl_stmt decl type name name init expr literal type number while condition expr name name index expr name operator name name index expr name operator name operator name block type pseudo expr_stmt expr name operator if condition expr name operator name then block type pseudo return expr literal type number decl_stmt decl type name name init expr name decl type ref prev name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name operator expr name operator literal type boolean if condition expr name then block decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number return expr call name argument_list argument expr name argument expr name operator literal type number else block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number return expr call name argument_list argument expr name argument expr name operator literal type number function type name name parameter_list block define directive macro name value comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator literal type char operator literal type char incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number if condition expr operator call name argument_list argument expr name argument expr name then block expr_stmt expr name operator literal type string continue expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr name argument expr name if condition expr call name name operator name argument_list operator literal type number operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator literal type string return expr literal type number 
