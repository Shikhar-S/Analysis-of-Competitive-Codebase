include directive file using namespace name function template parameter_list parameter type name name type name name operator name name parameter_list parameter decl type name name block decl_stmt decl type name name operator name name expr_stmt expr name operator name return expr call name name operator name argument_list function type operator template parameter_list parameter type name name parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator literal type char return expr name function type operator template parameter_list parameter type name name parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator name name operator name operator name name operator name return expr name function type operator template parameter_list parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block if condition expr call name name operator name argument_list then block return expr name expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name init expr operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator operator name operator literal type char return expr name function type operator template parameter_list parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block for control init expr name operator name operator name block expr_stmt expr name operator name return expr name function type operator template parameter_list parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block if condition expr call name name operator name argument_list then block return expr name expr_stmt expr name operator operator call name name operator name argument_list for control init decl type name name init expr operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator literal type char operator operator name return expr name function type operator template parameter_list parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block if condition expr call name name operator name argument_list then block return expr name expr_stmt expr name operator operator call name name operator name argument_list for control init decl type name name init expr operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator literal type char operator operator name return expr name function type operator template parameter_list parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block if condition expr call name name operator name argument_list then block return expr name expr_stmt expr name operator operator call name name operator name argument_list for control init decl type name name init expr operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator literal type char operator operator name return expr name function type operator template parameter_list parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block if condition expr call name name operator name argument_list then block return expr name expr_stmt expr name operator operator call name name operator name argument_list for control init decl type name name init expr operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator literal type char operator operator name return expr name function type operator template parameter_list parameter type name name parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block if condition expr call name name operator name argument_list then block return expr name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator literal type char return expr name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value decl_stmt decl type name name argument_list type generic argument expr name name init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number comment type line comment type line struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator name operator literal type number argument expr name name index expr name operator name while condition expr name operator name name index expr name operator name operator name name index expr name name index expr name operator name name index expr name operator name name index expr name block type pseudo expr_stmt expr name name index expr name operator if condition expr name operator name name index expr name operator literal type number operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name operator name name index expr name operator literal type number return expr name decl_stmt decl type name name init expr literal type number operator literal type number function type name name name parameter_list parameter decl type name name name parameter decl type name name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator literal type number return expr name function type name name name parameter_list parameter decl type name name name block return expr call name argument_list argument expr name argument expr name operator literal type number function type name name name parameter_list parameter decl type name name name parameter decl type name name name block return expr name operator call name argument_list argument expr name operator name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator operator ternary condition expr name operator literal type number then expr literal type string else expr literal type string operator expr_stmt expr call name argument_list argument expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name parameter_list block comment type line comment type line comment type line comment type line comment type line decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name while condition expr name operator name operator literal type number block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr name operator literal type number then block expr_stmt expr name operator literal type number return expr literal type number if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr name operator operator call name name operator name argument_list else block type pseudo expr_stmt expr name operator literal type number return expr literal type number 
