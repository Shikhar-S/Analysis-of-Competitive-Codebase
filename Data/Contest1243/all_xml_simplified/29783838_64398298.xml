include directive file include directive file include directive file decl_stmt decl type specifier name name init expr literal type number operator literal type number using namespace name decl_stmt decl type name name name decl_stmt decl type name name argument_list type generic argument expr name name name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator literal type number then block type pseudo return expr name return expr operator name name index expr name operator call name argument_list argument expr name name index expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list block expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator literal type number return expr literal type number decl_stmt decl type name name name init expr name for control init decl type name name name init expr literal type number condition expr name operator name operator name incr expr operator name block if condition expr name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name while condition expr name operator name operator literal type number block type pseudo expr_stmt expr name operator name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator name name index expr literal type number return expr literal type number decl_stmt decl type name name init expr name name index expr literal type number comment type line decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator operator literal type number comment type line for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name operator name name index expr name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr operator call name name argument_list argument expr name operator name name index expr name operator operator name if condition expr name operator name then block expr_stmt expr name operator expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name operator literal type number then block type pseudo break expr_stmt expr name operator name return expr literal type number 
