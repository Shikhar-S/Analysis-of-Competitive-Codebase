include directive file using namespace name decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr literal type number decl_stmt decl type name name decl type ref prev name function type name name parameter_list block expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr operator name then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type char operator name expr_stmt expr name operator literal type char operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name if condition expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name continue expr_stmt expr name operator operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name if condition expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name continue decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name name index expr name operator literal type char operator name name index expr name operator literal type char operator name then block decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator name if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator name if condition expr name operator operator literal type number operator name operator operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator literal type number break if condition expr operator name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string if condition expr call name name operator name argument_list operator literal type number operator name then block expr_stmt expr name operator literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator literal type string return expr literal type number 
