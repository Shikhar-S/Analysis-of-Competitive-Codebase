include directive file typedef type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list block decl_stmt decl type name name argument_list argument expr literal type number decl type ref prev name argument_list argument expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name operator name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name operator name name argument_list type generic argument expr name operator name name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list expr_stmt expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name argument_list argument expr call name argument_list decl type ref prev name argument_list argument expr call name argument_list expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr name name index expr name operator name operator expr name name index expr name operator literal type number decl_stmt decl type name name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block decl_stmt decl type name name argument_list argument expr name name index expr name operator name decl type ref prev name argument_list argument expr call name argument_list argument expr name expr_stmt expr operator name name index expr name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block decl_stmt decl type name name argument_list argument expr name name index expr name operator name decl type ref prev name argument_list argument expr call name argument_list argument expr name expr_stmt expr operator name name index expr name if condition expr operator call name name operator name argument_list then block expr_stmt expr name operator call name name operator name argument_list argument expr call name argument_list argument expr name for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr operator name operator operator name then block type pseudo continue expr_stmt expr name name index expr operator name operator name name index expr operator name expr_stmt expr name name index expr operator name operator operator name expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr operator name for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr operator name expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list operator literal type number return expr literal type number 
