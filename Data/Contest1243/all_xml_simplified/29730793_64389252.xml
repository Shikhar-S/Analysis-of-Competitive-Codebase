include directive file using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr literal type number for control init expr name operator name operator name block type pseudo expr_stmt expr name name index expr name operator for control init expr name operator name operator name block type pseudo expr_stmt expr name name index expr name operator decl_stmt decl type name name init expr literal type boolean for control init expr name operator name operator name block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr operator name then block expr_stmt expr name operator literal type string continue decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name operator literal type char continue decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator literal type char break if condition expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator literal type char break expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type char return expr literal type number 
