include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name parameter_list parameter type name value function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr literal type number for control init decl type name name range expr name block expr_stmt expr operator name name index expr name operator literal type char for control init decl type name name range expr name block expr_stmt expr operator name name index expr name operator literal type char decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init decl type name name range expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name operator literal type number argument expr name name operator name operator literal type number return expr literal type number 
