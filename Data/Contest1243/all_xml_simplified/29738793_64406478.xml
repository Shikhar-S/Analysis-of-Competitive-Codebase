include directive file using namespace name comment type block typedef type name name name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block return expr call name argument_list argument expr name operator name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr operator name operator name operator decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number macro name argument_list argument argument block expr_stmt expr name name index expr name name index expr name operator literal type char operator expr_stmt expr name name index expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr literal type boolean macro name argument_list argument argument literal type number block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr operator name then block expr_stmt expr name operator literal type string continue decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number macro name argument_list argument argument block expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr name expr_stmt expr name name index expr name name index expr name operator literal type char operator call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr name name index expr name operator literal type char expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name continue decl_stmt decl type name name init expr name name index expr name operator literal type char expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr operator name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr name name index expr name operator literal type char decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name else block decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr name name index expr name operator literal type char expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name decl_stmt decl type name name init expr name name index expr name operator literal type char expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name operator literal type number operator name expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type string return expr literal type number 
