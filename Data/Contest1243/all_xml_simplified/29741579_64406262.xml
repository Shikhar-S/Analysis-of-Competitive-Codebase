include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value using namespace name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator call name argument_list argument expr literal type number operator name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name name index expr name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator literal type number operator name continue decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name operator name operator literal type number operator literal type number then block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator literal type boolean break if condition expr name then block type pseudo continue decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name if condition expr name name index expr name operator name name index expr name then block type pseudo continue for control init decl type name name init expr name operator literal type number condition expr name operator call name name operator name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name break if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name break for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator literal type boolean break if condition expr name then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type char operator name name index expr name operator name operator literal type number operator name return expr literal type number 
