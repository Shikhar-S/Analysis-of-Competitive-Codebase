comment type line include directive file using namespace name typedef type name name name typedef type name name name typedef type name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list block decl_stmt decl type name comment type line name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block comment type line if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name comment type line if condition expr name operator operator literal type number then block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator literal type number else block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name else block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr operator name then block type pseudo expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type char return expr literal type number 
