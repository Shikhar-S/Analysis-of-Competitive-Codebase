include directive file using namespace name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name name block expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block for control init decl type name name range expr name block type pseudo expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name parameter type name name type name name argument_list type generic argument expr name argument expr name name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr call name argument_list argument expr name name operator name operator name name operator name argument expr name name operator name operator name name operator name function type operator template parameter_list parameter type name name parameter type name name type name name argument_list type generic argument expr name argument expr name name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr call name argument_list argument expr name name operator name operator name name operator name argument expr name name operator name operator name name operator name function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name comment type block if condition expr call name name operator name argument_list then block type pseudo return expr literal type boolean if condition expr call name name operator name argument_list operator literal type number then block decl_stmt decl type name name init expr name name index expr literal type number decl_stmt decl type name name init expr name name index expr literal type number if condition expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name operator name operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name then block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name return expr literal type number 
