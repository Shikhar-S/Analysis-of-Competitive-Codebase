<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29738446_64397317.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro>  <cpp:value>long long int</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>mod</name> <init>= <expr><literal type="number">1e9</literal> <operator>+</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>ll</name></type> <name>k</name></decl>,<decl><type ref="prev"/><name>n</name></decl>,<decl><type ref="prev"/><name>q</name></decl>,<decl><type ref="prev"/><name>num</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>,<decl><type ref="prev"/><name>t</name></decl>;</decl_stmt>
<comment type="line">// 	t=1;</comment>
	<while>while<condition>(<expr><name>k</name><operator>--</operator></expr>)</condition>
	<block>{
	    <expr_stmt><expr><name>num</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	    <decl_stmt><decl><type><name>ll</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>;</decl_stmt>
	    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>s</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
	    <decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>ll</name></expr></argument>&gt;</argument_list></name></type> <name>A</name><argument_list>(<argument><expr><literal type="number">26</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>,<decl><type ref="prev"/><name>B</name><argument_list>(<argument><expr><literal type="number">26</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>,<decl><type ref="prev"/><name>S</name><argument_list>(<argument><expr><name>n</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>,<decl><type ref="prev"/><name>T</name><argument_list>(<argument><expr><name>n</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>
	    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	    <block>{
	        <expr_stmt><expr><name><name>A</name><index>[<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><literal type="char">'a'</literal></expr>]</index></name><operator>++</operator></expr>;</expr_stmt><expr_stmt><expr><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><literal type="char">'a'</literal></expr>;</expr_stmt>
	        <expr_stmt><expr><name><name>B</name><index>[<expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><literal type="char">'a'</literal></expr>]</index></name><operator>++</operator></expr>;</expr_stmt><expr_stmt><expr><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><literal type="char">'a'</literal></expr>;</expr_stmt>
	    }</block></for>
	    <decl_stmt><decl><type><name>bool</name></type> <name>y</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
	    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><literal type="number">26</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	    <block>{
	        <expr_stmt><expr><name>y</name> <operator>=</operator> <name>y</name> <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name><name>A</name><index>[<expr><name>i</name></expr>]</index></name><operator>+</operator><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal><operator>)</operator></expr>;</expr_stmt>
	    }</block></for>
	    <if>if<condition>(<expr><operator>!</operator><name>y</name></expr>)</condition><then>
	    <block>{
	        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"No\n"</literal></expr>;</expr_stmt>
	        <continue>continue;</continue>
	    }</block></then></if>
	    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"Yes\n"</literal></expr>;</expr_stmt>
	    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">2</literal><operator>*</operator><name>n</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	    <decl_stmt><decl><type><name>int</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	   <comment type="line">// cout&lt;&lt;2*n&lt;&lt;endl;</comment>
	    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	    <block>{
	        <decl_stmt><decl><type><name>int</name></type> <name>j</name></decl>;</decl_stmt>
	        <for>for<control>(<init><expr><name>j</name><operator>=</operator><name>i</name></expr>;</init><condition><expr><name>j</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
	        <block>{
	            <if>if<condition>(<expr><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>S</name><index>[<expr><name>j</name></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if>
	        }</block></for>
	        <if>if<condition>(<expr><name>j</name><operator>&lt;</operator><name>n</name></expr>)</condition><then>
	        <block>{
	            <expr_stmt><expr><name>ans</name><operator>+=</operator><literal type="number">2</literal></expr>;</expr_stmt>
    	        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>j</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>j</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    	        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>j</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    	        <expr_stmt><expr><name><name>S</name><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><name><name>T</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>
    	        <expr_stmt><expr><name><name>T</name><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    	        <expr_stmt><expr><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>	            
	        }</block></then>
	        <else>else
	        <block>{
	            <for>for<control>(<init><expr><name>j</name><operator>=</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>j</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
    	        <block>{
    	            <if>if<condition>(<expr><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>T</name><index>[<expr><name>j</name></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if>
    	        }</block></for>
    	        <if>if<condition>(<expr><name>j</name><operator>&lt;</operator><name>n</name></expr>)</condition><then>
    	        <block>{
    	            <expr_stmt><expr><name>ans</name><operator>+=</operator><literal type="number">1</literal></expr>;</expr_stmt>
        	        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>j</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
        	       <comment type="line">// cout&lt;&lt;i+1&lt;&lt;" "&lt;&lt;j+1&lt;&lt;endl;</comment>
        	        <expr_stmt><expr><name><name>T</name><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        	        <expr_stmt><expr><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>	            
    	        }</block></then></if>
	        }</block></else></if>
	       <comment type="line">// for(int i=0;i&lt;n;i++)</comment>
	       <comment type="line">// {</comment>
	       <comment type="line">//     cout&lt;&lt;S[i];</comment>
	       <comment type="line">// }</comment>
	       <comment type="line">// cout&lt;&lt;endl;</comment>
	       <comment type="line">// for(int i=0;i&lt;n;i++)</comment>
	       <comment type="line">// {</comment>
	       <comment type="line">//     cout&lt;&lt;T[i];</comment>
	       <comment type="line">// }</comment>
	       <comment type="line">// cout&lt;&lt;endl;</comment>
	    }</block></for>
	    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><literal type="number">2</literal><operator>*</operator><name>n</name><operator>-</operator><name>ans</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	    <block>{
	        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"1 1 \n"</literal></expr>;</expr_stmt>
	    }</block></for>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
