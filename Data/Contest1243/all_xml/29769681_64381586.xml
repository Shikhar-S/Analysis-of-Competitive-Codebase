<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29769681_64381586.cpp"><comment type="block">/*#include&lt;iostream&gt;
#include&lt;cmath&gt;
#include&lt;cstdlib&gt;
#include&lt;algorithm&gt;
#include&lt;cstring&gt;
#include&lt;string&gt;
#include&lt;cstdio&gt;
#include&lt;stack&gt;
#include&lt;map&gt;
#include&lt;queue&gt;
#include&lt;vector&gt;*/</comment>
<comment type="block">/*
lower_boundæ¯å¤§äºç­äº
upper_boundæ¯å¤§äº
setå­åç´ 
mapææ å°
*/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>MAXN</name><init>=<expr><literal type="number">500010</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>K</name></decl>,<decl><type ref="prev"/><name>N</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>string</name></type> <name>S</name></decl>,<decl><type ref="prev"/><name>T</name></decl>;</decl_stmt>
<function><type><name>void</name></type> <name>prepare</name><parameter_list>()</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>cnt</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>N</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>S</name><operator>&gt;&gt;</operator><name>T</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>char</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>,<decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>N</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<if>if<condition>(<expr><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then><block>{
			<expr_stmt><expr><name>cnt</name><operator>++</operator></expr>;</expr_stmt>
			<if>if<condition>(<expr><name>cnt</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>a</name><operator>=</operator><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name></expr><operator>,</operator><expr><name>b</name><operator>=</operator><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></then></if>
			<if>if<condition>(<expr><name>cnt</name><operator>==</operator><literal type="number">2</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>c</name><operator>=</operator><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name></expr><operator>,</operator><expr><name>d</name><operator>=</operator><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></then></if>
		}</block></then></if>
	}</block></for>
	<if>if<condition>(<expr><name>cnt</name><operator>==</operator><literal type="number">2</literal><operator>&amp;&amp;</operator><operator>(</operator><operator>(</operator><name>a</name><operator>==</operator><name>c</name><operator>&amp;&amp;</operator><name>b</name><operator>==</operator><name>d</name><operator>)</operator><operator>)</operator></expr>)</condition><then><block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"Yes"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	}</block></then>
	<else>else <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"No"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></else></if>
}</block></function>

<function><type><name>void</name></type> <name>solve</name><parameter_list>()</parameter_list><block>{

}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>K</name></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>K</name><operator>--</operator></expr>)</condition><block>{
	<expr_stmt><expr><call><name>prepare</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>solve</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
