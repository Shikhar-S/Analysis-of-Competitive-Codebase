<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29765231_64390112.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<typedef>typedef <type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>vi</name>;</typedef>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>tc</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>tc</name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>tc</name><operator>--</operator></expr>)</condition> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>, <decl><type ref="prev"/><name>t</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>vi</name></type> <name>diffs</name></decl>;</decl_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
            <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name><name>diffs</name><operator>.</operator><name>emplace_back</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>
        <decl_stmt><decl><type><name>bool</name></type> <name>ans</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
        <if>if<condition>(<expr><call><name>size</name><argument_list>(<argument><expr><name>diffs</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>ans</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><call><name>size</name><argument_list>(<argument><expr><name>diffs</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>x</name> <init>= <expr><name><name>diffs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>y</name> <init>= <expr><name><name>diffs</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>x</name></expr>]</index></name> <operator>==</operator> <name><name>s</name><index>[<expr><name>y</name></expr>]</index></name> <operator>&amp;&amp;</operator> <name><name>t</name><index>[<expr><name>x</name></expr>]</index></name> <operator>==</operator> <name><name>t</name><index>[<expr><name>y</name></expr>]</index></name></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>ans</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
            }</block></then></if>
        }</block></then></if>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><operator>(</operator><ternary><condition><expr><name>ans</name></expr>?</condition><then><expr><literal type="string">"Yes"</literal></expr></then><else>:<expr><literal type="string">"No"</literal></expr></else></ternary><operator>)</operator><operator>&lt;&lt;</operator><literal type="string">"\n"</literal></expr>;</expr_stmt>
    }</block></while>
}</block></function>
</unit>
