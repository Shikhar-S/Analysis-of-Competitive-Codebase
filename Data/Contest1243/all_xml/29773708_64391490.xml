<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29773708_64391490.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cmath&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>N</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>N</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>i</name></decl>,<decl><type ref="prev"/><name>sq</name><init>=<expr><call><name>sqrt</name><argument_list>(<argument><expr><name>N</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>a</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>b</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">2</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>sq</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
		<if>if<condition>(<expr><name>N</name><operator>%</operator><name>i</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block>{
			<if>if<condition>(<expr><name>a</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block>{
				<expr_stmt><expr><name>a</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
				<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>tmp</name><init>=<expr><name>N</name><operator>/</operator><name>i</name></expr></init></decl>;</decl_stmt>
				<if>if<condition>(<expr><name>tmp</name><operator>%</operator><name>a</name><operator>!=</operator><literal type="number">0</literal></expr>)</condition><then> <block>{
					<expr_stmt><expr><name>b</name><operator>=</operator><name>tmp</name></expr>;</expr_stmt>
					<break>break;</break>
				}</block></then></if>
			}</block></then> <else>else <block>{
				<if>if<condition>(<expr><name>i</name><operator>%</operator><name>a</name><operator>!=</operator><literal type="number">0</literal></expr>)</condition><then> <block>{
					<expr_stmt><expr><name>b</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
					<break>break;</break>
				}</block></then></if>
				<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>tmp</name><init>=<expr><name>N</name><operator>/</operator><name>i</name></expr></init></decl>;</decl_stmt>
				<if>if<condition>(<expr><name>tmp</name><operator>%</operator><name>a</name><operator>!=</operator><literal type="number">0</literal></expr>)</condition><then> <block>{
					<expr_stmt><expr><name>b</name><operator>=</operator><name>tmp</name></expr>;</expr_stmt>
					<break>break;</break>
				}</block></then></if>
			}</block></else></if>
		}</block></then></if>
	}</block></for>
	<if>if<condition>(<expr><name>a</name><operator>&amp;&amp;</operator><name>b</name></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<if>if<condition>(<expr><operator>!</operator><name>a</name><operator>&amp;&amp;</operator><operator>!</operator><name>b</name></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>N</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	}</block></then> <else>else <block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>a</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	}</block></else></if>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
