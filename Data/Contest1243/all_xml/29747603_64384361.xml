<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29747603_64384361.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name><name>num</name><index>[<expr><literal type="number">100010</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>tmp</name></decl>;</decl_stmt> <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%lld"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr><operator>,</operator><expr><name>tmp</name><operator>=</operator><name>n</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init><condition><expr><literal type="number">1ll</literal><operator>*</operator><name>i</name><operator>*</operator><name>i</name><operator>&lt;=</operator><name>tmp</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><if>if<condition>(<expr><name>tmp</name><operator>%</operator><name>i</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
		<block>{<expr_stmt><expr><name><name>num</name><index>[<expr><operator>++</operator><name><name>num</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name><operator>=</operator><name>i</name></expr>;</expr_stmt><while>while<condition>(<expr><name>tmp</name><operator>%</operator><name>i</name><operator>==</operator><literal type="number">0</literal></expr>)</condition> <block type="pseudo"><expr_stmt><expr><name>tmp</name><operator>/=</operator><name>i</name></expr>;</expr_stmt></block></while>}</block></then></if></block></for>
	<if>if<condition>(<expr><name>tmp</name><operator>!=</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>num</name><index>[<expr><operator>++</operator><name><name>num</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>]</index></name><operator>=</operator><name>tmp</name></expr>;</expr_stmt></block></then></if>
	<if>if<condition>(<expr><name><name>num</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%lld\n"</literal></expr></argument>,<argument><expr><name><name>num</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>
	<else>else <block type="pseudo"><expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></else></if>
}</block></function></unit>
