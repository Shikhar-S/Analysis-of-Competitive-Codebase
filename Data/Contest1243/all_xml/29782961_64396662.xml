<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29782961_64396662.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;set&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vector"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"queue"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;math.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <comment type="line">//int n;</comment>
    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>n</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
    <comment type="line">//int pr = n;</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>del</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <comment type="line">//vector&lt;int&gt; del;</comment>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><call><name>sqrt</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
        <if>if <condition>(<expr><name>n</name> <operator>%</operator> <name>i</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>del</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
            <break>break;</break>
<comment type="line">//            while(n % i == 0) {</comment>
<comment type="line">//                n /= i;</comment>
<comment type="line">//            }</comment>
<comment type="line">//            del.push_back(i);</comment>
        }</block></then></if>
    }</block></for>
    <if>if <condition>(<expr><name>del</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><then> <block>{
        <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>n</name></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then> <else>else <block>{
        <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>delBig</name> <init>= <expr><name>n</name><operator>/</operator><name>del</name></expr></init></decl>;</decl_stmt>
        <while>while<condition>(<expr><name>delBig</name> <operator>%</operator> <name>del</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{
            <expr_stmt><expr><name>delBig</name> <operator>/=</operator> <name>del</name></expr>;</expr_stmt>
        }</block></while>
        <if>if <condition>(<expr><name>delBig</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>del</name></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        }</block></else></if>
    }</block></else></if>

<comment type="line">//    if (del.empty()) {</comment>
<comment type="line">//        cout &lt;&lt; n;</comment>
<comment type="line">//        return 0;</comment>
<comment type="line">//    }</comment>
<comment type="line">//    if (del.size() &gt; 1) {</comment>
<comment type="line">//        cout &lt;&lt; 1;</comment>
<comment type="line">//    } else {</comment>
<comment type="line">//        int delS = pr/del[0];</comment>
<comment type="line">//</comment>
<comment type="line">//    }</comment>
}</block></function>
</unit>
