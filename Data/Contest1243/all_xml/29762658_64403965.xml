<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29762658_64403965.cpp">    <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX</name></cpp:macro> <cpp:value>10e15+1</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIN</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD</name></cpp:macro> <cpp:value>998244353</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FOR</name><parameter_list>(<parameter><type><name>i</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro>    <cpp:value>for(int i=a;i&lt;b;i++)</cpp:value></cpp:define>
    <using>using <namespace>namespace <name>std</name>;</namespace></using>
    <typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
    <typedef>typedef <type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>ll</name></expr></argument>&gt;</argument_list></name></type> <name>vll</name>;</typedef>
    <typedef>typedef <type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>vi</name>;</typedef>
    <typedef>typedef <type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>ll</name></expr></argument>,<argument><expr><name>ll</name></expr></argument>&gt;</argument_list></name></type> <name>pll</name>;</typedef>
    <typedef>typedef <type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>double</name></expr></argument>,<argument><expr><name>double</name></expr></argument>&gt;</argument_list></name></type> <name>ii</name>;</typedef>
    <typedef>typedef <type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>pll</name></expr></argument>&gt;</argument_list></name></type> <name>vpll</name>;</typedef>
    <decl_stmt><decl><type><name>ll</name></type> <name>N</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>ll</name></type> <name>M</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>ll</name></type> <name>Q</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>ll</name></type> <name>T</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>vll</name></type> <name>vl</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>string</name></type> <name>s1</name></decl>,<decl><type ref="prev"/><name>s2</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>ll</name></expr></argument>&gt;</argument_list></name></type> <name>cunt</name></decl>;</decl_stmt>
    <function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
       <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>N</name></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
       <for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>*</operator><name>i</name><operator>&lt;=</operator><name>N</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
       <block>{
           <if>if<condition>(<expr><name>N</name><operator>%</operator><name>i</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
           <block>{
              <if>if<condition>(<expr><name>ans</name><operator>==</operator><literal type="number">0</literal><operator>||</operator><name>ans</name><operator>==</operator><name>i</name></expr>)</condition><then>
              <block>{
                  <expr_stmt><expr><name>ans</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
                  <expr_stmt><expr><name>N</name><operator>/=</operator><name>i</name></expr>;</expr_stmt>
                  <expr_stmt><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
              }</block></then>
              <else>else
              <block>{
                  <expr_stmt><expr><name>ans</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
              }</block></else></if>
           }</block></then></if>
       }</block></for>


       <if>if<condition>(<expr><name>ans</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block>{
           <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>N</name></expr>;</expr_stmt>
       }</block></then>
       <elseif>else <if>if<condition>(<expr><name>N</name><operator>!=</operator><name>ans</name></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">1</literal></expr>;</expr_stmt>}</block></then></if></elseif>
       <else>else <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name></expr>;</expr_stmt></block></else></if>
    }</block></function>

</unit>
