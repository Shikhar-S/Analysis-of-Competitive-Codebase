<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29730441_64392074.cpp">

<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name> <init>= <expr><literal type="number">1000</literal> <operator>+</operator> <literal type="number">10</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>

<function><type><name>bool</name></type> <name>check</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>pos</name></decl></parameter>)</parameter_list><block>{
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name> <operator>-</operator> <name>pos</name> <operator>+</operator> <literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;=</operator> <name>pos</name></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="boolean">true</literal></expr>;</return></block></then></if></block></for>
    <return>return <expr><literal type="boolean">false</literal></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>T</name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>T</name><operator>--</operator></expr>)</condition>
    <block>{
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
         <block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>a</name> <operator>+</operator> <literal type="number">1</literal> <operator>+</operator> <name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>l</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, <decl><type ref="prev"/><name>r</name> <init>= <expr><name>n</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>ans</name></decl>;</decl_stmt>
        <if>if<condition>(<expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <name><name>a</name><index>[<expr><name>n</name></expr>]</index></name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
            <continue>continue;</continue>
        }</block></then></if>
        <while>while<condition>(<expr><name>l</name> <operator>&lt;</operator> <name>r</name></expr>)</condition>
        <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>mid</name> <init>= <expr><operator>(</operator><name>l</name> <operator>+</operator> <name>r</name><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
            <if>if<condition>(<expr><call><name>check</name><argument_list>(<argument><expr><name>mid</name></expr></argument>)</argument_list></call></expr>)</condition><then>
                <block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>=</operator> <name>mid</name></expr><operator>,</operator> <expr><name>l</name> <operator>=</operator> <name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></then>
            <else>else <block type="pseudo"><expr_stmt><expr><name>r</name> <operator>=</operator> <name>mid</name></expr>;</expr_stmt></block></else></if>
        }</block></while>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    }</block></while>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>


<comment type="block">/*#include &lt;stdio.h&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;
using namespace std ;

vector &lt;int&gt; V1 , V2 ;

int n ;
char s[10004] , t[10005] ;
int cnts[27] , cntt[27] ;
int main ()
{
    int dasdsadaslfssafasfafadfsdlgsfgsdaggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggsdagsag = 6;
    int T ;
    scanf ("%d" , &amp;T) ;
    while (T--)
    {
        int dasdsadaslfssafasfafadfsdlgsfgsdaggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggsdagsagdasdsadaslfssafasfafadfsdlgsfgsdaggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggsdagsagdasdsadaslfssafasfafadfsdlgsfgsdaggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggsdagsagdasdsadaslfssafasfafadfsdlgsfgsdaggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggsdagsag = 5;
        V1.clear() ;
        V2.clear() ;
        int dsasdadasfadfkfhasjdhfjkasdhkfjhaskjdfhkjasdhfjkasdhjkfhjkadhffkjashdfkjhzsdkjfhajksdhfjkadshfkjasdhfkjahsdkjfhasjkdhfkasjdhfjkasdhkjffhasjkhfkjasdhfkjasdhh = 444;
        s[0] = '+' ;
        scanf ("%d" , &amp;n) ;
        scanf ("%s" , s + 1) ;
        scanf ("%s" , t + 1) ;
        for (int i = 1 ; i &lt;= n ; ++i)
        {
            int aslfjalkdsjflkasdjgjadslkgjaslkddjglkasjlgkjalksjdlkfjaslkgjlkasjgksajglkjaslkgjaksl= 6;
            if (s[i] == t[i])
                continue ;
            int dasklflkasjflkajflksjdlkgjasdlkddgjlkasdjglksjglkasjlkgjlkasjglkasjgklasjdlkgjsdlkjflkasdjdlkgjaslkglkasjglkasjglkasdjglkasjlkgjaslkjglkasjgklajs = 6;
            bool flag = true ;
            for (int j = i + 1 ; j &lt;= n ; ++j)
            {
                if (s[j] == t[i])
                {
                    V1.push_back(j) ;
                    V2.push_back(j) ;
                    swap(s[j] , t[j]) ;
                }
                int adklalkdfjlkasdjflkasdjflkasjdlkfjaslkdjflkasjdlkfjasdlkfjlksdajdflkasjdkfjasdkfjalskdjflkadsjflkasdjlkasjdlkfjasdlkgjglkasjglkasddjflkfasdlkfmsdlkafmlak = 9;
                if (t[j] == t[i])
                {
                    V1.push_back(i) ;
                    V2.push_back(j) ;
                    swap(s[i] , t[j]) ;
                    flag = false ;
                    break ;
                }
            }
            if (flag)
            {
                s[0] = '-' ;
                break ;
            }
//            printf ("s : %s\n" , s + 1) ;
//            printf ("t : %s\n" , t + 1) ;
        }
        if (s[0] == '-')
        {
            printf ("No\n") ;
            continue ;
        }
        int daslkfjsaklfjlkasjflkajdkgjasdlkdjflkadjflkadjglkjasdlkgjjaslkjglkasjglkasjlkgjaslkgjlakfjglkasdjglkjaslkjgjlkasjgalk = 6;
        printf ("Yes\n") ;
        printf ("%d\n" , V1.size()) ;
        for (int i = 0 ; i &lt; V1.size() ; ++i)
        {
            printf ("%d %d\n" , V1[i] , V2[i]) ;
        }
        int asdaslkfjlaksjflkasdjlkgjadlkjglkadsjflkjadslkfjlkasdjfjlkasdjflkasjdlkfjasdlkfjelkjflkasdjflkmadlkfmlkawemfklamkldfmldamflkadmsflk = 9;
    }
}
*/</comment>


<comment type="line">//#include&lt;bits/stdc++.h&gt;</comment>
<comment type="line">//</comment>
<comment type="line">//using namespace std;</comment>
<comment type="line">//const int maxn = 1000 + 10;</comment>
<comment type="line">//int a[maxn];</comment>
<comment type="line">//int n;</comment>
<comment type="line">//</comment>
<comment type="line">//bool check(int pos){</comment>
<comment type="line">//    for(int i = 1; i &lt;= n - pos + 1; i++) if(a[i] &gt;= pos) return true;</comment>
<comment type="line">//    return false;</comment>
<comment type="line">//}</comment>
<comment type="line">//</comment>
<comment type="line">//int main(){</comment>
<comment type="line">//    int T;</comment>
<comment type="line">//    cin&gt;&gt;T;</comment>
<comment type="line">//    while(T--){</comment>
<comment type="line">//        cin&gt;&gt;n;</comment>
<comment type="line">//        for(int i = 1; i &lt;= n; i++) cin&gt;&gt;a[i];</comment>
<comment type="line">//        sort(a + 1, a + 1 + n);</comment>
<comment type="line">//        int l = 1, r = n;</comment>
<comment type="line">//        int ans;</comment>
<comment type="line">//        if(a[1] == a[n]){</comment>
<comment type="line">//            cout&lt;&lt;a[1]&lt;&lt;endl;</comment>
<comment type="line">//            continue;</comment>
<comment type="line">//        }</comment>
<comment type="line">//        while(l &lt; r){</comment>
<comment type="line">//            int mid = (l + r) &gt;&gt; 1;</comment>
<comment type="line">//            if(check(mid)) ans = mid, l = mid + 1;</comment>
<comment type="line">//            else r = mid;</comment>
<comment type="line">//        }</comment>
<comment type="line">//        cout&lt;&lt;ans&lt;&lt;endl;</comment>
<comment type="line">//    }</comment>
<comment type="line">//    return 0;</comment>
<comment type="line">//}</comment>
<comment type="line">//</comment>
</unit>
