<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29774763_64388526.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><name>main</name><parameter_list>()</parameter_list><block>{
<decl_stmt><decl><type><name>int</name></type> <name>t</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
<while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition><block>{
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>string</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>;</decl_stmt>
<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>h</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>x</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>ind</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>pas</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<for>for<control>(<init><decl><type><name>int</name></type> <name>k</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>k</name><operator>&lt;</operator><call><name><name>a</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition><incr><expr><name>k</name><operator>++</operator></expr></incr>)</control><block>{
    <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>k</name></expr>]</index></name><operator>!=</operator><name><name>b</name><index>[<expr><name>k</name></expr>]</index></name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>ind</name><operator>++</operator></expr>;</expr_stmt>
        <if>if<condition>(<expr><name>ind</name><operator>==</operator><literal type="number">3</literal></expr>)</condition><then><block>{

         <break>break;</break>
        }</block></then></if>
        <if>if<condition>(<expr><name>ind</name><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
            <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>x</name></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><name>k</name></expr>]</index></name> <operator>&amp;&amp;</operator> <name><name>b</name><index>[<expr><name>x</name></expr>]</index></name><operator>==</operator><name><name>b</name><index>[<expr><name>k</name></expr>]</index></name></expr>)</condition><then><block>{
              <expr_stmt><expr><name>pas</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
            }</block></then></if>
        }</block></then></if>
        <if>if<condition>(<expr><name>ind</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>x</name><operator>=</operator><name>k</name></expr>;</expr_stmt>

        }</block></then></if>
    }</block></then></if>
}</block></for>
<if>if<condition>(<expr><name>ind</name><operator>==</operator><literal type="number">3</literal></expr>)</condition><then>
    <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then>
<elseif>else
<if>if<condition>(<expr><name>ind</name><operator>==</operator><literal type="number">0</literal> <operator>||</operator> <name>pas</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then>
    <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then></if></elseif>
<else>else
<block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></else></if>
}</block></while>
 <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
