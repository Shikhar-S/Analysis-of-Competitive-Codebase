<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29761260_64388932.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>tests</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>tests</name></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>test</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>test</name><operator>&lt;</operator><name>tests</name></expr>;</condition> <incr><expr><name>test</name><operator>++</operator></expr></incr>)</control> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>string</name></type> <name>s1</name></decl>, <decl><type ref="prev"/><name>s2</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>s1</name> <operator>&gt;&gt;</operator> <name>s2</name></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>int</name></type> <name>i1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><name>i1</name> <operator>&lt;</operator> <name>n</name></expr>)</condition> <block>{
            <if>if <condition>(<expr><name><name>s1</name><index>[<expr><name>i1</name></expr>]</index></name> <operator>!=</operator> <name><name>s2</name><index>[<expr><name>i1</name></expr>]</index></name></expr>)</condition><then>
                <block type="pseudo"><break>break;</break></block></then></if>
            <expr_stmt><expr><name>i1</name><operator>++</operator></expr>;</expr_stmt>
        }</block></while>

        <if>if <condition>(<expr><name>i1</name> <operator>==</operator> <name>n</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"NO"</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
            <continue>continue;</continue>
        }</block></then></if>

        <decl_stmt><decl><type><name>int</name></type> <name>i2</name> <init>= <expr><name>i1</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

        <while>while <condition>(<expr><name>i2</name> <operator>&lt;</operator> <name>n</name></expr>)</condition> <block>{
            <if>if <condition>(<expr><name><name>s1</name><index>[<expr><name>i2</name></expr>]</index></name> <operator>!=</operator> <name><name>s2</name><index>[<expr><name>i2</name></expr>]</index></name></expr>)</condition><then>
                <block type="pseudo"><break>break;</break></block></then></if>
            <expr_stmt><expr><name>i2</name><operator>++</operator></expr>;</expr_stmt>
        }</block></while>

        <if>if <condition>(<expr><name>i2</name> <operator>==</operator> <name>n</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"NO"</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
            <continue>continue;</continue>
        }</block></then></if>

        <decl_stmt><decl><type><name>char</name></type> <name>buf</name></decl>;</decl_stmt>

        <expr_stmt><expr><name>buf</name> <operator>=</operator> <name><name>s1</name><index>[<expr><name>i1</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>s1</name><index>[<expr><name>i1</name></expr>]</index></name> <operator>=</operator> <name><name>s2</name><index>[<expr><name>i2</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>s2</name><index>[<expr><name>i2</name></expr>]</index></name> <operator>=</operator> <name>buf</name></expr>;</expr_stmt>

        <if>if <condition>(<expr><name>s1</name> <operator>==</operator> <name>s2</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"YES"</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"NO"</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
        }</block></else></if>
    }</block></for>
}</block></function></unit>
