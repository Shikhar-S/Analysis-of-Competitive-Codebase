<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29773384_64373499.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name> ;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>MAX</name> <init>= <expr><literal type="number">1005</literal></expr></init></decl> ;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl> ;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>arr</name><index>[<expr><name>MAX</name></expr>]</index></name></decl> ;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
	<expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl> ;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr> ;</expr_stmt>
	<while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition>
	<block>{
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr> ;</expr_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
			<block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name></expr> ;</expr_stmt></block></for>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1000</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">1</literal></expr> ;</condition> <incr><expr><operator>--</operator><name>i</name></expr></incr>)</control>
		<block>{
			<decl_stmt><decl><type><name>int</name></type> <name>cnt</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt>
			<for>for<control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><operator>++</operator><name>j</name></expr></incr>)</control>
			<block>{
				<if>if<condition>(<expr><name><name>arr</name><index>[<expr><name>j</name></expr>]</index></name> <operator>&gt;=</operator> <name>i</name></expr>)</condition><then>
					<block type="pseudo"><expr_stmt><expr><name>cnt</name><operator>++</operator></expr> ;</expr_stmt></block></then></if>
			}</block></for>
			<if>if<condition>(<expr><name>cnt</name> <operator>&gt;=</operator> <name>i</name></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>i</name><operator>&lt;&lt;</operator><literal type="string">"\n"</literal></expr> ;</expr_stmt>
				<break>break ;</break>
			}</block></then></if>
		}</block></for>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr> ;</return>
}</block></function></unit>
