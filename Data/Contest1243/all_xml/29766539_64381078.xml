<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29766539_64381078.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>mod</name> <init>= <expr><call><name>pow</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>,<argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>k</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>k</name><operator>--</operator></expr>)</condition>
    <block>{
        <decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>,<decl><type ref="prev"/><name>t</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>flag</name><init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
                <block type="pseudo"><continue>continue;</continue></block></then>
            <else>else
            <block>{
                <expr_stmt><expr><name>flag</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
                <break>break;</break>
            }</block></else></if>
        }</block></for>
        <if>if<condition>(<expr><name>flag</name><operator>==</operator><operator>-</operator><literal type="number">1</literal></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"Yes"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then>
        <else>else
        <block>{
            <decl_stmt><decl><type><name>char</name></type> <name>a</name><init>=<expr><name><name>s</name><index>[<expr><name>flag</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>char</name></type> <name>b</name><init>=<expr><name><name>t</name><index>[<expr><name>flag</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>flag2</name><init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
            <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><name>flag</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
            <block>{
                <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
                <block>{
                    <if>if<condition>(<expr><name>flag2</name><operator>==</operator><operator>-</operator><literal type="number">1</literal></expr>)</condition><then>
                        <block type="pseudo"><expr_stmt><expr><name>flag2</name><operator>=</operator><name>i</name></expr>;</expr_stmt></block></then>
                    <else>else
                        <block type="pseudo"><expr_stmt><expr><name>flag2</name><operator>=</operator><operator>-</operator><literal type="number">2</literal></expr>;</expr_stmt></block></else></if>
                }</block></then></if>
                
            }</block></for>
            <if>if<condition>(<expr><name>flag2</name><operator>==</operator><operator>-</operator><literal type="number">2</literal></expr>)</condition><then>
                <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"No"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then>
            <else>else
            <block>{
                <expr_stmt><expr><name><name>t</name><index>[<expr><name>flag</name></expr>]</index></name><operator>=</operator><name><name>s</name><index>[<expr><name>flag2</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>s</name><index>[<expr><name>flag2</name></expr>]</index></name><operator>=</operator><name>b</name></expr>;</expr_stmt>
                <if>if<condition>(<expr><name>s</name><operator>==</operator><name>t</name></expr>)</condition><then>
                    <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"Yes"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then>
                <else>else
                    <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"No"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></else></if>
            }</block></else></if>
        }</block></else></if>
    }</block></while>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
