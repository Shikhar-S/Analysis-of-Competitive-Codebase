<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29768877_64392235.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name> <init>= <expr><literal type="number">1e6</literal> <operator>+</operator> <literal type="number">10</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>sq</name></decl>,<decl><type ref="prev"/><name><name>stk</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>top</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>sq</name> <operator>=</operator> <call><name>sqrt</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	<while>while<condition>(<expr><operator>(</operator><name>sq</name><operator>-</operator><literal type="number">1</literal><operator>)</operator> <operator>*</operator> <operator>(</operator><name>sq</name><operator>-</operator><literal type="number">1</literal><operator>)</operator> <operator>&gt;=</operator> <name>n</name></expr>)</condition>
		<block type="pseudo"><expr_stmt><expr><name>sq</name><operator>--</operator></expr>;</expr_stmt></block></while>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>sq</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<if>if<condition>(<expr><name>n</name> <operator>%</operator> <name>i</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name><name>stk</name><index>[<expr><name>top</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt></block></then></if>
		<while>while<condition>(<expr><name>n</name> <operator>%</operator> <name>i</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
			<block type="pseudo"><expr_stmt><expr><name>n</name> <operator>=</operator> <name>n</name> <operator>/</operator> <name>i</name></expr>;</expr_stmt></block></while>
	}</block></for>
	<if>if<condition>(<expr><name>n</name> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><then>
		<block type="pseudo"><expr_stmt><expr><name><name>stk</name><index>[<expr><name>top</name><operator>++</operator></expr>]</index></name> <operator>=</operator> <name>n</name></expr>;</expr_stmt></block></then></if>
	<if>if<condition>(<expr><name>top</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
		<block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name><name>stk</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt></block></then>
	<else>else
		<block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt></block></else></if>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>

</unit>
