<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29782554_64397973.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cmath&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>minx</name></decl>,<decl><type ref="prev"/><name>lin</name></decl>,<decl><type ref="prev"/><name>sum</name></decl>,<decl><type ref="prev"/><name>ok</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%lld"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>minx</name><operator>=</operator><literal type="number">100000000000000</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>ok</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><call><name>sqrt</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name>n</name><operator>%</operator><name>i</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
            <if>if<condition>(<expr><name>minx</name><operator>==</operator><literal type="number">100000000000000</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>minx</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>lin</name><operator>=</operator><name>n</name><operator>/</operator><name>i</name></expr>;</expr_stmt>
                <if>if<condition>(<expr><name>lin</name><operator>%</operator><name>minx</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                    <continue>continue;</continue>
                }</block></then>
                <else>else<block>{
                    <expr_stmt><expr><name>ok</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
                    <break>break;</break>
                }</block></else></if>
            }</block></then>
            <else>else<block>{
                <if>if<condition>(<expr><name>i</name><operator>%</operator><name>minx</name><operator>!=</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                    <expr_stmt><expr><name>ok</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
                    <break>break;</break>
                }</block></then></if>
                <expr_stmt><expr><name>lin</name><operator>=</operator><name>n</name><operator>/</operator><name>i</name></expr>;</expr_stmt>
                <if>if<condition>(<expr><name>lin</name><operator>%</operator><name>minx</name><operator>!=</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                    <expr_stmt><expr><name>ok</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt><break>break;</break>
                }</block></then></if>
            }</block></else></if>
        }</block></then></if>
        
    }</block></for>
    <if>if<condition>(<expr><name>minx</name><operator>==</operator><literal type="number">100000000000000</literal></expr>)</condition><then><block>{
        <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%lld\n"</literal></expr></argument>,<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then>
    <elseif>else <if>if<condition>(<expr><name>ok</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
        <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if></elseif>
    <else>else<block>{
        <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%lld\n"</literal></expr></argument>,<argument><expr><name>minx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
