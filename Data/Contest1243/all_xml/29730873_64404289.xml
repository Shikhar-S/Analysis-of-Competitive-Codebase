<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29730873_64404289.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>G</name><init>=<expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>NN</name><init>=<expr><literal type="number">1000005</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>,<decl><type ref="prev"/><name>k</name></decl>,<decl><type ref="prev"/><name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>,<decl><type ref="prev"/><name>cnt</name></decl>,<decl><type ref="prev"/><name>val</name></decl>,<decl><type ref="prev"/><name>num</name></decl>,<decl><type ref="prev"/><name>tmp</name></decl>,<decl><type ref="prev"/><name>Max</name></decl>;</decl_stmt>
<comment type="line">//vector&lt;Edge&gt; ve[NN];</comment>
<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><name>NN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>p</name><index>[<expr><literal type="number">100100</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>,<decl><type ref="prev"/><name>s2</name></decl>;</decl_stmt>


<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line">//cin.tie(0);cout.tie(0);</comment>
	<for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>NN</name><operator>-</operator><literal type="number">4</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<if>if<condition>(<expr><operator>!</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>p</name><index>[<expr><operator>++</operator><name>num</name></expr>]</index></name><operator>=</operator><name>i</name></expr>;</expr_stmt></block></then></if>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>num</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block>{
			<if>if<condition>(<expr><name>i</name><operator>*</operator><name><name>p</name><index>[<expr><name>j</name></expr>]</index></name><operator>&lt;=</operator><name>NN</name><operator>-</operator><literal type="number">4</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name><operator>*</operator><name><name>p</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then>
			<else>else <block type="pseudo"><break>break;</break></block></else></if>
		}</block></for>
	}</block></for>
	<comment type="line">//for(int i=1;i&lt;=num;i++) cout&lt;&lt;p[i]&lt;&lt;' ';</comment>
	<comment type="line">//int T;cin&gt;&gt;T;</comment>
	<while>while<condition>(<expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>)</condition><block>{
		<decl_stmt><decl><type><name>ll</name></type> <name>flag</name><init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>num</name><operator>&amp;&amp;</operator><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;=</operator><call><name>sqrt</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
			<if>if<condition>(<expr><name>n</name><operator>%</operator><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
				<while>while<condition>(<expr><name>n</name><operator>%</operator><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="number">0</literal></expr>)</condition><block>{
					<expr_stmt><expr><name>n</name><operator>/=</operator><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
				}</block></while>
				<if>if<condition>(<expr><name>n</name><operator>!=</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>flag</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt></block></then>
				<else>else <block type="pseudo"><expr_stmt><expr><name>flag</name><operator>=</operator><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></else></if>
				<break>break;</break>
			}</block></then></if>
		}</block></for>
		<if>if<condition>(<expr><name>flag</name><operator>==</operator><operator>-</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>n</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then>
		<elseif>else <if>if<condition>(<expr><name>flag</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then></if></elseif>
		<else>else <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>flag</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></else></if>
	}</block></while>
}</block></function>


</unit>
