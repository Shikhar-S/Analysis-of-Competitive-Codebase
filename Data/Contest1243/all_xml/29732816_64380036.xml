<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29732816_64380036.cpp"><comment type="block">/*================= *\
|  ID : aman__guta__ |
|      LANG: C++     |
\*==================*/</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long int</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mk</name></cpp:macro> <cpp:value>make_pair</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fs</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sc</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mod</name></cpp:macro> <cpp:value>1000000007</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JOKER</name></cpp:macro> <cpp:value>ios_base::sync_with_stdio (false) ; cin.tie(0) ; cout.tie(0) ;</cpp:value></cpp:define>
<decl_stmt><decl><type><name>int</name></type> <name><name>fib</name><index>[<expr><literal type="number">100010</literal></expr>]</index></name></decl>;</decl_stmt>
<function><name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>JOKER</name>
    <name>int</name></type> <name>t</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition>
    <block>{
       <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
       <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>,<decl><type ref="prev"/><name>t</name></decl>;</decl_stmt>
       <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
       <decl_stmt><decl><type><name>int</name></type> <name>a</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>b</name></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>char</name></type> <name>p</name></decl>,<decl><type ref="prev"/><name>q</name></decl>,<decl><type ref="prev"/><name>r</name></decl>,<decl><type ref="prev"/><name>s1</name></decl>;</decl_stmt>
       <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
       <block>{
        <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>a</name><operator>++</operator></expr>;</expr_stmt>
        }</block></then></if>
       }</block></for>
       <if>if<condition>(<expr><name>a</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
       <block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES\n"</literal></expr>;</expr_stmt>
       }</block></then>
       <elseif>else <if>if<condition>(<expr><name>a</name><operator>!=</operator><literal type="number">2</literal></expr>)</condition><then>
       <block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO\n"</literal></expr>;</expr_stmt>
        <continue>continue;</continue>
       }</block></then></if></elseif>
       <else>else 
       <block>{
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>p</name><operator>=</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt><expr><name>q</name><operator>=</operator><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
                <break>break;</break>
            }</block></then></if>
        }</block></for>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&gt;=</operator><literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>
        <block>{
            <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>r</name><operator>=</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt><expr><name>s1</name><operator>=</operator><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
                <break>break;</break>
            }</block></then></if>
        }</block></for>
        <if>if<condition>(<expr><name>p</name><operator>==</operator><name>r</name> <operator>&amp;&amp;</operator> <name>q</name><operator>==</operator><name>s1</name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES\n"</literal></expr>;</expr_stmt>
        }</block></then>
        <else>else
        <block>{
            <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO\n"</literal></expr>;</expr_stmt>
        }</block></else></if>
       }</block></else></if>
    }</block></while>
    <expr_stmt><expr><name>cerr</name><operator>&lt;&lt;</operator><literal type="string">"Time elapsed : "</literal><operator>&lt;&lt;</operator><call><name>clock</name><argument_list>()</argument_list></call><operator>*</operator><literal type="number">1000.0</literal><operator>/</operator><name>CLOCKS_PER_SEC</name><operator>&lt;&lt;</operator><literal type="string">"ms"</literal><operator>&lt;&lt;</operator><literal type="char">'\n'</literal></expr>;</expr_stmt> 
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
