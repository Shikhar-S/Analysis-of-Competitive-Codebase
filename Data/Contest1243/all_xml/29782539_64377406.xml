<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29782539_64377406.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>T</name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>T</name><operator>--</operator></expr>)</condition> <block>{
      <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
      <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>

      <decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>a</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></decl>;</decl_stmt>
      <for>for <control>(<init><expr><name>auto</name><operator>&amp;</operator> <name>i</name><operator>:</operator> <name>a</name></expr></init>)</control> <block>{
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>i</name></expr>;</expr_stmt>
      }</block></for>

      <decl_stmt><decl><type><name>int</name></type> <name>sol</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
      <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>n</name></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{
	<if>if <condition>(<expr><call><name>count_if</name><argument_list>(<argument><expr><call><name>begin</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>end</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lambda><capture>[<argument><modifier>&amp;</modifier></argument>]</capture><parameter_list>(<parameter><decl/></parameter></parameter_list>auto <name>num</name></lambda></expr></argument>)</argument_list></call></expr></condition><then><block>{<return>return <expr><name>num</name> <operator>&gt;=</operator> <name>i</name></expr>;</return>}</block></then></if>)</block> <expr_stmt><expr><operator>&gt;=</operator> <name>i</name></expr></expr_stmt></for>)</block> <block>{
	    <expr_stmt><expr><name>sol</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
	    <break>break;</break>
	  }</block></while>
      }</block></function>
      <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>sol</name> <operator>&lt;&lt;</operator> <literal type="char">'\n'</literal></expr>;</expr_stmt>
    }
}
</unit>
