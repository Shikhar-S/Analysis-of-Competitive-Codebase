<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29754366_64375095.cpp">	<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
	<using>using <namespace>namespace <name>std</name>;</namespace></using> 
	<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
	<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
	<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>N</name></cpp:macro> <cpp:value>1000005</cpp:value></cpp:define>
	<decl_stmt><decl><type><name>ll</name></type> <name><name>a</name><index>[<expr><name>N</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>b</name><index>[<expr><name>N</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>c</name><index>[<expr><name>N</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>fq</name><index>[<expr><name>N</name></expr>]</index></name><init>=<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>,<decl><type ref="prev"/><name><name>f</name><index>[<expr><name>N</name></expr>]</index></name><init>=<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>,<decl><type ref="prev"/><name>T</name></decl>,<decl><type ref="prev"/><name>TT</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>p</name><init>=<expr><call>(<name>ll</name>)<argument_list>(<argument><expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<function><type><name>bool</name></type> <name>mycmp</name><parameter_list>(<parameter><decl><type><name>ll</name></type> <name>x</name></decl></parameter>,<parameter><decl><type><name>ll</name></type> <name>y</name></decl></parameter>)</parameter_list><block>{
		<return>return <expr><operator>(</operator><name>x</name><operator>&gt;</operator><name>y</name><operator>)</operator></expr>;</return>
	}</block></function>
	<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{	
		<expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
		<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>ONLINE_JUDGE</name></cpp:ifndef> 
		<expr_stmt><expr><call><name>freopen</name><argument_list>(<argument><expr><literal type="string">"i.txt"</literal></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>, <argument><expr><name>stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>	
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>TT</name></expr>;</expr_stmt>
		<for>for<control>(<init><expr><name>T</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>T</name><operator>&lt;=</operator><name>TT</name></expr>;</condition><incr><expr><name>T</name><operator>++</operator></expr></incr>)</control><block>{
			<decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>i</name></decl>,<decl><type ref="prev"/><name>j</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>l</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>r</name></decl>,<decl><type ref="prev"/><name>k</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>m</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>max_ele</name><init>=<expr><name>INT_MIN</name></expr></init></decl>,<decl><type ref="prev"/><name>min_ele</name><init>=<expr><name>INT_MAX</name></expr></init></decl>,<decl><type ref="prev"/><name>sum</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>,<decl><type ref="prev"/><name>z</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>,<decl><type ref="prev"/><name>s1</name></decl>,<decl><type ref="prev"/><name>s2</name></decl>,<decl><type ref="prev"/><name>s3</name></decl>;</decl_stmt>
			<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
			<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
				<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>a</name><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
				<expr_stmt><expr><name>ans</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><call><name>min</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><operator>(</operator><name>n</name><operator>-</operator><name>i</name><operator>)</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
		}</block></for>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></function></unit>
