<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29761521_64394165.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>ll</name> <name>int</name></type> <name><name>arr</name><index>[<expr><literal type="number">2000005</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>tn</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>sosu</name><index>[<expr><literal type="number">1000001</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{ 
    <expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <decl_stmt><decl><type><name>ll</name> <name>int</name></type> <name>N</name></decl>;</decl_stmt>
   <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>N</name></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>ll</name> <name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>*</operator><name>i</name><operator>&lt;=</operator><name>N</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
    	<if>if<condition>(<expr><name>N</name><operator>%</operator><name>i</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
    		<expr_stmt><expr><name><name>arr</name><index>[<expr><operator>++</operator><name>tn</name></expr>]</index></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
    		<if>if<condition>(<expr><name>i</name><operator>*</operator><name>i</name><operator>!=</operator><name>N</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>arr</name><index>[<expr><operator>++</operator><name>tn</name></expr>]</index></name> <operator>=</operator> <name>N</name><operator>/</operator><name>i</name></expr>;</expr_stmt></block></then></if>
		}</block></then></if>
		<expr_stmt><expr><name><name>sosu</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><name><name>sosu</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt> <for>for<control>(<init><decl><type><name>ll</name> <name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">1000000</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<if>if<condition>(<expr><name><name>sosu</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
			<for>for<control>(<init><decl><type><name>ll</name> <name>int</name></type> <name>j</name><init>=<expr><literal type="number">2</literal><operator>*</operator><name>i</name></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><literal type="number">1000000</literal></expr>;</condition><incr><expr><name>j</name><operator>+=</operator><name>i</name></expr></incr>)</control><block>{
				<expr_stmt><expr><name><name>sosu</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="number">0</literal></expr>;</expr_stmt>
			}</block></for>
		}</block></then></if>
	}</block></for>
	<decl_stmt><decl><type><name>ll</name></type> <name>ss</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>ll</name> <name>int</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>tn</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><if>if<condition>(<expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;=</operator><literal type="number">1000000</literal></expr>)</condition><then> <block type="pseudo"><if>if<condition>(<expr><name><name>sosu</name><index>[<expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>)</condition><then> <block>{<expr_stmt><expr><name>ss</name><operator>=</operator><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt> <break>break;</break>}</block></then></if></block></then></if></block></for>
	<decl_stmt><decl><type><name>int</name></type> <name>tr</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<while>while<condition>(<expr><literal type="number">1</literal></expr>)</condition><block>{
		<if>if<condition>(<expr><name>ss</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if>
		<if>if<condition>(<expr><name>N</name><operator>%</operator><name>ss</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>N</name><operator>/=</operator><name>ss</name></expr>;</expr_stmt></block></then>
		<else>else<block>{
			<expr_stmt><expr><name>tr</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt> <break>break;</break>
		}</block></else></if>
		<if>if<condition>(<expr><name>N</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if>
	}</block></while>
	<if>if<condition>(<expr><name>ss</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>N</name></expr>;</expr_stmt></block></then>
	<elseif>else 
	<if>if<condition>(<expr><name>tr</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ss</name></expr>;</expr_stmt></block></then></if></elseif>
	<else>else <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">1</literal></expr>;</expr_stmt></block></else></if>
}</block></function></unit>
