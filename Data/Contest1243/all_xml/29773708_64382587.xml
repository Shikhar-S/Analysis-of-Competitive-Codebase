<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29773708_64382587.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>MAXN</name><init>=<expr><literal type="number">10000</literal><operator>+</operator><literal type="number">5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>S</name><index>[<expr><name>MAXN</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>T</name><index>[<expr><name>MAXN</name></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>solve</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>N</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%s%s"</literal></expr></argument>,<argument><expr><name>S</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>T</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>cnt</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>i</name></decl>,<decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>
	<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>N</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
		<expr_stmt><expr><name>cnt</name><operator>+=</operator><operator>(</operator><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
	}</block></for>
	<if>if<condition>(<expr><name>cnt</name><operator>!=</operator><literal type="number">2</literal></expr>)</condition><then> <block>{
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"No\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	}</block></then></if>
	<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>N</name><operator>&amp;&amp;</operator><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><empty_stmt>;</empty_stmt></block></for>
	<for>for<control>(<init><expr><name>j</name><operator>=</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>N</name><operator>&amp;&amp;</operator><name><name>S</name><index>[<expr><name>j</name></expr>]</index></name><operator>==</operator><name><name>T</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><empty_stmt>;</empty_stmt></block></for>
	<if>if<condition>(<expr><name><name>S</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>S</name><index>[<expr><name>j</name></expr>]</index></name><operator>&amp;&amp;</operator><name><name>T</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>T</name><index>[<expr><name>j</name></expr>]</index></name></expr>)</condition><then> <block>{
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Yes\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else>else <block>{
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"No\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>T</name><operator>--</operator></expr>)</condition> <block>{
		<expr_stmt><expr><call><name>solve</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
