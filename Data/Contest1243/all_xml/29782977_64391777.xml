<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29782977_64391777.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line">//freopen("input.in", "r", stdin); //freopen("output.txt", "w", stdout);</comment>
	<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl> , <decl><type ref="prev"/><name>n</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>string</name></type> <name>s1</name></decl>, <decl><type ref="prev"/><name>s2</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>t</name><operator>--</operator> <operator>&amp;&amp;</operator> <name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>s1</name> <operator>&gt;&gt;</operator> <name>s2</name></expr>)</condition><block>{
		<decl_stmt><decl><type><name>int</name></type> <name>diff1</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>, <decl><type ref="prev"/><name>diff2</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt> 
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
			<if>if<condition>(<expr><name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <name><name>s2</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then><block>{
				<if>if<condition>(<expr><name>diff1</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><then>
					<block type="pseudo"><expr_stmt><expr><name>diff1</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt></block></then>
				<else>else<block>{
					<expr_stmt><expr><name>diff2</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then></if>
		}</block></for>
		<if>if<condition>(<expr><name>diff2</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name><name>s1</name><index>[<expr><name>diff1</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>s2</name><index>[<expr><name>diff2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
		
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>(</operator><ternary><condition><expr><name>s1</name> <operator>==</operator> <name>s2</name></expr> ?</condition><then> <expr><literal type="string">"YES"</literal></expr> </then><else>: <expr><literal type="string">"NO"</literal></expr></else></ternary> <operator>)</operator> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
		
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
