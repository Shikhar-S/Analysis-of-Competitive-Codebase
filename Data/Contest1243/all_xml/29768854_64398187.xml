<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29768854_64398187.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fastio</name></cpp:macro> <cpp:value>ios_base::sync_with_stdio(false); cin.tie(0);</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>mod</name><init>=<expr><literal type="number">1000000007</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><name>fastio</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>smallest</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>count</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>temp</name><init>=<expr><name>n</name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>first</name><init>=<expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>long</name> <name>long</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>*</operator><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name>temp</name><operator>%</operator><name>i</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
            <if>if<condition>(<expr><operator>!</operator><name>first</name></expr>)</condition><then><block>{
            <expr_stmt><expr><name>smallest</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>first</name><operator>=</operator><literal type="boolean">true</literal></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
            <while>while<condition>(<expr><name>temp</name><operator>%</operator><name>i</name><operator>==</operator><literal type="number">0</literal></expr>)</condition>
            <block type="pseudo"><expr_stmt><expr><name>temp</name><operator>/=</operator><name>i</name></expr>;</expr_stmt></block></while>
        }</block></then></if>
    }</block></for>
    <if>if<condition>(<expr><name>temp</name><operator>!=</operator><literal type="number">1</literal></expr>)</condition><then>
    <block>{<expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
    <if>if<condition>(<expr><operator>!</operator><name>first</name></expr>)</condition><then><block>{
            <expr_stmt><expr><name>smallest</name><operator>=</operator><name>temp</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>first</name><operator>=</operator><literal type="boolean">true</literal></expr>;</expr_stmt>
            }</block></then></if>
    }</block></then></if>
    <if>if<condition>(<expr><name>count</name><operator>!=</operator><literal type="number">1</literal></expr>)</condition><then>
    <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then>
    <else>else 
    <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>smallest</name></expr>;</expr_stmt></block></else></if>
}</block></function></unit>
