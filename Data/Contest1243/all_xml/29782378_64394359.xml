<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29782378_64394359.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name><init>=<expr><literal type="number">1000</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>ch1</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>ch2</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>

<struct>struct <name>Pair</name><block>{<public type="default">
	<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>y</name></decl>;</decl_stmt>
</public>}</block> <decl><name><name>ans</name><index>[<expr><name>maxn</name><operator>*</operator><literal type="number">2</literal></expr>]</index></name></decl>;</struct>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<while>while <condition>(<expr><name>T</name><operator>--</operator></expr>)</condition> <block>{
		<decl_stmt><decl><type><name>int</name></type> <name>ansn</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%s"</literal></expr></argument>,<argument><expr><name>ch1</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%s"</literal></expr></argument>,<argument><expr><name>ch2</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
			<if>if <condition>(<expr><name><name>ch1</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>ch2</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
				<decl_stmt><decl><type><name>bool</name></type> <name>flag</name><init>=<expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
				<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{
					<if>if <condition>(<expr><name>flag</name></expr>)</condition><then><block>{<break>break;</break>}</block></then></if>
					<if>if <condition>(<expr><name><name>ch1</name><index>[<expr><name>j</name></expr>]</index></name><operator>==</operator><name><name>ch1</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
						<expr_stmt><expr><name>flag</name><operator>=</operator><literal type="boolean">true</literal></expr>;</expr_stmt>
						<expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name><name>ch2</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>ch1</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name>ansn</name><operator>++</operator></expr>;</expr_stmt>
						<expr_stmt><expr><name><name>ans</name><index>[<expr><name>ansn</name></expr>]</index></name><operator>.</operator><name>x</name><operator>=</operator><name>j</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name>ans</name><index>[<expr><name>ansn</name></expr>]</index></name><operator>.</operator><name>y</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
					}</block></then></if>
				}</block></for>
				<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{
					<if>if <condition>(<expr><name>flag</name></expr>)</condition><then><block>{<break>break;</break>}</block></then></if>
					<if>if <condition>(<expr><name><name>ch2</name><index>[<expr><name>j</name></expr>]</index></name><operator>==</operator><name><name>ch2</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
						<expr_stmt><expr><name>flag</name><operator>=</operator><literal type="boolean">true</literal></expr>;</expr_stmt>
						<expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name><name>ch1</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>ch2</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name>ansn</name><operator>++</operator></expr>;</expr_stmt>
						<expr_stmt><expr><name><name>ans</name><index>[<expr><name>ansn</name></expr>]</index></name><operator>.</operator><name>x</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name>ans</name><index>[<expr><name>ansn</name></expr>]</index></name><operator>.</operator><name>y</name><operator>=</operator><name>j</name></expr>;</expr_stmt>
					}</block></then></if>
				}</block></for>
				<if>if <condition>(<expr><operator>!</operator><name>flag</name></expr>)</condition><then> <block>{
					<expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name><name>ch1</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>ch2</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name>ansn</name><operator>++</operator></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>ans</name><index>[<expr><name>ansn</name></expr>]</index></name><operator>.</operator><name>x</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>ans</name><index>[<expr><name>ansn</name></expr>]</index></name><operator>.</operator><name>y</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
				}</block></then></if>
				<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{
					<if>if <condition>(<expr><name>flag</name></expr>)</condition><then><block>{<break>break;</break>}</block></then></if>
					<if>if <condition>(<expr><name><name>ch1</name><index>[<expr><name>j</name></expr>]</index></name><operator>==</operator><name><name>ch1</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
						<expr_stmt><expr><name>flag</name><operator>=</operator><literal type="boolean">true</literal></expr>;</expr_stmt>
						<expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name><name>ch2</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>ch1</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name>ansn</name><operator>++</operator></expr>;</expr_stmt>
						<expr_stmt><expr><name><name>ans</name><index>[<expr><name>ansn</name></expr>]</index></name><operator>.</operator><name>x</name><operator>=</operator><name>j</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name>ans</name><index>[<expr><name>ansn</name></expr>]</index></name><operator>.</operator><name>y</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
					}</block></then></if>
				}</block></for>
				<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{
					<if>if <condition>(<expr><name>flag</name></expr>)</condition><then><block>{<break>break;</break>}</block></then></if>
					<if>if <condition>(<expr><name><name>ch2</name><index>[<expr><name>j</name></expr>]</index></name><operator>==</operator><name><name>ch2</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
						<expr_stmt><expr><name>flag</name><operator>=</operator><literal type="boolean">true</literal></expr>;</expr_stmt>
						<expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name><name>ch1</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>ch2</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name>ansn</name><operator>++</operator></expr>;</expr_stmt>
						<expr_stmt><expr><name><name>ans</name><index>[<expr><name>ansn</name></expr>]</index></name><operator>.</operator><name>x</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name>ans</name><index>[<expr><name>ansn</name></expr>]</index></name><operator>.</operator><name>y</name><operator>=</operator><name>j</name></expr>;</expr_stmt>
					}</block></then></if>
				}</block></for>
			}</block></then></if>
		}</block></for>
		<decl_stmt><decl><type><name>int</name></type> <name>p</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
			<if>if <condition>(<expr><name><name>ch1</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>ch2</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
				<expr_stmt><expr><name>p</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
				<break>break;</break>
			}</block></then></if>
		}</block></for>
		<if>if <condition>(<expr><name>p</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"YES\n%d\n"</literal></expr></argument>, <argument><expr><name>ansn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>ansn</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
				<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d %d\n"</literal></expr></argument>, <argument><expr><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name></expr></argument>,<argument><expr><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
		}</block></then> <else>else <block>{
			<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"NO\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
