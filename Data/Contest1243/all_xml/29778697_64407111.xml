<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29778697_64407111.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition>
	<block>{
		<decl_stmt><decl><type><name>int</name></type> <name><name>alph</name><index>[<expr><literal type="number">26</literal></expr>]</index></name><init>=<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>, <decl><type ref="prev"/><name>n</name></decl>, <decl><type ref="prev"/><name>i</name></decl>, <decl><type ref="prev"/><name>flag</name><init>=<expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>j</name></decl>, <decl><type ref="prev"/><name>k</name></decl>, <decl><type ref="prev"/><name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>string</name></type> <name>S1</name></decl>, <decl><type ref="prev"/><name>S2</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>S1</name> <operator>&gt;&gt;</operator> <name>S2</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>char</name></type> <name><name>s1</name><index>[<expr><name>n</name></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>s2</name><index>[<expr><name>n</name></expr>]</index></name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></type> <name>ans</name></decl>;</decl_stmt>
		<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{
			<expr_stmt><expr><name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>S1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>s2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>S2</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		}</block></for>

		<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{
			<comment type="line">// cout &lt;&lt; s1[i]-97 &lt;&lt; "KK\n";</comment>
			<expr_stmt><expr><name><name>alph</name><index>[<expr><name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><literal type="number">97</literal></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name>alph</name><index>[<expr><name><name>s2</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><literal type="number">97</literal></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
		}</block></for>

		<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">26</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{
			<if>if<condition>(<expr><name><name>alph</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">2</literal> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><then>
				<block type="pseudo"><expr_stmt><expr><name>flag</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
		}</block></for>

		<comment type="line">// for(i=0; i&lt;26; i++)</comment>
		<comment type="line">// 	cout &lt;&lt; alph[i] &lt;&lt; " ";</comment>
		<comment type="line">// cout &lt;&lt; "\n";</comment>

		<if>if<condition>(<expr><name>flag</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
		<block>{
			<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"NO\n"</literal></expr>;</expr_stmt>
			<continue>continue;</continue>
		}</block></then></if>
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"YES\n"</literal></expr>;</expr_stmt>

		<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{
			<decl_stmt><decl><type><name>int</name></type> <name>flag</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
			<if>if<condition>(<expr><name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name><name>s2</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
				<block type="pseudo"><continue>continue;</continue></block></then></if>

			<for>for<control>(<init><expr><name>j</name><operator>=</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</init> <condition><expr><name>j</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
			<block>{
				<if>if<condition>(<expr><name><name>s2</name><index>[<expr><name>j</name></expr>]</index></name> <operator>==</operator> <name><name>s2</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
				<block>{
					<decl_stmt><decl><type><name>char</name></type> <name>temp</name> <init>= <expr><name><name>s2</name><index>[<expr><name>j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name><name>s2</name><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>temp</name></expr>;</expr_stmt>
					<expr_stmt><expr><name>flag</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

					<decl_stmt><decl><type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>ttemp</name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name>ttemp</name><operator>.</operator><name>first</name></name> <operator>=</operator> <name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>ttemp</name><operator>.</operator><name>second</name></name> <operator>=</operator> <name>j</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>

					<expr_stmt><expr><call><name><name>ans</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><name>ttemp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break>break;</break>
				}</block></then></if>
			}</block></for>

			<if>if<condition>(<expr><name>flag</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
				<block type="pseudo"><continue>continue;</continue></block></then></if>

			<for>for<control>(<init><expr><name>j</name><operator>=</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</init> <condition><expr><name>j</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
			<block>{
				<if>if<condition>(<expr><name><name>s1</name><index>[<expr><name>j</name></expr>]</index></name> <operator>==</operator> <name><name>s2</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
				<block>{
					<decl_stmt><decl><type><name>char</name></type> <name>temp</name> <init>= <expr><name><name>s1</name><index>[<expr><name>j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name><name>s1</name><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <name><name>s2</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>s2</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>temp</name></expr>;</expr_stmt>

					<decl_stmt><decl><type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>ttemp</name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name>ttemp</name><operator>.</operator><name>first</name></name> <operator>=</operator> <name>j</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>ttemp</name><operator>.</operator><name>second</name></name> <operator>=</operator> <name>i</name><operator>+</operator><literal type="number">2</literal></expr>;</expr_stmt>

					<expr_stmt><expr><name>temp</name> <operator>=</operator> <name><name>s2</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>s2</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>temp</name></expr>;</expr_stmt>

					<decl_stmt><decl><type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>, <argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>stemp</name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name>stemp</name><operator>.</operator><name>first</name></name> <operator>=</operator> <name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>stemp</name><operator>.</operator><name>second</name></name> <operator>=</operator> <name>i</name><operator>+</operator><literal type="number">2</literal></expr>;</expr_stmt>

					<expr_stmt><expr><call><name><name>ans</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><name>ttemp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name>ans</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><name>stemp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break>break;</break>
				}</block></then></if>
			}</block></for>


		}</block></for>

		<comment type="line">// for(i=0; i&lt;n; i++)</comment>
		<comment type="line">// 	cout &lt;&lt; s1[i];</comment>
		<comment type="line">// cout &lt;&lt; "\n";</comment>
		<comment type="line">// for(i=0; i&lt;n; i++)</comment>
		<comment type="line">// 	cout &lt;&lt; s2[i];</comment>
		<comment type="line">// cout &lt;&lt; "\n";</comment>

		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <call><name><name>ans</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&lt;&lt;</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>

		<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><call><name><name>ans</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{
			<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name> <operator>&lt;&lt;</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>
		}</block></for>


	}</block></while>
}</block></function></unit>
