<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1243/all/29782147_64384179.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>int</name></type> <name>k</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>tab</name><index>[<expr><literal type="number">1005</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>l</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>l</name> <operator>&lt;=</operator> <name>k</name></expr>;</condition> <incr><expr><name>l</name><operator>++</operator></expr></incr>)</control><block>{
		<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
			<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>tab</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<decl_stmt><decl><type><name>int</name></type> <name>L</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>R</name> <init>= <expr><name>n</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
		<while>while<condition>(<expr><name>R</name> <operator>-</operator> <name>L</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition><block>{
			<decl_stmt><decl><type><name>int</name></type> <name>sr</name> <init>= <expr><operator>(</operator><name>R</name> <operator>+</operator> <name>L</name><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>int</name></type> <name>note</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
			<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
				<if>if<condition>(<expr><name><name>tab</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;=</operator> <name>sr</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>note</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
			}</block></for>
			<if>if<condition>(<expr><name>note</name> <operator>&gt;=</operator> <name>sr</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>L</name> <operator>=</operator> <name>sr</name></expr>;</expr_stmt></block></then>
			<else>else <block type="pseudo"><expr_stmt><expr><name>R</name> <operator>=</operator> <name>sr</name></expr>;</expr_stmt></block></else></if>
		}</block></while>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>, <argument><expr><name>L</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>

<comment type="line">//FUCK YOU WINDOWS</comment></unit>
