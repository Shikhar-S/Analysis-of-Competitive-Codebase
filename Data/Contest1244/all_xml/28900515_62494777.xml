<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28900515_62494777.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rep</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>e</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(LL i=(b);i&lt;(e);++i)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dep</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>e</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(LL i=(b);i&gt;=(e);--i)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LL</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt><decl_stmt><decl><type><name>LL</name></type> <name>k</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>set</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>a</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>,<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>cnt</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name><name>cout</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt><decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
    <macro><name>rep</name><argument_list>(<argument>i</argument>,<argument><literal type="number">0</literal></argument>,<argument>n</argument>)</argument_list></macro><block>{
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt><expr_stmt><expr><call><name><name>a</name><operator>.</operator><name>insert</name></name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>cnt</name><index>[<expr><name>t</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt>
    }</block>
    <while>while<condition>(<expr><call><name><name>a</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>&gt;</operator><literal type="number">1</literal></expr>)</condition><block>{
        <decl_stmt><decl><type><name>auto</name></type> <name>it</name><init>=<expr><call><name><name>a</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>auto</name></type> <name>rit</name><init>=<expr><call><name><name>a</name><operator>.</operator><name>rbegin</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>LL</name></type> <name>minv</name><init>=<expr><operator>*</operator><operator>(</operator><name>it</name><operator>++</operator><operator>)</operator></expr></init></decl>,<decl><type ref="prev"/><name>cmin</name><init>=<expr><operator>*</operator><name>it</name></expr></init></decl>,<decl><type ref="prev"/><name>maxv</name><init>=<expr><operator>*</operator><operator>(</operator><name>rit</name><operator>++</operator><operator>)</operator></expr></init></decl>,<decl><type ref="prev"/><name>cmax</name><init>=<expr><operator>*</operator><name>rit</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>LL</name></type> <name>c1</name><init>=<expr><name><name>cnt</name><index>[<expr><name>minv</name></expr>]</index></name></expr></init></decl>,<decl><type ref="prev"/><name>c2</name><init>=<expr><name><name>cnt</name><index>[<expr><name>maxv</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if>if<condition>(<expr><name><name>cnt</name><index>[<expr><name>minv</name></expr>]</index></name><operator>&lt;</operator><name><name>cnt</name><index>[<expr><name>maxv</name></expr>]</index></name></expr>)</condition><then><block>{
            <decl_stmt><decl><type><name>LL</name></type> <name>kp</name><init>=<expr><call><name>min</name><argument_list>(<argument><expr><name>k</name><operator>/</operator><name>c1</name></expr></argument>,<argument><expr><name>cmin</name><operator>-</operator><name>minv</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>minv</name><operator>+=</operator><name>kp</name></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>minv</name><operator>&lt;</operator><name>cmin</name></expr>)</condition><then><block>{
                <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>maxv</name><operator>-</operator><name>minv</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
                <comment type="line">//system("pause");</comment>
                <return>return <expr><literal type="number">0</literal></expr>;</return>
            }</block></then></if>
            <expr_stmt><expr><name>k</name><operator>-=</operator><name>kp</name><operator>*</operator><name>c1</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>cnt</name><operator>.</operator><name>erase</name></name><argument_list>(<argument><expr><operator>*</operator><operator>(</operator><call><name><name>a</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>a</name><operator>.</operator><name>erase</name></name><argument_list>(<argument><expr><call><name><name>a</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>cnt</name><index>[<expr><name>cmin</name></expr>]</index></name><operator>+=</operator><name>c1</name></expr>;</expr_stmt>
        }</block></then>
        <else>else<block>{
            <decl_stmt><decl><type><name>LL</name></type> <name>kp</name><init>=<expr><call><name>min</name><argument_list>(<argument><expr><name>k</name><operator>/</operator><name>c2</name></expr></argument>,<argument><expr><name>maxv</name><operator>-</operator><name>cmax</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>maxv</name><operator>-=</operator><name>kp</name></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>maxv</name><operator>&gt;</operator><name>cmax</name></expr>)</condition><then><block>{
                <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>maxv</name><operator>-</operator><name>minv</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
                <comment type="line">//system("pause");</comment>
                <return>return <expr><literal type="number">0</literal></expr>;</return>
            }</block></then></if>
            <expr_stmt><expr><name>k</name><operator>-=</operator><name>kp</name><operator>*</operator><name>c2</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>cnt</name><operator>.</operator><name>erase</name></name><argument_list>(<argument><expr><operator>*</operator><operator>(</operator><call><name><name>a</name><operator>.</operator><name>rbegin</name></name><argument_list>()</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>a</name><operator>.</operator><name>erase</name></name><argument_list>(<argument><expr><operator>*</operator><call><name><name>a</name><operator>.</operator><name>rbegin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>cnt</name><index>[<expr><name>cmax</name></expr>]</index></name><operator>+=</operator><name>c2</name></expr>;</expr_stmt>
        }</block></else></if>
    }</block></while>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">0</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <comment type="line">//system("pause");</comment>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
