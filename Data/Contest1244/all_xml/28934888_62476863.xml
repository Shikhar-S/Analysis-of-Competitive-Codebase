<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28934888_62476863.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INF</name></cpp:macro> <cpp:value>2147483647</cpp:value></cpp:define>
<decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>s</name><index>[<expr><literal type="number">1100</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>,<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>T</name><operator>--</operator></expr>)</condition><block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%s"</literal></expr></argument>,<argument><expr><name>s</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><literal type="number">48</literal></expr>;</expr_stmt></block></for>
		<decl_stmt><decl><type><name>ll</name></type> <name>l</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>r</name><init>=<expr><name>n</name></expr></init></decl>;</decl_stmt>
		<for>for<control>(<init><expr><name>l</name><operator>=</operator><literal type="number">1</literal></expr>;</init> <condition><expr><name>l</name><operator>&lt;=</operator><name>n</name></expr>;</condition> <incr><expr><name>l</name><operator>++</operator></expr></incr>)</control><block>{<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>l</name></expr>]</index></name><operator>==</operator><literal type="char">'1'</literal></expr>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if>}</block></for>
		<for>for<control>(<init><expr><name>r</name><operator>=</operator><name>n</name></expr>;</init> <condition><expr><name>r</name><operator>&gt;=</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>r</name><operator>--</operator></expr></incr>)</control><block>{<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>r</name></expr>]</index></name><operator>==</operator><literal type="char">'1'</literal></expr>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if>}</block></for>
		<if>if<condition>(<expr><name>r</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>r</name><operator>=</operator><operator>-</operator><name>INF</name></expr>;</expr_stmt></block></then></if>
		<if>if<condition>(<expr><name>l</name><operator>==</operator><name>n</name><operator>+</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>l</name><operator>=</operator><name>INF</name></expr>;</expr_stmt></block></then></if>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><call><name>max</name><argument_list>(<argument><expr><name>ans</name><operator>+</operator><name>n</name></expr></argument>,<argument><expr><call><name>max</name><argument_list>(<argument><expr><name>n</name><operator>-</operator><name>l</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>r</name></expr></argument>)</argument_list></call><operator>*</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
