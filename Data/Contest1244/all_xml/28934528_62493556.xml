<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28934528_62493556.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
 
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name> <name>int</name></type> <name>ll</name>;</typedef>
 
<decl_stmt><decl><type><name>int</name></type> <name>q</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name>l</name></decl>, <decl><type ref="prev"/><name>p</name></decl>, <decl><type ref="prev"/><name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>q</name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>q</name><operator>--</operator></expr>)</condition><block>{
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>l</name><operator>&gt;&gt;</operator><name>p</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>ll</name></type> <name>x</name> <init>= <expr><name>l</name><operator>/</operator><name>a</name> <operator>+</operator> <operator>(</operator><name>l</name><operator>%</operator><name>a</name><operator>!=</operator><literal type="number">0</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>ll</name></type> <name>y</name> <init>= <expr><name>p</name><operator>/</operator><name>b</name> <operator>+</operator> <operator>(</operator><name>p</name><operator>%</operator><name>b</name><operator>!=</operator><literal type="number">0</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
        <if>if<condition>(<expr><name>x</name><operator>+</operator><name>y</name> <operator>&gt;</operator> <name>k</name></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"-1"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then>
        <else>else <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>x</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>y</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></else></if>
    }</block></while>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
