<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28925419_62474843.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>N</name></cpp:macro> <cpp:value>1005</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>bool</name></type> <name>cur1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>sum</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>str</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name><name>a</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<function><specifier>inline</specifier> <type><name>void</name></type> <name>Rd</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>&amp;</modifier></type><name>res</name></decl></parameter>)</parameter_list><block>{
	<decl_stmt><decl><type><name>char</name></type> <name>c</name></decl>;</decl_stmt><expr_stmt><expr><name>res</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>c</name><operator>=</operator><call><name>getchar</name><argument_list>()</argument_list></call></expr><operator>,</operator><expr><name>c</name><operator>&lt;</operator><literal type="number">48</literal></expr>)</condition><block type="pseudo"><empty_stmt>;</empty_stmt></block></while>
	<do>do <block type="pseudo"><expr_stmt><expr><name>res</name><operator>=</operator><operator>(</operator><name>res</name><operator>&lt;&lt;</operator><literal type="number">3</literal><operator>)</operator><operator>+</operator><operator>(</operator><name>res</name><operator>&lt;&lt;</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><operator>(</operator><name>c</name><operator>^</operator><literal type="number">48</literal><operator>)</operator></expr>;</expr_stmt></block>
	while<condition>(<expr><name>c</name><operator>=</operator><call><name>getchar</name><argument_list>()</argument_list></call></expr><operator>,</operator><expr><name>c</name><operator>&gt;</operator><literal type="number">47</literal></expr>)</condition>;</do>
	<return>return;</return>
}</block></function>
<decl_stmt><decl><type><name>bool</name></type> <name>cur2</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
<comment type="line">//	printf("%lf MB\n",(&amp;cur2-&amp;cur1)/1024.0/1024);</comment>
	<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>Rd</name><argument_list>(<argument><expr><name>T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>T</name><operator>--</operator></expr>)</condition><block>{
		<expr_stmt><expr><call><name>Rd</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%s"</literal></expr></argument>,<argument><expr><name>str</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>str</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><literal type="char">'0'</literal></expr>;</expr_stmt></block></for>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name><name>sum</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>sum</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
		<if>if<condition>(<expr><operator>!</operator><name><name>sum</name><index>[<expr><name>n</name></expr>]</index></name></expr>)</condition><then><block>{
			<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><continue>continue;</continue>
		}</block></then></if>
		<decl_stmt><decl><type><name>int</name></type> <name>l</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>r</name><init>=<expr><name>n</name></expr></init></decl>,<decl><type ref="prev"/><name>ans</name><init>=<expr><name>n</name><operator>+</operator><name><name>sum</name><index>[<expr><name>r</name></expr>]</index></name><operator>-</operator><name><name>sum</name><index>[<expr><name>l</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<while>while<condition>(<expr><operator>!</operator><name><name>a</name><index>[<expr><name>l</name></expr>]</index></name></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>l</name><operator>++</operator></expr>;</expr_stmt></block></while>
		<while>while<condition>(<expr><operator>!</operator><name><name>a</name><index>[<expr><name>r</name></expr>]</index></name></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>r</name><operator>--</operator></expr>;</expr_stmt></block></while>
		<expr_stmt><expr><name>ans</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><call><name>max</name><argument_list>(<argument><expr><name>l</name><operator>*</operator><literal type="number">2</literal></expr></argument>,<argument><expr><operator>(</operator><name>n</name><operator>-</operator><name>l</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>*</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>ans</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><call><name>max</name><argument_list>(<argument><expr><name>r</name><operator>*</operator><literal type="number">2</literal></expr></argument>,<argument><expr><operator>(</operator><name>n</name><operator>-</operator><name>r</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>*</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
