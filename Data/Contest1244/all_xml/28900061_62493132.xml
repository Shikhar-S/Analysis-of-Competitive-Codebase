<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28900061_62493132.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>string</name></type> <name>t</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>col</name><index>[<expr><literal type="number">200001</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>sc</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>pos</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>cout</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>k</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>s</name></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block type="pseudo"><if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name><name>s</name><index>[<expr><operator>(</operator><operator>(</operator><name>i</name><operator>-</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><name>n</name><operator>)</operator><operator>%</operator><name>n</name></expr>]</index></name></expr>)</condition><then>
		<block>{
			<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'B'</literal></expr>)</condition><then>
				<block type="pseudo"><expr_stmt><expr><name><name>col</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>col</name><index>[<expr><operator>(</operator><operator>(</operator><name>i</name><operator>-</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><name>n</name><operator>)</operator><operator>%</operator><name>n</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></then>
			<else>else
				<block type="pseudo"><expr_stmt><expr><name><name>col</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>col</name><index>[<expr><operator>(</operator><operator>(</operator><name>i</name><operator>-</operator><literal type="number">1</literal><operator>)</operator><operator>+</operator><name>n</name><operator>)</operator><operator>%</operator><name>n</name></expr>]</index></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block></else></if>		
			<expr_stmt><expr><name>sc</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
		}</block></then></if></block></for>
	<if>if <condition>(<expr><name>sc</name></expr>)</condition><then>
	<block>{
		<if>if <condition>(<expr><name>k</name><operator>%</operator><literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
		<block>{
			<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
			<block>{
				<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'B'</literal></expr>)</condition><then>
					<block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="char">'W'</literal></expr>;</expr_stmt></block></then>
				<else>else
					<block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="char">'B'</literal></expr>;</expr_stmt></block></else></if>	
			}</block></for>
		}</block></then>
		<else>else
			<block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>s</name></expr>;</expr_stmt></block></else></if>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<expr_stmt><expr><name>t</name> <operator>=</operator> <name>s</name></expr>;</expr_stmt>	
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<if>if <condition>(<expr><name><name>col</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>s</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></then></if>
		<if>if <condition>(<expr><name><name>col</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>col</name><index>[<expr><operator>(</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>%</operator><name>n</name></expr>]</index></name></expr>)</condition><then> <comment type="line">// check the middle BB..WW, .WW  BB. </comment>
		<block>{
			<expr_stmt><expr><call><name><name>pos</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><operator>(</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>%</operator><name>n</name></expr></init></decl>;</init><condition>;</condition><incr><expr><name>j</name><operator>=</operator><operator>(</operator><name>j</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>%</operator><name>n</name></expr></incr>)</control>
			<block>{
				<if>if <condition>(<expr><name><name>col</name><index>[<expr><name>j</name></expr>]</index></name></expr>)</condition><then>
					<block type="pseudo"><break>break;</break></block></then></if>
				<expr_stmt><expr><call><name><name>pos</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><name>j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<if>if <condition>(<expr><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then> <comment type="line">// same color : WW...WW</comment>
			<block>{
				<decl_stmt><decl><type><name>int</name></type> <name>cnt</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
				<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;</operator><operator>(</operator><name>int</name><operator>)</operator><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">1</literal></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
				<block>{
					<expr_stmt><expr><name>cnt</name><operator>++</operator></expr>;</expr_stmt>
					<if>if <condition>(<expr><name>cnt</name> <operator>&gt;</operator> <name>k</name></expr>)</condition><then>
					<block>{
						<for>for <control>(<init><decl><type><name>int</name></type> <name>x</name><init>=<expr><name>j</name></expr></init></decl>;</init><condition><expr><name>x</name><operator>&lt;</operator><operator>(</operator><name>int</name><operator>)</operator><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>/</operator><literal type="number">2</literal><operator>+</operator><literal type="number">1</literal></expr>;</condition><incr><expr><name>x</name><operator>++</operator></expr></incr>)</control>
						<block>{
							<if>if <condition>(<expr><name>k</name><operator>%</operator><literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
							<block>{
								<if>if <condition>(<expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><then>
									<block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt></block></then>
								<else>else
									<block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'W'</literal></expr>;</expr_stmt></block></else></if>	
							}</block></then></if>
						}</block></for>
						<break>break;</break>
					}</block></then></if>	
					<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'W'</literal></expr>;</expr_stmt></block></then>
					<else>else <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt></block></else></if>							
				}</block></for> 
				<expr_stmt><expr><name>cnt</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
				<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&gt;</operator><operator>(</operator><name>int</name><operator>)</operator><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>/</operator><literal type="number">2</literal></expr>;</condition><incr><expr><name>j</name><operator>--</operator></expr></incr>)</control>
				<block>{
					<expr_stmt><expr><name>cnt</name><operator>++</operator></expr>;</expr_stmt>
					<if>if <condition>(<expr><name>cnt</name> <operator>&gt;</operator> <name>k</name></expr>)</condition><then>
					<block>{
						<for>for <control>(<init><decl><type><name>int</name></type> <name>x</name><init>=<expr><name>j</name></expr></init></decl>;</init><condition><expr><name>x</name><operator>&gt;</operator><operator>(</operator><name>int</name><operator>)</operator><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>/</operator><literal type="number">2</literal></expr>;</condition><incr><expr><name>x</name><operator>--</operator></expr></incr>)</control>
						<block>{
							<if>if <condition>(<expr><name>k</name><operator>%</operator><literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
							<block>{
								<if>if <condition>(<expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><then>
									<block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt></block></then>
								<else>else
									<block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'W'</literal></expr>;</expr_stmt></block></else></if>	
							}</block></then></if>
						}</block></for>
						<break>break;</break>
					}</block></then></if>	
					<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'W'</literal></expr>;</expr_stmt></block></then>
					<else>else <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt></block></else></if>
				}</block></for>
			}</block></then>
			<else>else <comment type="line">// dif color : WW..BB</comment>
			<block>{
				<decl_stmt><decl><type><name>int</name></type> <name>cnt</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
				<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;</operator><operator>(</operator><name>int</name><operator>)</operator><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>/</operator><literal type="number">2</literal></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
				<block>{
					<expr_stmt><expr><name>cnt</name><operator>++</operator></expr>;</expr_stmt>
					<if>if <condition>(<expr><name>cnt</name> <operator>&gt;</operator> <name>k</name></expr>)</condition><then>
					<block>{
						<for>for <control>(<init><decl><type><name>int</name></type> <name>x</name><init>=<expr><name>j</name></expr></init></decl>;</init><condition><expr><name>x</name><operator>&lt;</operator><operator>(</operator><name>int</name><operator>)</operator><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>/</operator><literal type="number">2</literal></expr>;</condition><incr><expr><name>x</name><operator>++</operator></expr></incr>)</control>
						<block>{
							<if>if <condition>(<expr><name>k</name><operator>%</operator><literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
							<block>{
								<if>if <condition>(<expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><then>
									<block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt></block></then>
								<else>else
									<block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'W'</literal></expr>;</expr_stmt></block></else></if>	
							}</block></then></if>
						}</block></for>
						<break>break;</break>					
					}</block></then></if>	
					<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'W'</literal></expr>;</expr_stmt></block></then>
					<else>else <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt></block></else></if>
				}</block></for>
				<expr_stmt><expr><name>cnt</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
				<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&gt;=</operator><operator>(</operator><name>int</name><operator>)</operator><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>/</operator><literal type="number">2</literal></expr>;</condition><incr><expr><name>j</name><operator>--</operator></expr></incr>)</control>
				<block>{
					<expr_stmt><expr><name>cnt</name><operator>++</operator></expr>;</expr_stmt>
					<if>if <condition>(<expr><name>cnt</name> <operator>&gt;</operator> <name>k</name></expr>)</condition><then>
					<block>{
						<for>for <control>(<init><decl><type><name>int</name></type> <name>x</name><init>=<expr><name>j</name></expr></init></decl>;</init><condition><expr><name>x</name><operator>&gt;=</operator><operator>(</operator><name>int</name><operator>)</operator><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>/</operator><literal type="number">2</literal></expr>;</condition><incr><expr><name>x</name><operator>--</operator></expr></incr>)</control>
						<block>{
							<if>if <condition>(<expr><name>k</name><operator>%</operator><literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
							<block>{
								<if>if <condition>(<expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><then>
									<block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt></block></then>
								<else>else
									<block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>x</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'W'</literal></expr>;</expr_stmt></block></else></if>	
							}</block></then></if>
						}</block></for>
						<break>break;</break>
					}</block></then></if>	
					<if>if <condition>(<expr><name><name>s</name><index>[<expr><operator>(</operator><name><name>pos</name><index>[<expr><call><name><name>pos</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>%</operator><name>n</name></expr>]</index></name> <operator>==</operator> <literal type="char">'W'</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'W'</literal></expr>;</expr_stmt></block></then>
					<else>else <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name><name>pos</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt></block></else></if>
				}</block></for> 
			}</block></else></if>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>t</name></expr>;</expr_stmt>
}</block></function></unit>
