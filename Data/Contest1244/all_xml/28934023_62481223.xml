<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28934023_62481223.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
 
<using>using <namespace>namespace <name>std</name>;</namespace></using>
 
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>p</name></decl>,<decl><type ref="prev"/><name>w</name></decl>,<decl><type ref="prev"/><name>d</name></decl>,<decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>p</name> <operator>&gt;&gt;</operator> <name>w</name> <operator>&gt;&gt;</operator> <name>d</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>LIMIT</name><init>=<expr><operator>(</operator><name>w</name><operator>*</operator><name>n</name><operator>-</operator><name>p</name><operator>)</operator><operator>/</operator><operator>(</operator><name>w</name><operator>-</operator><name>d</name><operator>)</operator></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><call><name>min</name><argument_list>(<argument><expr><name>w</name></expr></argument>,<argument><expr><name>p</name><operator>/</operator><name>d</name></expr></argument>)</argument_list></call></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block type="pseudo"><if>if <condition>(<expr><operator>(</operator><name>p</name><operator>-</operator><name>d</name><operator>*</operator><name>i</name><operator>)</operator><operator>%</operator><name>w</name><operator>==</operator><literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>(</operator><name>n</name><operator>-</operator><operator>(</operator><name>p</name><operator>-</operator><name>d</name><operator>*</operator><name>i</name><operator>)</operator><operator>/</operator><name>w</name><operator>-</operator><name>i</name><operator>&gt;=</operator><literal type="number">0</literal><operator>)</operator></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>(</operator><name>p</name><operator>-</operator><name>d</name><operator>*</operator><name>i</name><operator>)</operator><operator>/</operator><name>w</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <name>i</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <name>n</name><operator>-</operator><operator>(</operator><name>p</name><operator>-</operator><name>d</name><operator>*</operator><name>i</name><operator>)</operator><operator>/</operator><name>w</name><operator>-</operator><name>i</name></expr> ;</expr_stmt>
            <break>break;</break>
        }</block></then></if></block></for>
    <if>if <condition>(<expr><name>i</name><operator>==</operator><call><name>min</name><argument_list>(<argument><expr><name>p</name><operator>/</operator><name>d</name></expr></argument>,<argument><expr><name>w</name></expr></argument>)</argument_list></call><operator>+</operator><literal type="number">1</literal></expr>)</condition><then>
        <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
}</block></function></unit>
