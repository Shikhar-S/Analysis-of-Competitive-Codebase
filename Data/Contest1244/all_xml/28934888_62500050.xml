<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28934888_62500050.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>k</name></decl>,<decl><type ref="prev"/><name><name>a</name><index>[<expr><literal type="number">200005</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>b</name><index>[<expr><literal type="number">200005</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>s</name><index>[<expr><literal type="number">200005</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>cnt</name><index>[<expr><literal type="number">200005</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>void</name></type> <name>Siyuan</name><parameter_list>()</parameter_list> <block>{<comment type="block">/*Siyuan Ak ioi*/</comment><return>return ;</return>}</block></function>
<function><type><name>signed</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>k</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
	<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
	<decl_stmt><decl><type><name>int</name></type> <name>m</name><init>=<expr><call><name>unique</name><argument_list>(<argument><expr><name>b</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>b</name><operator>+</operator><literal type="number">1</literal><operator>+</operator><name>n</name></expr></argument>)</argument_list></call><operator>-</operator><name>b</name><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name><name>cnt</name><index>[<expr><call><name>lower_bound</name><argument_list>(<argument><expr><name>b</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>b</name><operator>+</operator><literal type="number">1</literal><operator>+</operator><name>m</name></expr></argument>,<argument><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator>-</operator><name>b</name></expr>]</index></name><operator>++</operator></expr>;</expr_stmt></block></for>
	<decl_stmt><decl><type><name>int</name></type> <name>Min</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>Max</name><init>=<expr><name>m</name></expr></init></decl>,<decl><type ref="prev"/><name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>tmp</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name>ans</name> <operator>=</operator> <name>tmp</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<while>while<condition>(<expr><literal type="number">1</literal> <operator>+</operator> <literal type="number">1</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><block>{
		<if>if<condition>(<expr><name>Min</name><operator>&gt;=</operator><name>Max</name></expr>)</condition><then><block type="pseudo"><break>break;</break></block></then></if> 
		<if>if<condition>(<expr><name><name>cnt</name><index>[<expr><name>Min</name></expr>]</index></name><operator>&lt;</operator><name><name>cnt</name><index>[<expr><name>Max</name></expr>]</index></name></expr>)</condition><then><block>{
			<if>if<condition>(<expr><operator>(</operator><name><name>b</name><index>[<expr><name>Min</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>b</name><index>[<expr><name>Min</name></expr>]</index></name><operator>)</operator><operator>*</operator><name><name>cnt</name><index>[<expr><name>Min</name></expr>]</index></name><operator>&lt;=</operator><name>k</name></expr>)</condition><then><block>{<expr_stmt><expr><name>k</name><operator>-=</operator><operator>(</operator><name><name>b</name><index>[<expr><name>Min</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>b</name><index>[<expr><name>Min</name></expr>]</index></name><operator>)</operator><operator>*</operator><name><name>cnt</name><index>[<expr><name>Min</name></expr>]</index></name></expr>;</expr_stmt>}</block></then>
			<else>else<block>{<expr_stmt><expr><name>tmp</name><operator>=</operator><name>k</name><operator>/</operator><name><name>cnt</name><index>[<expr><name>Min</name></expr>]</index></name></expr>;</expr_stmt><break>break;</break>}</block></else></if>
			<expr_stmt><expr><name><name>cnt</name><index>[<expr><name>Min</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>+=</operator><name><name>cnt</name><index>[<expr><name>Min</name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name>Min</name> <operator>=</operator> <name>Min</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
		}</block></then>
		<elseif>else <if>if<condition>(<expr><name><name>cnt</name><index>[<expr><name>Min</name></expr>]</index></name> <operator>&gt;=</operator> <name><name>cnt</name><index>[<expr><name>Max</name></expr>]</index></name></expr>)</condition><then><block>{
			<if>if<condition>(<expr><name><name>cnt</name><index>[<expr><name>Max</name></expr>]</index></name><operator>*</operator><operator>(</operator><name><name>b</name><index>[<expr><name>Max</name></expr>]</index></name><operator>-</operator><name><name>b</name><index>[<expr><name>Max</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>&lt;=</operator><name>k</name></expr>)</condition><then><block>{<expr_stmt><expr><name>k</name><operator>-=</operator><operator>(</operator><name><name>b</name><index>[<expr><name>Max</name></expr>]</index></name><operator>-</operator><name><name>b</name><index>[<expr><name>Max</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>*</operator><name><name>cnt</name><index>[<expr><name>Max</name></expr>]</index></name></expr>;</expr_stmt>}</block></then>
			<else>else<block>{<expr_stmt><expr><name>tmp</name><operator>=</operator><name>k</name><operator>/</operator><name><name>cnt</name><index>[<expr><name>Max</name></expr>]</index></name></expr>;</expr_stmt><break>break;</break>}</block></else></if>
			<expr_stmt><expr><name><name>cnt</name><index>[<expr><name>Max</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+=</operator><name><name>cnt</name><index>[<expr><name>Max</name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name>Max</name> <operator>=</operator> <name>Max</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
		}</block></then></if></elseif></if>
	}</block></while>
	<expr_stmt><expr><name>ans</name><operator>=</operator><name><name>b</name><index>[<expr><name>Max</name></expr>]</index></name><operator>-</operator><name><name>b</name><index>[<expr><name>Min</name></expr>]</index></name><operator>-</operator><name>tmp</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
