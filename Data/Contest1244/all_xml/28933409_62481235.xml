<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28933409_62481235.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<typedef>typedef <type><name>long</name> <name>long</name> <name>int</name></type> <name>ll</name>;</typedef>
<typedef>typedef <type><name>long</name> <name>double</name></type> <name>ld</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pii</name></cpp:macro> <cpp:value>pair &lt; int , ll &gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long int</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sync</name></cpp:macro> <cpp:value>ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)</cpp:value></cpp:define>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>GCC</name> <name>optimize</name> <name>(</name><cpp:literal>"Ofast"</cpp:literal><name>)</name></cpp:pragma>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name><init>=<expr><literal type="number">1e5</literal><operator>+</operator><literal type="number">100</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name><name>g</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>c</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>val</name><index>[<expr><name>N</name></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>ans1</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>ll</name></type> <name>dfs</name><parameter_list>(<parameter><decl><type><name>ll</name></type> <name>v</name></decl></parameter>,<parameter><decl><type><name>ll</name></type> <name>p</name></decl></parameter>)</parameter_list><block>{
    <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>pb</name></name><argument_list>(<argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name><name>g</name><index>[<expr><name>v</name></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <decl_stmt><decl><type><name>ll</name></type> <name>u</name><init>=<expr><name><name>g</name><index>[<expr><name>v</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>u</name><operator>==</operator><name>p</name></expr>)</condition><then><block>{
            <continue>continue;</continue>
        }</block></then></if>

        <expr_stmt><expr><call><name>dfs</name><argument_list>(<argument><expr><name>u</name></expr></argument>,<argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    }</block></for>


}</block></function>
<function><type><name>int32_t</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><name>sync</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;</operator><literal type="number">3</literal></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block>{
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
            <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>val</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></for>
    }</block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name><operator>-</operator><literal type="number">1</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <decl_stmt><decl><type><name>ll</name></type> <name>u</name></decl>,<decl><type ref="prev"/><name>v</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>u</name> <operator>&gt;&gt;</operator> <name>v</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>g</name><index>[<expr><name>u</name></expr>]</index></name><operator>.</operator><call><name>pb</name><argument_list>(<argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>g</name><index>[<expr><name>v</name></expr>]</index></name><operator>.</operator><call><name>pb</name><argument_list>(<argument><expr><name>u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if <condition>(<expr><name><name>g</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call><operator>&gt;</operator><literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
            <return>return <expr><literal type="number">0</literal></expr>;</return>
        }</block></then></if>
    }</block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if <condition>(<expr><name><name>g</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><call><name>dfs</name><argument_list>(<argument><expr><name>i</name></expr></argument>,<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break>break;</break>
        }</block></then></if>
    }</block></for>
   <comment type="line">// cout &lt;&lt; c[1] &lt;&lt; endl;</comment>
    <comment type="line" format="doxygen">/// 0 1 2</comment>
    <decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>ma</name><init>=<expr><literal type="number">1e15</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>,<decl><type ref="prev"/><name>z</name></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if <condition>(<expr><name>ans</name><operator>&lt;</operator><name>ma</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>x</name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>z</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
    }</block></then></if>
    <expr_stmt><expr><name>ma</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>ma</name></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>ans</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>

    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if <condition>(<expr><name>ans</name><operator>&lt;</operator><name>ma</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>x</name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>y</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>z</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    }</block></then></if>
    <expr_stmt><expr><name>ma</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>ma</name></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>ans</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if <condition>(<expr><name>ans</name><operator>&lt;</operator><name>ma</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>x</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>y</name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>z</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    }</block></then></if>
    <expr_stmt><expr><name>ma</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>ma</name></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>ans</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if <condition>(<expr><name>ans</name><operator>&lt;</operator><name>ma</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>x</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>z</name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
    }</block></then></if>
    <expr_stmt><expr><name>ma</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>ma</name></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>ans</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if <condition>(<expr><name>ans</name><operator>&lt;</operator><name>ma</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>x</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>y</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>z</name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
    }</block></then></if>
    <expr_stmt><expr><name>ma</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>ma</name></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>ans</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>val</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if <condition>(<expr><name>ans</name><operator>&lt;</operator><name>ma</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>x</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>y</name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>z</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
    }</block></then></if>
    <expr_stmt><expr><name>ma</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>ma</name></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>ans</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ma</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name><name>ans1</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index></name><operator>=</operator><name>x</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
            <comment type="line">//cout &lt;&lt; x+1 &lt;&lt; " ";</comment>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name><name>ans1</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index></name><operator>=</operator><name>y</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
            <comment type="line">//cout &lt;&lt; y+1 &lt;&lt; " ";</comment>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">3</literal><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name><name>ans1</name><index>[<expr><name><name>c</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>]</index></name><operator>=</operator><name>z</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
            <comment type="line">//cout &lt;&lt; z+1 &lt;&lt; " ";</comment>
        }</block></then></if>
    }</block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name><name>ans1</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal></expr>;</expr_stmt>
    }</block></for>
    <comment type="line">//cout &lt;&lt; min(dp[1][0],min(dp[1][2],dp[1][1]));</comment>

}</block></function>



















</unit>
