<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28934326_62464735.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name> ;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name> <init>= <expr><literal type="number">2e5</literal><operator>+</operator><literal type="number">10</literal></expr></init></decl> ;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{

    <expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>t</name></decl> ;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr> ;</expr_stmt>

    <for>for<control>(<init><decl><type><name>int</name></type> <name>T</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>T</name> <operator>&lt;</operator> <name>t</name></expr>;</condition> <incr><expr><name>T</name><operator>++</operator></expr></incr>)</control><block>{

        <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>, <decl><type ref="prev"/><name>d</name></decl>, <decl><type ref="prev"/><name>k</name></decl> ;</decl_stmt>
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name> <operator>&gt;&gt;</operator> <name>b</name> <operator>&gt;&gt;</operator> <name>c</name> <operator>&gt;&gt;</operator> <name>d</name> <operator>&gt;&gt;</operator> <name>k</name></expr> ;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>pens</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt>
        <while>while<condition>(<expr><name>pens</name><operator>*</operator><name>c</name> <operator>&lt;</operator> <name>a</name></expr>)</condition>
            <block type="pseudo"><expr_stmt><expr><name>pens</name><operator>++</operator></expr> ;</expr_stmt></block></while>
        <if>if<condition>(<expr><operator>(</operator><name>k</name><operator>-</operator><name>pens</name><operator>)</operator> <operator>*</operator> <name>d</name> <operator>&gt;=</operator> <name>b</name></expr>)</condition><then><block>{

            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>pens</name> <operator>&lt;&lt;</operator> <literal type="char">' '</literal> <operator>&lt;&lt;</operator> <name>k</name><operator>-</operator><name>pens</name> <operator>&lt;&lt;</operator> <literal type="char">'\n'</literal></expr> ;</expr_stmt>

        }</block></then><else>else<block>{

            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"-1\n"</literal></expr> ;</expr_stmt>

        }</block></else></if>

    }</block></for>

}</block></function>
</unit>
