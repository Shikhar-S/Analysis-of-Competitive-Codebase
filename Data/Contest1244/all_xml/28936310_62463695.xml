<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28936310_62463695.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>void</name></type> <name>f</name><parameter_list>()</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>, <decl><type ref="prev"/><name>d</name></decl>, <decl><type ref="prev"/><name>e</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name> <operator>&gt;&gt;</operator> <name>b</name> <operator>&gt;&gt;</operator> <name>c</name> <operator>&gt;&gt;</operator> <name>d</name> <operator>&gt;&gt;</operator> <name>e</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>_min</name> <init>= <expr><operator>(</operator><name>a</name> <operator>+</operator> <name>c</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <name>c</name> <operator>+</operator> <operator>(</operator><name>b</name> <operator>+</operator> <name>d</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <name>d</name></expr></init></decl>;</decl_stmt>
	<if>if<condition>(<expr><name>_min</name> <operator>&lt;=</operator> <name>e</name></expr>)</condition><then><block>{
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>(</operator><name>a</name> <operator>+</operator> <name>c</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <name>c</name> <operator>&lt;&lt;</operator> <literal type="char">' '</literal> <operator>&lt;&lt;</operator> <operator>(</operator><name>b</name> <operator>+</operator> <name>d</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <name>d</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
	}</block></then><else>else<block>{
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt> 
	}</block></else></if>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>q</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>q</name></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>q</name><operator>--</operator></expr>)</condition><block>{
		<expr_stmt><expr><call><name>f</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></while>
}</block></function>
</unit>
