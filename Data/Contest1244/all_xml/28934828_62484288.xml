<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28934828_62484288.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>X</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Y</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MP</name></cpp:macro> <cpp:value>make_pair</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PB</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>niz</name><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name> <parameter_list>()</parameter_list> <block>{
	
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>niz</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>niz</name></expr></argument>,<argument><expr><name>niz</name><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>mini</name><init>=<expr><name><name>niz</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>maxi</name><init>=<expr><name><name>niz</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>a</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>b</name><init>=<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>c</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<while>while<condition>(<expr><name>a</name><operator>&lt;</operator><name>n</name> <operator>&amp;&amp;</operator> <name><name>niz</name><index>[<expr><name>a</name></expr>]</index></name><operator>==</operator><name>mini</name></expr>)</condition><block>{
		<expr_stmt><expr><name>a</name><operator>++</operator></expr>;</expr_stmt>
	}</block></while>
	<while>while<condition>(<expr><name>b</name><operator>&gt;=</operator><literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>niz</name><index>[<expr><name>b</name></expr>]</index></name><operator>==</operator><name>maxi</name></expr>)</condition><block>{
		<expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>c</name><operator>++</operator></expr>;</expr_stmt>
	}</block></while>
	<while>while<condition>(<expr><name>maxi</name><operator>&gt;</operator><name>mini</name></expr>)</condition><block>{
		<if>if<condition>(<expr><name>c</name><operator>&lt;</operator><name>a</name></expr>)</condition><then><block>{
			<if>if<condition>(<expr><operator>(</operator><name>maxi</name><operator>-</operator><name><name>niz</name><index>[<expr><name>b</name></expr>]</index></name><operator>)</operator><operator>*</operator><name>c</name><operator>&lt;=</operator><name>k</name></expr>)</condition><then><block>{
				<expr_stmt><expr><name>k</name><operator>-=</operator><operator>(</operator><name>maxi</name><operator>-</operator><name><name>niz</name><index>[<expr><name>b</name></expr>]</index></name><operator>)</operator><operator>*</operator><name>c</name></expr>;</expr_stmt>
				<expr_stmt><expr><name>maxi</name><operator>=</operator><name><name>niz</name><index>[<expr><name>b</name></expr>]</index></name></expr>;</expr_stmt>
				<while>while<condition>(<expr><name>b</name><operator>&gt;=</operator><literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>niz</name><index>[<expr><name>b</name></expr>]</index></name><operator>==</operator><name>maxi</name></expr>)</condition><block>{
					<expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
					<expr_stmt><expr><name>c</name><operator>++</operator></expr>;</expr_stmt>
				}</block></while>
			}</block></then>
			<else>else<block>{
				<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>maxi</name><operator>-</operator><name>mini</name><operator>-</operator><name>k</name><operator>/</operator><name>c</name></expr>;</expr_stmt>
				<return>return <expr><literal type="number">0</literal></expr>;</return>
			}</block></else></if>
		}</block></then>
		<else>else<block>{
			<if>if<condition>(<expr><operator>(</operator><name><name>niz</name><index>[<expr><name>a</name></expr>]</index></name><operator>-</operator><name>mini</name><operator>)</operator><operator>*</operator><name>a</name><operator>&lt;=</operator><name>k</name></expr>)</condition><then><block>{
				<expr_stmt><expr><name>k</name><operator>-=</operator><operator>(</operator><name><name>niz</name><index>[<expr><name>a</name></expr>]</index></name><operator>-</operator><name>mini</name><operator>)</operator><operator>*</operator><name>a</name></expr>;</expr_stmt>
				<expr_stmt><expr><name>mini</name><operator>=</operator><name><name>niz</name><index>[<expr><name>a</name></expr>]</index></name></expr>;</expr_stmt>
				<while>while<condition>(<expr><name>a</name><operator>&lt;</operator><name>n</name> <operator>&amp;&amp;</operator> <name><name>niz</name><index>[<expr><name>a</name></expr>]</index></name><operator>==</operator><name>mini</name></expr>)</condition><block>{
					<expr_stmt><expr><name>a</name><operator>++</operator></expr>;</expr_stmt>
				}</block></while>
			}</block></then>
			<else>else<block>{
				<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>maxi</name><operator>-</operator><name>mini</name><operator>-</operator><name>k</name><operator>/</operator><name>a</name></expr>;</expr_stmt>
				<return>return <expr><literal type="number">0</literal></expr>;</return>
			}</block></else></if>
		}</block></else></if>
	}</block></while>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">0</literal></expr>;</expr_stmt>
	
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
