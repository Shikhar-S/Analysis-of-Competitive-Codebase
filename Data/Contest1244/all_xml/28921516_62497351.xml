<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28921516_62497351.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>llint</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>llint</name></type> <name>MOD</name> <init>= <expr><literal type="number">1e9</literal> <operator>+</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>llint</name></type> <name>N</name></decl>, <decl><type ref="prev"/><name>K</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>N</name> <operator>&gt;&gt;</operator> <name>K</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>llint</name></expr></argument>&gt;</argument_list></name></type> <name>v</name><argument_list>(<argument><expr><name>N</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>v</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><call><name><name>v</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>v</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>llint</name></type> <name>minimals</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>maximals</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>N</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
        <if>if<condition>(<expr><name><name>v</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name><name>v</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>minimals</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
        <if>if<condition>(<expr><name><name>v</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name><name>v</name><index>[<expr><name>N</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>maximals</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
    }</block></for>
    <decl_stmt><decl><type><name>llint</name></type> <name>MIN</name> <init>= <expr><name><name>v</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>, <decl><type ref="prev"/><name>MAX</name> <init>= <expr><name><name>v</name><index>[<expr><name>N</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><name>K</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{
        <if>if<condition>(<expr><name>minimals</name> <operator>+</operator> <name>maximals</name> <operator>&gt;</operator> <name>N</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr>;</expr_stmt>
            <return>return <expr><literal type="number">0</literal></expr>;</return>
        }</block></then></if>
        <if>if<condition>(<expr><name>minimals</name> <operator>&lt;</operator> <name>maximals</name></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name>llint</name></type> <name>diff</name> <init>= <expr><name><name>v</name><index>[<expr><name>minimals</name></expr>]</index></name> <operator>-</operator> <name><name>v</name><index>[<expr><name>minimals</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if>if<condition>(<expr><name>diff</name> <operator>*</operator> <name>minimals</name> <operator>&lt;=</operator> <name>K</name></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>K</name> <operator>-=</operator> <name>diff</name><operator>*</operator><name>minimals</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>MIN</name> <operator>=</operator> <name><name>v</name><index>[<expr><name>minimals</name></expr>]</index></name></expr>;</expr_stmt>
                <while>while<condition>(<expr><name>minimals</name> <operator>+</operator> <literal type="number">1</literal> <operator>&lt;</operator> <name>N</name> <operator>&amp;&amp;</operator> <name><name>v</name><index>[<expr><name>minimals</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <name><name>v</name><index>[<expr><name>minimals</name></expr>]</index></name></expr>)</condition> <block>{
                    <expr_stmt><expr><name>minimals</name><operator>++</operator></expr>;</expr_stmt>
                }</block></while>
                <expr_stmt><expr><name>minimals</name><operator>++</operator></expr>;</expr_stmt>
            }</block></then>
            <else>else <block>{
                <expr_stmt><expr><name>MIN</name> <operator>=</operator> <name><name>v</name><index>[<expr><name>minimals</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name>K</name> <operator>/</operator> <name>minimals</name></expr>;</expr_stmt>
                <break>break;</break>
            }</block></else></if>
        }</block></then>
        <else>else <block>{
            <decl_stmt><decl><type><name>llint</name></type> <name>diff</name> <init>= <expr><name><name>v</name><index>[<expr><name>N</name> <operator>-</operator> <name>maximals</name></expr>]</index></name> <operator>-</operator> <name><name>v</name><index>[<expr><name>N</name> <operator>-</operator> <name>maximals</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if>if<condition>(<expr><name>diff</name> <operator>*</operator> <name>maximals</name> <operator>&lt;=</operator> <name>K</name></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>K</name> <operator>-=</operator> <name>diff</name> <operator>*</operator> <name>maximals</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>MAX</name> <operator>=</operator> <name><name>v</name><index>[<expr><name>N</name> <operator>-</operator> <name>maximals</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
                <while>while<condition>(<expr><name>N</name> <operator>-</operator> <name>maximals</name> <operator>-</operator> <literal type="number">2</literal> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>v</name><index>[<expr><name>N</name> <operator>-</operator> <name>maximals</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name> <operator>==</operator> <name><name>v</name><index>[<expr><name>N</name> <operator>-</operator> <name>maximals</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block>{
                    <expr_stmt><expr><name>maximals</name><operator>++</operator></expr>;</expr_stmt>
                }</block></while>
                <expr_stmt><expr><name>maximals</name><operator>++</operator></expr>;</expr_stmt>
            }</block></then>
            <else>else <block>{
                <expr_stmt><expr><name>MAX</name> <operator>=</operator> <name><name>v</name><index>[<expr><name>N</name> <operator>-</operator> <name>maximals</name></expr>]</index></name> <operator>-</operator> <name>K</name> <operator>/</operator> <name>maximals</name></expr>;</expr_stmt>
                <break>break;</break>
            }</block></else></if>
        }</block></else></if>
        <comment type="line">// cout &lt;&lt; MIN &lt;&lt; " " &lt;&lt; MAX &lt;&lt; " " &lt;&lt; minimals &lt;&lt; " " &lt;&lt; maximals &lt;&lt; endl;</comment>
    }</block></while>
    <comment type="line">// cout &lt;&lt; minimals &lt;&lt; " " &lt;&lt; maximals &lt;&lt; endl;</comment>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>MAX</name> <operator>-</operator> <name>MIN</name></expr>;</expr_stmt>
}</block></function></unit>
