<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28909676_62493246.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>


<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>p</name></decl>,<decl><type ref="prev"/><name>d</name></decl>,<decl><type ref="prev"/><name>w</name></decl>,<decl><type ref="prev"/><name>i</name></decl>,<decl><type ref="prev"/><name>mx</name></decl>,<decl><type ref="prev"/><name>rest</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>p</name><operator>&gt;&gt;</operator><name>w</name><operator>&gt;&gt;</operator><name>d</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>mx</name> <operator>=</operator> <call><name>min</name><argument_list>(<argument><expr><name>n</name></expr></argument>,<argument><expr><name>p</name><operator>/</operator><name>w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><literal type="number">200000</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name>rest</name> <operator>=</operator> <name>p</name> <operator>-</operator> <operator>(</operator><name>mx</name><operator>*</operator><name>w</name><operator>)</operator></expr>;</expr_stmt>
        <if>if<condition>(<expr><name>rest</name><operator>%</operator><name>d</name><operator>==</operator><literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>(</operator><name>rest</name><operator>/</operator><name>d</name><operator>)</operator><operator>+</operator><name>mx</name><operator>&lt;=</operator><name>n</name></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>mx</name><operator>&lt;&lt;</operator><literal type="char">' '</literal><operator>&lt;&lt;</operator><name>rest</name><operator>/</operator><name>d</name><operator>&lt;&lt;</operator><literal type="char">' '</literal><operator>&lt;&lt;</operator><name>n</name><operator>-</operator><name>mx</name><operator>-</operator><name>rest</name><operator>/</operator><name>d</name><operator>&lt;&lt;</operator><literal type="char">'\n'</literal></expr>;</expr_stmt>
            <return>return <expr><literal type="number">0</literal></expr>;</return>
        }</block></then></if>
        <expr_stmt><expr><name>mx</name><operator>--</operator></expr>;</expr_stmt>
        <if>if<condition>(<expr><name>mx</name><operator>==</operator><operator>-</operator><literal type="number">1</literal></expr>)</condition><then><block type="pseudo"><break>break;</break></block></then></if>
    }</block></for>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"-1\n"</literal></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
