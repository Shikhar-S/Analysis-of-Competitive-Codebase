<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28895783_62472855.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ext/pb_ds/assoc_container.hpp&gt;</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ext/pb_ds/tree_policy.hpp&gt;</cpp:file></cpp:include> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fast</name></cpp:macro> <cpp:value>ios_base::sync_with_stdio(false);     cin.tie(NULL);</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro>  <cpp:value>long long int</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ull</name></cpp:macro> <cpp:value>unsigned long long int</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mp</name></cpp:macro> <cpp:value>make_pair</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pa</name></cpp:macro> <cpp:value>pair&lt;long long int,long long int&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>forn</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i=0;i&lt;n;i++)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ordered_set</name></cpp:macro> <cpp:value>tree&lt;int, null_type,less&lt;int&gt;, rb_tree_tag,tree_order_statistics_node_update&gt;</cpp:value></cpp:define> 
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<using>using <namespace>namespace <name>__gnu_pbds</name>;</namespace></using>


<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{

  <decl_stmt><decl><type><name>int</name></type> <name>t</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition>
    <block>{
        <decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>ll</name></type> <name>a</name> <init>= <expr><name>n</name></expr></init></decl>,<decl><type ref="prev"/><name>b</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
        <macro><name>forn</name><argument_list>(<argument>i</argument>,<argument>n</argument>)</argument_list></macro> <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'1'</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>b</name><operator>=</operator><name>i</name></expr>;</expr_stmt></block></then></if>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&gt;=</operator><literal type="number">0</literal></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block type="pseudo"><if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'1'</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>a</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt></block></then></if></block></for>

        <decl_stmt><decl><type><name>ll</name></type> <name>ans</name> <init>= <expr><operator>(</operator><name>b</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>*</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <if>if<condition>(<expr><operator>(</operator><name>n</name><operator>-</operator><name>a</name><operator>)</operator><operator>*</operator><literal type="number">2</literal><operator>&gt;</operator><name>ans</name></expr>)</condition><then>
          <block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>=</operator> <operator>(</operator><name>n</name><operator>-</operator><name>a</name><operator>)</operator><operator>*</operator><literal type="number">2</literal></expr>;</expr_stmt></block></then></if>

        <if>if<condition>(<expr><name>a</name><operator>==</operator><name>n</name> <operator>&amp;&amp;</operator>  <name>b</name><operator>==</operator><operator>-</operator><literal type="number">1</literal></expr>)</condition><then>
          <block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>=</operator> <name>n</name></expr>;</expr_stmt></block></then></if>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>

    }</block></while>

}</block></function></unit>
