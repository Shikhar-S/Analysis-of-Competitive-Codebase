<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28896630_62486903.cpp"><comment type="line">//besmellah</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>p</name></decl>, <decl><type ref="prev"/><name>w</name></decl>, <decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>p</name> <operator>&gt;&gt;</operator> <name>w</name> <operator>&gt;&gt;</operator> <name>d</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name>long</name> <name>long</name></expr></argument>&gt;</argument_list></name></type> <name>X</name></decl>;</decl_stmt>
	<for>for <control>(<init><decl><type><name>long</name> <name>long</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>d</name></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control><block>{
		<if>if <condition>(<expr><name>i</name> <operator>*</operator> <operator>(</operator><name>w</name> <operator>%</operator> <name>d</name><operator>)</operator> <operator>%</operator> <name>d</name> <operator>==</operator> <name>p</name> <operator>%</operator> <name>d</name></expr>)</condition><then><block>{
			<expr_stmt><expr><call><name><name>X</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
	<if>if <condition>(<expr><name>n</name> <operator>*</operator> <name>w</name> <operator>&lt;</operator> <name>p</name></expr>)</condition><then><block>{
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<if>if <condition>(<expr><call><name><name>X</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>ans</name> <init>= <expr><name><name>X</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>y</name> <init>= <expr><name>p</name> <operator>/</operator> <name>w</name></expr></init></decl>;</decl_stmt>
	<for>for <control>(<init><decl><type><name>auto</name></type> <name>x</name><range>: <expr><name>X</name></expr></range></decl></init>)</control><block>{
		<if>if <condition>(<expr><name>y</name> <operator>%</operator> <name>d</name> <operator>&lt;</operator> <name>x</name></expr>)</condition><then><block>{
			<expr_stmt><expr><name>ans</name> <operator>=</operator> <call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>, <argument><expr><operator>(</operator><name>y</name> <operator>/</operator> <name>d</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <name>d</name> <operator>+</operator> <name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else>else
			<block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>=</operator> <call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>, <argument><expr><operator>(</operator><name>y</name> <operator>/</operator> <name>d</name><operator>)</operator> <operator>*</operator> <name>d</name> <operator>+</operator> <name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></else></if>
	}</block></for>
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>x</name> <init>= <expr><name>ans</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name>y</name> <operator>=</operator> <operator>(</operator><name>p</name> <operator>-</operator> <name>x</name> <operator>*</operator> <name>w</name><operator>)</operator> <operator>/</operator> <name>d</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>z</name> <init>= <expr><operator>(</operator><name>n</name> <operator>-</operator> <operator>(</operator><name>x</name> <operator>+</operator> <name>y</name><operator>)</operator><operator>)</operator></expr></init></decl>;</decl_stmt>
	<if>if <condition>(<expr><name>p</name> <operator>&lt;</operator> <name>w</name></expr>)</condition><then><block>{
		<expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>y</name> <operator>=</operator> <name>p</name> <operator>/</operator> <name>d</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>z</name> <operator>=</operator> <name>n</name> <operator>-</operator> <name>y</name></expr>;</expr_stmt>
		<if>if <condition>(<expr><name>y</name> <operator>*</operator> <name>d</name> <operator>!=</operator> <name>p</name></expr>)</condition><then><block>{
			<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
		}</block></then></if>
	}</block></then></if>
	<if>if <condition>(<expr><name>z</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="char">' '</literal> <operator>&lt;&lt;</operator> <name>y</name> <operator>&lt;&lt;</operator> <literal type="char">' '</literal> <operator>&lt;&lt;</operator> <name>z</name></expr>;</expr_stmt>
	}</block></then>
	<else>else
		<block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block></else></if>
}</block></function>
</unit>
