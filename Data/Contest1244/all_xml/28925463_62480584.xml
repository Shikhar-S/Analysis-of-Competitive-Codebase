<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28925463_62480584.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>M</name><init>=<expr><literal type="number">1e5</literal><operator>+</operator><literal type="number">5</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>K</name></decl>,<decl><type ref="prev"/><name><name>A</name><index>[<expr><name>M</name></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>Solve</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>A</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>A</name><operator>+</operator><name>n</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>ans</name><init>=<expr><name><name>A</name><index>[<expr><name>n</name></expr>]</index></name><operator>-</operator><name><name>A</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>l</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>r</name><init>=<expr><name>n</name></expr></init></decl>,<decl><type ref="prev"/><name>lc</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>rc</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><literal type="boolean">true</literal></expr>)</condition>
    <block>{
        <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>dr</name><init>=<expr><call><name>min</name><argument_list>(<argument><expr><name>K</name><operator>/</operator><name>rc</name></expr></argument>,<argument><expr><name><name>A</name><index>[<expr><name>r</name></expr>]</index></name><operator>-</operator><name><name>A</name><index>[<expr><name>r</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>A</name><index>[<expr><name>r</name></expr>]</index></name><operator>-=</operator><name>dr</name></expr>;</expr_stmt><expr_stmt><expr><name>ans</name><operator>-=</operator><name>dr</name></expr>;</expr_stmt><expr_stmt><expr><name>K</name><operator>-=</operator><name>rc</name><operator>*</operator><name>dr</name></expr>;</expr_stmt><expr_stmt><expr><name>r</name><operator>--</operator></expr>;</expr_stmt><expr_stmt><expr><name>rc</name><operator>++</operator></expr>;</expr_stmt>
        <comment type="line">// printf("dr = %lld %lld,%lld\n",dr,A[r],A[r+1]);</comment>
        <if>if<condition>(<expr><name><name>A</name><index>[<expr><name>r</name></expr>]</index></name><operator>!=</operator><name><name>A</name><index>[<expr><name>r</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>||</operator> <name>l</name><operator>==</operator><name>r</name></expr>)</condition><then><block type="pseudo"><break>break;</break></block></then></if>
        <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>dl</name><init>=<expr><call><name>min</name><argument_list>(<argument><expr><name>K</name><operator>/</operator><name>lc</name></expr></argument>,<argument><expr><name><name>A</name><index>[<expr><name>l</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>A</name><index>[<expr><name>l</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>A</name><index>[<expr><name>l</name></expr>]</index></name><operator>+=</operator><name>dl</name></expr>;</expr_stmt><expr_stmt><expr><name>ans</name><operator>-=</operator><name>dl</name></expr>;</expr_stmt><expr_stmt><expr><name>K</name><operator>-=</operator><name>lc</name><operator>*</operator><name>dl</name></expr>;</expr_stmt><expr_stmt><expr><name>l</name><operator>++</operator></expr>;</expr_stmt><expr_stmt><expr><name>lc</name><operator>++</operator></expr>;</expr_stmt>
        <comment type="line">// printf("dl = %lld %lld,%lld\n",dl,A[l],A[l-1]);</comment>
        <if>if<condition>(<expr><name><name>A</name><index>[<expr><name>l</name></expr>]</index></name><operator>!=</operator><name><name>A</name><index>[<expr><name>l</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name> <operator>||</operator> <name>l</name><operator>==</operator><name>r</name></expr>)</condition><then><block type="pseudo"><break>break;</break></block></then></if>
    }</block></while>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%lld\n"</literal></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%lld"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>K</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%lld"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>A</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
    <expr_stmt><expr><call><name>Solve</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
