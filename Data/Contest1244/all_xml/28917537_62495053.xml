<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28917537_62495053.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>x</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>y</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pi</name></cpp:macro> <cpp:value>pair&lt;int,int&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pl</name></cpp:macro> <cpp:value>pair&lt;ll,ll&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pd</name></cpp:macro> <cpp:value>pair&lt;double,double&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ld</name></cpp:macro> <cpp:value>long double</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pld</name></cpp:macro> <cpp:value>pair&lt;ld,ld&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>lg</name></cpp:macro> <cpp:value>length()</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sz</name></cpp:macro> <cpp:value>size()</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vi</name></cpp:macro> <cpp:value>vector&lt;int&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vl</name></cpp:macro> <cpp:value>vector&lt;ll&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vp</name></cpp:macro> <cpp:value>vector&lt;pi&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vpl</name></cpp:macro> <cpp:value>vector&lt;pl&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INF</name></cpp:macro> <cpp:value>1000000005</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LINF</name></cpp:macro> <cpp:value>1000000000000000005</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>c</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name>ll</name></expr></argument>&gt;</argument_list></name></type> <name><name>g</name><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>ord</name><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>ord1</name><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>root</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name> <operator>&gt;&gt;</operator> <name>b</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>g</name><index>[<expr><name>a</name></expr>]</index></name><operator>.</operator><call><name>pb</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>g</name><index>[<expr><name>b</name></expr>]</index></name><operator>.</operator><call><name>pb</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>g</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <literal type="number">3</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
            <return>return <expr><literal type="number">0</literal></expr>;</return>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>g</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>root</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <expr_stmt><expr><name><name>ord1</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>root</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>ord1</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>g</name><index>[<expr><name>root</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>cur</name> <init>= <expr><name><name>ord1</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>pos</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><name>pos</name> <operator>&lt;</operator> <name>n</name></expr>)</condition><block>{
        <expr_stmt><expr><name><name>ord1</name><index>[<expr><name>pos</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>g</name><index>[<expr><name>cur</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>g</name><index>[<expr><name>cur</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>-</operator> <name><name>ord1</name><index>[<expr><name>pos</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
        <expr_stmt><expr><name>pos</name><operator>++</operator></expr>;</expr_stmt>
        <expr_stmt><expr><name>cur</name> <operator>=</operator> <name><name>ord1</name><index>[<expr><name>pos</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></while>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name><name>ord</name><index>[<expr><name><name>ord1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
    }</block></for>
    <decl_stmt><decl><type><name>ll</name></type> <name>rez</name> <init>= <expr><literal type="number">1e18</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>rs</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <comment type="line" format="doxygen">///////////////</comment>
    <decl_stmt><decl><type><name>ll</name></type> <name>sum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if<condition>(<expr><name>sum</name> <operator>&lt;</operator> <name>rez</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>rez</name> <operator>=</operator> <name>sum</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>rs</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
    }</block></then></if>
    <comment type="line" format="doxygen">///////////////</comment>
    <expr_stmt><expr><name>sum</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if<condition>(<expr><name>sum</name> <operator>&lt;</operator> <name>rez</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>rez</name> <operator>=</operator> <name>sum</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>rs</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
    }</block></then></if><comment type="line" format="doxygen">///////////////</comment>
    <expr_stmt><expr><name>sum</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if<condition>(<expr><name>sum</name> <operator>&lt;</operator> <name>rez</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>rez</name> <operator>=</operator> <name>sum</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>rs</name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
    }</block></then></if><comment type="line" format="doxygen">///////////////</comment>
    <expr_stmt><expr><name>sum</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if<condition>(<expr><name>sum</name> <operator>&lt;</operator> <name>rez</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>rez</name> <operator>=</operator> <name>sum</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>rs</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
    }</block></then></if><comment type="line" format="doxygen">///////////////</comment>
    <expr_stmt><expr><name>sum</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if<condition>(<expr><name>sum</name> <operator>&lt;</operator> <name>rez</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>rez</name> <operator>=</operator> <name>sum</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>rs</name> <operator>=</operator> <literal type="number">5</literal></expr>;</expr_stmt>
    }</block></then></if><comment type="line" format="doxygen">///////////////</comment>
    <expr_stmt><expr><name>sum</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>sum</name> <operator>+=</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if<condition>(<expr><name>sum</name> <operator>&lt;</operator> <name>rez</name></expr>)</condition><then><block>{
        <expr_stmt><expr><name>rez</name> <operator>=</operator> <name>sum</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>rs</name> <operator>=</operator> <literal type="number">6</literal></expr>;</expr_stmt>
    }</block></then></if>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>rez</name> <operator>&lt;&lt;</operator> <literal type="char">'\n'</literal></expr>;</expr_stmt>
    <comment type="line" format="doxygen">/////////////</comment>
    <if>if<condition>(<expr><name>rs</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    }</block></then></if>
    <comment type="line" format="doxygen">/////////////</comment>
    <if>if<condition>(<expr><name>rs</name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    }</block></then></if>
    <comment type="line" format="doxygen">/////////////</comment>
    <if>if<condition>(<expr><name>rs</name> <operator>==</operator> <literal type="number">3</literal></expr>)</condition><then><block>{
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    }</block></then></if>
    <comment type="line" format="doxygen">/////////////</comment>
    <if>if<condition>(<expr><name>rs</name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition><then><block>{
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    }</block></then></if>
    <comment type="line" format="doxygen">/////////////</comment>
    <if>if<condition>(<expr><name>rs</name> <operator>==</operator> <literal type="number">5</literal></expr>)</condition><then><block>{
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    }</block></then></if>
    <comment type="line" format="doxygen">/////////////</comment>
    <if>if<condition>(<expr><name>rs</name> <operator>==</operator> <literal type="number">6</literal></expr>)</condition><then><block>{
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init>  <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">2</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>ord</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    }</block></then></if>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
