<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28936273_62473291.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
   <decl_stmt><decl><type><name>char</name></type> <name><name>str</name><index>[<expr><literal type="number">2000</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>ts</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>ts</name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>ts</name><operator>--</operator></expr>)</condition><block>{
    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>mi</name><init>=<expr><literal type="number">300000</literal></expr></init></decl>,<decl><type ref="prev"/><name>ma</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%s"</literal></expr></argument>,<argument><expr><name>str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>l</name></decl>;</decl_stmt>
            <expr_stmt><expr><name>l</name><operator>=</operator><name><name>str</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><literal type="number">48</literal></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>l</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block type="pseudo"><continue>continue;</continue></block></then></if>
            <comment type="line">//scanf("%d",&amp;l);</comment>
            <expr_stmt><expr><name>mi</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>mi</name></expr></argument>,<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>ma</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>ma</name></expr></argument>,<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <if>if<condition>(<expr><name>mi</name><operator>&gt;</operator><name>n</name><operator>&amp;&amp;</operator><name>ma</name><operator>&lt;</operator><literal type="number">1</literal></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <continue>continue;</continue>
        }</block></then></if>
        <decl_stmt><decl><type><name>int</name></type> <name>ans</name><init>=<expr><call><name>max</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>n</name><operator>-</operator><name>mi</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></argument>,<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>ma</name><operator>)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>ans</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></while>
}</block></function>
</unit>
