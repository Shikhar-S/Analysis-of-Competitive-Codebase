<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28911420_62493225.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	
	<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>k</name></decl>,<decl><type ref="prev"/><name>temp</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name><name>a</name><index>[<expr><name>n</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>d</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<comment type="line">//a[0]=0;</comment>
	<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>a</name><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name><name>d</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>=</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>l</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>m</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>t</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>tt</name><init>=<expr><name>n</name><operator>-</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>ans</name><init>=<expr><name><name>a</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<while>while<condition>(<expr><name>t</name><operator>&lt;=</operator><name>tt</name> <operator>&amp;&amp;</operator> <name>k</name><operator>&gt;</operator><literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>ans</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition>
	<block>{
		<if>if <condition>(<expr><name>l</name><operator>&lt;</operator><name>m</name></expr>)</condition><then>
		<block>{
			<expr_stmt><expr><name>k</name><operator>-=</operator><name><name>d</name><index>[<expr><name>t</name></expr>]</index></name><operator>*</operator><name>l</name></expr>;</expr_stmt>
			<expr_stmt><expr><name>ans</name><operator>-=</operator><name><name>d</name><index>[<expr><name>t</name></expr>]</index></name></expr>;</expr_stmt>
			<if>if <condition>(<expr><name>k</name><operator>&lt;</operator><literal type="number">0</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>d</name><index>[<expr><name>t</name></expr>]</index></name></expr>;</expr_stmt>
				<expr_stmt><expr><name>k</name><operator>+=</operator><name><name>d</name><index>[<expr><name>t</name></expr>]</index></name><operator>*</operator><name>l</name></expr>;</expr_stmt>
				<break>break;</break>
			}</block></then></if>
			<expr_stmt><expr><name>l</name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><name>t</name><operator>++</operator></expr>;</expr_stmt>
		}</block></then>
		<else>else
		<block>{
			<expr_stmt><expr><name>k</name><operator>-=</operator><name><name>d</name><index>[<expr><name>tt</name></expr>]</index></name><operator>*</operator><name>m</name></expr>;</expr_stmt>
			<expr_stmt><expr><name>ans</name><operator>-=</operator><name><name>d</name><index>[<expr><name>tt</name></expr>]</index></name></expr>;</expr_stmt>
			<if>if <condition>(<expr><name>k</name><operator>&lt;</operator><literal type="number">0</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>ans</name><operator>+=</operator><name><name>d</name><index>[<expr><name>tt</name></expr>]</index></name></expr>;</expr_stmt>
				<expr_stmt><expr><name>k</name><operator>+=</operator><name><name>d</name><index>[<expr><name>tt</name></expr>]</index></name><operator>*</operator><name>l</name></expr>;</expr_stmt>
				<break>break;</break>
			}</block></then></if>
			<expr_stmt><expr><name>m</name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><name>tt</name><operator>--</operator></expr>;</expr_stmt>
		}</block></else></if>
	}</block></while>
	<if>if <condition>(<expr><name>k</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then>
	<block>{
		<expr_stmt><expr><name>ans</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>temp</name></expr></argument>,<argument><expr><name>ans</name><operator>-</operator><name>k</name><operator>/</operator><call><name>min</name><argument_list>(<argument><expr><name>l</name></expr></argument>,<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><name>temp</name></expr></argument>)</argument_list></call><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
}</block></function></unit>
