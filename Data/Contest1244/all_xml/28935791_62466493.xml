<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28935791_62466493.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<function><specifier>inline</specifier> <type><name>void</name></type> <name>smax</name><parameter_list>(<parameter><decl><type><name>int</name><modifier>&amp;</modifier></type> <name>s</name></decl></parameter>,<parameter><decl><type><specifier>const</specifier> <name>int</name><modifier>&amp;</modifier></type> <name>a</name></decl></parameter>)</parameter_list> <block>{ <if>if <condition>(<expr><name>s</name><operator>&lt;</operator><name>a</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>s</name><operator>=</operator><name>a</name></expr>;</expr_stmt></block></then></if> }</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<expr_stmt><expr><call><name><name>std</name><operator>::</operator><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr><operator>,</operator><expr><call><name><name>std</name><operator>::</operator><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt> <expr_stmt><expr><name><name>std</name><operator>::</operator><name>cin</name></name><operator>&gt;&gt;</operator><name>T</name></expr>;</expr_stmt>
	<while>while <condition>(<expr><name>T</name><operator>--</operator><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition> <block>{
		<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt> <expr_stmt><expr><name><name>std</name><operator>::</operator><name>cin</name></name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>ans</name><init>=<expr><name>n</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt> <decl_stmt><decl><type><name>bool</name></type> <name>flag</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
			<decl_stmt><decl><type><name>char</name></type> <name>x</name></decl>;</decl_stmt> <expr_stmt><expr><name><name>std</name><operator>::</operator><name>cin</name></name><operator>&gt;&gt;</operator><name>x</name></expr>;</expr_stmt>
			<if>if <condition>(<expr><name>x</name><operator>==</operator><literal type="char">'1'</literal></expr>)</condition><then> <block>{
				<expr_stmt><expr><name>flag</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>smax</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>smax</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><literal type="number">2</literal><operator>*</operator><operator>(</operator><name>n</name><operator>-</operator><name>i</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
		<if>if <condition>(<expr><operator>!</operator><name>flag</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><operator>--</operator><name>ans</name></expr>;</expr_stmt></block></then></if>
		<expr_stmt><expr><name><name>std</name><operator>::</operator><name>cout</name></name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><literal type="char">'\n'</literal></expr>;</expr_stmt>
	}</block></while>
}</block></function></unit>
