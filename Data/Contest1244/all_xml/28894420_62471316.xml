<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28894420_62471316.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long int</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>loop</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i=0; i&lt;a; i++)</cpp:value></cpp:define>
 
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>,<decl><type ref="prev"/><name>n</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>string</name></type> <name>str</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>l</name></decl>,<decl><type ref="prev"/><name>r</name></decl>;</decl_stmt>
	<macro><name>loop</name><argument_list>(<argument>t</argument>)</argument_list></macro><block>{
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>str</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>l</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>r</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block>{
			<if>if<condition>(<expr><name><name>str</name><index>[<expr><name>j</name></expr>]</index></name><operator>==</operator><literal type="char">'1'</literal></expr>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if>
			<expr_stmt><expr><name>l</name><operator>++</operator></expr>;</expr_stmt>
		}</block></for>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>j</name><operator>&gt;=</operator><literal type="number">0</literal></expr>;</condition> <incr><expr><name>j</name><operator>--</operator></expr></incr>)</control><block>{
			<if>if<condition>(<expr><name><name>str</name><index>[<expr><name>j</name></expr>]</index></name><operator>==</operator><literal type="char">'1'</literal></expr>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if>
			<expr_stmt><expr><name>r</name><operator>++</operator></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <call><name>max</name><argument_list>(<argument><expr><name>n</name></expr></argument>,<argument><expr><literal type="number">2</literal><operator>*</operator><name>n</name><operator>-</operator><literal type="number">2</literal><operator>*</operator><call><name>min</name><argument_list>(<argument><expr><name>l</name></expr></argument>,<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
	}</block>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
