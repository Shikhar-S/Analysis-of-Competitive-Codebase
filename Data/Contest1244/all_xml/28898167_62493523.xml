<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28898167_62493523.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FOR</name><parameter_list>(<parameter><type><name>i</name></type></parameter>, <parameter><type><name>x</name></type></parameter>, <parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i = (x), i##END = (y); i &lt;= i##END; ++i)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DOR</name><parameter_list>(<parameter><type><name>i</name></type></parameter>, <parameter><type><name>x</name></type></parameter>, <parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i = (x), i##END = (y); i &gt;= i##END; --i)</cpp:value></cpp:define>
<function><template>template<parameter_list>&lt;<parameter><type><name>typename</name></type> <name>T</name></parameter>, <parameter><type><name>typename</name></type> <name>_T</name></parameter>&gt;</parameter_list></template> <specifier>inline</specifier> <type><name>bool</name></type> <name>chk_min</name><parameter_list>(<parameter><decl><type><name>T</name> <modifier>&amp;</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>_T</name></type> <name>y</name></decl></parameter>)</parameter_list> <block>{<return>return <expr><ternary><condition><expr><name>y</name> <operator>&lt;</operator> <name>x</name></expr> ?</condition><then> <expr><name>x</name> <operator>=</operator> <name>y</name></expr></then></ternary></expr><operator>,</operator> <expr><literal type="number">1</literal> <operator>:</operator> <literal type="number">0</literal></expr>;</return>}</block></function>
<function><template>template<parameter_list>&lt;<parameter><type><name>typename</name></type> <name>T</name></parameter>, <parameter><type><name>typename</name></type> <name>_T</name></parameter>&gt;</parameter_list></template> <specifier>inline</specifier> <type><name>bool</name></type> <name>chk_max</name><parameter_list>(<parameter><decl><type><name>T</name> <modifier>&amp;</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>_T</name></type> <name>y</name></decl></parameter>)</parameter_list> <block>{<return>return <expr><ternary><condition><expr><name>x</name> <operator>&lt;</operator> <name>y</name></expr> ?</condition><then> <expr><name>x</name> <operator>=</operator> <name>y</name></expr></then></ternary></expr><operator>,</operator> <expr><literal type="number">1</literal> <operator>:</operator> <literal type="number">0</literal></expr>;</return>}</block></function>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name><init>=<expr><literal type="number">1e5</literal><operator>+</operator><literal type="number">5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt><decl_stmt><decl><type><name>ll</name></type> <name>K</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%lld"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>K</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<macro><name>FOR</name><argument_list>(<argument>i</argument>,<argument><literal type="number">1</literal></argument>,<argument>n</argument>)</argument_list></macro><expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>std</name><operator>::</operator><name>sort</name></name><argument_list>(<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><name><name>a</name><index>[<expr><name>n</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<macro><name>FOR</name><argument_list>(<argument>i</argument>,<argument><literal type="number">1</literal></argument>,<argument>n/<literal type="number">2</literal></argument>)</argument_list></macro>
	<block>{
		<decl_stmt><decl><type><name>ll</name></type> <name>t</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>n</name><operator>-</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><name>t</name><operator>=</operator><call><name><name>std</name><operator>::</operator><name>min</name></name><argument_list>(<argument><expr><literal type="number">1ll</literal><operator>*</operator><name><name>a</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name>K</name><operator>/</operator><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>+=</operator><name>t</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>K</name><operator>-=</operator><name>i</name><operator>*</operator><name>t</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>ans</name><operator>=</operator><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

		<if>if<condition>(<expr><name>i</name><operator>==</operator><name>n</name><operator>/</operator><literal type="number">2</literal><operator>&amp;&amp;</operator><name>n</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block type="pseudo"><continue>continue;</continue></block></then></if>

		<expr_stmt><expr><name>t</name><operator>=</operator><call><name><name>std</name><operator>::</operator><name>min</name></name><argument_list>(<argument><expr><literal type="number">1ll</literal><operator>*</operator><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>j</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>,<argument><expr><name>K</name><operator>/</operator><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>-=</operator><name>t</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>K</name><operator>-=</operator><name>i</name><operator>*</operator><name>t</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>ans</name><operator>=</operator><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

		<if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>a</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>||</operator><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>!=</operator><name><name>a</name><index>[<expr><name>j</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then><block type="pseudo"><break>break;</break></block></then></if>
	}</block>
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%lld\n"</literal></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
