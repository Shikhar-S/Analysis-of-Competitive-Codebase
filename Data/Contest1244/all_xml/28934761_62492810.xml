<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28934761_62492810.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>ll</name></type> <name><name>a</name><index>[<expr><literal type="number">100009</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>a</name><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>b</name><init>=<expr><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>,<decl><type ref="prev"/><name>cb</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>e</name><init>=<expr><name><name>a</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>,<decl><type ref="prev"/><name>ce</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>bi</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>ei</name><init>=<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><name>b</name><operator>!=</operator><name>e</name><operator>&amp;&amp;</operator><name>k</name><operator>&gt;</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name>ei</name><operator>&gt;</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name>bi</name><operator>&lt;</operator><name>n</name><operator>-</operator><literal type="number">1</literal></expr>)</condition>
    <block>{
        <decl_stmt><decl><type><name>bool</name></type> <name>o</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <while>while<condition>(<expr><name>b</name><operator>==</operator><name><name>a</name><index>[<expr><name>bi</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition>
        <block>{
            <expr_stmt><expr><name>bi</name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>cb</name><operator>++</operator></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>bi</name><operator>==</operator><name>ei</name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>o</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
                <break>break;</break>
            }</block></then></if>
        }</block></while>
        <if>if<condition>(<expr><name>o</name></expr>)</condition><then><block type="pseudo"><break>break;</break></block></then></if>
        <while>while<condition>(<expr><name>e</name><operator>==</operator><name><name>a</name><index>[<expr><name>ei</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition>
        <block>{
            <expr_stmt><expr><name>ei</name><operator>--</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>ce</name><operator>++</operator></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>ei</name><operator>==</operator><name>bi</name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>o</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
                <break>break;</break>
            }</block></then></if>
        }</block></while>
        <if>if<condition>(<expr><name>o</name></expr>)</condition><then><block type="pseudo"><break>break;</break></block></then></if>
        <if>if<condition>(<expr><name>cb</name><operator>&gt;</operator><name>ce</name></expr>)</condition><then>
        <block>{
            <decl_stmt><decl><type><name>ll</name></type> <name>ex</name><init>=<expr><operator>(</operator><name>e</name><operator>-</operator><name><name>a</name><index>[<expr><name>ei</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>*</operator><name>ce</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>ex</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>ex</name></expr></argument>,<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>k</name><operator>-=</operator><name>ex</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>e</name><operator>-=</operator><name>ex</name><operator>/</operator><name>ce</name></expr>;</expr_stmt>
        }</block></then>
        <else>else
        <block>{
            <decl_stmt><decl><type><name>ll</name></type> <name>ex</name><init>=<expr><operator>(</operator><name><name>a</name><index>[<expr><name>bi</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name>b</name><operator>)</operator><operator>*</operator><name>cb</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>ex</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>ex</name></expr></argument>,<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>k</name><operator>-=</operator><name>ex</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>b</name><operator>+=</operator><name>ex</name><operator>/</operator><name>cb</name></expr>;</expr_stmt>
        }</block></else></if>
    }</block></while>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>e</name><operator>-</operator><name>b</name></expr>;</expr_stmt>
}</block></function>
</unit>
