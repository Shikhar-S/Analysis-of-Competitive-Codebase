<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28904666_62494084.cpp"><comment type="line" format="doxygen">/// don't hack me</comment>

<comment type="line" format="doxygen">/// follow me: https://www.instagram.com/rose_culbece/</comment>

<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fi</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>se</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>followmeoninsta</name></cpp:macro> <cpp:value>ios_base::sync_with_stdio(0), cin.tie(0);</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>please</name></cpp:macro> <cpp:value>if(1)</cpp:value></cpp:define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>string</name></type> <name>st2</name></decl>;</decl_stmt>
<function><type><name>void</name></type> <name>solve</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>L</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>R</name></decl></parameter>, <parameter><decl><type><name>ll</name></type> <name>mx</name></decl></parameter>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>ll</name></type> <name>op</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name></type> <name>aa</name> <init>= <expr><name><name>st2</name><index>[<expr><name>L</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>char</name></type> <name>bb</name></decl>;</decl_stmt>
    <if>if<condition>(<expr><name>R</name> <operator>==</operator> <name>n</name><operator>-</operator><literal type="number">1</literal></expr>)</condition><then>
        <block type="pseudo"><expr_stmt><expr><name>bb</name> <operator>=</operator> <name><name>st2</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt></block></then>
    <else>else
        <block type="pseudo"><expr_stmt><expr><name>bb</name> <operator>=</operator> <name><name>st2</name><index>[<expr><name>R</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt></block></else></if>
   <comment type="line">// cout &lt;&lt; L &lt;&lt; " " &lt;&lt; R &lt;&lt; " " &lt;&lt; aa &lt;&lt; " " &lt;&lt; bb &lt;&lt; '\n';</comment>
    <while>while<condition>(<expr><name>op</name> <operator>&lt;=</operator> <name>mx</name> <operator>&amp;&amp;</operator> <name>L</name> <operator>&lt;=</operator> <name>R</name></expr>)</condition>
    <block>{
        <if>if<condition>(<expr><name>op</name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then>
        <block>{
            <while>while<condition>(<expr><name>L</name> <operator>&lt;=</operator> <name>R</name> <operator>&amp;&amp;</operator> <name><name>st2</name><index>[<expr><name>L</name></expr>]</index></name> <operator>==</operator> <name>aa</name></expr>)</condition>
                <block type="pseudo"><expr_stmt><expr><name><name>st2</name><index>[<expr><name>L</name></expr>]</index></name> <operator>=</operator> <name>aa</name></expr><operator>,</operator> <expr><operator>++</operator><name>L</name></expr>;</expr_stmt></block></while>
            <while>while<condition>(<expr><name>L</name> <operator>&lt;=</operator> <name>R</name> <operator>&amp;&amp;</operator> <name><name>st2</name><index>[<expr><name>R</name></expr>]</index></name> <operator>==</operator> <name>bb</name></expr>)</condition>
                <block type="pseudo"><expr_stmt><expr><name><name>st2</name><index>[<expr><name>R</name></expr>]</index></name> <operator>=</operator> <name>bb</name></expr><operator>,</operator> <expr><operator>--</operator><name>R</name></expr>;</expr_stmt></block></while>
        }</block></then>
        <else>else
        <block>{
            <while>while<condition>(<expr><name>L</name> <operator>&lt;=</operator> <name>R</name> <operator>&amp;&amp;</operator> <name><name>st2</name><index>[<expr><name>L</name></expr>]</index></name> <operator>!=</operator> <name>aa</name></expr>)</condition>
                <block type="pseudo"><expr_stmt><expr><name><name>st2</name><index>[<expr><name>L</name></expr>]</index></name> <operator>=</operator> <name>aa</name></expr><operator>,</operator> <expr><operator>++</operator><name>L</name></expr>;</expr_stmt></block></while>
            <while>while<condition>(<expr><name>L</name> <operator>&lt;=</operator> <name>R</name> <operator>&amp;&amp;</operator> <name><name>st2</name><index>[<expr><name>R</name></expr>]</index></name> <operator>!=</operator> <name>bb</name></expr>)</condition>
                <block type="pseudo"><expr_stmt><expr><name><name>st2</name><index>[<expr><name>R</name></expr>]</index></name> <operator>=</operator> <name>bb</name></expr><operator>,</operator> <expr><operator>--</operator><name>R</name></expr>;</expr_stmt></block></while>
        }</block></else></if>
        <expr_stmt><expr><operator>++</operator><name>op</name></expr>;</expr_stmt>
    }</block></while>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>L</name></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>R</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
        <block type="pseudo"><if>if<condition>(<expr><name>mx</name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then>
        <block>{
            <if>if<condition>(<expr><name><name>st2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'B'</literal></expr>)</condition><then>
                <block type="pseudo"><expr_stmt><expr><name><name>st2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'W'</literal></expr>;</expr_stmt></block></then>
            <else>else
                <block type="pseudo"><expr_stmt><expr><name><name>st2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'B'</literal></expr>;</expr_stmt></block></else></if>
        }</block></then></if></block></for>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>please</name> <name>followmeoninsta</name></type>
    <name>cin</name> &gt;&gt; <name>n</name> &gt;&gt; <name>k</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>s</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>bool</name></type> <name>s2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>st</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name>i</name><operator>+</operator><literal type="number">1</literal> <operator>!=</operator> <name>n</name></expr>)</condition><then>
        <block>{
            <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name><name>s</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>s2</name> <operator>=</operator> <literal type="number">1</literal></expr><operator>,</operator> <expr><name>st</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
                <break>break;</break>
            }</block></then></if>
        }</block></then>
        <else>else
        <block>{
            <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>s2</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                <expr_stmt><expr><name>st</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
                <break>break;</break>
            }</block></then></if>
        }</block></else></if>
    }</block></for>
    <if>if<condition>(<expr><operator>!</operator><name>s2</name></expr>)</condition><then>
    <block>{
        <if>if<condition>(<expr><name>k</name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>s</name> <operator>&lt;&lt;</operator> <literal type="char">'\n'</literal></expr>;</expr_stmt></block></then>
        <else>else
        <block>{
            <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
                <block type="pseudo"><if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'B'</literal></expr>)</condition><then>
                    <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"W"</literal></expr>;</expr_stmt></block></then>
                <else>else
                    <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"B"</literal></expr>;</expr_stmt></block></else></if></block></for>
        }</block></else></if>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
    <decl_stmt><decl><type><name>int</name></type> <name>poz</name> <init>= <expr><name>st</name></expr></init></decl>;</decl_stmt>
    <do>do
    <block>{
        <expr_stmt><expr><name>st2</name> <operator>+=</operator> <name><name>s</name><index>[<expr><name>poz</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><operator>++</operator><name>poz</name></expr>;</expr_stmt>
        <if>if<condition>(<expr><name>poz</name> <operator>==</operator> <name>n</name></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>poz</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block></then></if>
    }</block>
    while<condition>(<expr><name>poz</name> <operator>!=</operator> <name>st</name></expr>)</condition>;</do>
   <comment type="line">// cout &lt;&lt; st2 &lt;&lt; '\n';</comment>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>st2</name><index>[<expr><name>i</name></expr>]</index></name> <operator>!=</operator> <name><name>st2</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then>
        <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>starto</name> <init>= <expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>finito</name> <init>= <expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
            <while>while<condition>(<expr><literal type="number">1</literal></expr>)</condition>
            <block>{
                <if>if<condition>(<expr><name><name>st2</name><index>[<expr><name>finito</name></expr>]</index></name> <operator>==</operator> <name><name>st2</name><index>[<expr><name>finito</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>)</condition><then>
                    <block type="pseudo"><break>break;</break></block></then>
                <elseif>else
                    <if>if<condition>(<expr><name>finito</name> <operator>==</operator> <name>n</name><operator>-</operator><literal type="number">1</literal></expr>)</condition><then>
                        <block type="pseudo"><break>break;</break></block></then></if></elseif>
                    <else>else
                        <block type="pseudo"><expr_stmt><expr><operator>++</operator><name>finito</name></expr>;</expr_stmt></block></else></if>
            }</block></while>
            <expr_stmt><expr><name>i</name> <operator>=</operator> <name>finito</name></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>finito</name> <operator>==</operator> <name>n</name><operator>-</operator><literal type="number">1</literal> <operator>&amp;&amp;</operator> <name><name>st2</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name> <operator>!=</operator> <name><name>st2</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><then>
                <block type="pseudo"><expr_stmt><expr><call><name>solve</name><argument_list>(<argument><expr><name>starto</name></expr></argument>, <argument><expr><name>finito</name></expr></argument>, <argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>
            <else>else
                <block type="pseudo"><expr_stmt><expr><call><name>solve</name><argument_list>(<argument><expr><name>starto</name></expr></argument>, <argument><expr><name>finito</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></else></if>
        }</block></then></if>
    }</block></for>
    <comment type="line" format="doxygen">/// tre sa afisezi de la pozitia 1, nu de la st</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>rpos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>tpos</name> <init>= <expr><name>st</name></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><name>tpos</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
    <block>{
        <expr_stmt><expr><operator>++</operator><name>tpos</name></expr>;</expr_stmt>
        <expr_stmt><expr><operator>++</operator><name>rpos</name></expr>;</expr_stmt>
        <if>if<condition>(<expr><name>tpos</name> <operator>==</operator> <name>n</name></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>tpos</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block></then></if>
    }</block></while>
   <comment type="line">// cout &lt;&lt; st2 &lt;&lt; '\n';</comment>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>rpos</name></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>st2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
        <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name><name>st2</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>rpos</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
        <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name><name>st2</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
