<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28897754_62495429.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>f</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>s</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name><name>b</name><index>[<expr><literal type="number">100004</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name><name>pair</name> <argument_list type="generic">&lt;<argument><expr><name>long</name> <name>long</name></expr></argument>, <argument><expr><name>long</name> <name>long</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name></type> <name>a</name></decl>;</decl_stmt>



<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>k</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>k</name></expr>;</expr_stmt>
	
	<for>for<control>(<init><decl><type><name>long</name> <name>long</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>b</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	
	<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>b</name> <operator>+</operator> <name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name><name>a</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><call><name>make_pair</name><argument_list>(<argument><expr><name><name>b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<if>if<condition>(<expr><name><name>a</name><index>[<expr><call><name><name>a</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>f</name> <operator>==</operator> <name><name>b</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
		<block>{
			<expr_stmt><expr><name><name>a</name><index>[<expr><call><name><name>a</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>s</name><operator>++</operator></expr>;</expr_stmt>
		}</block></then>
		<else>else
		<block>{
			<expr_stmt><expr><call><name><name>a</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><call><name>make_pair</name><argument_list>(<argument><expr><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
	
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>l</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>r</name> <init>= <expr><call><name><name>a</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	
	<while>while<condition>(<expr><name>l</name> <operator>!=</operator> <name>r</name> <operator>&amp;&amp;</operator> <name>k</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition>
	<block>{
		<if>if<condition>(<expr><name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>.</operator><name>s</name> <operator>&lt;=</operator> <name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>.</operator><name>s</name></expr>)</condition><then>
		<block>{
			<if>if<condition>(<expr><name>k</name> <operator>&gt;=</operator> <name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>.</operator><name>s</name> <operator>*</operator> <operator>(</operator><name><name>a</name><index>[<expr><name>l</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>f</name> <operator>-</operator> <name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>.</operator><name>f</name><operator>)</operator></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>k</name> <operator>-=</operator> <name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>.</operator><name>s</name> <operator>*</operator> <operator>(</operator><name><name>a</name><index>[<expr><name>l</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>f</name> <operator>-</operator> <name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>.</operator><name>f</name><operator>)</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>a</name><index>[<expr><name>l</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>s</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>.</operator><name>s</name></expr>;</expr_stmt>
			}</block></then>
			<else>else
			<block>{
				<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>.</operator><name>f</name> <operator>-</operator> <operator>(</operator><name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>.</operator><name>f</name> <operator>+</operator> <operator>(</operator><name>k</name> <operator>/</operator> <name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>.</operator><name>s</name><operator>)</operator><operator>)</operator></expr>;</expr_stmt>
				<return>return <expr><literal type="number">0</literal></expr>;</return>
			}</block></else></if>
			<expr_stmt><expr><name>l</name><operator>++</operator></expr>;</expr_stmt>
		}</block></then>
		<else>else
		<block>{
			<if>if<condition>(<expr><name>k</name> <operator>&gt;=</operator> <name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>.</operator><name>s</name> <operator>*</operator> <operator>(</operator><name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>.</operator><name>f</name> <operator>-</operator> <name><name>a</name><index>[<expr><name>r</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>f</name><operator>)</operator></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>k</name> <operator>-=</operator> <name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>.</operator><name>s</name> <operator>*</operator> <operator>(</operator><name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>.</operator><name>f</name> <operator>-</operator> <name><name>a</name><index>[<expr><name>r</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>f</name><operator>)</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>a</name><index>[<expr><name>r</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>s</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>.</operator><name>s</name></expr>;</expr_stmt>
			}</block></then>
			<else>else
			<block>{
				<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>(</operator><name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>.</operator><name>f</name> <operator>-</operator> <operator>(</operator><name>k</name> <operator>/</operator> <name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>.</operator><name>s</name><operator>)</operator><operator>)</operator> <operator>-</operator> <name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>.</operator><name>f</name></expr>;</expr_stmt>
				<return>return <expr><literal type="number">0</literal></expr>;</return>
			}</block></else></if>
			<expr_stmt><expr><name>r</name><operator>--</operator></expr>;</expr_stmt>
		}</block></else></if>
		
		<if>if<condition>(<expr><name>k</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then>
		<block>{
			<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>.</operator><name>f</name> <operator>-</operator> <name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>.</operator><name>f</name></expr>;</expr_stmt>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
		}</block></then></if>
	}</block></while>
	
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
