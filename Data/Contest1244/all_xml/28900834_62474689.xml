<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28900834_62474689.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>big</name> <init>= <expr><literal type="number">1e18</literal></expr></init></decl>;</decl_stmt>

<struct>struct <name>cost</name> <block>{<public type="default">
    <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<function><type><name>void</name></type> <name>solve</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name>cost</name></expr></argument>&gt;</argument_list></name></type> <name>a</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>a</name></expr>;</expr_stmt></block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt></block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt></block></for>
    <decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name></type> <name>g</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name> <operator>-</operator> <literal type="number">1</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>v</name></decl>, <decl><type ref="prev"/><name>u</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>v</name> <operator>&gt;&gt;</operator> <name>u</name></expr>;</expr_stmt>
        <expr_stmt><expr><operator>--</operator><name>v</name></expr>;</expr_stmt>
        <expr_stmt><expr><operator>--</operator><name>u</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>g</name><index>[<expr><name>v</name></expr>]</index></name><operator>.</operator><call><name>push_back</name><argument_list>(<argument><expr><name>u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>g</name><index>[<expr><name>u</name></expr>]</index></name><operator>.</operator><call><name>push_back</name><argument_list>(<argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
        <if>if <condition>(<expr><name><name>g</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>&gt;=</operator> <literal type="number">3</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
            <return>return;</return>
        }</block></then></if>
    }</block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>st</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><if>if <condition>(<expr><name><name>g</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>st</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt></block></then></if></block></for>
    <decl_stmt><decl><type><name><name>queue</name> <argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>q</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>push</name></name><argument_list>(<argument><expr><name>st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>dist</name><argument_list>(<argument><expr><name>n</name></expr></argument>, <argument><expr><name>big</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>dist</name><index>[<expr><name>st</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    <comment type="line">//cout &lt;&lt; 1;</comment>
    <while>while <condition>(<expr><operator>!</operator><call><name><name>q</name><operator>.</operator><name>empty</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>v</name> <init>= <expr><call><name><name>q</name><operator>.</operator><name>front</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>pop</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>auto</name></type> <name>u</name> <range>: <expr><name><name>g</name><index>[<expr><name>v</name></expr>]</index></name></expr></range></decl></init>)</control> <block>{
            <if>if <condition>(<expr><name><name>dist</name><index>[<expr><name>u</name></expr>]</index></name> <operator>&gt;</operator> <name><name>dist</name><index>[<expr><name>v</name></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr>)</condition><then> <block>{
                <expr_stmt><expr><name><name>dist</name><index>[<expr><name>u</name></expr>]</index></name> <operator>=</operator> <name><name>dist</name><index>[<expr><name>v</name></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>q</name><operator>.</operator><name>push</name></name><argument_list>(<argument><expr><name>u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>
    }</block></while>
    <decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>a1</name></decl>, <decl><type ref="prev"/><name>a2</name></decl>, <decl><type ref="prev"/><name>a3</name></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
        <if>if <condition>(<expr><operator>(</operator><name><name>dist</name><index>[<expr><name>i</name></expr>]</index></name> <operator>%</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name><name>a1</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
        <if>if <condition>(<expr><operator>(</operator><name><name>dist</name><index>[<expr><name>i</name></expr>]</index></name> <operator>%</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name><name>a2</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
        <if>if <condition>(<expr><operator>(</operator><name><name>dist</name><index>[<expr><name>i</name></expr>]</index></name> <operator>%</operator> <literal type="number">3</literal><operator>)</operator> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name><name>a3</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
    }</block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>sum1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>sum2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>sum3</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>sum4</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>sum5</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>sum6</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
        <expr_stmt><expr><name>sum1</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>a</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum2</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>a</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum3</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum4</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum5</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum6</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt>
    }</block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
        <expr_stmt><expr><name>sum1</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum2</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum3</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>a</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum4</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum5</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>a</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum6</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt>
    }</block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a3</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
        <expr_stmt><expr><name>sum1</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum2</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum3</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum4</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>a</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum5</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum6</name> <operator>+=</operator> <name><name>a</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>a</name></expr>;</expr_stmt>
    }</block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>anss</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>ans</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></decl>;</decl_stmt>
    <if>if <condition>(<expr><name>sum1</name> <operator>&lt;=</operator> <name>sum2</name> <operator>&amp;&amp;</operator> <name>sum1</name> <operator>&lt;=</operator> <name>sum3</name> <operator>&amp;&amp;</operator> <name>sum1</name> <operator>&lt;=</operator> <name>sum4</name> <operator>&amp;&amp;</operator> <name>sum1</name> <operator>&lt;=</operator> <name>sum5</name> <operator>&amp;&amp;</operator> <name>sum1</name> <operator>&lt;=</operator> <name>sum6</name></expr>)</condition><then> <block>{
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a3</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><name>anss</name> <operator>=</operator> <name>sum1</name></expr>;</expr_stmt>
    }</block></then>
    <elseif>else <if>if <condition>(<expr><name>sum2</name> <operator>&lt;=</operator> <name>sum1</name> <operator>&amp;&amp;</operator> <name>sum2</name> <operator>&lt;=</operator> <name>sum3</name> <operator>&amp;&amp;</operator> <name>sum2</name> <operator>&lt;=</operator> <name>sum4</name> <operator>&amp;&amp;</operator> <name>sum2</name> <operator>&lt;=</operator> <name>sum5</name> <operator>&amp;&amp;</operator> <name>sum2</name> <operator>&lt;=</operator> <name>sum6</name></expr>)</condition><then> <block>{
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a3</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><name>anss</name> <operator>=</operator> <name>sum2</name></expr>;</expr_stmt>
    }</block></then></if></elseif>
    <elseif>else <if>if <condition>(<expr><name>sum3</name> <operator>&lt;=</operator> <name>sum2</name> <operator>&amp;&amp;</operator> <name>sum3</name> <operator>&lt;=</operator> <name>sum1</name> <operator>&amp;&amp;</operator> <name>sum3</name> <operator>&lt;=</operator> <name>sum4</name> <operator>&amp;&amp;</operator> <name>sum3</name> <operator>&lt;=</operator> <name>sum5</name> <operator>&amp;&amp;</operator> <name>sum3</name> <operator>&lt;=</operator> <name>sum6</name></expr>)</condition><then> <block>{
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a3</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><name>anss</name> <operator>=</operator> <name>sum3</name></expr>;</expr_stmt>
    }</block></then></if></elseif>
    <elseif>else <if>if <condition>(<expr><name>sum4</name> <operator>&lt;=</operator> <name>sum2</name> <operator>&amp;&amp;</operator> <name>sum4</name> <operator>&lt;=</operator> <name>sum3</name> <operator>&amp;&amp;</operator> <name>sum4</name> <operator>&lt;=</operator> <name>sum1</name> <operator>&amp;&amp;</operator> <name>sum4</name> <operator>&lt;=</operator> <name>sum5</name> <operator>&amp;&amp;</operator> <name>sum4</name> <operator>&lt;=</operator> <name>sum6</name></expr>)</condition><then> <block>{
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a3</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><name>anss</name> <operator>=</operator> <name>sum4</name></expr>;</expr_stmt>
    }</block></then></if></elseif>
    <elseif>else <if>if <condition>(<expr><name>sum5</name> <operator>&lt;=</operator> <name>sum2</name> <operator>&amp;&amp;</operator> <name>sum5</name> <operator>&lt;=</operator> <name>sum3</name> <operator>&amp;&amp;</operator> <name>sum5</name> <operator>&lt;=</operator> <name>sum4</name> <operator>&amp;&amp;</operator> <name>sum5</name> <operator>&lt;=</operator> <name>sum1</name> <operator>&amp;&amp;</operator> <name>sum5</name> <operator>&lt;=</operator> <name>sum6</name></expr>)</condition><then> <block>{
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a3</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><name>anss</name> <operator>=</operator> <name>sum5</name></expr>;</expr_stmt>
    }</block></then></if></elseif>
    <else>else <block>{
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a2</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block></for>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a3</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name><name>a3</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><name>anss</name> <operator>=</operator> <name>sum6</name></expr>;</expr_stmt>
    }</block></else></if>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>anss</name> <operator>&lt;&lt;</operator> <literal type="char">'\n'</literal></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="char">' '</literal></expr>;</expr_stmt></block></for>
}</block></function>

<function><type><name>signed</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <comment type="block">/*ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);*/</comment>
    <expr_stmt><expr><call><name>solve</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
