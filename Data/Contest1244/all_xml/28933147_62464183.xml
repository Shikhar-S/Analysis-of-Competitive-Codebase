<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28933147_62464183.cpp"><comment type="line">// youngjinp20</comment>
<comment type="line">// 2019 10</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<typedef>typedef <type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>,<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>pi</name>;</typedef>
<typedef>typedef <type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>vi</name>;</typedef>
<typedef>typedef <type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>pi</name></expr></argument>&gt;</argument_list></name></type> <name>vii</name>;</typedef>
<typedef>typedef <type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>vi</name></expr></argument>&gt;</argument_list></name></type> <name>vvi</name>;</typedef>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>T</name></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>t</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>t</name><operator>&lt;</operator><name>T</name></expr>;</condition> <incr><expr><name>t</name><operator>++</operator></expr></incr>)</control><block>{
		<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>, <decl><type ref="prev"/><name>d</name></decl>, <decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name> <operator>&gt;&gt;</operator> <name>b</name> <operator>&gt;&gt;</operator> <name>c</name> <operator>&gt;&gt;</operator> <name>d</name> <operator>&gt;&gt;</operator> <name>k</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>pens</name> <init>= <expr><operator>(</operator><name>a</name><operator>-</operator><literal type="number">1</literal><operator>)</operator> <operator>/</operator> <name>c</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>pencils</name> <init>= <expr><operator>(</operator><name>b</name><operator>-</operator><literal type="number">1</literal><operator>)</operator> <operator>/</operator> <name>d</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><name>pens</name> <operator>+</operator> <name>pencils</name> <operator>&gt;</operator> <name>k</name></expr>)</condition><then> <block>{
			<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"-1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else>else <block>{
			<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d %d\n"</literal></expr></argument>, <argument><expr><name>pens</name></expr></argument>, <argument><expr><name>pencils</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>

	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
