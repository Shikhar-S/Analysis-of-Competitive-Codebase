<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28933545_62464085.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>q</name></decl>, <decl><type ref="prev"/><name>f</name></decl>, <decl><type ref="prev"/><name>f1</name></decl>, <decl><type ref="prev"/><name>f2</name></decl>, <decl><type ref="prev"/><name>f3</name></decl>, <decl><type ref="prev"/><name>f4</name></decl>, <decl><type ref="prev"/><name>cnt</name></decl>, <decl><type ref="prev"/><name>cnt1</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>q</name></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>q</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>f</name> <operator>&gt;&gt;</operator> <name>f1</name> <operator>&gt;&gt;</operator> <name>f2</name> <operator>&gt;&gt;</operator> <name>f3</name> <operator>&gt;&gt;</operator> <name>f4</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>f</name> <operator>+</operator> <name>f2</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <name>f2</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>cnt1</name> <operator>=</operator> <operator>(</operator><name>f1</name> <operator>+</operator> <name>f3</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <name>f3</name></expr>;</expr_stmt>
        <if>if <condition>(<expr><name>cnt</name> <operator>+</operator> <name>cnt1</name> <operator>&lt;=</operator> <name>f4</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>cnt</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <name>cnt1</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
        }</block></else></if>
    }</block></for>
}</block></function>
</unit>
