<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28931139_62471496.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mod</name></cpp:macro> <cpp:value>998244353</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD</name></cpp:macro> <cpp:value>1000000007</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>inf</name></cpp:macro> <cpp:value>0x3f3f3f3f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>linf</name></cpp:macro> <cpp:value>0x3f3f3f3f3f3f3f3fll</cpp:value></cpp:define>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<typedef>typedef <type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>,<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>pii</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>ull</name>;</typedef>
<decl_stmt><decl><type><name>char</name></type> <name><name>s</name><index>[<expr><literal type="number">1100</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>tc</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>tc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>tc</name><operator>--</operator></expr>)</condition>
	<block>{
		<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%s"</literal></expr></argument>,<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<while>while<condition>(<expr><name>i</name><operator>&lt;</operator><name>n</name><operator>&amp;&amp;</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><literal type="char">'1'</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt></block></while>
		<decl_stmt><decl><type><name>int</name></type> <name>ans</name><init>=<expr><operator>(</operator><name>n</name><operator>-</operator><name>i</name><operator>)</operator><operator>*</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>i</name><operator>=</operator><name>n</name><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
		<while>while<condition>(<expr><name>i</name><operator>&gt;=</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><literal type="char">'1'</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>i</name><operator>--</operator></expr>;</expr_stmt></block></while>
		<expr_stmt><expr><name>ans</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><operator>(</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>*</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>ans</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
