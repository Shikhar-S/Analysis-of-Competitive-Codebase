<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28929551_62496336.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>p</name></decl>,<decl><type ref="prev"/><name>w</name></decl>,<decl><type ref="prev"/><name>d</name></decl>,<decl><type ref="prev"/><name>t</name></decl>,<decl><type ref="prev"/><name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>,<decl><type ref="prev"/><name>tmp</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>p</name><operator>&gt;&gt;</operator><name>w</name><operator>&gt;&gt;</operator><name>d</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>t</name><operator>=</operator><call><name>__gcd</name><argument_list>(<argument><expr><name>w</name></expr></argument>,<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>x</name><operator>=</operator><name>p</name><operator>/</operator><name>w</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>tmp</name><operator>=</operator><name>x</name><operator>-</operator><name>d</name><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>x</name><operator>&gt;=</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name>x</name><operator>&gt;=</operator><name>tmp</name></expr>)</condition><block>{
		<if>if<condition>(<expr><operator>(</operator><name>p</name><operator>-</operator><name>w</name><operator>*</operator><name>x</name><operator>)</operator><operator>%</operator><name>d</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
			<expr_stmt><expr><name>y</name><operator>=</operator><operator>(</operator><name>p</name><operator>-</operator><name>w</name><operator>*</operator><name>x</name><operator>)</operator><operator>/</operator><name>d</name></expr>;</expr_stmt>
			<if>if<condition>(<expr><name>x</name><operator>+</operator><name>y</name><operator>&gt;</operator><name>n</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"-1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>	
			<else>else <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>x</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>y</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>n</name><operator>-</operator><name>x</name><operator>-</operator><name>y</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></else></if>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
		}</block></then></if>
		<expr_stmt><expr><name>x</name><operator>--</operator></expr>;</expr_stmt>
	}</block></while>
	<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"-1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
