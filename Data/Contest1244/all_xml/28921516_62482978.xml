<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28921516_62482978.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>llint</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>llint</name></type> <name>MOD</name> <init>= <expr><literal type="number">1e9</literal> <operator>+</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>llint</name></type> <name>N</name></decl>, <decl><type ref="prev"/><name>P</name></decl>, <decl><type ref="prev"/><name>W</name></decl>, <decl><type ref="prev"/><name>D</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>N</name> <operator>&gt;&gt;</operator> <name>P</name> <operator>&gt;&gt;</operator> <name>W</name> <operator>&gt;&gt;</operator> <name>D</name></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>llint</name></type> <name>Y</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>Y</name> <operator>&lt;=</operator> <name>W</name> <operator>+</operator> <literal type="number">5</literal></expr>;</condition> <incr><expr><name>Y</name><operator>++</operator></expr></incr>)</control> <block>{
        <if>if<condition>(<expr><operator>(</operator><name>P</name> <operator>-</operator> <name>Y</name><operator>*</operator><name>D</name><operator>)</operator> <operator>%</operator> <name>W</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name>llint</name></type> <name>X</name> <init>= <expr><operator>(</operator><name>P</name> <operator>-</operator> <name>Y</name><operator>*</operator><name>D</name><operator>)</operator> <operator>/</operator> <name>W</name></expr></init></decl>;</decl_stmt>
            <if>if<condition>(<expr><name>X</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>Y</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>X</name> <operator>+</operator> <name>Y</name> <operator>&lt;=</operator> <name>N</name></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>X</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <name>Y</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <name>N</name> <operator>-</operator> <name>X</name> <operator>-</operator> <name>Y</name></expr>;</expr_stmt>
                <return>return <expr><literal type="number">0</literal></expr>;</return>
            }</block></then></if>
        }</block></then></if>
    }</block></for>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
}</block></function></unit>
