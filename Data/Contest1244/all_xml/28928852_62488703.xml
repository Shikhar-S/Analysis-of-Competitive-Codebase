<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28928852_62488703.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name> <init>= <expr><literal type="number">4e5</literal> <operator>+</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>signed</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>k</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block type="pseudo"><expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
	<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>,<argument><expr><name>a</name> <operator>+</operator> <name>n</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>ans</name> <init>= <expr><name><name>a</name><index>[<expr><name>n</name></expr>]</index></name> <operator>-</operator> <name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>l</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>r</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<while>while<condition>(<expr><name>l</name> <operator>+</operator> <name>r</name> <operator>&lt;=</operator> <name>n</name></expr>)</condition>
	<block>{
		<if>if<condition>(<expr><name>l</name> <operator>&lt;</operator> <name>r</name></expr>)</condition><then>
		<block>{
			<decl_stmt><decl><type><name>int</name></type> <name>dd</name> <init>= <expr><name><name>a</name><index>[<expr><name>l</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>-</operator> <name><name>a</name><index>[<expr><name>l</name></expr>]</index></name></expr></init></decl>,<decl><type ref="prev"/><name>delta</name> <init>= <expr><name>dd</name> <operator>*</operator> <name>l</name></expr></init></decl>;</decl_stmt>
			<if>if<condition>(<expr><name>k</name> <operator>&gt;=</operator> <name>delta</name></expr>)</condition><then>
				<block type="pseudo"><expr_stmt><expr><name>k</name> <operator>-=</operator> <name>delta</name></expr><operator>,</operator><expr><name>l</name><operator>++</operator></expr><operator>,</operator><expr><name>ans</name> <operator>-=</operator> <name>dd</name></expr>;</expr_stmt></block></then>
			<else>else
			<block>{
				<expr_stmt><expr><name>ans</name> <operator>-=</operator> <name>k</name> <operator>/</operator> <name>l</name></expr>;</expr_stmt>
				<break>break;</break>
			}</block></else></if>
		}</block></then>
		<else>else
		<block>{
			<decl_stmt><decl><type><name>int</name></type> <name>R</name> <init>= <expr><name>n</name> <operator>-</operator> <name>r</name> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>int</name></type> <name>dd</name> <init>= <expr><name><name>a</name><index>[<expr><name>R</name></expr>]</index></name> <operator>-</operator> <name><name>a</name><index>[<expr><name>R</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>,<decl><type ref="prev"/><name>delta</name> <init>= <expr><name>dd</name> <operator>*</operator> <name>r</name></expr></init></decl>;</decl_stmt>
			<if>if<condition>(<expr><name>k</name> <operator>&gt;=</operator> <name>delta</name></expr>)</condition><then>
				<block type="pseudo"><expr_stmt><expr><name>k</name> <operator>-=</operator> <name>delta</name></expr><operator>,</operator><expr><name>r</name><operator>++</operator></expr><operator>,</operator><expr><name>ans</name> <operator>-=</operator> <name>dd</name></expr>;</expr_stmt></block></then>
			<else>else
			<block>{
				<expr_stmt><expr><name>ans</name> <operator>-=</operator> <name>k</name> <operator>/</operator> <name>r</name></expr>;</expr_stmt>
				<break>break;</break>
			}</block></else></if>
		}</block></else></if>
	}</block></while>
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
