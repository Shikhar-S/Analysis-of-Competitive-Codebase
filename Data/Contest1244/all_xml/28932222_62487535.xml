<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28932222_62487535.cpp">
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;numeric&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>N</name> <init>= <expr><literal type="number">100050</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name><name>a</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>std</name><operator>::</operator><name>cin</name></name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>k</name></expr>;</expr_stmt>

    <for>for <control>(<init><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
        <expr_stmt><expr><name><name>std</name><operator>::</operator><name>cin</name></name> <operator>&gt;&gt;</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>

    <expr_stmt><expr><call><name><name>std</name><operator>::</operator><name>sort</name></name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>a</name> <operator>+</operator> <name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>ll</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>lr</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>rl</name> <init>= <expr><name>n</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>rr</name> <init>= <expr><name>n</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>min</name> <init>= <expr><name><name>a</name><index>[<expr><name>ll</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>max</name> <init>= <expr><name><name>a</name><index>[<expr><name>rr</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <while>while <condition>(<expr><name>k</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>min</name> <operator>!=</operator> <name>max</name></expr>)</condition> <block>{
        <while>while <condition>(<expr><name>min</name> <operator>==</operator> <name><name>a</name><index>[<expr><name>lr</name></expr>]</index></name></expr>)</condition> <block>{
            <expr_stmt><expr><operator>++</operator><name>lr</name></expr>;</expr_stmt>
        }</block></while>
        <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>lc</name> <init>= <expr><name>lr</name></expr></init></decl>;</decl_stmt>

        <while>while <condition>(<expr><name><name>a</name><index>[<expr><name>rl</name></expr>]</index></name> <operator>==</operator> <name>max</name></expr>)</condition> <block>{
            <expr_stmt><expr><operator>--</operator><name>rl</name></expr>;</expr_stmt>
        }</block></while>
        <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>rc</name> <init>= <expr><name>n</name> <operator>-</operator> <name>rl</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

        <if>if <condition>(<expr><name>k</name> <operator>&lt;</operator> <call><name><name>std</name><operator>::</operator><name>min</name></name><argument_list>(<argument><expr><name>lc</name></expr></argument>, <argument><expr><name>rc</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <break>break;</break>
        }</block></then></if>

        <if>if <condition>(<expr><name>lc</name> <operator>&lt;</operator> <name>rc</name></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>v</name> <init>= <expr><call><name><name>std</name><operator>::</operator><name>min</name></name><argument_list>(<argument><expr><name>k</name> <operator>/</operator> <name>lc</name></expr></argument>, <argument><expr><name><name>a</name><index>[<expr><name>lr</name></expr>]</index></name> <operator>-</operator> <name>min</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>min</name> <operator>+=</operator> <name>v</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>k</name> <operator>-=</operator> <name>v</name> <operator>*</operator> <name>lc</name></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>v</name> <init>= <expr><call><name><name>std</name><operator>::</operator><name>min</name></name><argument_list>(<argument><expr><name>k</name> <operator>/</operator> <name>rc</name></expr></argument>, <argument><expr><name>max</name> <operator>-</operator> <name><name>a</name><index>[<expr><name>rl</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>max</name> <operator>-=</operator> <name>v</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>k</name> <operator>-=</operator> <name>v</name> <operator>*</operator> <name>rc</name></expr>;</expr_stmt>
        }</block></else></if>
        <comment type="line">// std::cout &lt;&lt; min &lt;&lt; " " &lt;&lt; max &lt;&lt; " " &lt;&lt; k &lt;&lt; std::endl;</comment>
    }</block></while>

    <expr_stmt><expr><name><name>std</name><operator>::</operator><name>cout</name></name> <operator>&lt;&lt;</operator> <operator>(</operator><name>max</name> <operator>-</operator> <name>min</name><operator>)</operator></expr>;</expr_stmt>

    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
