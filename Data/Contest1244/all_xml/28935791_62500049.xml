<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28935791_62500049.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<decl_stmt><decl><type><name>char</name></type> <name><name>st</name><index>[<expr><literal type="number">200010</literal></expr>]</index></name></decl>;</decl_stmt> <decl_stmt><decl><type><name>int</name></type> <name><name>L</name><index>[<expr><literal type="number">200010</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>R</name><index>[<expr><literal type="number">200010</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>ls</name><index>[<expr><literal type="number">200010</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>rs</name><index>[<expr><literal type="number">200010</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name><name>vis</name><index>[<expr><literal type="number">200010</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>k</name></decl>;</decl_stmt> <expr_stmt><expr><name><name>std</name><operator>::</operator><name>cin</name></name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>std</name><operator>::</operator><name>cin</name></name><operator>&gt;&gt;</operator><operator>(</operator><name>st</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>L</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>i</name><operator>-</operator><literal type="number">1</literal></expr><operator>,</operator><expr><name><name>R</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt></block></for>
	<expr_stmt><expr><name><name>L</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><name>n</name></expr><operator>,</operator><expr><name><name>R</name><index>[<expr><name>n</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>bool</name></type> <name>flag</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block type="pseudo"><if>if <condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>st</name><index>[<expr><name><name>L</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>||</operator><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>st</name><index>[<expr><name><name>R</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>)</condition><then> <block>{
		<expr_stmt><expr><name><name>vis</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt> <expr_stmt><expr><name>flag</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
		<if>if <condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>st</name><index>[<expr><name><name>R</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>ls</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>i</name></expr>;</expr_stmt></block></then>
		<elseif>else <if>if <condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>st</name><index>[<expr><name><name>L</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>rs</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>i</name></expr>;</expr_stmt></block></then></if></elseif></if>
	}</block></then></if></block></for>
	<if>if <condition>(<expr><operator>!</operator><name>flag</name></expr>)</condition><then> <block>{
		<if>if <condition>(<expr><name>k</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
			<if>if <condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'B'</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'W'</literal></expr>;</expr_stmt></block></then>
			<else>else <block type="pseudo"><expr_stmt><expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'B'</literal></expr>;</expr_stmt></block></else></if>
		}</block></for></block></then></if>
		<expr_stmt><expr><name><name>std</name><operator>::</operator><name>cout</name></name><operator>&lt;&lt;</operator><operator>(</operator><name>st</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>&lt;&lt;</operator><literal type="char">'\n'</literal></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
		<if>if <condition>(<expr><name><name>vis</name><index>[<expr><name>i</name></expr>]</index></name><operator>&amp;&amp;</operator><name><name>ls</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
			<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name><name>R</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</init><condition><expr><operator>!</operator><name><name>vis</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</condition><incr><expr><name>j</name><operator>=</operator><name><name>R</name><index>[<expr><name>j</name></expr>]</index></name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>ls</name><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><name><name>ls</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
		}</block></then></if>
		<if>if <condition>(<expr><name><name>vis</name><index>[<expr><name>i</name></expr>]</index></name><operator>&amp;&amp;</operator><name><name>rs</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
			<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name><name>L</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</init><condition><expr><operator>!</operator><name><name>vis</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</condition><incr><expr><name>j</name><operator>=</operator><name><name>L</name><index>[<expr><name>j</name></expr>]</index></name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>rs</name><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><name><name>rs</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
		}</block></then></if>
	}</block></for>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
		<if>if <condition>(<expr><operator>!</operator><name><name>vis</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
			<decl_stmt><decl><type><name>int</name></type> <name>p</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>s</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
			<if>if <condition>(<expr><operator>(</operator><name>i</name><operator>+</operator><name>n</name><operator>-</operator><name><name>ls</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><operator>%</operator><name>n</name><operator>&lt;</operator><operator>(</operator><name><name>rs</name><index>[<expr><name>i</name></expr>]</index></name><operator>+</operator><name>n</name><operator>-</operator><name>i</name><operator>)</operator><operator>%</operator><name>n</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>p</name><operator>=</operator><name><name>ls</name><index>[<expr><name>i</name></expr>]</index></name></expr><operator>,</operator><expr><name>s</name><operator>=</operator><operator>(</operator><name>i</name><operator>+</operator><name>n</name><operator>-</operator><name><name>ls</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><operator>%</operator><name>n</name></expr>;</expr_stmt></block></then>
			<else>else <block type="pseudo"><expr_stmt><expr><name>p</name><operator>=</operator><name><name>rs</name><index>[<expr><name>i</name></expr>]</index></name></expr><operator>,</operator><expr><name>s</name><operator>=</operator><operator>(</operator><name><name>rs</name><index>[<expr><name>i</name></expr>]</index></name><operator>+</operator><name>n</name><operator>-</operator><name>i</name><operator>)</operator><operator>%</operator><name>n</name></expr>;</expr_stmt></block></else></if>
			<if>if <condition>(<expr><name>s</name><operator>&lt;=</operator><name>k</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>st</name><index>[<expr><name>p</name></expr>]</index></name></expr>;</expr_stmt></block></then>
			<elseif>else <if>if <condition>(<expr><name>k</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then> <block>{
				<if>if <condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'B'</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'W'</literal></expr>;</expr_stmt></block></then>
				<else>else <block type="pseudo"><expr_stmt><expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'B'</literal></expr>;</expr_stmt></block></else></if>
			}</block></then></if></elseif></if>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><name><name>std</name><operator>::</operator><name>cout</name></name><operator>&lt;&lt;</operator><operator>(</operator><name>st</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>&lt;&lt;</operator><literal type="char">'\n'</literal></expr>;</expr_stmt>
}</block></function></unit>
