<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28935664_62494330.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>MAXN</name> <init>= <expr><literal type="number">1000001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>tableau</name><index>[<expr><name>MAXN</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int32_t</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>N</name></decl> , <decl><type ref="prev"/><name>total</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>N</name><operator>&gt;&gt;</operator><name>total</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>valeurActu</name> <init>= <expr><name>N</name>  <operator>*</operator> <operator>(</operator><name>N</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
	<if>if <condition>(<expr><name>valeurActu</name> <operator>&gt;</operator> <name>total</name></expr>)</condition><then>
	<block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><operator>-</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<decl_stmt><decl><type><name>int</name></type> <name>indice</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>N</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name><name>tableau</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	}</block></for>
	<decl_stmt><decl><type><name>int</name></type> <name>plusGrand</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<while>while <condition>(<expr><name>total</name> <operator>-</operator> <name>valeurActu</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>indice</name> <operator>&lt;</operator> <name>N</name> <operator>/</operator> <literal type="number">2</literal></expr>)</condition>
	<block>{
		<comment type="line">//cout&lt;&lt;valeurActu&lt;&lt;endl;</comment>
		<decl_stmt><decl><type><name>int</name></type> <name>dif</name> <init>= <expr><name>total</name> <operator>-</operator> <name>valeurActu</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>posF</name> <init>= <expr><call><name>max</name><argument_list>(<argument><expr><literal type="number">0LL</literal></expr></argument> , <argument><expr><call><name>max</name><argument_list>(<argument><expr><name>plusGrand</name></expr></argument> , <argument><expr><operator>(</operator><name>N</name> <operator>-</operator> <name>indice</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name>dif</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>valeurActu</name> <operator>+=</operator> <operator>(</operator><name>N</name> <operator>-</operator> <name>indice</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>-</operator> <name>posF</name></expr>;</expr_stmt>
		<comment type="line">//cout&lt;&lt;N - indice -1&lt;&lt;" "&lt;&lt;posF&lt;&lt;endl;</comment>
		<expr_stmt><expr><name><name>tableau</name><index>[<expr><name>N</name> <operator>-</operator> <name>indice</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>tableau</name><index>[<expr><name>posF</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>tableau</name><index>[<expr><name>posF</name></expr>]</index></name> <operator>=</operator> <name>N</name> <operator>-</operator> <name>indice</name></expr> ;</expr_stmt>
		<expr_stmt><expr><name>indice</name><operator>++</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>plusGrand</name> <operator>=</operator> <name>posF</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
		<comment type="block">/*for (int i = 0 ; i &lt; N ; i++)
		{
			cout&lt;&lt;tableau[i]&lt;&lt;" ";
		}
		cout&lt;&lt;endl;*/</comment>
	}</block></while>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>valeurActu</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>N</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>i</name> <operator>+</operator> <literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="string">" "</literal></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>N</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>tableau</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;&lt;</operator><literal type="string">" "</literal></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
}</block></function></unit>
