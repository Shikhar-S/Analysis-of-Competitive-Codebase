<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28935069_62490099.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <name>int</name></type> <name>i</name></decl>,<decl><type ref="prev"/><name><name>array</name><index>[<expr><name>n</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>aray</name><index>[<expr><name>n</name></expr>]</index></name></decl>;</decl_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>array</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>array</name></expr></argument>,<argument><expr><name>array</name><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <name>int</name></type> <name>x</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>aray</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><name><name>array</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>array</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>x</name><operator>!=</operator><operator>(</operator><name>n</name><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>)</condition>
    <block>{
        <if>if<condition>(<expr><operator>(</operator><name>x</name><operator>%</operator><literal type="number">2</literal><operator>)</operator><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name><name>aray</name><index>[<expr><name>x</name></expr>]</index></name><operator>=</operator><name><name>aray</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><operator>(</operator><name><name>array</name><index>[<expr><name>x</name><operator>/</operator><literal type="number">2</literal><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>array</name><index>[<expr><name>x</name><operator>/</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>*</operator><operator>(</operator><name>x</name><operator>/</operator><literal type="number">2</literal><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt></block></then>
        <else>else
            <block type="pseudo"><expr_stmt><expr><name><name>aray</name><index>[<expr><name>x</name></expr>]</index></name><operator>=</operator><name><name>aray</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><operator>(</operator><name><name>array</name><index>[<expr><name>n</name><operator>-</operator><operator>(</operator><name>x</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>]</index></name><operator>-</operator><name><name>array</name><index>[<expr><name>n</name><operator>-</operator><operator>(</operator><name>x</name><operator>+</operator><literal type="number">3</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>*</operator><operator>(</operator><name>x</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>;</expr_stmt></block></else></if>
        <expr_stmt><expr><name>x</name><operator>++</operator></expr>;</expr_stmt>
    }</block></while>
    <if>if<condition>(<expr><name>k</name><operator>&lt;=</operator><name><name>aray</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><then>
        <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>array</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>array</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>-</operator><name>k</name><operator>&lt;&lt;</operator><literal type="string">"\n"</literal></expr>;</expr_stmt></block></then>
    <elseif>else <if>if<condition>(<expr><name>k</name><operator>&gt;=</operator><name><name>aray</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name></expr>)</condition><then>
        <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"0\n"</literal></expr>;</expr_stmt></block></then></if></elseif>
    <else>else
    <block>{
        <for>for<control>(<init><expr><name>i</name><operator>=</operator><name>n</name><operator>-</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&gt;</operator><literal type="number">0</literal></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>
        <block>{
            <if>if<condition>(<expr><operator>(</operator><name>k</name><operator>&lt;</operator><name><name>aray</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><operator>&amp;&amp;</operator><operator>(</operator><name>k</name><operator>&gt;=</operator><name><name>aray</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator></expr>)</condition><then>
                <block type="pseudo"><break>break;</break></block></then></if>
        }</block></for>
        <decl_stmt><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <name>int</name></type> <name>y</name><init>=<expr><name>k</name><operator>-</operator><name><name>aray</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if>if<condition>(<expr><operator>(</operator><name>i</name><operator>%</operator><literal type="number">2</literal><operator>)</operator><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>array</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal><operator>-</operator><name>i</name><operator>/</operator><literal type="number">2</literal></expr>]</index></name><operator>-</operator><name><name>array</name><index>[<expr><name>i</name><operator>/</operator><literal type="number">2</literal></expr>]</index></name><operator>-</operator><name>y</name><operator>/</operator><operator>(</operator><name>i</name><operator>/</operator><literal type="number">2</literal><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>&lt;&lt;</operator><literal type="string">"\n"</literal></expr>;</expr_stmt></block></then>
        <else>else
            <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>array</name><index>[<expr><name>n</name><operator>-</operator><operator>(</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>]</index></name><operator>-</operator><name><name>array</name><index>[<expr><operator>(</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>]</index></name><operator>-</operator><literal type="number">2</literal><operator>*</operator><name>y</name><operator>/</operator><operator>(</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>&lt;&lt;</operator><literal type="string">"\n"</literal></expr>;</expr_stmt></block></else></if>
    }</block></else></if>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
