<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28894882_62491623.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>long</name> <name>long</name></type> <name>N</name><init>=<expr><literal type="number">1e5</literal><operator>+</operator><literal type="number">5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>k</name></decl>,<decl><type ref="prev"/><name><name>a</name><index>[<expr><name>N</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name>n</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cout</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line">//    freopen("1244E.inp","r",stdin);</comment>
<comment type="line">//    freopen("1244E.out","w",stdout);</comment>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>long</name> <name>long</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>a</name><operator>+</operator><name>n</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>j</name><init>=<expr><name>n</name></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><name>i</name><operator>&lt;=</operator><name>j</name><operator>&amp;&amp;</operator><name>k</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><block>{
        <if>if <condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then><block>{
            <while>while<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block type="pseudo"><expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt></block></while>
        }</block></then></if>
        <if>if <condition>(<expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><name>j</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then><block>{
            <while>while<condition>(<expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><name>j</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block type="pseudo"><expr_stmt><expr><name>j</name><operator>--</operator></expr>;</expr_stmt></block></while>
        }</block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>&gt;=</operator><name>j</name></expr>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if>
        <if>if <condition>(<expr><name>i</name><operator>&lt;</operator><name>n</name><operator>-</operator><name>j</name><operator>+</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>m</name><init>=<expr><name><name>a</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr><name>m</name><operator>*</operator><name>i</name><operator>&lt;=</operator><name>k</name></expr>)</condition><then><block>{
                <expr_stmt><expr><name>k</name><operator>-=</operator><name>m</name><operator>*</operator><name>i</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>+=</operator><name>m</name></expr>;</expr_stmt>
            }</block></then>
            <else>else<block>{
                <expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>+=</operator><name>k</name><operator>/</operator><name>i</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>k</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
            }</block></else></if>
        }</block></then>
        <else>else <block>{
            <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>d</name><init>=<expr><name>n</name><operator>-</operator><name>j</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>m</name><init>=<expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>j</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr><name>d</name><operator>*</operator><name>m</name><operator>&lt;=</operator><name>k</name></expr>)</condition><then><block>{
                <expr_stmt><expr><name>k</name><operator>-=</operator><name>m</name><operator>*</operator><name>d</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>-=</operator><name>m</name></expr>;</expr_stmt>
            }</block></then>
            <else>else <block>{
                <expr_stmt><expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>-=</operator><name>k</name><operator>/</operator><name>d</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>k</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
            }</block></else></if>
        }</block></else></if>
    }</block></while>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
}</block></function>
</unit>
