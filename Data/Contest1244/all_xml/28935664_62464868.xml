<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28935664_62464868.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>void</name></type> <name>solve</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>taille</name></decl> , <decl><type ref="prev"/><name>A</name></decl> , <decl><type ref="prev"/><name>B</name></decl> , <decl><type ref="prev"/><name>D</name></decl> , <decl><type ref="prev"/><name>K</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>A</name><operator>&gt;&gt;</operator><name>B</name><operator>&gt;&gt;</operator><name>D</name><operator>&gt;&gt;</operator><name>K</name><operator>&gt;&gt;</operator><name>taille</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>premier</name> <init>= <expr><operator>(</operator><name>A</name> <operator>/</operator> <name>D</name><operator>)</operator></expr></init></decl>;</decl_stmt>
	<if>if <condition>(<expr><name>A</name> <operator>%</operator> <name>D</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>premier</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
	<decl_stmt><decl><type><name>int</name></type> <name>second</name> <init>= <expr><operator>(</operator><name>B</name> <operator>/</operator> <name>K</name><operator>)</operator></expr></init></decl>;</decl_stmt>
	<if>if <condition>(<expr><name>B</name> <operator>%</operator> <name>K</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>second</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
	<if>if <condition>(<expr><name>taille</name> <operator>&gt;=</operator> <name>premier</name> <operator>+</operator> <name>second</name></expr>)</condition><then>
	<block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>premier</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>second</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	}</block></then>
	<else>else
	<block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><operator>-</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>T</name></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>T</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><call><name>solve</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></function></unit>
