<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28928852_62472201.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>char</name></type> <name><name>c</name><index>[<expr><literal type="number">123456</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition>
	<block>{
		<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <operator>(</operator><name>c</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>x</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>y</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>cnt</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
			<block type="pseudo"><if>if<condition>(<expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'1'</literal></expr>)</condition><then>
				<block type="pseudo"><expr_stmt><expr><name>x</name> <operator>=</operator> <name>i</name></expr><operator>,</operator><expr><name>cnt</name><operator>++</operator></expr>;</expr_stmt></block></then></if></block></for>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>n</name></expr></init></decl>;</init><condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">1</literal></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>
			<block type="pseudo"><if>if<condition>(<expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'1'</literal></expr>)</condition><then>
				<block type="pseudo"><expr_stmt><expr><name>y</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt></block></then></if></block></for>
		<decl_stmt><decl><type><name>int</name></type> <name>ans</name> <init>= <expr><name>n</name> <operator>+</operator> <name>cnt</name></expr></init></decl>;</decl_stmt>
		<if>if<condition>(<expr><name>x</name></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>=</operator> <call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><literal type="number">2</literal> <operator>*</operator> <name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
		<if>if<condition>(<expr><name>y</name></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>=</operator> <call><name>max</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>n</name> <operator>-</operator> <name>y</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
	}</block></while>
}</block></function></unit>
