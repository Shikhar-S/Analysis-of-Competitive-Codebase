<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28933317_62499936.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<comment type="line">// your code goes here</comment>
	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>i</name></decl>,<decl><type ref="prev"/><name>j</name></decl>,<decl><type ref="prev"/><name><name>s</name><index>[<expr><literal type="number">750005</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name>sm</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type> <name>same</name><init>=<expr><literal type="boolean">false</literal></expr></init></decl>,<decl><type ref="prev"/><name>dif</name><init>=<expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>k</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type> <name><name>ss</name><index>[<expr><literal type="number">200005</literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>k</name> <operator>&gt;&gt;</operator> <name>ss</name></expr>;</expr_stmt>
	<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<if>if<condition>(<expr><name><name>ss</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'W'</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then>
		<else>else <block type="pseudo"><expr_stmt><expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt></block></else></if>
		<expr_stmt><expr><name><name>s</name><index>[<expr><name>n</name><operator>+</operator><name>i</name></expr>]</index></name><operator>=</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>s</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>n</name><operator>+</operator><name>i</name></expr>]</index></name><operator>=</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>s</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then><block>{
			<expr_stmt><expr><name>same</name><operator>=</operator><literal type="boolean">true</literal></expr>;</expr_stmt>
			<expr_stmt><expr><name>sm</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
		}</block></then> <else>else <block>{
			<expr_stmt><expr><name>dif</name><operator>=</operator><literal type="boolean">true</literal></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
	<if>if<condition>(<expr><operator>!</operator><name>same</name></expr>)</condition><then><block>{
		<if>if<condition>(<expr><name>k</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
			<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
				<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"W"</literal></expr>;</expr_stmt></block></then>
				<else>else <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"B"</literal></expr>;</expr_stmt></block></else></if>
			}</block></for>
			<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
		}</block></then> <else>else <block>{
			<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
				<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"B"</literal></expr>;</expr_stmt></block></then>
				<else>else <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"W"</literal></expr>;</expr_stmt></block></else></if>
			}</block></for>
			<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
		}</block></else></if>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<if>if<condition>(<expr><operator>!</operator><name>dif</name></expr>)</condition><then><block>{
		<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
			<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"W"</literal></expr>;</expr_stmt></block></then>
			<else>else <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"B"</literal></expr>;</expr_stmt></block></else></if>
		}</block></for>
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<while>while<condition>(<expr><literal type="number">1</literal></expr>)</condition><block>{
		<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>sm</name></expr>]</index></name><operator>==</operator><name><name>s</name><index>[<expr><name>sm</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>sm</name><operator>=</operator><operator>(</operator><literal type="number">1</literal><operator>+</operator><name>sm</name><operator>)</operator><operator>%</operator><name>n</name></expr>;</expr_stmt></block></then>
		<else>else <block type="pseudo"><break>break;</break></block></else></if>
	}</block></while>
	<decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>st</name></decl>,<decl><type ref="prev"/><name>en</name></decl>;</decl_stmt>
	<for>for<control>(<init><expr><name>i</name><operator>=</operator><name>sm</name><operator>+</operator><name>n</name></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>sm</name><operator>+</operator><literal type="number">2</literal><operator>*</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>==</operator><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>&amp;&amp;</operator><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>!=</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>&amp;&amp;</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>s</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then><block>{
			<expr_stmt><expr><call><name><name>st</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>!=</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>&amp;&amp;</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name><name>s</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>&amp;&amp;</operator><name><name>s</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><name><name>s</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">2</literal></expr>]</index></name></expr>)</condition><then><block>{
			<expr_stmt><expr><call><name><name>en</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
	<decl_stmt><decl><type><name>int</name></type> <name>d</name></decl>,<decl><type ref="prev"/><name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>;</decl_stmt>
	<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><call><name><name>st</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<expr_stmt><expr><name>a</name><operator>=</operator><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><name>n</name></expr>;</expr_stmt> <expr_stmt><expr><name>b</name><operator>=</operator><name><name>en</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><name>n</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>a</name><operator>=</operator><name>a</name><operator>+</operator><name>n</name></expr>;</expr_stmt> <expr_stmt><expr><name>b</name><operator>=</operator><name>b</name><operator>+</operator><name>n</name></expr>;</expr_stmt>
		<if>if<condition>(<expr><name>a</name><operator>&gt;</operator><name>b</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>b</name><operator>=</operator><name>b</name><operator>+</operator><name>n</name></expr>;</expr_stmt></block></then></if>
		<if>if<condition>(<expr><name>k</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><for>for<control>(<init><expr><name>j</name><operator>=</operator><name>a</name></expr>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>b</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>s</name><index>[<expr><name>j</name><operator>%</operator><name>n</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal><operator>-</operator><name><name>s</name><index>[<expr><name>j</name><operator>%</operator><name>n</name></expr>]</index></name></expr>;</expr_stmt></block></for></block></then></if>
		<expr_stmt><expr><name>d</name><operator>=</operator><name>b</name><operator>-</operator><name>a</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
		<if>if<condition>(<expr><name>d</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>d</name><operator>=</operator><name>d</name><operator>/</operator><literal type="number">2</literal></expr>;</expr_stmt></block></then>
		<else>else <block type="pseudo"><expr_stmt><expr><name>d</name><operator>=</operator><operator>(</operator><name>d</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>;</expr_stmt></block></else></if>
		<expr_stmt><expr><name>d</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>d</name></expr></argument>,<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for>for<control>(<init><expr><name>j</name><operator>=</operator><name>a</name></expr>;</init><condition><expr><name>j</name><operator>&lt;</operator><name>a</name><operator>+</operator><name>d</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>s</name><index>[<expr><name>j</name><operator>%</operator><name>n</name></expr>]</index></name><operator>=</operator><name><name>s</name><index>[<expr><operator>(</operator><name>a</name><operator>-</operator><literal type="number">1</literal><operator>)</operator><operator>%</operator><name>n</name></expr>]</index></name></expr>;</expr_stmt></block></for>
		<for>for<control>(<init><expr><name>j</name><operator>=</operator><name>b</name></expr>;</init><condition><expr><name>j</name><operator>&gt;</operator><name>b</name><operator>-</operator><name>d</name></expr>;</condition><incr><expr><name>j</name><operator>--</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>s</name><index>[<expr><name>j</name><operator>%</operator><name>n</name></expr>]</index></name><operator>=</operator><name><name>s</name><index>[<expr><operator>(</operator><name>b</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>%</operator><name>n</name></expr>]</index></name></expr>;</expr_stmt></block></for>
	}</block></for>
	<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"W"</literal></expr>;</expr_stmt></block></then>
		<else>else <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"B"</literal></expr>;</expr_stmt></block></else></if>
	}</block></for>
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
