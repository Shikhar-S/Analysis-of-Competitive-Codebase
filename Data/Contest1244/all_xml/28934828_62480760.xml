<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28934828_62480760.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>X</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Y</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MP</name></cpp:macro> <cpp:value>make_pair</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PB</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>MAXN</name><init>=<expr><literal type="number">1e5</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>d</name></decl>,<decl><type ref="prev"/><name>e</name></decl>,<decl><type ref="prev"/><name>ide</name></decl>,<decl><type ref="prev"/><name>a1</name></decl>,<decl><type ref="prev"/><name>b1</name></decl>,<decl><type ref="prev"/><name>c1</name></decl>,<decl><type ref="prev"/><name>rj</name></decl>,<decl><type ref="prev"/><name>br</name></decl>,<decl><type ref="prev"/><name>a2</name></decl>,<decl><type ref="prev"/><name>b2</name></decl>,<decl><type ref="prev"/><name>c2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>a</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><name>MAXN</name><operator>+</operator><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name><name>djc</name><index>[<expr><name>MAXN</name><operator>+</operator><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>boja</name><index>[<expr><name>MAXN</name><operator>+</operator><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>DFS</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>)</parameter_list><block>{
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>djc</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<if>if<condition>(<expr><name><name>boja</name><index>[<expr><name><name>djc</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
			<expr_stmt><expr><name><name>boja</name><index>[<expr><name><name>djc</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>=</operator><name><name>boja</name><index>[<expr><name>x</name></expr>]</index></name><operator>%</operator><literal type="number">3</literal><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>DFS</name><argument_list>(<argument><expr><name><name>djc</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name>int</name></type> <name>main</name> <parameter_list>()</parameter_list> <block>{
	
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name><operator>-</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>d</name><operator>&gt;&gt;</operator><name>e</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>djc</name><index>[<expr><name>d</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><call><name>PB</name><argument_list>(<argument><expr><name>e</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>djc</name><index>[<expr><name>e</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><call><name>PB</name><argument_list>(<argument><expr><name>d</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if>if<condition>(<expr><name><name>djc</name><index>[<expr><name>d</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call><operator>&gt;</operator><literal type="number">2</literal></expr>)</condition><then><block>{
			<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"-1"</literal></expr>;</expr_stmt>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
		}</block></then></if>
		<if>if<condition>(<expr><name><name>djc</name><index>[<expr><name>e</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call><operator>&gt;</operator><literal type="number">2</literal></expr>)</condition><then><block>{
			<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"-1"</literal></expr>;</expr_stmt>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
		}</block></then></if>
	}</block></for>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<if>if<condition>(<expr><name><name>djc</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
			<expr_stmt><expr><name>ide</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
			<break>break;</break>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><name><name>boja</name><index>[<expr><name>ide</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>DFS</name><argument_list>(<argument><expr><name>ide</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>rj</name><operator>=</operator><literal type="number">1e15</literal></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name><operator>&lt;=</operator><literal type="number">2</literal></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block>{
			<for>for<control>(<init><decl><type><name>int</name></type> <name>k</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>k</name><operator>&lt;=</operator><literal type="number">2</literal></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control><block>{
				<expr_stmt><expr><name>a1</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
				<expr_stmt><expr><name>b1</name><operator>=</operator><name>j</name></expr>;</expr_stmt>
				<expr_stmt><expr><name>c1</name><operator>=</operator><name>k</name></expr>;</expr_stmt>
				<if>if<condition>(<expr><name>a1</name><operator>!=</operator><name>b1</name> <operator>&amp;&amp;</operator> <name>a1</name><operator>!=</operator><name>c1</name> <operator>&amp;&amp;</operator> <name>b1</name><operator>!=</operator><name>c1</name></expr>)</condition><then><block>{
					<expr_stmt><expr><name>br</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
					<for>for<control>(<init><decl><type><name>int</name></type> <name>l</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>l</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>l</name><operator>++</operator></expr></incr>)</control><block>{
						<if>if<condition>(<expr><name><name>boja</name><index>[<expr><name>l</name></expr>]</index></name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>br</name><operator>+=</operator><name><name>a</name><index>[<expr><name>a1</name></expr>]</index><index>[<expr><name>l</name></expr>]</index></name></expr>;</expr_stmt>
						}</block></then></if>
						<if>if<condition>(<expr><name><name>boja</name><index>[<expr><name>l</name></expr>]</index></name><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>br</name><operator>+=</operator><name><name>a</name><index>[<expr><name>b1</name></expr>]</index><index>[<expr><name>l</name></expr>]</index></name></expr>;</expr_stmt>
						}</block></then></if>
						<if>if<condition>(<expr><name><name>boja</name><index>[<expr><name>l</name></expr>]</index></name><operator>==</operator><literal type="number">3</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>br</name><operator>+=</operator><name><name>a</name><index>[<expr><name>c1</name></expr>]</index><index>[<expr><name>l</name></expr>]</index></name></expr>;</expr_stmt>
						}</block></then></if>
					}</block></for>
					<if>if<condition>(<expr><name>br</name><operator>&lt;</operator><name>rj</name></expr>)</condition><then><block>{
						<expr_stmt><expr><name>rj</name><operator>=</operator><name>br</name></expr>;</expr_stmt>
						<expr_stmt><expr><name>a2</name><operator>=</operator><name>a1</name></expr>;</expr_stmt>
						<expr_stmt><expr><name>b2</name><operator>=</operator><name>b1</name></expr>;</expr_stmt>
						<expr_stmt><expr><name>c2</name><operator>=</operator><name>c1</name></expr>;</expr_stmt>
					}</block></then></if>
				}</block></then></if>
			}</block></for>
		}</block></for>
	}</block></for>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>rj</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>l</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>l</name><operator>&lt;</operator><name>n</name></expr>;</condition> <incr><expr><name>l</name><operator>++</operator></expr></incr>)</control><block>{
						<if>if<condition>(<expr><name><name>boja</name><index>[<expr><name>l</name></expr>]</index></name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>a2</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="string">" "</literal></expr>;</expr_stmt>
						}</block></then></if>
						<if>if<condition>(<expr><name><name>boja</name><index>[<expr><name>l</name></expr>]</index></name><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>b2</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="string">" "</literal></expr>;</expr_stmt>
						}</block></then></if>
						<if>if<condition>(<expr><name><name>boja</name><index>[<expr><name>l</name></expr>]</index></name><operator>==</operator><literal type="number">3</literal></expr>)</condition><then><block>{
							<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>c2</name><operator>+</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="string">" "</literal></expr>;</expr_stmt>
						}</block></then></if>
					}</block></for>
	
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
