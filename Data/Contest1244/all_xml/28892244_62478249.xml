<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28892244_62478249.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>LL</name>;</typedef>
<decl_stmt><decl><type><name>LL</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>p</name></decl>,<decl><type ref="prev"/><name>d</name></decl>,<decl><type ref="prev"/><name>w</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>p</name><operator>&gt;&gt;</operator><name>w</name><operator>&gt;&gt;</operator><name>d</name></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>LL</name></type> <name>y</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>y</name><operator>&lt;=</operator><name>w</name></expr>;</condition><incr><expr><name>y</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><operator>(</operator><name>y</name><operator>*</operator><name>d</name><operator>)</operator><operator>%</operator><name>w</name> <operator>==</operator> <operator>(</operator><name>p</name><operator>%</operator><name>w</name><operator>)</operator></expr>)</condition><then><block>{
            <decl_stmt><decl><type><name>LL</name></type> <name>tmp</name><init>=<expr><name>p</name><operator>-</operator><name>y</name><operator>*</operator><name>d</name></expr></init></decl>;</decl_stmt>
            <if>if<condition>(<expr><name>tmp</name><operator>&gt;=</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                <decl_stmt><decl><type><name>LL</name></type> <name>x</name><init>=<expr><name>tmp</name><operator>/</operator><name>w</name></expr></init></decl>;</decl_stmt>
                <if>if<condition>(<expr><name>x</name><operator>+</operator><name>y</name><operator>&lt;=</operator><name>n</name></expr>)</condition><then><block>{
                    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>x</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>y</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>n</name><operator>-</operator><name>x</name><operator>-</operator><name>y</name></expr>;</expr_stmt>
                    <return>return <expr><literal type="number">0</literal></expr>;</return>
                }</block></then></if>
            }</block></then></if>
        }</block></then></if>
    }</block></for>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"-1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
<comment type="line">//a*x=1 (mod m)</comment>
</unit>
