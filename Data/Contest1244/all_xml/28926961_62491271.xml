<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28926961_62491271.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name><init>=<expr><literal type="number">100005</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>a</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name>k</name></decl>,<decl><type ref="prev"/><name>diff</name></decl>;</decl_stmt>
<function><type><name>void</name></type> <name>gol</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>)</parameter_list>
<block>{
	<decl_stmt><decl><type><name>ll</name></type> <name>tp</name><init>=<expr><operator>(</operator><name><name>a</name><index>[<expr><name>x</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>x</name></expr>]</index></name><operator>)</operator><operator>*</operator><name>x</name></expr></init></decl>;</decl_stmt>
	<if>if<condition>(<expr><name>tp</name><operator>&lt;=</operator><name>k</name></expr>)</condition><then>
	<block>{
		<expr_stmt><expr><name>k</name><operator>-=</operator><name>tp</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>diff</name><operator>-=</operator><name><name>a</name><index>[<expr><name>x</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>x</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></then>
	<else>else
	<block>{
		<decl_stmt><decl><type><name>ll</name></type> <name>tt</name><init>=<expr><name>k</name><operator>/</operator><name>x</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>diff</name><operator>-=</operator><name>tt</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>k</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>
<function><type><name>void</name></type> <name>gor</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>)</parameter_list>
<block>{
	<decl_stmt><decl><type><name>ll</name></type> <name>tp</name><init>=<expr><operator>(</operator><name><name>a</name><index>[<expr><name>x</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>*</operator><operator>(</operator><name>n</name><operator>-</operator><name>x</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
	<if>if<condition>(<expr><name>tp</name><operator>&lt;=</operator><name>k</name></expr>)</condition><then>
	<block>{
		<expr_stmt><expr><name>k</name><operator>-=</operator><name>tp</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>diff</name><operator>-=</operator><name><name>a</name><index>[<expr><name>x</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>x</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	}</block></then>
	<else>else
	<block>{
		<decl_stmt><decl><type><name>ll</name></type> <name>tt</name><init>=<expr><name>k</name><operator>/</operator><operator>(</operator><name>n</name><operator>-</operator><name>x</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>diff</name><operator>-=</operator><name>tt</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>k</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
	<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>l</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>r</name><init>=<expr><name>n</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name>diff</name><operator>=</operator><name><name>a</name><index>[<expr><name>n</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>k</name><operator>&gt;</operator><literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>l</name><operator>&lt;</operator><name>r</name></expr>)</condition>
	<block>{
		<if>if<condition>(<expr><name>l</name><operator>-</operator><literal type="number">1</literal><operator>&lt;=</operator><name>n</name><operator>-</operator><name>r</name></expr>)</condition><then>
		<block>{
			<expr_stmt><expr><call><name>gol</name><argument_list>(<argument><expr><name>l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>l</name><operator>++</operator></expr>;</expr_stmt>
		}</block></then>
		<else>else
		<block>{
			<expr_stmt><expr><call><name>gor</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>r</name><operator>--</operator></expr>;</expr_stmt>
		}</block></else></if>
	}</block></while>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>diff</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
}</block></function></unit>
