<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28935554_62474827.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name> <name>int</name></type> <name>ll</name>;</typedef>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="null">nullptr</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>p</name></decl>,<decl><type ref="prev"/><name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>;</decl_stmt> <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>p</name> <operator>&gt;&gt;</operator> <name>x</name> <operator>&gt;&gt;</operator> <name>y</name></expr>;</expr_stmt>
	<if>if<condition>(<expr><name>p</name><operator>%</operator><name>x</name><operator>==</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name>p</name><operator>/</operator><name>x</name><operator>&lt;=</operator><name>n</name></expr>)</condition><then><block>{
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>p</name><operator>/</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <name>n</name><operator>-</operator><name>p</name><operator>/</operator><name>x</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<decl_stmt><decl><type><name>ll</name></type> <name>ma</name><init>=<expr><name>p</name><operator>/</operator><name>x</name></expr></init></decl>;</decl_stmt>
	<if>if<condition>(<expr><name>ma</name><operator>&gt;=</operator><name>n</name></expr>)</condition><then><block>{
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name><init>=<expr><name>ma</name></expr></init></decl>;</init><condition><expr><name>i</name><operator>&gt;=</operator><call><name>max</name><argument_list>(<argument><expr><literal type="number">0LL</literal></expr></argument>,<argument><expr><name>ma</name><operator>-</operator><name>y</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control><block>{
		<if>if<condition>(<expr><operator>(</operator><name>p</name><operator>-</operator><name>i</name><operator>*</operator><name>x</name><operator>)</operator><operator>%</operator><name>y</name><operator>==</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name>i</name><operator>+</operator><operator>(</operator><name>p</name><operator>-</operator><name>i</name><operator>*</operator><name>x</name><operator>)</operator><operator>/</operator><name>y</name><operator>&lt;=</operator><name>n</name></expr>)</condition><then><block>{
			<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>i</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <operator>(</operator><name>p</name><operator>-</operator><name>i</name><operator>*</operator><name>x</name><operator>)</operator><operator>/</operator><name>y</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <name>n</name><operator>-</operator><name>i</name><operator>-</operator><operator>(</operator><name>p</name><operator>-</operator><name>i</name><operator>*</operator><name>x</name><operator>)</operator><operator>/</operator><name>y</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
