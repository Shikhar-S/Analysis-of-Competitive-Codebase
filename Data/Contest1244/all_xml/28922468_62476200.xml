<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28922468_62476200.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>endl</name></cpp:macro> <cpp:value>'\n'</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>READ</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>int a; cin &gt;&gt; a;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>READARR</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>int a[(n) + 1] = {}; FOR(i, 1, (n)) {cin &gt;&gt; a[i];}</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>READMAT</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>n</name></type></parameter>, <parameter><type><name>m</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>int a[n + 1][m + 1] = {}; FOR(i, 1, n) {FOR(j, 1, m) cin &gt;&gt; a[i][j];}</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fi</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>se</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vi</name></cpp:macro> <cpp:value>vector &lt;int&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pi</name></cpp:macro> <cpp:value>pair &lt;int, int&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vpi</name></cpp:macro> <cpp:value>vector &lt;pi&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FOR</name><parameter_list>(<parameter><type><name>i</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for (int i = (a); i &lt;= (b); i++)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FORD</name><parameter_list>(<parameter><type><name>i</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for (int i = (a); i &gt;= (b); i--)</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>inf</name> <init>= <expr><literal type="number">1e18</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>mod</name> <init>= <expr><literal type="number">1e9</literal> <operator>+</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<function><type><name>signed</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>p</name></decl>, <decl><type ref="prev"/><name>w</name></decl>, <decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>p</name> <operator>&gt;&gt;</operator> <name>w</name> <operator>&gt;&gt;</operator> <name>d</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>mn</name> <init>= <expr><operator>(</operator><name>p</name> <operator>-</operator> <name>d</name><operator>*</operator><name>n</name><operator>)</operator><operator>/</operator><operator>(</operator><name>w</name> <operator>-</operator> <name>d</name><operator>)</operator></expr></init></decl>;</decl_stmt>
	<if>if <condition>(<expr><operator>(</operator><name>p</name> <operator>-</operator> <name>d</name><operator>*</operator><name>n</name><operator>)</operator> <operator>%</operator> <operator>(</operator><name>w</name> <operator>-</operator> <name>d</name><operator>)</operator></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>mn</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
	<expr_stmt><expr><name>mn</name> <operator>=</operator> <call><name>max</name><argument_list>(<argument><expr><literal type="number">0LL</literal></expr></argument>, <argument><expr><name>mn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name>int</name></type> <name>st</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<macro><name>FOR</name> <argument_list>(<argument>i</argument>, <argument>mn</argument>, <argument>mn + d + <literal type="number">5</literal></argument>)</argument_list></macro>
	<block>{
	    <if>if <condition>(<expr><operator>(</operator><name>p</name> <operator>-</operator> <name>i</name><operator>*</operator><name>w</name><operator>)</operator> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>(</operator><name>p</name> <operator>-</operator> <name>i</name><operator>*</operator><name>w</name><operator>)</operator> <operator>%</operator> <name>d</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> 
	    <block>{
	        <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>i</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <operator>(</operator><name>p</name> <operator>-</operator> <name>i</name><operator>*</operator><name>w</name><operator>)</operator><operator>/</operator><name>d</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal> <operator>&lt;&lt;</operator> <name>n</name> <operator>-</operator> <operator>(</operator><name>i</name> <operator>+</operator> <operator>(</operator><name>p</name> <operator>-</operator> <name>i</name><operator>*</operator><name>w</name><operator>)</operator><operator>/</operator><name>d</name><operator>)</operator></expr>;</expr_stmt>
	        <expr_stmt><expr><name>st</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	        <break>break;</break>
	    }</block></then></if>
	}</block>
	
	<if>if <condition>(<expr><operator>!</operator><name>st</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
}</block></function></unit>
