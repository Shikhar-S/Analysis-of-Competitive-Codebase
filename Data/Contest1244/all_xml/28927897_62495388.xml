<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28927897_62495388.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name> <init>= <expr><literal type="number">1e6</literal><operator>+</operator><literal type="number">100</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name><name>a</name><index>[<expr><name>N</name></expr>]</index></name></decl>, <decl><type ref="prev"/><name>mns</name></decl>, <decl><type ref="prev"/><name>mxs</name></decl>, <decl><type ref="prev"/><name>mx</name></decl>, <decl><type ref="prev"/><name>mn</name></decl>, <decl><type ref="prev"/><name>l</name></decl>, <decl><type ref="prev"/><name>r</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name> <parameter_list>()</parameter_list> <block>{
    <expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>k</name></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>a</name><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{
        <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>mns</name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>l</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
        }</block></then></if>
        <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>mxs</name><operator>++</operator></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>r</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
                <block type="pseudo"><expr_stmt><expr><name>r</name><operator>=</operator><name>i</name></expr>;</expr_stmt></block></then></if>
        }</block></then></if>
    }</block></for>
    <if>if<condition>(<expr><name>mns</name><operator>==</operator><name>n</name></expr>)</condition><then> <block>{
        <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
    <expr_stmt><expr><name>mn</name><operator>=</operator><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name>mx</name><operator>=</operator><name><name>a</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <comment type="block">/*for(int i = 0 ; i &lt; n;  i++)
        cout &lt;&lt; a[i] &lt;&lt; ' ';
    cout &lt;&lt; '\n';*/</comment>
    <while>while<condition>(<expr><literal type="boolean">true</literal></expr>)</condition> <block>{
            <comment type="line">//cout &lt;&lt; k &lt;&lt; ' ' &lt;&lt; l &lt;&lt; ' ' &lt;&lt; r &lt;&lt; ' ' &lt;&lt; mns &lt;&lt; ' ' &lt;&lt; mxs &lt;&lt; ' ' &lt;&lt; mn &lt;&lt; ' ' &lt;&lt; mx &lt;&lt; '\n';</comment>
        <if>if<condition>(<expr><name>l</name><operator>==</operator><name>r</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr>;</expr_stmt>
            <return>return <expr><literal type="number">0</literal></expr>;</return>
        }</block></then></if>
        <if>if<condition>(<expr><name>k</name><operator>==</operator><literal type="number">0</literal><operator>||</operator><name>mn</name><operator>==</operator><name>mx</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>mx</name><operator>-</operator><name>mn</name></expr>;</expr_stmt>
            <return>return <expr><literal type="number">0</literal></expr>;</return>
        }</block></then></if>
        <if>if<condition>(<expr><name>mns</name><operator>&lt;</operator><name>mxs</name></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>nex</name><init>=<expr><name><name>a</name><index>[<expr><name>l</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>di</name><init>=<expr><name>nex</name><operator>-</operator><name><name>a</name><index>[<expr><name>l</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if>if<condition>(<expr><name>mns</name><operator>*</operator><name>di</name><operator>&gt;</operator><name>k</name></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>mx</name><operator>-</operator><name>mn</name><operator>-</operator><operator>(</operator><name>k</name><operator>/</operator><name>mns</name><operator>)</operator></expr>;</expr_stmt>
                <return>return <expr><literal type="number">0</literal></expr>;</return>
            }</block></then>
            <else>else <block>{
                <expr_stmt><expr><name>k</name><operator>-=</operator><name>mns</name><operator>*</operator><name>di</name></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>h</name> <init>= <expr><name>l</name></expr></init></decl>;</decl_stmt>
                <while>while<condition>(<expr><name><name>a</name><index>[<expr><name>h</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><name>l</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>&amp;&amp;</operator><name>l</name><operator>&lt;</operator><name>r</name></expr>)</condition>
                    <block type="pseudo"><expr_stmt><expr><name>l</name><operator>++</operator></expr><operator>,</operator> <expr><name>mns</name><operator>++</operator></expr>;</expr_stmt></block></while>
                <expr_stmt><expr><name>mn</name><operator>=</operator><name><name>a</name><index>[<expr><name>l</name></expr>]</index></name></expr>;</expr_stmt>
            }</block></else></if>
        }</block></then>
        <else>else <block>{
            <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>pre</name><init>=<expr><name><name>a</name><index>[<expr><name>r</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>di</name><init>=<expr><name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>-</operator><name>pre</name></expr></init></decl>;</decl_stmt>
            <if>if<condition>(<expr><name>mxs</name><operator>*</operator><name>di</name><operator>&gt;</operator><name>k</name></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>mx</name><operator>-</operator><name>mn</name><operator>-</operator><operator>(</operator><name>k</name><operator>/</operator><name>mxs</name><operator>)</operator></expr>;</expr_stmt>
                <return>return <expr><literal type="number">0</literal></expr>;</return>
            }</block></then>
            <else>else <block>{
                <expr_stmt><expr><name>k</name><operator>-=</operator><name>mxs</name><operator>*</operator><name>di</name></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>h</name> <init>= <expr><name>r</name></expr></init></decl>;</decl_stmt>
                <while>while<condition>(<expr><name><name>a</name><index>[<expr><name>h</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><name>r</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>&amp;&amp;</operator><name>r</name><operator>&gt;</operator><name>l</name></expr>)</condition>
                    <block type="pseudo"><expr_stmt><expr><name>r</name><operator>--</operator></expr><operator>,</operator> <expr><name>mxs</name><operator>++</operator></expr>;</expr_stmt></block></while>
                <expr_stmt><expr><name>mx</name><operator>=</operator><name><name>a</name><index>[<expr><name>r</name></expr>]</index></name></expr>;</expr_stmt>
            }</block></else></if>
        }</block></else></if>
    }</block></while>
}</block></function>
</unit>
