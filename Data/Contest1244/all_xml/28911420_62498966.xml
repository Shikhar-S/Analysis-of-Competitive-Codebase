<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28911420_62498966.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>p</name></decl>,<decl><type ref="prev"/><name>w</name></decl>,<decl><type ref="prev"/><name>d</name></decl>,<decl><type ref="prev"/><name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>,<decl><type ref="prev"/><name>t</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>p</name><operator>&gt;&gt;</operator><name>w</name><operator>&gt;&gt;</operator><name>d</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>t</name><operator>=</operator><name>p</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>x</name><operator>=</operator><name>p</name><operator>/</operator><name>w</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>p</name><operator>=</operator><name>p</name><operator>%</operator><name>w</name></expr>;</expr_stmt>
	<comment type="line">//cout&lt;&lt;p&lt;&lt;endl;</comment>
	<if>if <condition>(<expr><name>p</name><operator>%</operator><name>d</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then>
	<block>{
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>d</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
		<block>{
			<expr_stmt><expr><name>p</name><operator>+=</operator><name>w</name></expr>;</expr_stmt>
			<if>if <condition>(<expr><name>p</name><operator>%</operator><name>d</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>x</name><operator>-=</operator><name>i</name></expr>;</expr_stmt>
				<break>break;</break>
			}</block></then></if>
		}</block></for>
	}</block></then></if>
	<if>if <condition>(<expr><name>p</name><operator>%</operator><name>d</name><operator>&gt;</operator><literal type="number">0</literal> <operator>||</operator> <name><name>x</name><argument_list type="generic">&lt;<argument><expr><literal type="number">0</literal> <operator>||</operator> <name>w</name><operator>&lt;=</operator><name>d</name> <operator>||</operator> <name>p</name></expr></argument>&gt;</argument_list></name><name>t</name></expr>)</condition><then>
	<block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><operator>-</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	}</block></then>
	<else>else
	<block>{
		<expr_stmt><expr><name>y</name><operator>=</operator><name>p</name><operator>/</operator><name>d</name></expr>;</expr_stmt>
		<if>if <condition>(<expr><name>x</name><operator>+</operator><name>y</name><operator>&lt;=</operator><name>n</name></expr>)</condition><then>
		<block>{
			<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>x</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>y</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>n</name><operator>-</operator><name>x</name><operator>-</operator><name>y</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
		}</block></then>
		<else>else
		<block>{
			<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><operator>-</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
		}</block></else></if>
	}</block></else></if>
}</block></function></unit>
