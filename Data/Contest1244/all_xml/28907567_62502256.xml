<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28907567_62502256.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name> <name>int</name></type> <name>lli</name>;</typedef>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>lli</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>k</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>lli</name></type> <name><name>a</name><index>[<expr><name>n</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>a</name><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>lli</name></type> <name>l</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>r</name><init>=<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>diff</name></decl>,<decl><type ref="prev"/><name>emj</name></decl>,<decl><type ref="prev"/><name>emj1</name></decl>;</decl_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><name>l</name></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>l</name><operator>=</operator><name>i</name></expr>;</expr_stmt></block></then></if>
    }</block></for>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><name>n</name><operator>-</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&gt;=</operator><literal type="number">0</literal></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>a</name><index>[<expr><name>r</name></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>r</name><operator>=</operator><name>i</name></expr>;</expr_stmt></block></then></if>
    }</block></for>
    <while>while<condition>(<expr><name>l</name><operator>&lt;</operator><name>r</name> <operator>&amp;&amp;</operator> <name>k</name><operator>!=</operator><literal type="number">0</literal></expr>)</condition>
    <block>{
        <if>if<condition>(<expr><name>l</name><operator>&lt;=</operator><name>n</name><operator>-</operator><literal type="number">1</literal><operator>-</operator><name>r</name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>diff</name><operator>=</operator><name><name>a</name><index>[<expr><name>l</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>l</name></expr>]</index></name></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>k</name><operator>-</operator><operator>(</operator><name>diff</name><operator>*</operator><operator>(</operator><name>l</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>)</operator><operator>&gt;=</operator><literal type="number">0</literal></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>k</name><operator>=</operator><name>k</name><operator>-</operator><name>diff</name><operator>*</operator><operator>(</operator><name>l</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name>l</name><operator>++</operator></expr>;</expr_stmt>
            }</block></then>
            <else>else
            <block>{
                <expr_stmt><expr><name>emj</name><operator>=</operator><name>k</name><operator>/</operator><operator>(</operator><name>l</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name>k</name><operator>=</operator><name>k</name><operator>-</operator><name>emj</name><operator>*</operator><operator>(</operator><name>l</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>a</name><index>[<expr><name>l</name></expr>]</index></name><operator>+=</operator><name>emj</name></expr>;</expr_stmt>
                <break>break;</break>
            }</block></else></if>
        }</block></then>
        <else>else
        <block>{
            <expr_stmt><expr><name>diff</name><operator>=</operator><name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>r</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>k</name><operator>-</operator><operator>(</operator><name>diff</name><operator>*</operator><operator>(</operator><name>n</name><operator>-</operator><name>r</name><operator>)</operator><operator>)</operator><operator>&gt;=</operator><literal type="number">0</literal></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>k</name><operator>=</operator><name>k</name><operator>-</operator><name>diff</name><operator>*</operator><operator>(</operator><name>n</name><operator>-</operator><name>r</name><operator>)</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name>r</name><operator>--</operator></expr>;</expr_stmt>
            }</block></then>
            <else>else
            <block>{
                <expr_stmt><expr><name>emj</name><operator>=</operator><name>k</name><operator>/</operator><operator>(</operator><name>n</name><operator>-</operator><name>r</name><operator>)</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name>k</name><operator>=</operator><name>k</name><operator>-</operator><name>emj</name><operator>*</operator><operator>(</operator><name>n</name><operator>-</operator><name>r</name><operator>)</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>-=</operator><name>emj</name></expr>;</expr_stmt>
                <break>break;</break>
            }</block></else></if>
        }</block></else></if>
    }</block></while>
    <if>if<condition>(<expr><name>l</name><operator>&gt;=</operator><name>r</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">0</literal></expr>;</expr_stmt></block></then>
    <else>else
    <block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>a</name><index>[<expr><name>r</name></expr>]</index></name><operator>-</operator><name><name>a</name><index>[<expr><name>l</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></else></if>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
