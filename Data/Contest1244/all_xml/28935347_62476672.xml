<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28935347_62476672.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD</name></cpp:macro> <cpp:value>1000000007</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>N</name></cpp:macro> <cpp:value>100003</cpp:value></cpp:define>

<decl_stmt><decl><type><name>bool</name></type> <name><name>v</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>p</name></decl>, <decl><type ref="prev"/><name>w</name></decl>, <decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>p</name> <operator>&gt;&gt;</operator> <name>w</name> <operator>&gt;&gt;</operator> <name>d</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>pm</name> <init>= <expr><name>p</name> <operator>%</operator> <name>w</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>pd</name> <init>= <expr><name>d</name> <operator>%</operator> <name>w</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>y</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init>;</init> <condition><expr><name><name>v</name><index>[<expr><name>a</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>a</name> <operator>=</operator> <operator>(</operator><name>a</name> <operator>+</operator> <name>pd</name><operator>)</operator> <operator>%</operator> <name>w</name></expr><operator>,</operator> <expr><name>y</name> <operator>++</operator></expr></incr>)</control><block>{
		<expr_stmt><expr><name><name>v</name><index>[<expr><name>a</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
		<if>if<condition>(<expr><name>a</name> <operator>==</operator> <name>pm</name></expr>)</condition><then> <block type="pseudo"><break>break;</break></block></then></if>
	}</block></for>

	<decl_stmt><decl><type><name>ll</name></type> <name>x</name> <init>= <expr><operator>(</operator><name>p</name> <operator>-</operator> <literal type="number">1LL</literal> <operator>*</operator> <name>y</name> <operator>*</operator> <name>d</name><operator>)</operator> <operator>/</operator> <name>w</name></expr></init></decl>;</decl_stmt>

	<if>if<condition>(<expr><name>a</name> <operator>!=</operator> <name>pm</name> <operator>||</operator> <name>y</name> <operator>+</operator> <name>x</name> <operator>&gt;</operator> <name>n</name> <operator>||</operator> <name>y</name> <operator>*</operator> <name>d</name> <operator>&gt;</operator> <name>p</name></expr>)</condition><then>
		<block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"-1\n"</literal></expr>;</expr_stmt></block></then>
	<else>else<block>{
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>x</name> <operator>&lt;&lt;</operator> <literal type="char">' '</literal> <operator>&lt;&lt;</operator> <name>y</name> <operator>&lt;&lt;</operator> <literal type="char">' '</literal> <operator>&lt;&lt;</operator> <name>n</name> <operator>-</operator> <name>x</name> <operator>-</operator> <name>y</name> <operator>&lt;&lt;</operator> <literal type="char">'\n'</literal></expr>;</expr_stmt>
	}</block></else></if>
}</block></function></unit>
