<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1244/all/28911280_62500286.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>N</name></cpp:macro> <cpp:value>1000005</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>,<decl><type ref="prev"/><name>n</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>,<decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>exgcd</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter>,<parameter><decl><type><name>int</name> <modifier>&amp;</modifier></type><name>x</name></decl></parameter>,<parameter><decl><type><name>int</name> <modifier>&amp;</modifier></type><name>y</name></decl></parameter>)</parameter_list> <block>{
	<if>if<condition>(<expr><name>b</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
		<expr_stmt><expr><name>y</name><operator>=</operator><literal type="number">0</literal></expr><operator>,</operator><expr><name>x</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
		<return>return <expr><name>a</name></expr>;</return>
	}</block></then></if>
	<decl_stmt><decl><type><name>int</name></type> <name>t</name><init>=<expr><call><name>exgcd</name><argument_list>(<argument><expr><name>b</name></expr></argument>,<argument><expr><name>a</name><operator>%</operator><name>b</name></expr></argument>,<argument><expr><name>y</name></expr></argument>,<argument><expr><name>x</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name>y</name><operator>-=</operator><operator>(</operator><name>a</name><operator>/</operator><name>b</name><operator>)</operator><operator>*</operator><name>x</name></expr>;</expr_stmt>
	<return>return <expr><name>t</name></expr>;</return>
}</block></function>
<function><type><name>signed</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%lld%lld%lld%lld"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>b</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>c</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>t</name><init>=<expr><call><name>exgcd</name><argument_list>(<argument><expr><name>c</name></expr></argument>,<argument><expr><name>d</name></expr></argument>,<argument><expr><name>x</name></expr></argument>,<argument><expr><name>y</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if>if<condition>(<expr><name>b</name><operator>%</operator><name>t</name></expr>)</condition><then><block>{
		<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"-1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<expr_stmt><expr><name>b</name><operator>/=</operator><name>t</name></expr><operator>,</operator><expr><name>c</name><operator>/=</operator><name>t</name></expr><operator>,</operator><expr><name>d</name><operator>/=</operator><name>t</name></expr><operator>,</operator><expr><name>y</name><operator>=</operator><operator>(</operator><name>y</name><operator>%</operator><name>c</name><operator>+</operator><name>c</name><operator>)</operator><operator>%</operator><name>c</name><operator>*</operator><operator>(</operator><name>b</name><operator>%</operator><name>c</name><operator>)</operator><operator>%</operator><name>c</name></expr><operator>,</operator><expr><name>x</name><operator>=</operator><operator>(</operator><name>b</name><operator>-</operator><name>y</name><operator>*</operator><name>d</name><operator>)</operator><operator>/</operator><name>c</name></expr>;</expr_stmt>
	<if>if<condition>(<expr><name><name>x</name><argument_list type="generic">&lt;<argument><expr><literal type="number">0</literal><operator>||</operator><name>x</name><operator>+</operator><name>y</name></expr></argument>&gt;</argument_list></name><name>n</name></expr>)</condition><then> <block>{
		<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"-1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%lld %lld %lld\n"</literal></expr></argument>,<argument><expr><name>x</name></expr></argument>,<argument><expr><name>y</name></expr></argument>,<argument><expr><name>n</name><operator>-</operator><name>x</name><operator>-</operator><name>y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
