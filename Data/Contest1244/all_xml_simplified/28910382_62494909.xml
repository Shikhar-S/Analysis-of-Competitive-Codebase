pragma directive name name name literal name include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type char operator operator expr name operator call name argument_list for control init expr name operator literal type number condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator if condition expr name then block type pseudo expr_stmt expr name operator operator name return expr name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl_stmt decl type name name name index expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name operator literal type number then block type pseudo return for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char operator literal type char operator name name index expr name else block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr call name argument_list decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name operator literal type number then block expr_stmt expr name operator name break for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator ternary condition expr operator name name index expr name operator literal type char operator then expr literal type number else expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator name operator name name index expr name for control init decl type name name init expr name condition expr name operator name operator name incr expr operator name block expr_stmt expr name name index expr name operator operator name name index expr name operator name name index expr name operator literal type number operator operator operator name name index expr name operator name name index expr name operator literal type number operator comment type line comment type line comment type line comment type line for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr name condition expr name operator name operator name incr block if condition expr name name index expr name operator literal type number then block decl_stmt decl type name name init expr name while condition expr name name index expr name operator literal type number block type pseudo expr_stmt expr operator name comment type line comment type line if condition expr name operator literal type number then block for control init decl type name name init expr name condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number comment type line expr_stmt expr operator name expr_stmt expr operator name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator literal type number else block type pseudo expr_stmt expr operator name comment type line comment type line comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr ternary condition expr operator name operator name operator then expr name operator name else expr name expr_stmt expr call name argument_list argument expr ternary condition expr name name index expr name then expr literal type char else expr literal type char expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
