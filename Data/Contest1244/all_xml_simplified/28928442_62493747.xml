comment type line include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr literal type number index expr name decl type ref prev name name index expr literal type number index expr literal type number index expr literal type number decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name name index expr name operator literal type number operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr name operator name return expr name operator name name index expr name index expr name elseif if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name name index expr name operator name return expr name operator name name index expr name index expr name else block expr_stmt expr name name index expr name operator name return expr name operator name name index expr name index expr name function type name name parameter_list parameter decl type name name init expr literal type number block decl_stmt decl type name name init expr name expr_stmt expr name name index expr name operator literal type number if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name operator name operator name then block type pseudo continue expr_stmt expr name name index expr literal type number index expr name index expr name operator call name argument_list argument expr name name index expr name index expr literal type number argument expr name argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name operator name operator name then block type pseudo continue expr_stmt expr name name index expr literal type number index expr name index expr name operator call name argument_list argument expr name name index expr name index expr literal type number argument expr name argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name operator name operator name then block type pseudo continue decl_stmt decl type name name init expr name name index expr literal type number index expr name index expr name operator name name index expr literal type number index expr name index expr name operator name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name elseif if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name operator name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name index expr literal type number argument expr name argument expr name argument expr name operator name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name else block expr_stmt expr name operator operator literal type number return expr name function name parameter_list block comment type line expr_stmt expr name operator name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name name index expr name operator call name argument_list operator literal type number operator name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type boolean if condition expr name operator literal type boolean then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr call name argument_list if condition expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name operator name operator name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr name argument expr name argument expr literal type number else block expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr name argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr name argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name name index expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number comment type block 
