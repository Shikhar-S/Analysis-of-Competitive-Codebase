include directive file using namespace name comment type line comment type line comment type line define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value include directive file comment type line include directive file comment type line using namespace name typedef type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name comment type line comment type line comment type line comment type line comment type line typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name if condition expr name operator literal type number then block type pseudo return expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number if condition expr name operator literal type number operator literal type number then block type pseudo return expr operator name operator name operator operator name else block type pseudo return expr operator operator operator name operator name operator operator name operator operator name operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block comment type line decl_stmt decl type name name init expr literal type number decl_stmt decl type name name for control init expr name operator literal type number condition expr name operator call name argument_list argument expr name incr expr name operator block decl_stmt decl type name name if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr name name index expr name comment type line expr_stmt expr name operator name name index expr name index expr name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name for control init expr name operator literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list argument expr operator literal type number comment type line for control init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr literal type number for control init expr name operator literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator decl_stmt decl type name name init expr operator literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number operator literal type number argument expr literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name while condition expr literal type boolean block decl_stmt decl type name name init expr literal type boolean for control init expr name operator literal type number condition expr name operator call name argument_list argument expr name name index expr name incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator literal type boolean if condition expr name then block type pseudo break comment type line decl_stmt decl type name name init expr name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number operator literal type number for control init expr name operator literal type number condition expr name operator call name argument_list argument expr name incr expr name operator block decl_stmt decl type name name init expr name name index expr name if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name operator literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name return expr literal type number 
