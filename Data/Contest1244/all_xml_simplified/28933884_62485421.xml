include directive file include directive file include directive file include directive file using namespace name typedef type name name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name name index expr name operator call name argument_list operator literal type number operator name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name comment type line decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block if condition expr name name index expr name index expr name operator name then block type pseudo continue expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name operator name expr_stmt expr name operator name comment type line decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number return expr literal type number 
