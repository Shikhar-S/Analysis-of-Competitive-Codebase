include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number using namespace name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name function specifier type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr literal type char operator name operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name function specifier type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr literal type char operator name operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type name name name index expr name function type name name parameter_list block ifndef directive name decl_stmt decl type name name init expr call name argument_list expr_stmt expr name endif directive expr_stmt expr name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr name name index expr name operator name name index expr name comment type line comment type line comment type line while condition expr name name argument_list type generic argument expr name operator name literal type number block comment type line if condition expr name operator name then block decl_stmt decl type name name init expr name name index expr name operator literal type number operator name name index expr name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name name index expr name operator name name index expr name else block expr_stmt expr name operator name operator name break else block decl_stmt decl type name name init expr name name index expr name operator name name index expr name operator literal type number if condition expr name operator name operator name then block expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name name index expr name operator name name index expr name else block expr_stmt expr name operator name operator name break expr_stmt expr name operator name operator name ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr call name argument_list operator name endif directive return expr literal type number 
