include directive file using namespace name define directive macro name value decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number operator name operator name comment type line if condition expr name operator name then block type pseudo expr_stmt expr name operator name name index expr name index expr name else block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr operator name block if condition expr name name index expr name index expr name operator name then block type pseudo continue if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr name argument expr name argument expr name argument expr name else block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr name argument expr name argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number operator name operator name comment type line if condition expr name operator name then block type pseudo expr_stmt expr name operator name name index expr name index expr name operator expr name name index expr name operator name else block type pseudo expr_stmt expr name operator name name index expr name index expr name operator expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr operator name block if condition expr name name index expr name index expr name operator name then block type pseudo continue if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr name argument expr name argument expr name argument expr name else block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr name argument expr name argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator if condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name index expr literal type number break expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name return expr literal type number 
