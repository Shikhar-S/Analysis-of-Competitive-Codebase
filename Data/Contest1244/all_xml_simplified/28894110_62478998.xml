include directive file function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl specifier type name name decl_stmt decl specifier type name name while condition expr operator call name argument_list argument expr name operator call name argument_list operator name operator literal type char block type pseudo empty_stmt expr_stmt expr name operator ternary condition expr operator name operator name operator literal type char operator then expr literal type number else expr name operator literal type char while condition expr call name argument_list argument expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char if condition expr name then block type pseudo expr_stmt expr name operator operator name operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block decl_stmt decl specifier type name name name index expr literal type number modifier decl type ref prev name init expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator literal type number operator expr call name argument_list argument expr literal type char if condition expr operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type char else block for control init condition expr name incr expr name operator literal type number block type pseudo expr_stmt expr operator operator name operator name operator literal type number operator literal type char for control init condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type boolean operator literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type boolean operator literal type boolean typedef type name name typedef type name name name typedef type name name name name typedef type name name operator name name argument_list type generic argument expr name argument expr name name define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name init expr literal type number operator literal type number decl_stmt decl type name name operator name name argument_list type generic argument expr name name name index expr name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name block if condition expr name name index expr name operator call name argument_list operator literal type number then block if condition expr name name index expr name index expr literal type number operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name name index expr name index expr literal type number else block type pseudo expr_stmt expr name operator name operator expr name operator name name index expr name index expr literal type number else block type pseudo return expr name return expr operator literal type number function specifier type name name parameter_list block decl_stmt decl type name name init expr name decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name block expr_stmt expr name name index expr operator name operator name if condition expr name name index expr name index expr literal type number operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name name index expr name index expr literal type number elseif if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name operator expr name operator name name index expr name index expr literal type number else block type pseudo break function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number operator name name index expr name name index expr name operator literal type number operator name name index expr name name index expr name operator literal type number expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name name index expr name if condition expr call name argument_list argument expr name argument expr name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr operator name name index expr name operator expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name operator call name argument_list if condition expr name operator operator literal type number then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number expr_stmt expr call name argument_list comment type line for control init expr name name index expr name name index expr literal type number operator literal type number condition expr name name index expr name name index expr literal type number operator literal type number incr expr operator name name index expr name name index expr literal type number block type pseudo for control init expr name name index expr name name index expr literal type number operator literal type number condition expr name name index expr name name index expr literal type number operator literal type number incr expr operator name name index expr name name index expr literal type number block type pseudo if condition expr name name index expr name name index expr literal type number operator name name index expr name name index expr literal type number then block type pseudo expr_stmt expr call name argument_list expr_stmt expr name name operator name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
