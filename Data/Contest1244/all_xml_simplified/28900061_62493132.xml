include directive file using namespace name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr operator operator name operator literal type number operator operator name operator operator name then block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name name index expr operator operator name operator literal type number operator operator name operator operator name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name name index expr operator operator name operator literal type number operator operator name operator operator name operator literal type number expr_stmt expr name operator literal type boolean if condition expr name then block if condition expr name operator literal type number operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type char else block type pseudo expr_stmt expr name operator literal type char else block type pseudo expr_stmt expr name operator name return expr literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name if condition expr name name index expr name operator operator name name index expr operator name operator literal type number operator operator name then comment type line block expr_stmt expr call name name operator name argument_list for control init decl type name name init expr operator name operator literal type number operator operator name condition incr expr name operator operator name operator literal type number operator operator name block if condition expr name name index expr name then block type pseudo break expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator literal type number operator literal type number then comment type line block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list operator literal type number operator literal type number incr expr name operator block expr_stmt expr name operator if condition expr name operator name then block for control init decl type name name init expr name condition expr name operator operator name operator call name name operator name argument_list operator literal type number operator literal type number incr expr name operator block if condition expr name operator literal type number operator literal type number then block if condition expr name name index expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char break if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char expr_stmt expr name operator literal type number for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block expr_stmt expr name operator if condition expr name operator name then block for control init decl type name name init expr name condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block if condition expr name operator literal type number operator literal type number then block if condition expr name name index expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char break if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char else comment type line block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block expr_stmt expr name operator if condition expr name operator name then block for control init decl type name name init expr name condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block if condition expr name operator literal type number operator literal type number then block if condition expr name name index expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char break if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char expr_stmt expr name operator literal type number for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block expr_stmt expr name operator if condition expr name operator name then block for control init decl type name name init expr name condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block if condition expr name operator literal type number operator literal type number then block if condition expr name name index expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char break if condition expr name name index expr operator name name index expr call name name operator name argument_list operator literal type number operator literal type number operator operator name operator literal type char then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char expr_stmt expr name operator name 
