include directive file include directive file using namespace name typedef type name name name name typedef type name name name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name operator literal type number return expr name operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator name operator literal type number then block type pseudo return expr literal type number return expr name operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator literal type char then block type pseudo return expr literal type char return expr literal type char function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr name operator name operator literal type number return expr name operator name operator name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr name operator name operator literal type number return expr name operator name operator name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name return expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name operator name operator name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator name name index expr call name argument_list argument expr name operator name name index expr name operator name name index expr call name argument_list argument expr name then block type pseudo continue expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator if condition expr name operator name then block macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type char return expr literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr name while condition expr name operator name operator literal type number operator name name index expr name block type pseudo expr_stmt expr name operator expr_stmt expr name operator macro name argument_list argument argument argument block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name operator name if condition expr name name index expr literal type number operator name name index expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator literal type number decl_stmt decl type name name init expr name name index expr literal type number macro name argument_list argument argument argument literal type number expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument literal type number block if condition expr operator name name index expr name then block expr_stmt expr name operator name name index expr name continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr name name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator name else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type char 
