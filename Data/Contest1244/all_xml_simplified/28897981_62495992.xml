include directive file using namespace name typedef type name name name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr operator name operator name operator literal type boolean operator else expr literal type boolean function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr operator name operator name operator literal type boolean operator else expr literal type boolean define directive macro name parameter_list parameter type name value function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr operator name then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number argument expr name expr_stmt expr name operator name operator name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator operator name operator name operator operator name return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr operator name operator call name argument_list argument expr operator operator name operator name operator operator literal type number while condition expr name operator name operator name block type pseudo expr_stmt expr operator name while condition expr name operator name operator name block type pseudo expr_stmt expr operator name return expr ternary condition expr operator name operator name operator name operator then expr name else expr operator literal type number comment type line comment type line decl_stmt decl type specifier name name init expr literal type number operator literal type number comment type line comment type line define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name operator literal type number index expr literal type number decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name return function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name then block type pseudo continue else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type number argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator block expr name expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number if condition expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name name operator name argument expr name name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type string expr_stmt expr name operator name expr_stmt expr name operator literal type string operator literal type number operator call name argument_list operator name operator literal type string return expr literal type number 
