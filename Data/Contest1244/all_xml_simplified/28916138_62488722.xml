include directive file using namespace name define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number function type name name parameter_list parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number block if condition expr name operator name then block type pseudo return expr literal type number decl_stmt decl type name modifier name init expr name name index expr name index expr name index expr name if condition expr name operator literal type number then block type pseudo return expr name expr_stmt expr name operator name if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr literal type number index expr name name index expr name operator call name argument_list argument expr name operator literal type number argument expr literal type number argument expr name if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr literal type number index expr name name index expr name operator call name argument_list argument expr name operator literal type number argument expr literal type number argument expr name if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr literal type number index expr name name index expr name operator call name argument_list argument expr name operator literal type number argument expr literal type number argument expr name return expr name function type name name parameter_list parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number block if condition expr name operator name then block type pseudo return decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name if condition expr name operator literal type number operator name operator literal type number operator name operator name name index expr literal type number index expr name name index expr name operator call name argument_list argument expr name operator literal type number argument expr literal type number argument expr name then block expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number argument expr literal type number argument expr name return if condition expr name operator literal type number operator name operator literal type number operator name operator name name index expr literal type number index expr name name index expr name operator call name argument_list argument expr name operator literal type number argument expr literal type number argument expr name then block expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number argument expr literal type number argument expr name return if condition expr name operator literal type number operator name operator literal type number operator name operator name name index expr literal type number index expr name name index expr name operator call name argument_list argument expr name operator literal type number argument expr literal type number argument expr name then block expr_stmt expr name name index expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number argument expr literal type number argument expr name return decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name init expr operator literal type number block decl_stmt decl type name name init expr operator name operator name name index expr name operator call name argument_list operator operator name operator operator literal type number operator if condition expr name operator literal type number then block type pseudo return expr literal type boolean expr_stmt expr name name index expr name operator operator name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo return expr call name argument_list argument expr name argument expr name return expr literal type boolean function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr operator name then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name operator call name argument_list operator name expr_stmt expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name then block type pseudo expr_stmt expr name operator literal type char expr_stmt expr name operator name name index expr name expr_stmt expr name operator name return expr literal type number 
