include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name decl_stmt decl type name name name init expr literal type number decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name name index expr name index expr name name index expr name for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr operator name operator literal type number operator operator literal type number operator operator operator operator name operator literal type number operator operator literal type number operator function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name index expr literal type number if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type number break if condition expr operator name then block expr_stmt expr name operator operator literal type number return expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name name index expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator literal type char return expr literal type number 
