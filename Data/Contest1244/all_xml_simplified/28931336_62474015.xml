include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type name name operator name name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name operator name name argument_list type generic argument expr name name argument_list argument expr name argument expr name return expr call name argument_list argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr operator name argument expr name if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr operator name return expr ternary condition expr operator name operator literal type number operator then expr name else expr call name argument_list argument expr name argument expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name decl_stmt decl type specifier name name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number function type name name name parameter_list parameter decl type name name name parameter decl type name name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr name operator call name argument_list argument expr name operator name operator name argument expr name operator literal type number operator name else block type pseudo return expr call name argument_list argument expr name operator name operator name argument expr name operator literal type number operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number operator name if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name operator name else block type pseudo expr_stmt expr name operator literal type number operator operator name operator literal type number operator operator name return expr literal type number 
