comment type block format doxygen include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value function specifier type name name parameter_list parameter decl type name name name index block decl_stmt decl type name name decl_stmt decl type name name init expr literal type number while condition expr operator name operator call name argument_list operator operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name name index expr name operator operator name return expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block decl_stmt decl type name name name index expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name expr_stmt expr name name index expr literal type number operator name operator literal type number operator literal type char expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number while condition expr name block expr_stmt expr name name index expr name operator operator name operator literal type number operator literal type char expr_stmt expr name operator literal type number while condition expr name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr operator name expr_stmt expr call name argument_list argument expr literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number do block expr_stmt expr name operator call name argument_list if condition expr name operator name then block type pseudo return expr literal type boolean condition expr operator name name argument_list type generic argument expr literal type char operator name literal type char operator operator name operator literal type char if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number else block type pseudo expr_stmt expr name operator name operator literal type char while condition expr operator name operator call name argument_list operator operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type char operator expr_stmt expr name operator name return expr literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name name parameter decl type specifier name name block expr_stmt expr name operator operator name operator name operator operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type specifier name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number return expr name using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list block ifndef directive name expr_stmt expr name decl_stmt decl type name name init expr call name argument_list endif directive expr_stmt expr name expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number expr_stmt expr name operator name name index expr name operator name name index expr literal type number expr_stmt expr name operator literal type number operator expr name operator name operator expr name operator name operator literal type number while condition expr name name argument_list type generic argument expr name operator name literal type number block if condition expr name operator name then block expr_stmt expr name operator name name index expr name operator literal type number operator name name index expr name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name operator name name index expr name operator name name index expr name else block expr_stmt expr name operator name operator name break else block expr_stmt expr name operator name name index expr name operator name name index expr name operator literal type number if condition expr name operator name operator name then block expr_stmt expr name operator name operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name operator name name index expr name operator name name index expr name else block expr_stmt expr name operator name operator name break expr_stmt expr name operator name operator name return expr literal type number 
