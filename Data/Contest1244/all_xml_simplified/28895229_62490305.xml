pragma directive name name name literal name pragma directive name name name literal name include directive file include directive file include directive file include directive file using namespace name using namespace name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr literal type number expr literal type number expr operator literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr name decl type ref prev name decl type ref prev name init expr name decl type ref prev name name index expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator name name index expr name name index expr name index expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr operator ternary condition expr name operator literal type number then expr literal type number else expr name operator literal type number operator function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr operator ternary condition expr name operator literal type number then expr literal type number else expr name operator literal type number operator function specifier type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name function specifier type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr call name argument_list argument expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator operator literal type number operator expr call name argument_list argument expr literal type number if condition expr call name argument_list argument expr name name index expr literal type number operator literal type number then block do block expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator literal type number condition expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type char else block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name name index expr literal type number operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type char function name parameter_list block comment type line comment type line expr_stmt expr call name argument_list decl_stmt decl type name name init expr literal type number comment type line while condition expr name operator block expr_stmt expr call name argument_list return expr literal type number 
