include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value using namespace name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name argument expr operator name decl_stmt decl type name name init expr operator name operator literal type number operator operator name operator literal type number decl type ref prev name init expr operator name operator literal type number operator operator name operator literal type number if condition expr name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name name index expr literal type number while condition expr name operator block decl_stmt decl type name name decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator name for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator name if condition expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string argument expr name continue expr_stmt expr call name argument_list argument expr literal type string argument expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number operator operator name operator name operator literal type number operator operator literal type number function type name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name modifier name parameter decl type name name modifier name block if condition expr operator name then block expr_stmt expr name operator literal type number operator expr name operator literal type number return expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr name argument expr name expr_stmt expr name operator name operator name operator name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr_stmt expr name operator name operator expr name operator name operator expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator name operator operator name operator name operator expr_stmt expr name operator name operator name operator name operator expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name operator operator name operator name operator name operator operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator operator name operator name operator operator name operator name expr_stmt expr name operator operator name operator name operator operator name else block expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name if condition expr name operator literal type number then block expr_stmt expr name operator operator operator name operator operator name expr_stmt expr name operator operator name operator literal type number operator operator name expr_stmt expr name operator operator name operator literal type number operator operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name if condition expr name name argument_list type generic argument expr literal type number operator name operator name name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name operator name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name index expr literal type number decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name operator expr name name index expr name operator name name index expr name operator expr name name index expr name operator name operator expr name name index expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name argument expr name function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name decl type ref prev name decl type ref prev name init expr literal type number condition expr name name argument_list type generic argument expr name operator name operator name operator name incr expr name operator operator expr call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name argument expr name block type pseudo empty_stmt for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name argument expr literal type number break decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name then block decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr name name index expr literal type number operator name operator expr name name index expr name name index expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number operator name name index expr name name index expr name operator literal type number operator name name index expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr sizeof argument_list argument expr name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name function type name name parameter_list block function type name name parameter_list block function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive comment type line comment type line comment type line expr_stmt expr call name argument_list comment type line comment type line comment type line 
