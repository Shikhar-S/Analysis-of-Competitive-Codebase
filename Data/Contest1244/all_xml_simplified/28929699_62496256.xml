include directive file define directive macro name value using namespace name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator literal type number operator literal type number operator name name index expr name else block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator literal type number operator name name index expr name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr name name index expr literal type number decl type ref prev name init expr name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name while condition expr name operator name block while condition expr name operator name operator name name index expr name operator name name index expr name operator literal type number block type pseudo expr_stmt expr operator name while condition expr name operator name operator name name index expr name operator literal type number operator name name index expr name block type pseudo expr_stmt expr operator name if condition expr name operator name then block type pseudo break if condition expr name operator operator name operator name operator literal type number operator then block decl_stmt decl type name name init expr operator name operator name operator operator name name index expr name operator literal type number operator name name index expr name operator if condition expr name operator name then block expr_stmt expr name operator name operator operator name operator name break else block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name operator literal type number expr_stmt expr operator name else block decl_stmt decl type name name init expr call name argument_list argument expr name operator name operator literal type number operator operator name name index expr name operator name name index expr name operator literal type number operator if condition expr name operator name then block expr_stmt expr name operator name operator call name argument_list argument expr name operator name operator literal type number break else block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name operator literal type number expr_stmt expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name return expr literal type number 
