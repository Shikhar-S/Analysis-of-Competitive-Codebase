include directive file using namespace name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number typedef type name name name typedef type name name name decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number decl_stmt decl type name name name index init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number expr literal type number decl_stmt decl type name name init expr literal type string decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name index expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name init expr literal type number block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator expr name operator name name index expr name index expr name name index expr name operator expr name operator operator name operator literal type number operator operator literal type number return expr name function type name name parameter_list block ifndef directive name comment type line else directive comment type line comment type line endif directive expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr call name argument_list argument expr name name index expr name operator literal type number then block type pseudo return expr call name argument_list argument expr literal type string if condition expr call name argument_list argument expr name name index expr name operator literal type number then block type pseudo return expr call name argument_list argument expr literal type string decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr name decl_stmt decl type name name argument_list type generic argument expr name name do block decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name condition expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number argument expr literal type string index expr name operator name return expr literal type number 
