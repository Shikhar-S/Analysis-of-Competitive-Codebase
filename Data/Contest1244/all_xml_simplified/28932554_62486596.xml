include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name init expr operator literal type number block comment type line if condition expr operator name operator name name index expr name operator literal type number then block type pseudo return expr name name index expr name index expr name index expr name operator name name index expr name index expr name if condition expr name name index expr name index expr name index expr name operator operator literal type number then block type pseudo return expr name name index expr name index expr name index expr name decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name operator name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name argument expr name argument expr literal type number argument expr name if condition expr name operator name then block expr_stmt expr name operator operator literal type number operator name expr_stmt expr call name argument_list argument expr literal type number return expr name name index expr name index expr name index expr name operator name operator name name index expr name index expr name decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name init expr operator literal type number block expr_stmt expr name name index expr name operator name if condition expr operator name operator name name index expr name operator literal type number then block type pseudo return for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name operator name operator name then block type pseudo continue if condition expr call name argument_list argument expr name argument expr name argument expr name argument expr literal type number argument expr name operator name name index expr name index expr name operator name name index expr name index expr name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr literal type number argument expr name return function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name operator name elseif if condition expr name name index expr name operator literal type number then block type pseudo return expr name operator operator literal type number operator name operator expr literal type number if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr name operator operator literal type number operator name operator expr literal type number expr_stmt expr call name argument_list argument expr name argument expr operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type number argument expr literal type number argument expr literal type number decl type ref prev name init expr call name argument_list argument expr name argument expr literal type number argument expr literal type number argument expr literal type number decl type ref prev name init expr call name argument_list argument expr name argument expr literal type number argument expr literal type number argument expr literal type number if condition expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr literal type number argument expr literal type number elseif if condition expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr literal type number argument expr literal type number else block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name 
