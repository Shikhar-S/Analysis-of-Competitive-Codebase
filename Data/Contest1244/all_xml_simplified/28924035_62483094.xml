comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value comment type line function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number function type name name name parameter_list parameter decl type name name name parameter decl type name name name block decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name decl type ref prev name init expr call name argument_list argument expr name argument expr name if condition expr name operator name operator literal type number then block type pseudo return expr name else block type pseudo return expr call name argument_list argument expr name operator name argument expr name function type name name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name modifier name parameter decl type name name modifier name block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name operator name argument expr name argument expr name expr_stmt expr name operator name operator name operator name return expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name name index expr literal type number index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument literal type number block macro name argument_list argument argument block expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name name index expr name operator operator expr name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr block expr name expr name name index expr name expr name name index expr name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr operator literal type number return macro name argument_list argument argument block if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name argument expr name break comment type line comment type line decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator literal type number index expr name name index expr name decl_stmt decl type name name init expr literal type number if condition expr name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name name index expr literal type number index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name if condition expr name operator literal type number then block macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number macro name argument_list argument argument block expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number expr_stmt expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name argument_list 
