include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type name name name name index expr name index expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name init expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name init expr literal type number while condition expr literal type boolean block comment type line decl_stmt decl type name name init expr operator literal type number if condition expr name operator literal type number operator literal type number then block expr_stmt expr name name index expr name operator name elseif if condition expr name operator literal type number operator literal type number then block expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name index expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name name index expr name incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name if condition expr name operator operator literal type number then block comment type line if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name return expr_stmt expr name operator name expr_stmt expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number then block return expr literal type boolean expr_stmt expr name name index expr name index expr name name index expr name operator name expr_stmt expr name name index expr name index expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number return expr literal type boolean function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name if condition expr operator call name argument_list argument expr name argument expr name then block expr_stmt expr name operator operator literal type number operator name return expr literal type number decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name break decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name return expr literal type number 
