comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type modifier value comment type line define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value typedef type name name name typedef type name name name name typedef type name name operator name name argument_list type generic argument expr name argument expr name name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl type ref prev name while condition expr operator name operator call name argument_list operator operator literal type number operator literal type number operator name block type pseudo expr_stmt expr name operator operator operator name operator literal type number operator expr_stmt expr name operator operator name operator literal type number operator while condition expr literal type number operator operator name operator call name argument_list operator operator name operator literal type number block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type number operator if condition expr name then block type pseudo expr_stmt expr name operator operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr call name argument_list argument expr literal type char if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator operator name operator block expr name name index expr name expr name operator expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block type pseudo if condition expr name name index expr name operator name operator name then block type pseudo expr_stmt expr name name index expr name name index expr name operator name operator name name index expr name operator literal type number operator literal type number operator expr call name argument_list argument expr name name index expr name operator name argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr call name argument_list argument expr name name index expr name index expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name argument expr name expr_stmt expr operator name name index expr name operator expr operator name name index expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr literal type number decl_stmt decl type name name init expr literal type number do block decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name name index expr name name index expr name index expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr call name argument_list argument expr name argument expr name argument expr sizeof argument_list argument expr name condition expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator literal type number operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type char macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name name index expr name argument expr literal type char return expr literal type number 
