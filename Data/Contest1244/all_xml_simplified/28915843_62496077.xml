include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name using namespace name using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name using template parameter_list parameter type name name name init type name name operator name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name init expr literal type number decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator literal type number expr_stmt expr name name index expr literal type number operator name name index expr name expr_stmt expr name name index expr name operator literal type number operator name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator name then block if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type char else block type pseudo expr_stmt expr name operator literal type char else block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator name return expr literal type number while condition expr name operator call name name operator name argument_list operator name name index expr name operator literal type number operator name block type pseudo expr_stmt expr name operator for control init decl type name name init expr name operator literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name operator literal type number decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type boolean while condition expr name operator call name name operator name argument_list operator operator name name index expr name operator name name index expr name operator literal type number operator literal type number operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number operator block type pseudo expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator name operator literal type number operator operator literal type number if condition expr name operator operator name operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator literal type number decl type ref prev name init expr name name index expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name name index expr name operator name name index expr name expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type char if condition expr name operator name operator name then block decl_stmt decl type name name init expr name name index expr name operator literal type number decl type ref prev name init expr name name index expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name name index expr name operator name name index expr name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator name return expr literal type number 
