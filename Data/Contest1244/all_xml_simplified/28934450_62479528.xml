include directive file using namespace name typedef type name name name typedef type name name name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value ifdef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier endif directive define directive macro name value decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name operator literal type number macro name argument_list argument argument literal type number expr_stmt expr name name index expr name operator name for control init decl type name modifier name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name operator literal type number argument expr name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name macro name argument_list argument argument literal type number macro name argument_list argument argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name macro name argument_list argument argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name name index expr name operator call name argument_list operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number decl_stmt decl type name name init expr name do block expr_stmt expr call name argument_list argument expr name argument expr call name argument_list argument expr name condition expr call name argument_list argument expr name argument expr name operator literal type number do block if condition expr name operator call name argument_list argument expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number return expr literal type number condition expr call name argument_list argument expr name argument expr name operator literal type number 
