include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl_stmt decl type name name name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type char then block type pseudo return expr literal type char else block type pseudo return expr literal type char function type name name parameter_list block expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr literal type number if condition expr name name index expr literal type number operator name name index expr name then block type pseudo expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl type ref prev name init expr name name index expr name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number if condition expr name operator literal type number operator name then block type pseudo expr_stmt expr name operator name operator name name index expr name operator name operator literal type number operator expr name operator name name index expr name else block type pseudo expr_stmt expr name operator name operator name name index expr name operator literal type number if condition expr name operator name operator name then block type pseudo expr_stmt expr name operator name name index expr literal type number operator literal type number operator name operator name operator expr name operator name name index expr literal type number else block type pseudo expr_stmt expr name operator name name index expr name operator name operator literal type number if condition expr name operator name then block if condition expr name operator literal type number operator name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name else block type pseudo expr_stmt expr name name index expr name operator name name index expr name else block if condition expr name operator literal type number operator name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name else block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number if condition expr name name index expr literal type number operator name name index expr name then block type pseudo expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name then block if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number else block expr_stmt expr call name argument_list 
