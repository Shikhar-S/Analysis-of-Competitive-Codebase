include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name init expr call name name operator name argument_list if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block if condition expr call name name operator name argument_list operator literal type number operator name name index expr name index expr name operator name name index expr call name name operator name argument_list operator literal type number then block type pseudo continue expr_stmt expr call name name operator name argument_list argument expr name name index expr name index expr name break decl_stmt decl type name name name init expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name operator name operator name then block type pseudo continue decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name index expr name if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name index expr name if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name index expr name comment type line if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char expr_stmt expr name operator name name index expr name expr_stmt expr name operator name return expr literal type number 
