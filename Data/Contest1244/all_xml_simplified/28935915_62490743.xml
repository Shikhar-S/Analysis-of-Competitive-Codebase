include directive file using namespace name define directive macro name value decl_stmt decl type name name name index expr literal type number function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr operator call name argument_list argument expr name block type pseudo expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name function type name name parameter_list block decl_stmt decl type name name name init expr call name argument_list decl type ref prev name init expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name else block type pseudo break for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name else block type pseudo break decl_stmt decl type name name name init expr literal type number while condition expr name operator name block if condition expr name operator name operator name operator literal type number then block if condition expr name operator name operator operator name name index expr name operator literal type number operator name name index expr name operator then block expr_stmt expr name operator name operator operator name name index expr name operator literal type number operator name name index expr name operator expr_stmt expr operator name for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name else block type pseudo break else block expr_stmt expr name operator name operator name break else block if condition expr name operator operator name operator name operator literal type number operator operator operator name name index expr name operator name name index expr name operator literal type number operator then block expr_stmt expr name operator operator name operator name operator literal type number operator operator operator name name index expr name operator name name index expr name operator literal type number operator expr_stmt expr operator name for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name else block type pseudo break else block expr_stmt expr name operator name operator operator name operator name operator literal type number operator break if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr name operator name name index expr name operator name name index expr name operator name operator name return expr literal type number 
