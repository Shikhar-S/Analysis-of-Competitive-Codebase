include directive file define directive macro name value using namespace name typedef type name name name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator name expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number operator expr name operator literal type number return expr name else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator name argument expr name argument expr name expr_stmt expr name operator operator name operator name operator operator name return expr name function type name name parameter_list block expr_stmt expr name operator name operator name operator name operator name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return else block decl_stmt decl type name name init expr name operator name decl type ref prev name init expr name operator name decl_stmt decl type name name init expr operator name operator operator operator name operator name operator operator name operator operator name operator name operator operator name decl type ref prev name init expr operator name operator name operator name operator operator name if condition expr name operator literal type number operator name operator literal type number operator name operator name operator name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name operator name operator name return decl_stmt decl type name name init expr operator name operator operator operator name operator name operator operator name operator operator name operator name operator operator name decl type ref prev name init expr operator name operator name operator name operator operator name if condition expr name operator literal type number operator name operator literal type number operator name operator name operator name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name operator name operator name return expr_stmt expr call name argument_list argument expr literal type string return function type name name parameter_list block expr_stmt expr call name argument_list expr_stmt expr call name argument_list return expr literal type number 
