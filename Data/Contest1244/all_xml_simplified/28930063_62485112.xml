include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value using name name operator name using name name operator name using name name operator name using name name operator name using name name operator name using name name operator name using name name operator name using name name operator name using name name operator name using name name operator name using name name operator name function template parameter_list parameter type name name specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr name decl type ref prev name init expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number return function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr name condition expr name incr expr name operator name name index expr name block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name name index expr name name index expr name index expr name expr_stmt expr name operator operator name operator literal type number operator operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name operator expr name operator name return function type name name parameter_list parameter decl type name name parameter decl type name modifier name name index block expr_stmt expr name operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr literal type number index expr name operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr literal type number index expr name operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr literal type number index expr name operator call name argument_list macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name name index expr name operator expr name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr literal type number decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name name index expr name operator expr name operator name do block expr_stmt expr call name argument_list argument expr name argument expr name condition expr call name name operator name argument_list argument expr name argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number return expr literal type number 
