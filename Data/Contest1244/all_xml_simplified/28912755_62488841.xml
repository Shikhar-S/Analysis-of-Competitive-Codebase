include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator name operator name operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr literal type number operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr literal type number for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block expr_stmt expr name operator name break if condition expr name operator literal type number then block if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr name operator name return expr literal type number for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo continue decl_stmt decl type name name init expr name while condition expr operator name name index expr name block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr name operator literal type number if condition expr operator operator operator name operator name operator operator literal type number operator then block comment type line decl_stmt decl type name name init expr operator name operator name operator operator literal type number operator literal type number if condition expr name operator name then block for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number else block for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr name operator name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator literal type number else block comment type line decl_stmt decl type name name init expr operator name operator name operator literal type number operator operator literal type number if condition expr name operator name then block for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number else block for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr name operator name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator literal type number for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string 
