include directive file function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name specifier modifier name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type name name name index expr name index expr literal type number decl type ref prev name decl_stmt decl type name name operator name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block while condition expr name name index expr name operator call name argument_list operator literal type number block expr_stmt expr name name index expr name operator literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr operator name name index expr name then block expr_stmt expr name operator name break decl_stmt decl type name name operator name name argument_list type generic argument expr name name argument_list argument expr literal type number do block expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr operator name name index expr name then block expr_stmt expr name operator name break condition expr name name index expr name operator call name argument_list operator literal type number expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl specifier type name name name name index expr name index expr literal type number index expr literal type number decl_stmt decl specifier type name name operator name name argument_list type generic argument expr name argument expr name name name index expr name index expr literal type number index expr literal type number decl_stmt decl type name name init expr call name name operator name argument_list operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name then block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name operator name operator name then block type pseudo if condition expr call name argument_list argument expr name name index expr name index expr name index expr name argument expr name name index expr name operator literal type number index expr name index expr name operator name name index expr name name index expr name index expr name then block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator block expr name expr name decl_stmt decl type name name name init expr name decl_stmt decl type name name operator name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr call name argument_list argument expr name argument expr name name index expr name index expr name index expr name then block type pseudo expr_stmt expr name operator block expr name expr name decl_stmt decl specifier type name name name index expr name for control init decl type name name init expr name condition expr name operator literal type number incr expr operator name block expr_stmt expr name name index expr name name index expr name operator name name operator name expr_stmt expr name operator name name index expr name index expr name name operator name index expr name name operator name expr_stmt expr name name operator name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name operator name operator operator name name index expr name operator literal type number operator operator operator ternary condition expr name operator name then expr literal type char else expr literal type char operator function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name operator name argument_list argument expr literal type number expr_stmt expr name name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name operator name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name operator name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name operator name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name name operator name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator call name argument_list operator literal type number if condition expr operator name then block type pseudo expr_stmt expr name name operator name operator operator literal type number operator literal type char else block expr_stmt expr call name argument_list argument expr literal type number return expr literal type number 
