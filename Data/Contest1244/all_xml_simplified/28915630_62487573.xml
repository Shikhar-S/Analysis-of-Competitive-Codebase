include directive file define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value using namespace name using name init type name name using name init type name name argument_list type generic argument expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name comment type block function type name name parameter_list block if condition expr call name name operator name argument_list then block type pseudo return expr literal type number decl_stmt decl type name name init expr operator call name name operator name argument_list operator literal type number operator operator name decl_stmt decl type name name init expr call name name operator name argument_list while condition expr name block type pseudo expr_stmt expr name operator operator expr name operator literal type number return expr name function type operator type name name name parameter_list parameter decl type specifier name modifier name block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr operator name decl type ref prev name init expr name while condition expr operator call name name operator name argument_list block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name operator expr name operator literal type number return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator operator name decl_stmt decl type name name expr_stmt expr name operator name return expr name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type char return expr name comment type block constructor name parameter_list member_init_list call name argument_list argument expr literal type number block constructor name parameter_list parameter decl type name name name block expr_stmt expr operator name operator name constructor name parameter_list parameter decl type specifier name modifier name block expr_stmt expr call name argument_list argument expr name function type operator type name name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name name operator name expr_stmt expr name operator name name operator name function type operator type name name name parameter_list parameter decl type name name name block expr_stmt expr name operator literal type number expr_stmt expr call name name operator name argument_list if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator literal type number operator expr name operator operator name for control init condition expr name operator literal type number incr expr name operator name operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block if condition expr name operator name name operator name then block decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator operator name operator call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name operator name argument_list operator name incr expr operator name block if condition expr name operator operator name operator call name name operator name operator name argument_list then block type pseudo expr_stmt expr call name name operator name operator name argument_list argument expr literal type number expr_stmt expr name name operator name index expr name operator name operator operator ternary condition expr name operator operator name operator call name name operator name argument_list then expr name name index expr name else expr literal type number operator expr_stmt expr name operator name name operator name index expr name operator name if condition expr name then block type pseudo expr_stmt expr name name operator name index expr name operator name return expr name return expr operator name operator operator operator name operator function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block if condition expr name operator name name operator name then block if condition expr call name argument_list operator call name name operator name argument_list then block decl_stmt decl type name name init expr operator name for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator operator name operator call name name operator name operator name argument_list operator name incr expr operator name block expr_stmt expr name name operator name index expr name operator name operator operator ternary condition expr name operator operator name operator call name name operator name operator name argument_list then expr name name operator name index expr name else expr literal type number operator expr_stmt expr name operator name name operator name index expr name operator literal type number if condition expr name then block type pseudo expr_stmt expr name name operator name index expr name operator name expr_stmt expr call name name operator name argument_list return expr name return expr operator operator name operator operator name operator return expr operator name operator operator operator name operator function type operator type name name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr name operator operator name for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list operator name incr expr operator name block if condition expr name operator operator name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name name init expr name name index expr name operator operator name name operator name operator name expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name operator name comment type line expr_stmt expr call name argument_list function type operator type name name name parameter_list parameter decl type name name specifier block decl_stmt decl type name name init expr operator name expr_stmt expr name operator name return expr name function type operator type name name name parameter_list parameter decl type name name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr name operator operator name for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list operator name incr expr operator name block if condition expr name operator operator name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name name init expr name name index expr name operator operator name name operator name operator name expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name operator name comment type line expr_stmt expr call name argument_list function type operator type name name name parameter_list parameter decl type name name name specifier block decl_stmt decl type name name init expr operator name expr_stmt expr name operator name return expr name friend function type name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block decl_stmt decl type name name init expr name operator operator call name name operator name operator name argument_list operator literal type number operator decl_stmt decl type name name init expr call name name operator name argument_list operator name decl_stmt decl type name name init expr call name name operator name argument_list operator name decl_stmt decl type name name decl type ref prev name name name operator name operator name expr_stmt expr operator call name name operator name operator name argument_list operator for control init decl type name name init expr call name name operator name operator name argument_list operator literal type number condition expr name operator literal type number incr expr name operator block name expr_stmt expr operator name name expr_stmt expr operator name name operator name index expr name decl_stmt decl type name name init expr ternary condition expr call name name operator name operator name argument_list operator call name name operator name operator name argument_list then expr literal type number else expr name name operator name index expr call name name operator name operator name argument_list decl_stmt decl type name name init expr ternary condition expr call name name operator name operator name argument_list operator call name name operator name operator name argument_list operator literal type number then expr literal type number else expr name name operator name index expr call name name operator name operator name argument_list operator literal type number decl_stmt decl type name name init expr operator operator name name operator name operator name operator name operator operator call name name operator name operator name argument_list name expr_stmt expr operator name operator name while condition expr name operator literal type number block type pseudo name expr_stmt expr operator name operator expr operator name name name operator name index expr name expr_stmt expr operator name name name operator name expr_stmt expr operator name name operator name operator name name operator name name name operator name expr_stmt expr operator name name operator name name name operator name expr_stmt expr operator operator name name operator name expr_stmt expr operator operator return expr call name argument_list argument expr name argument expr name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name argument expr name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name argument expr name operator name function type operator type name name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr name operator operator name for control init decl type name name init expr operator name operator call name name operator name argument_list operator literal type number decl type ref prev name init expr literal type number condition expr name operator literal type number incr expr operator name block decl_stmt decl type name name name init expr name name index expr name operator name operator operator name name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr call name argument_list function type operator type name name name parameter_list parameter decl type name name specifier block decl_stmt decl type name name init expr operator name expr_stmt expr name operator name return expr name function type operator type name name name parameter_list parameter decl type name name specifier block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name operator operator name name index expr name operator name operator operator name name operator name operator operator name return expr name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr operator name operator operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr operator name operator operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr operator name operator operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr operator name operator operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block if condition expr name operator name name operator name then block type pseudo return expr name operator name name operator name if condition expr call name name operator name argument_list operator call name name operator name operator name argument_list then block type pseudo return expr call name name operator name argument_list operator name operator call name name operator name operator name argument_list operator name name operator name for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name operator name name operator name index expr name then block type pseudo return expr name name index expr name operator name operator name name operator name index expr name operator name return expr literal type boolean function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr operator operator name operator operator name operator function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr operator operator operator name operator name operator function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr operator operator operator name operator name operator operator operator operator name operator operator name operator function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr operator name operator name operator name operator operator name function type name name parameter_list block while condition expr operator call name name operator name argument_list operator operator call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list if condition expr call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type number function type name name parameter_list specifier block return expr call name name operator name argument_list operator operator call name name operator name argument_list operator literal type number operator operator name name index expr literal type number operator function type operator type name name name parameter_list specifier block decl_stmt decl type name name init expr operator name expr_stmt expr name name operator name operator operator name return expr name function type name name parameter_list specifier block decl_stmt decl type name name init expr operator name expr_stmt expr name name operator name operator name name operator name return expr name function type name name name parameter_list specifier block decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name operator name operator name operator name name index expr name return expr name operator name friend function type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr call name name operator name argument_list then expr name else expr call name argument_list argument expr name argument expr name operator name friend function type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr name operator call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator literal type number expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number while condition expr name operator operator name operator call name name operator name argument_list operator operator name name index expr name operator literal type char operator name name index expr name operator literal type char operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator operator name expr_stmt expr operator name for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator name incr expr name operator name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr call name argument_list argument expr name argument expr name operator name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name operator literal type number operator name name index expr name operator literal type char expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list friend function type operator type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name name expr_stmt expr operator name name name operator name expr_stmt expr operator name operator return expr name friend function type operator type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name name operator name operator operator literal type number then block type pseudo name expr_stmt expr operator literal type char name expr_stmt expr operator operator ternary condition expr call name name operator name operator name argument_list then expr literal type number else expr call name name operator name operator name argument_list operator for control init decl type name name init expr operator name operator call name name operator name operator name argument_list operator literal type number condition expr name operator literal type number incr expr operator name block type pseudo name expr_stmt expr operator call name argument_list argument expr name operator call name argument_list argument expr literal type char operator name name operator name index expr name return expr name function specifier type name name argument_list type generic argument expr name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type name name parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name expr_stmt expr name operator name while condition expr name operator name block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator name name index expr name expr_stmt expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr operator name operator name while condition expr operator call name name operator name argument_list operator operator call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list return expr name typedef type name name argument_list type generic argument expr name name name function specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name argument_list argument expr name operator name if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator name name index expr name operator name name index expr name return expr name decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list operator name decl_stmt decl type name name argument_list argument expr call name name operator name argument_list operator name argument expr call name name operator name argument_list decl_stmt decl type name name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list operator name decl_stmt decl type name name argument_list argument expr call name name operator name argument_list operator name argument expr call name name operator name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator name name index expr name return expr name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block decl_stmt decl type name name argument_list type generic argument expr name name init expr call name argument_list argument expr name name operator name argument expr name argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name init expr call name argument_list argument expr name name operator name argument expr name argument expr literal type number decl_stmt decl type name name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list while condition expr call name name operator name argument_list operator call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number while condition expr call name name operator name argument_list operator call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number while condition expr call name name operator name argument_list operator operator call name name operator name argument_list operator literal type number operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name expr_stmt expr name name operator name operator name operator name name operator name for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name name init expr name name index expr name operator name expr_stmt expr call name name operator name operator name argument_list argument expr call name argument_list argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr literal type number argument expr name expr_stmt expr call name name operator name argument_list return expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number operator expr name operator literal type number operator expr name operator name else block expr_stmt expr call name argument_list argument expr name argument expr name operator name decl_stmt decl type name name init expr name decl type ref prev name init expr name operator operator name operator name operator operator name expr_stmt expr name operator name operator expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr name operator operator name return expr name operator name operator operator name operator name operator literal type number operator function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr name operator operator name return expr name operator name operator operator name operator name operator literal type number operator function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name operator name operator literal type number then block type pseudo return expr name operator operator literal type number operator expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr operator name operator name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name operator name argument expr name if condition expr name operator name then block type pseudo return expr name operator operator literal type number operator expr literal type number decl_stmt decl type name name init expr name operator operator name operator name operator operator name operator operator name operator name operator decl_stmt decl type name name init expr name operator operator name operator name operator operator name operator operator name operator name operator if condition expr name operator name operator name operator name operator literal type number operator name operator literal type number then block type pseudo return expr name operator operator literal type number operator expr literal type number expr_stmt expr name operator name name name name name operator operator name operator name operator 
