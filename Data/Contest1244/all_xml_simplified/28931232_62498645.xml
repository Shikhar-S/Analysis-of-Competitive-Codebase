include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr literal type number name name index expr name function type name name parameter_list block decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr literal type number then block expr_stmt expr name operator literal type number return expr name function name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name operator name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator name name index expr name operator name operator name name index expr name operator literal type number operator name operator call name argument_list argument expr name name index expr name operator literal type char decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr literal type number name macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator name name index expr name operator literal type number then block expr_stmt expr name operator else block if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator block expr name name index expr name operator literal type number expr operator literal type number expr_stmt expr name name index expr name operator literal type number operator block expr name name index expr name operator literal type number expr operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name if condition expr call name argument_list then block expr_stmt expr name operator name return expr literal type number if condition expr name then block for control init decl type name name range expr name block expr_stmt expr name operator literal type string operator name name index expr literal type number operator literal type char operator name name index expr literal type number operator literal type string operator name name index expr literal type number operator literal type char expr_stmt expr name operator literal type char expr_stmt expr name operator literal type number expr_stmt expr name operator call name name operator name argument_list macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr name operator name while condition expr name operator name operator name name index expr name index expr literal type number operator name block expr_stmt expr operator name expr_stmt expr call name argument_list argument expr name operator name operator name operator name name index expr name index expr literal type number if condition expr name then block expr_stmt expr name operator literal type string operator name operator literal type string operator name operator literal type char if condition expr name operator name then block break comment type line format doxygen if condition expr name name index expr name index expr literal type number operator name operator name operator name name index expr name index expr literal type number then block expr_stmt expr name name index expr name operator name name index expr name index expr literal type number comment type line format doxygen expr_stmt expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block continue comment type line format doxygen elseif if condition expr name name index expr name operator literal type number index expr literal type number operator name name index expr name index expr literal type number then block comment type line format doxygen decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr name operator literal type number operator name operator name expr_stmt expr name operator name name index expr name operator literal type number index expr literal type number expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr call name argument_list argument expr operator name operator name operator operator literal type number operator literal type number if condition expr name operator name operator name operator name operator name operator name then block expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator operator operator name operator operator name operator name operator operator operator literal type number operator operator name expr_stmt expr name name index expr name operator literal type number else block comment type line format doxygen decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr name operator literal type number operator name operator name expr_stmt expr name operator name name index expr name operator literal type number index expr literal type number expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name operator name name index expr name operator literal type number index expr literal type number expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr call name argument_list argument expr operator name operator name operator operator literal type number operator literal type number if condition expr name operator name operator name operator name operator name operator name then block expr_stmt expr name name index expr name operator ternary condition expr operator name operator name operator name operator name operator then expr name else expr name elseif if condition expr name operator name operator name then block expr_stmt expr name name index expr name operator name elseif if condition expr name operator name operator name then block expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator operator operator name operator operator name operator name operator operator operator literal type number operator operator name expr_stmt expr name name index expr name operator literal type number if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr call name argument_list argument expr name name index expr name operator literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name operator operator ternary condition expr name name index expr name then expr literal type char else expr literal type char operator comment type block format doxygen 
