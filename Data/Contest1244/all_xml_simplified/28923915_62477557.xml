comment type line include directive file define directive macro name value define directive macro name value using namespace name typedef type name name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr operator name operator name operator literal type number operator operator literal type number argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name name index expr name index expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator name operator literal type number operator operator literal type number argument expr name argument expr name return expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator call name argument_list if condition expr name operator literal type number then block type pseudo return expr literal type boolean if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr operator call name argument_list then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr operator literal type number if condition expr name operator name operator name operator name operator name operator name operator name operator name operator name operator name then block type pseudo expr_stmt expr name operator name operator expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr literal type number elseif if condition expr name operator name operator name operator name operator name operator name operator name operator name then block type pseudo expr_stmt expr name operator name operator expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr literal type number elseif if condition expr name operator name operator name operator name operator name operator name then block type pseudo expr_stmt expr name operator name operator expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr literal type number elseif if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator name operator expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr operator literal type number elseif if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr operator literal type number else block type pseudo expr_stmt expr name operator name operator expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr operator literal type number expr_stmt expr name operator name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type string return expr literal type number comment type block 
