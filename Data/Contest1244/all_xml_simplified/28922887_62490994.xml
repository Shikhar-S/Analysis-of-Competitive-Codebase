include directive file define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number decl type ref prev name name index expr name index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl name name index expr name index expr literal type number index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator operator literal type number operator name name index expr name operator call name argument_list operator literal type number then block macro name argument_list argument argument literal type number if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr name index expr name index expr name operator name operator operator literal type number expr_stmt expr name name index expr name index expr name index expr name operator name operator name return expr name name index expr name index expr name if condition expr name name index expr name index expr name index expr name operator operator literal type number then block type pseudo return expr name name index expr name index expr name index expr name decl_stmt decl type name name init expr name operator literal type number macro name argument_list argument argument literal type number if condition expr name operator name operator name operator name then block type pseudo macro name argument_list argument argument if condition expr operator name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr operator name argument expr name argument expr name argument expr name operator name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr name index expr name index expr name operator name operator operator name expr_stmt expr name name index expr name index expr name index expr name operator name operator name expr_stmt expr name name index expr name index expr name index expr name operator name operator name if condition expr name operator operator literal type number then block decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr name decl type ref prev name decl type ref prev name decl type ref prev name while condition expr name operator operator literal type number block expr_stmt expr name name index expr name operator name name index expr name index expr name index expr name operator name expr_stmt expr name operator name name index expr name index expr name index expr name operator name expr_stmt expr name operator name name index expr name index expr name index expr name operator name expr_stmt expr name operator name name index expr name index expr name index expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name return expr name name index expr name index expr name index expr name operator name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument literal type number macro name argument_list argument argument expr_stmt expr name operator name name index expr name index expr name if condition expr name operator literal type number then block decl_stmt decl type name name init expr literal type number operator literal type number macro name argument_list argument argument literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr literal type number index expr name expr_stmt expr name operator name operator literal type char return expr literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr literal type number operator literal type number macro name argument_list argument argument literal type number macro name argument_list argument argument literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr literal type number index expr name operator name name index expr literal type number index expr name expr_stmt expr name operator name operator literal type char return expr literal type number macro name argument_list argument argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number macro name argument_list argument argument block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number elseif if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number argument expr literal type number argument expr operator literal type number operator literal type char macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number operator literal type char return expr literal type number 
