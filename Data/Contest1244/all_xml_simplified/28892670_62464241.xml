include directive file comment type line include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function template parameter_list parameter type name name type name name argument_list type generic argument expr name name parameter_list parameter decl type name name operator name name argument_list type generic argument expr name name block decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr call name name operator name argument_list while condition expr name operator call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list argument expr operator name operator return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name operator name name argument_list type generic argument expr name modifier name block expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list function type name name argument_list type generic argument expr name name name parameter_list parameter decl type name name block decl_stmt decl type name name name init expr operator name name operator call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name for control init decl type name name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator name operator literal type number argument expr name name index expr name operator name while condition expr name operator name name index expr name operator name operator name name index expr name name index expr name operator name name index expr name operator name name index expr name block type pseudo expr_stmt expr operator name name index expr name if condition expr name operator name name index expr name operator literal type number operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name operator name name index expr name operator literal type number return expr name struct name block public type default decl_stmt decl type name name decl type ref prev name constructor name parameter_list parameter decl type name name parameter decl type name name member_init_list call name argument_list argument expr name call name argument_list argument expr name block empty_stmt constructor name parameter_list block empty_stmt function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name operator name operator name name operator name argument expr name name operator name operator name name operator name empty_stmt function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name operator name operator name name operator name argument expr name name operator name operator name name operator name empty_stmt function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name name operator name operator name name operator name operator name name operator name operator name name operator name operator empty_stmt function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name name operator name operator name name operator name operator name name operator name operator name name operator name operator empty_stmt function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator name argument expr name operator name decl_stmt decl type name name init expr literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr operator literal type number else expr operator ternary condition expr name operator literal type number then expr literal type number else expr literal type number operator define directive macro name value function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr operator name name operator name operator name name operator name operator operator operator name name operator name operator name name operator name operator operator operator name name operator name operator name name operator name operator operator operator name name operator name operator name name operator name operator function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name return expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name operator name argument expr name name operator name argument expr name name operator name argument expr name name operator name operator call name argument_list argument expr name name operator name argument expr name name operator name argument expr name name operator name argument expr name name operator name operator call name argument_list argument expr name argument expr name argument expr name operator call name argument_list argument expr name argument expr name argument expr name operator literal type number operator call name argument_list argument expr name argument expr name argument expr name operator call name argument_list argument expr name argument expr name argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr operator literal type number function type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr name name operator name operator name name operator name operator name name operator name operator name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr call name argument_list argument expr operator name operator name operator argument expr operator name operator literal type number then block type pseudo return expr call name argument_list argument expr name operator call name argument_list argument expr name else block type pseudo return expr operator name operator name operator operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name operator name name operator name operator name name operator name operator name name operator name operator name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr name name operator name operator operator name name operator name operator name name operator name operator operator name name operator name operator operator name name operator name operator name name operator name operator operator name name operator name operator operator name name operator name operator name name operator name operator operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr name name operator name operator operator name name operator name operator name name operator name operator operator name name operator name operator operator name name operator name operator name name operator name operator operator name name operator name operator operator name name operator name operator name name operator name operator operator literal type number function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block if condition expr call name name operator name argument_list operator literal type number then block type pseudo return expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr operator name decl_stmt decl type name name init expr name name index expr literal type number decl type ref prev name init expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator call name name operator name argument_list operator literal type number operator call name argument_list argument expr name argument expr name name index expr name argument expr name then block while condition expr call name name operator name argument_list operator literal type number operator operator call name argument_list argument expr name name index expr call name name operator name argument_list operator literal type number argument expr name name index expr call name name operator name argument_list operator literal type number argument expr name name index expr name block type pseudo expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name name index expr name if condition expr name operator call name name operator name argument_list operator literal type number operator call name argument_list argument expr name argument expr name name index expr name argument expr name then block while condition expr call name name operator name argument_list operator literal type number operator operator call name argument_list argument expr name name index expr call name name operator name argument_list operator literal type number argument expr name name index expr call name name operator name argument_list operator literal type number argument expr name name index expr name block type pseudo expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name typedef type name name function type operator template parameter_list parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name return expr name function type operator template parameter_list parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type string return expr name function type operator template parameter_list parameter type name name parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator name name operator name operator name name operator name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name while condition expr name block expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator call name argument_list argument expr name argument expr name operator operator name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr operator name operator call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator literal type number while condition expr name operator literal type number operator name name index expr name operator name name index expr name block type pseudo expr_stmt expr name operator name name index expr name operator literal type number if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr operator name expr_stmt expr name name index expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr name operator literal type number operator name else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number return expr name operator name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list operator name name index expr name operator name name index expr name operator name operator name name index expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name return expr name typedef type name name argument_list type generic argument expr name name function type operator type name name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name decl_stmt decl type name name init expr name name index expr literal type number operator call name argument_list decl type ref prev name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr literal type number operator call name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name operator name name index expr name index expr name expr_stmt expr name name index expr name index expr name operator name return expr name decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name expr_stmt expr name operator if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator name operator name return expr name else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator name operator name return expr name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name comment type line for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name incr expr name operator block if condition expr name operator name operator literal type number then block comment type line if condition expr name operator name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else comment type line block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name operator name return expr name include directive file decl_stmt decl type name name name index expr literal type number init expr block expr operator literal type number expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator call name name operator name argument_list then block type pseudo return expr literal type number decl_stmt decl type name name init expr ternary condition expr name operator call name name operator name argument_list then expr name name index expr name else expr literal type number decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name init expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name operator literal type number argument expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name name index expr name operator name return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name index expr name for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator call name argument_list argument expr name name index expr name argument expr name operator expr name operator call name argument_list argument expr name argument expr name name index expr name if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list operator literal type number incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name name index expr name operator literal type number operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list operator literal type number argument expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator name return expr name function specifier type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name operator name decl_stmt decl type name name init expr operator name operator name operator operator operator operator operator name operator name operator decl_stmt decl type name name init expr operator name operator name operator operator operator operator operator name operator name operator if condition expr name operator name operator name then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator name operator literal type string operator name operator literal type string function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list decl_stmt decl type name name expr_stmt expr name operator name 
