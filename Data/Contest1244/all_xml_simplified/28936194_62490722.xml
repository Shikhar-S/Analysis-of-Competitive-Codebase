include directive file define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value comment type block define directive macro name value define directive macro name value comment type block define directive macro name ifdef directive name define directive macro name parameter_list parameter type modifier value function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name block expr_stmt expr name name operator name operator name operator literal type string operator name operator literal type char function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name parameter decl type name modifier modifier name block decl_stmt decl type specifier name modifier name init expr call name argument_list argument expr name operator literal type number argument expr literal type char expr_stmt expr call name name operator name operator name argument_list argument expr name argument expr name operator name operator literal type string operator name operator literal type string expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator else directive define directive macro name parameter_list parameter type modifier endif directive using namespace name decl_stmt decl type name name name index expr name decl type ref prev name decl_stmt decl type name name name index expr name index expr literal type number decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number block macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr name index expr name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator operator expr name name index expr name operator decl_stmt decl type name name decl type ref prev name decl type ref prev name macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator literal type number then block type pseudo macro name argument_list argument literal type number if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name comment type line macro name argument_list argument argument literal type number argument literal type number block macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr name name index expr name name index expr literal type number index expr name operator name name index expr name name index expr literal type number index expr name decl_stmt decl type name name init expr name decl type ref prev name init expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator name name index expr name name index expr name index expr name operator expr name operator name expr_stmt expr name operator name operator expr name operator name if condition expr name operator name then block expr_stmt expr name operator name comment type line expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr literal type number operator name operator expr name name index expr name name index expr literal type number operator name decl_stmt decl type name name init expr name decl type ref prev name init expr name comment type line macro name argument_list argument argument literal type number argument block comment type line macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name break comment type line expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr name operator literal type number operator literal type string return expr literal type number 
