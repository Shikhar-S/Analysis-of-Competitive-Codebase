include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number typedef type name name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block comment type line expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name operator literal type number operator literal type number function type name name parameter_list parameter decl type name name name index parameter decl type name name name index parameter decl type name name name index block decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name name index expr literal type number block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name range expr name name index expr literal type number block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name range expr name name index expr literal type number block type pseudo expr_stmt expr name operator name name index expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block for control init decl type name name range expr name name index expr literal type number block type pseudo expr_stmt expr name name index expr name operator name for control init decl type name name range expr name name index expr literal type number block type pseudo expr_stmt expr name name index expr name operator name for control init decl type name name range expr name name index expr literal type number block type pseudo expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name decl type ref prev name if condition expr operator name operator call name argument_list argument expr name argument expr name argument expr name operator operator name then block type pseudo expr_stmt expr name operator name operator expr name operator literal type number if condition expr operator name operator call name argument_list argument expr name argument expr name argument expr name operator operator name then block type pseudo expr_stmt expr name operator name operator expr name operator literal type number if condition expr operator name operator call name argument_list argument expr name argument expr name argument expr name operator operator name then block type pseudo expr_stmt expr name operator name operator expr name operator literal type number if condition expr operator name operator call name argument_list argument expr name argument expr name argument expr name operator operator name then block type pseudo expr_stmt expr name operator name operator expr name operator literal type number if condition expr operator name operator call name argument_list argument expr name argument expr name argument expr name operator operator name then block type pseudo expr_stmt expr name operator name operator expr name operator literal type number if condition expr operator name operator call name argument_list argument expr name argument expr name argument expr name operator operator name then block type pseudo expr_stmt expr name operator name operator expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number return expr literal type number 
