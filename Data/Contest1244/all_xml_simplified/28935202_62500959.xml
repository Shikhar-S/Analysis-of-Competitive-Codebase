include directive file using name init type name name function type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name decl_stmt decl type name name operator name name argument_list type generic argument expr name name argument_list argument expr name for control init expr name operator name operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr literal type number while condition expr name operator name operator literal type number block decl_stmt decl type name name init expr operator name operator name operator operator literal type number decl type ref prev name init expr name decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name name for control init decl type name name range expr name block if condition expr call name name operator name argument_list operator call name name operator name argument_list operator name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number else block type pseudo expr_stmt expr call name name operator name argument_list operator name operator while condition expr name operator call name name operator name argument_list operator literal type number block decl_stmt decl type name name init expr call name name operator name argument_list if condition expr call name name operator name argument_list operator name operator call name name operator name argument_list operator name then block decl_stmt decl type name name init expr call name name operator name argument_list operator name if condition expr name operator name then block type pseudo break decl_stmt decl type name name init expr name name index expr literal type number operator name operator name name index expr literal type number operator name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name operator name argument expr name operator name operator name if condition expr name operator name operator name then block expr_stmt expr name name index expr literal type number operator name operator name name index expr literal type number operator name expr_stmt expr call name name operator name argument_list else block type pseudo expr_stmt expr name name index expr literal type number operator name operator name operator name expr_stmt expr name operator name else block decl_stmt decl type name name init expr call name name operator name argument_list operator name if condition expr name operator name then block type pseudo break decl_stmt decl type name name init expr name name index expr name operator literal type number operator name operator name name index expr name operator literal type number operator name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name operator name argument expr name operator name operator name if condition expr name operator name operator name then block expr_stmt expr name name index expr name operator literal type number operator name operator name name index expr name operator literal type number operator name expr_stmt expr call name name operator name argument_list else block type pseudo expr_stmt expr name name index expr name operator literal type number operator name operator name operator name expr_stmt expr name operator name if condition expr call name name operator name argument_list operator name operator call name name operator name argument_list operator name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name return expr literal type number 
