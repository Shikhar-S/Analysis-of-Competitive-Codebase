comment type block format doxygen include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value function specifier type name name parameter_list parameter decl type name name name index block decl_stmt decl type name name decl_stmt decl type name name init expr literal type number while condition expr operator name operator call name argument_list operator operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name name index expr name operator operator name return expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block decl_stmt decl type name name name index expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name expr_stmt expr name name index expr literal type number operator name operator literal type number operator literal type char expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number while condition expr name block expr_stmt expr name name index expr name operator operator name operator literal type number operator literal type char expr_stmt expr name operator literal type number while condition expr name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr operator name expr_stmt expr call name argument_list argument expr literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number do block expr_stmt expr name operator call name argument_list if condition expr name operator name then block type pseudo return expr literal type boolean condition expr operator name name argument_list type generic argument expr literal type char operator name literal type char operator operator name operator literal type char if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number else block type pseudo expr_stmt expr name operator name operator literal type char while condition expr operator name operator call name argument_list operator operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type char operator expr_stmt expr name operator name return expr literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name name parameter decl type specifier name name block expr_stmt expr name operator operator name operator name operator operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type specifier name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number return expr name using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name init expr literal type number decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr literal type number decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block continue expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator break expr_stmt expr name name index expr name name index expr name operator literal type number operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name return expr name function type name name parameter_list block expr_stmt expr name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number block macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name index expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name if condition expr name operator operator literal type number then block expr_stmt expr name operator operator literal type number operator name else block decl_stmt decl type name name init expr name expr_stmt expr call name argument_list argument expr name argument expr name macro name argument_list argument argument literal type number argument literal type number block macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr literal type number expr_stmt expr name name index expr literal type number operator name operator expr name name index expr literal type number operator name expr_stmt expr name name index expr name operator operator expr name name index expr name operator decl_stmt decl type name name init expr call name argument_list if condition expr name operator name then block expr_stmt expr name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name name index expr name operator name name index expr name expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator literal type char expr_stmt expr name operator name return expr literal type number 
