include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name name name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name name name name decl type ref prev name name index expr name decl type ref prev name name index expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name decl_stmt decl type name name name name name init expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator name name index expr literal type number while condition expr name operator operator name operator literal type number operator block if condition expr operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator operator name name index expr name operator literal type number operator literal type number operator name name index expr name operator literal type number operator operator operator name operator literal type number operator literal type number operator else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator operator name name index expr name operator operator name operator literal type number operator operator literal type number operator name name index expr name operator operator name operator literal type number operator operator literal type number operator operator operator name operator literal type number operator operator literal type number expr_stmt expr name operator if condition expr name operator name name index expr literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator name name index expr literal type number operator name operator literal type string elseif if condition expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block for control init expr name operator name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr operator name operator name name index expr name operator operator operator name operator name name index expr name operator literal type number operator then block type pseudo break decl_stmt decl type name name name name name init expr name operator name name index expr name operator literal type number if condition expr operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator name operator literal type number operator name name index expr name operator literal type number operator name operator operator name operator literal type number operator literal type number operator operator literal type string else block type pseudo expr_stmt expr name operator name name index expr name operator operator name operator literal type number operator operator literal type number operator name name index expr operator name operator literal type number operator operator literal type number operator literal type number operator name operator operator name operator literal type number operator operator literal type string return expr literal type number 
