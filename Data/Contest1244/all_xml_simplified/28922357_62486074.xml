define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator operator operator name operator name name index expr name operator call name argument_list operator operator literal type number expr_stmt expr name operator operator operator name operator name name index expr name operator call name argument_list operator operator literal type number if condition expr operator operator name operator literal type number operator name operator name operator literal type number operator then block expr_stmt expr name operator operator literal type number expr_stmt expr call name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name operator name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr name argument expr name break decl_stmt decl type name name argument_list type generic argument expr name name init expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name init expr name do block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name name index expr name operator literal type number index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number condition expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type string function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name else directive comment type line comment type line endif directive expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number comment type line expr_stmt expr call name argument_list return expr literal type number comment type line 
