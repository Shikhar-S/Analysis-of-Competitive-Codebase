include directive file pragma directive name name name literal name using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr name index expr literal type number decl type ref prev name name index expr literal type number index expr literal type number decl type ref prev name name index expr name index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name operator expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name operator lambda capture argument modifier parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name operator expr name operator expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string operator expr call name argument_list argument expr literal type number if condition expr operator name then block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name index expr name return for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name then block type pseudo continue decl_stmt decl type name name init expr name name index expr name name index expr name index expr literal type number index expr name index expr name operator name name index expr name index expr name if condition expr name operator name name index expr name index expr name index expr name then block expr_stmt expr name name index expr name index expr name index expr name operator name expr_stmt expr name name index expr name index expr name index expr name operator call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string operator expr call name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name index expr name index expr name operator name then block type pseudo expr_stmt expr name operator name name index expr name index expr name index expr name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name index expr name index expr name operator name then block while condition expr name name index expr name operator call name argument_list block expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr name decl type ref prev name init expr name expr_stmt expr name operator name name index expr name index expr name index expr name operator name expr_stmt expr name operator name name index expr name index expr name index expr name operator name expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number return expr literal type number return expr literal type number 
