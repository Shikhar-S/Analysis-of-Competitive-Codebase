include directive file include directive file include directive file define directive macro name value using namespace name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr name operator literal type number operator name for control init decl type name name init expr name condition expr name operator literal type number operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name for control init decl type name name init expr literal type number operator name condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator literal type char decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator operator expr name name index expr name operator name else block type pseudo expr_stmt expr name name index expr operator name operator literal type number operator expr name name index expr name operator operator ternary condition expr name name index expr name operator literal type char then expr literal type number else expr literal type number operator operator expr name name index expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block expr_stmt expr name name index expr operator name operator name if condition expr name name index expr name operator name then block type pseudo break decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name if condition expr name operator literal type number then block if condition expr name operator literal type number then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr ternary condition expr name name index expr name operator literal type char then expr literal type char else expr literal type char else block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator expr name operator name name index expr name operator literal type number expr_stmt expr name operator name name index expr name operator expr name operator name name index expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name name index expr name operator literal type number decl type ref prev name init expr name name index expr name operator literal type number while condition expr name operator name block if condition expr name operator name then block expr_stmt expr name name index expr ternary condition expr name operator name then expr name operator name else expr name operator name expr_stmt expr name name index expr ternary condition expr name operator name then expr name operator name else expr name operator name else block expr_stmt expr name name index expr ternary condition expr name operator name then expr name operator name else expr name operator operator name operator literal type number operator operator operator ternary condition expr name operator literal type number then expr name operator literal type number else expr name operator expr_stmt expr name name index expr ternary condition expr name operator name then expr name operator name else expr name operator operator name operator literal type number operator operator operator ternary condition expr name operator literal type number then expr name operator literal type number else expr name operator expr_stmt expr name operator expr_stmt expr name operator operator expr name operator for control init decl type name name init expr name name index expr name condition expr name operator name name index expr name incr expr operator name block type pseudo expr_stmt expr name name index expr ternary condition expr name operator name then expr name operator name else expr name operator name for control init decl type name name init expr name name index expr name condition expr name operator name name index expr name incr expr operator name block type pseudo expr_stmt expr name name index expr ternary condition expr name operator name then expr name operator name else expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr ternary condition expr name name index expr name then expr literal type char else expr literal type char return expr literal type number 
