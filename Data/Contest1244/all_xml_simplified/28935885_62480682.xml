pragma directive name name name name literal name comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name pragma directive name name literal name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block type pseudo expr_stmt expr name operator operator name operator literal type char operator operator expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char operator expr name operator call name argument_list return expr name operator ternary condition expr name then expr operator name else expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type char else block type pseudo expr_stmt expr call name argument_list argument expr literal type char return if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr name operator operator name decl_stmt decl specifier type name name name index expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block type pseudo expr_stmt expr name name index expr name operator operator name operator literal type number operator literal type number operator expr name operator literal type number while condition expr name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr operator name if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type char else block type pseudo expr_stmt expr call name argument_list argument expr literal type char function type name name parameter_list parameter decl type name name block return expr name operator operator operator name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block return expr call name argument_list argument expr name argument expr call name argument_list argument expr name operator function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block return expr call name argument_list argument expr name argument expr call name argument_list argument expr name operator function type name name parameter_list block expr_stmt expr name operator literal type char function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block expr_stmt expr name operator name operator literal type string expr_stmt expr call name argument_list argument expr name operator define directive macro name parameter_list parameter type modifier value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number comment type line decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init condition expr name incr expr name operator literal type number operator expr name operator name operator name operator name block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name return expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number decl type ref prev name name index expr name index expr literal type number decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name operator name name argument_list type generic argument expr name name name index expr name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive expr_stmt expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr operator name block expr_stmt expr name operator call name argument_list operator expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name operator expr name name index expr name operator call name argument_list argument expr name expr_stmt expr operator name name index expr name operator expr operator name name index expr name if condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr name name index expr literal type number index expr name index expr name operator name name index expr name name index expr literal type number index expr name operator name name index expr name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name operator name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number do block expr_stmt expr name name index expr name index expr name name index expr literal type number index expr name name index expr literal type number operator name name index expr name operator literal type number index expr name name index expr literal type number index expr name name index expr literal type number operator name name index expr name name index expr name index expr name name index expr literal type number condition expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name name index expr name operator literal type number index expr name index expr name operator name then block expr_stmt expr name operator name name index expr name operator literal type number index expr name index expr name expr_stmt expr name operator name operator expr name operator name expr_stmt expr name name index expr name name index expr name operator literal type number operator name operator expr name name index expr name name index expr name operator literal type number operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator name expr_stmt expr name name index expr name name index expr name operator literal type number operator name for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr operator name block expr_stmt expr name name index expr name name index expr name operator name name index expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string ifndef directive name expr_stmt expr name operator literal type string operator call name argument_list operator literal type string operator name endif directive return expr literal type number 
