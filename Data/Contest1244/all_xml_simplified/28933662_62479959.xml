include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number using name init type name name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function_decl type name name argument_list type generic argument expr name name parameter_list parameter decl type name decl_stmt decl type name name argument_list type generic argument expr name name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name argument_list type generic argument expr name name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name return expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name specifier modifier name name index block comment type line expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type string operator name expr_stmt expr call name argument_list argument expr literal type number decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name init expr block expr literal type number expr literal type number expr literal type number do block decl_stmt decl type name name argument_list type generic argument expr name name init expr call name argument_list argument expr name if condition expr call name argument_list argument expr name operator name then block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name condition expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator name name index expr name expr_stmt expr name operator call name argument_list argument expr name operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type char expr_stmt expr name operator name return expr literal type number 
