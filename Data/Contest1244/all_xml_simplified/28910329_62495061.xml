include directive file define directive macro name value using namespace name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number operator name operator name then block type pseudo return expr literal type number operator call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name name index expr literal type number operator name name index expr name then block type pseudo expr_stmt expr name operator if condition expr name operator name then block if condition expr name operator literal type number then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator operator ternary condition expr name name index expr name operator literal type char then expr literal type char else expr literal type char operator return expr literal type number operator call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator literal type number operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number operator name incr expr name operator block if condition expr operator name name index expr name operator name name index expr name operator name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number operator expr name name index expr name operator operator ternary condition expr name name index expr name operator literal type char then expr literal type number else expr literal type number operator while condition expr name operator literal type number operator name operator name name index expr name operator literal type number operator name name index expr name block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type number operator expr name name index expr name operator operator ternary condition expr name name index expr name operator literal type char then expr literal type number else expr literal type number operator comment type line decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number operator name incr expr name operator block if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name operator literal type number operator name operator literal type number for control init decl type name name init expr literal type number operator name condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator operator ternary condition expr name name index expr name operator literal type number then expr literal type char else expr literal type char operator else block decl_stmt decl type name name init expr operator name operator name operator operator name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name then block if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator operator ternary condition expr name name index expr name name index expr name operator name operator literal type number then expr literal type char else expr literal type char operator else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator operator ternary condition expr name name index expr name operator literal type char then expr literal type char else expr literal type char operator else block type pseudo expr_stmt expr name name index expr name operator name name index expr name else block if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator operator ternary condition expr name name index expr name name index expr name operator literal type number then expr literal type char else expr literal type char operator else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator operator ternary condition expr name name index expr name operator literal type char then expr literal type char else expr literal type char operator else block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number return expr literal type number 
