include directive file using namespace name class name block private type default public decl_stmt decl type name modifier name decl_stmt decl type name modifier name constructor name parameter_list parameter decl type name modifier name parameter decl type name modifier name member_init_list call name argument_list argument expr name call name argument_list argument expr name block function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name return expr name function type name name parameter_list block return expr call name argument_list argument expr call name argument_list function type name name parameter_list block return expr call name argument_list argument expr call name argument_list function type name name name parameter_list block return expr call name argument_list argument expr call name argument_list function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name operator function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr name argument expr name operator argument expr literal type string function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string class name block private type default public function type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr call name name operator name argument_list while condition expr name operator block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block decl_stmt decl type name name init expr literal type number operator operator name operator literal type number operator decl_stmt decl type name name init expr literal type number operator operator name operator name operator expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name return function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name modifier name argument_list argument expr name name operator name decl_stmt decl type name modifier name argument_list argument expr name name operator name decl_stmt decl type name name argument_list argument expr name argument expr name decl_stmt decl type name name expr_stmt expr call name name operator name argument_list argument expr name return expr literal type number 
