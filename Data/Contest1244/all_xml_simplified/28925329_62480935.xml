include directive file define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name init expr literal type number decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number decl type ref prev name name index expr literal type number index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr operator name then block type pseudo return expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name index expr name index expr name index expr literal type number argument expr name argument expr name name index expr name index expr name index expr name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator operator operator literal type number operator name operator operator operator literal type number operator name operator operator for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator operator literal type number operator name operator then block comment type line if condition expr name name index expr name index expr name index expr name operator name name index expr name index expr name index expr name operator name name index expr name index expr name then block comment type line expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name index expr name index expr name operator name name index expr name index expr name comment type line expr_stmt expr name name index expr name index expr name index expr name index expr literal type number operator name operator expr name name index expr name index expr name index expr name index expr literal type number operator name expr_stmt expr name operator literal type number if condition expr name then block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator operator expr name name index expr name operator decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name name index expr name index expr name index expr name then block expr_stmt expr name operator name name index expr name index expr name index expr name expr_stmt expr name operator name operator expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
