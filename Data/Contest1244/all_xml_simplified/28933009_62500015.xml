include directive file include directive file include directive file using namespace name decl_stmt decl type name name decl type ref prev name init expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number struct name block public type default decl_stmt decl type name name decl_stmt decl type name name decl name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name name name index expr literal type number index expr literal type number index expr literal type number comment type line decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name operator name name index expr name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr literal type number index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number index expr literal type number operator name name index expr literal type number index expr name name index expr literal type number expr_stmt expr name name index expr literal type number index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number index expr literal type number operator name name index expr literal type number index expr name name index expr literal type number expr_stmt expr name name index expr literal type number index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number index expr literal type number operator name name index expr literal type number index expr name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name operator name operator name then block type pseudo continue if condition expr name name index expr name operator literal type number index expr name index expr name operator name name index expr name index expr name name index expr name operator name name index expr name index expr name index expr name then block expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name operator literal type number index expr name index expr name operator name name index expr name index expr name name index expr name comment type line expr_stmt expr name name index expr name index expr name index expr name operator name comment type line comment type line decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue if condition expr name name index expr name index expr name index expr name operator name then block expr_stmt expr name operator name name index expr name index expr name index expr name comment type line expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name operator name operator name decl_stmt decl type name name init expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator name while condition expr name block expr_stmt expr name name index expr name name index expr name operator name decl_stmt decl type name name init expr name decl_stmt decl type name name for control init expr name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name then block type pseudo continue break expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
