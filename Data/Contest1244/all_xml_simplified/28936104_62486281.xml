include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file comment type line comment type line using namespace name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name typedef type name name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator literal type number argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name parameter decl type name modifier name block if condition expr operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number else block expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr name argument expr name argument expr name expr_stmt expr name operator name operator operator name operator name operator comment type line comment type line function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator literal type char operator operator name name argument_list type generic argument expr literal type char operator name literal type char operator block type pseudo expr_stmt expr name operator call name argument_list if condition expr name operator literal type char then block expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name comment type block comment type block decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number decl type ref prev name name index expr literal type number index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name index expr literal type number operator name name index expr literal type number index expr name expr_stmt expr name name index expr name index expr literal type number operator name name index expr literal type number index expr name expr_stmt expr name name index expr name index expr literal type number operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr operator name operator literal type number operator operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr operator name operator literal type number operator operator literal type number function type name name parameter_list block comment type line comment type line comment type line decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator decl_stmt decl type name name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name if condition expr operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number else block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr call name argument_list argument expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number argument expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number argument expr call name argument_list argument expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number argument expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number argument expr call name argument_list argument expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number argument expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name if condition expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number then block expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number elseif if condition expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number then block expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number elseif if condition expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number then block expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number elseif if condition expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number then block expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number elseif if condition expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number then block expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number elseif if condition expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number then block expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name comment type line comment type line comment type line return expr literal type number 
