include directive file comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file comment type line decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number using namespace name typedef type name name name typedef type name name define directive macro name value comment type line comment type line function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl specifier type name name expr_stmt expr name operator literal type number decl_stmt decl specifier type name name expr_stmt expr name operator call name argument_list while condition expr operator call name argument_list argument expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator expr_stmt expr name operator call name argument_list expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type char function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr literal type char define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list block comment type line comment type line decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number operator name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr operator name operator call name argument_list argument expr name name index expr name operator literal type number argument expr name operator expr name operator literal type number expr_stmt expr operator name expr_stmt expr name operator name comment type line comment type line decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name while condition expr name operator name operator name block decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator literal type number operator name operator name name index expr name operator name argument expr name operator name name index expr name operator name if condition expr operator name then block type pseudo break expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator name operator name name index expr name operator name if condition expr name name index expr name operator name operator name name index expr name operator literal type number operator name then block type pseudo expr_stmt expr name name index expr name operator literal type number operator name operator name name index expr name operator name operator expr operator name else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator literal type number operator name argument expr name operator name name index expr name operator name if condition expr operator name then block type pseudo break expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator name operator name name index expr name operator name if condition expr name name index expr name operator name operator name name index expr name operator literal type number operator name then block type pseudo expr_stmt expr name name index expr name operator literal type number operator name operator name name index expr name operator name operator expr operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name return expr literal type number 
