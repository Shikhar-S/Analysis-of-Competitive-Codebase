include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr name operator literal type number index expr literal type number decl_stmt decl type name name name index expr name operator literal type number decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name operator literal type number decl_stmt decl type name name name index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr call name argument_list argument expr literal type string operator literal type number expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name for control init decl type name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr name operator name decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr operator literal type number decl type ref prev name init expr operator literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr literal type number if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr operator name if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block type pseudo expr_stmt expr name operator name name index expr name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block type pseudo expr_stmt expr name operator name name index expr name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block type pseudo expr_stmt expr name operator name name index expr name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator expr name operator name operator expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block type pseudo expr_stmt expr name name index expr name name index expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block type pseudo expr_stmt expr name name index expr name name index expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block type pseudo expr_stmt expr name name index expr name name index expr name operator name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr ternary condition expr operator name operator name operator then expr literal type char else expr literal type char return expr literal type number 
