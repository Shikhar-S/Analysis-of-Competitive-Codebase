include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name function type name name parameter_list block expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr operator name operator literal type number operator name operator operator name operator name name index expr name operator name name index expr operator name operator literal type number operator operator name operator name name index expr name then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator literal type boolean expr_stmt expr name name index expr name operator call name argument_list argument expr operator name operator literal type number operator name operator operator name expr_stmt expr name name index expr name operator call name argument_list argument expr operator name operator literal type number operator operator name if condition expr name then block if condition expr name operator literal type number operator literal type number then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator ternary condition expr operator name name index expr name operator literal type char operator then expr literal type char else expr literal type char expr_stmt expr name operator name operator name return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list for control init decl type name name range expr name name index expr name block type pseudo if condition expr name name index expr name operator operator literal type number then block expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr lambda capture parameter_list parameter decl type name name parameter decl type name name block return expr name name index expr name operator name name index expr name for control init decl type name name range expr name block if condition expr name name index expr name operator name then block type pseudo break expr_stmt expr name name index expr name operator name name index expr name name index expr name if condition expr name operator literal type number operator literal type number then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name then block expr_stmt expr name name index expr name operator ternary condition expr operator name name index expr name operator literal type char operator then expr literal type char else expr literal type char expr_stmt expr name operator name operator name 
