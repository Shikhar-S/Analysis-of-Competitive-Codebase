pragma directive name name name literal name include directive file using namespace name typedef type name name name function_decl type name name parameter_list ifdef directive name include directive file else directive define directive macro name parameter_list parameter type modifier value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean operator expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list endif directive typedef type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name name index expr name operator decl_stmt decl type name name argument_list type generic argument expr name name comment type line for control init expr name operator name operator name block expr_stmt expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name while condition expr name operator call name name operator name argument_list operator literal type number block if condition expr call name name operator name argument_list operator name operator call name name operator name argument_list operator name then block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl type ref prev name init expr name name operator name expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number operator operator call name name operator name argument_list operator name operator name operator operator name if condition expr name operator name then block expr_stmt expr name operator name decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name else block decl_stmt decl type name name init expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr literal type number expr_stmt expr name operator literal type number else block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl type ref prev name init expr name name operator name expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number operator operator name operator call name name operator name argument_list operator name operator operator name if condition expr name operator name then block expr_stmt expr name operator name decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name else block decl_stmt decl type name name init expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator operator call name name operator name argument_list operator name operator call name name operator name argument_list operator name operator operator literal type string 
