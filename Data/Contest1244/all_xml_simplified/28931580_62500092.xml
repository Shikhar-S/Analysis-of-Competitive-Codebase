include directive file define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name init expr literal type number block for control init condition expr name incr expr name operator literal type number operator expr name operator literal type number operator name operator name operator name block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number operator name operator name operator name return expr name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name operator name operator literal type number if condition expr name operator name operator name then block decl_stmt decl type name name init expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name return else block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name operator name operator name argument expr name operator literal type number function type name name parameter_list block expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name operator expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name operator literal type number if condition expr name operator name then block type pseudo return expr call name argument_list argument expr literal type string if condition expr name operator name then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name operator name argument expr literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list return expr literal type number 
