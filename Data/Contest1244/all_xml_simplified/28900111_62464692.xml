include directive file include directive file define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value comment type block using namespace name using namespace name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number typedef type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line else directive comment type line comment type line define directive macro name value expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number endif directive comment type line comment type line decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name operator name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr operator name operator name operator if condition expr name operator name operator name operator name operator name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type char operator name operator name break if condition expr operator name then block type pseudo expr_stmt expr name operator operator literal type number operator name function type name name parameter_list block function type name name parameter_list block expr_stmt expr call name argument_list expr_stmt expr call name argument_list expr_stmt expr call name argument_list 
