include directive file include directive file define directive macro name value using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number typedef type name name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name operator name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator call name argument_list while condition expr name operator block expr_stmt expr call name name operator name argument_list expr_stmt expr name operator call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name if condition expr name name index expr literal type number operator literal type char operator name name index expr name operator literal type number operator literal type char then block expr_stmt expr call name argument_list argument expr literal type string argument expr literal type number operator name else block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator name else block expr_stmt expr name operator name operator call name name operator name argument_list if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number operator operator name operator name name index expr literal type number operator expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number operator operator name name index expr call name name operator name argument_list operator literal type number operator literal type number operator expr_stmt expr call name argument_list argument expr literal type string argument expr name 
