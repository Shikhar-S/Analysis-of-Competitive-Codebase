include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null operator expr call name name operator name argument_list argument expr literal type null decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name decl type ref prev name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type char then block type pseudo return expr literal type char return expr literal type char function type name name parameter_list block expr_stmt expr call name argument_list expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr operator name operator literal type number operator operator name operator name name index expr name operator name name index expr operator name operator literal type number operator name operator operator name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block expr_stmt expr name operator literal type number break if condition expr name then block expr_stmt expr name operator name return expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block expr_stmt expr name operator literal type number break if condition expr name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name else block type pseudo expr_stmt expr name operator call name argument_list argument expr name name index expr name return expr literal type number decl_stmt decl type name name for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name operator name name index expr operator name operator literal type number operator name operator operator name then block type pseudo break for control init decl type name name init expr literal type number condition expr name operator name incr block while condition expr name operator name operator name name index expr operator name operator name operator operator name block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr name while condition expr name operator literal type number operator name operator operator name name index expr operator name operator name operator literal type number operator operator name block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr operator name operator name operator literal type number operator for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name operator name operator name operator literal type number then block if condition expr name operator name operator literal type number operator name then block expr_stmt expr name name index expr operator name operator name operator operator name operator name name index expr operator name operator name operator literal type number operator name operator operator name else block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name name index expr operator name operator name operator operator name operator call name argument_list argument expr name name index expr operator name operator name operator operator name else block if condition expr operator name operator name operator literal type number operator operator name then block expr_stmt expr name name index expr operator name operator name operator operator name operator name name index expr operator name operator name operator literal type number operator operator name else block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name name index expr operator name operator name operator operator name operator call name argument_list argument expr name name index expr operator name operator name operator operator name expr_stmt expr name operator expr_stmt expr name operator name 
