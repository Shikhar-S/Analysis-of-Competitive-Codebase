include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name return expr name name index expr name operator name name index expr name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name return expr name name index expr name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator name if condition expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number then block if condition expr literal type number operator name operator name operator name operator literal type number then block comment type line macro name argument_list argument argument argument literal type number block expr_stmt expr name name index expr name operator name operator name else block macro name argument_list argument argument argument block expr_stmt expr name name index expr name operator name operator name if condition expr operator name operator literal type number operator operator literal type number then block macro name argument_list argument argument argument literal type number block if condition expr name name index expr name operator name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name operator literal type char else block type pseudo expr_stmt expr name name index expr name operator name operator literal type char macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name operator name operator name else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator name operator name operator literal type number operator operator literal type number macro name argument_list argument argument argument block expr_stmt expr name name index expr name operator name operator name if condition expr operator name operator literal type number operator operator literal type number then block macro name argument_list argument argument argument literal type number block if condition expr name name index expr name operator name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name operator literal type char else block type pseudo expr_stmt expr name name index expr name operator name operator literal type char macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name operator name operator name function type name name parameter_list block macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name operator literal type number then block return expr literal type boolean if condition expr name name index expr name operator literal type number operator name name index expr literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name if condition expr call name argument_list then block if condition expr operator name operator literal type number operator operator literal type number then block macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string else block macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator name return expr literal type number decl_stmt decl type name name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator operator call name argument_list argument expr name operator literal type number argument expr name then block decl_stmt decl type name name for control init expr name operator name operator literal type number condition incr expr name operator block if condition expr call name argument_list argument expr name operator literal type number argument expr name then block expr_stmt expr name operator literal type number break if condition expr name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name macro name argument_list argument argument literal type number argument block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name 
