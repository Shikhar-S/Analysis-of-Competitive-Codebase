include directive file using namespace name using name init type name name function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name expr_stmt expr operator name name index expr name name index expr name decl_stmt decl type name name init expr operator operator call name name operator name argument_list operator operator name operator call name name operator name argument_list operator name while condition expr name operator literal type number operator call name name operator name argument_list operator literal type number block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr operator call name name operator name argument_list if condition expr name operator call name argument_list argument expr name name operator name argument expr name name operator name then block break if condition expr name name operator name operator name name operator name then block decl_stmt decl type name name init expr name expr_stmt expr operator name decl_stmt decl type name name init expr name name operator name operator name name operator name decl_stmt decl type name name init expr name name operator name if condition expr name operator literal type number operator name operator name then block expr_stmt expr name operator literal type number operator name operator name else block expr_stmt expr name operator name operator name expr_stmt expr name operator operator literal type number expr_stmt expr name name operator name operator name name operator name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name else block decl_stmt decl type name name init expr name expr_stmt expr operator name decl_stmt decl type name name init expr name name operator name operator name name operator name decl_stmt decl type name name init expr name name operator name if condition expr name operator literal type number operator name operator name then block expr_stmt expr name operator literal type number operator name operator name else block expr_stmt expr name operator name operator name expr_stmt expr name operator operator literal type number expr_stmt expr name name operator name operator name name operator name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name operator literal type string return expr literal type number 
