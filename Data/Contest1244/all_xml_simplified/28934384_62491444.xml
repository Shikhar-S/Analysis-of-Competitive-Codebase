include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name define directive macro name value define directive macro name value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name block return expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name init expr operator literal type number block if condition expr name operator operator literal type number operator name operator name then block return expr literal type number if condition expr name operator literal type number then block return expr literal type number if condition expr name name index expr name index expr name index expr name then block return expr name name index expr name index expr name index expr name expr_stmt expr name name index expr name index expr name index expr name operator literal type number expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number if condition expr name operator name then block expr_stmt expr name operator literal type number elseif if condition expr name operator name then block expr_stmt expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator operator literal type number elseif if condition expr name operator name then block expr_stmt expr name operator operator literal type number decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block if condition expr name name index expr name index expr name operator name then block continue if condition expr name operator operator literal type number then block expr_stmt expr name operator name name index expr name index expr name elseif if condition expr name operator operator literal type number then block expr_stmt expr name operator name name index expr name index expr name else block return expr name name index expr name index expr name index expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name return expr name name index expr name index expr name index expr name operator name name index expr name index expr name index expr name operator call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name init expr operator literal type number block if condition expr name operator operator literal type number operator name operator name then block return expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number if condition expr name operator name then block expr_stmt expr name operator literal type number elseif if condition expr name operator name then block expr_stmt expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator operator literal type number elseif if condition expr name operator name then block expr_stmt expr name operator operator literal type number decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block if condition expr name name index expr name index expr name operator name then block continue if condition expr name operator operator literal type number then block expr_stmt expr name operator name name index expr name index expr name elseif if condition expr name operator operator literal type number then block expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name else block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr operator literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type number operator literal type string expr_stmt expr name operator name return expr literal type number 
