include directive file include directive file include directive file using namespace name using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value comment type line define directive macro name value define directive macro name value typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator literal type number then expr name else expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator operator name operator call name argument_list argument expr name argument expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name operator name while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator operator name operator name operator operator operator name operator name operator operator operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator operator name operator name operator operator operator name operator name operator operator operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator operator name operator operator operator name operator operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator operator name operator operator operator name operator operator return expr name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type boolean elseif if condition expr name operator literal type number then block type pseudo return expr literal type boolean elseif if condition expr name operator literal type number operator literal type number then block type pseudo return expr literal type boolean else block decl_stmt decl type name name init expr call name argument_list argument expr name macro name argument_list argument argument literal type number if condition expr name operator operator name operator literal type number operator operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo break expr_stmt expr call name name operator name argument_list argument expr name if condition expr name operator literal type number then block expr_stmt expr name operator operator literal type number expr_stmt expr call name argument_list argument expr literal type number if condition expr name operator name operator name operator literal type number then block expr_stmt expr name operator operator literal type number expr_stmt expr call name argument_list argument expr literal type number for control init decl type name name range expr name block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name function type name name parameter_list block comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name comment type line expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr call name name argument_list type generic argument expr name argument_list argument expr name macro name argument_list argument argument literal type number block macro name argument_list argument argument block expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name argument_list argument expr name macro name argument_list argument argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr operator name operator call name argument_list argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block if condition expr call name argument_list argument expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name comment type line expr_stmt expr call name argument_list argument expr name argument expr name argument expr name decl_stmt decl type name name name index expr name operator literal type number index expr literal type number index expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name decl_stmt decl type name name name index expr name operator literal type number index expr literal type number index expr literal type number expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue comment type line for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr name index expr name index expr name operator call name argument_list argument expr name name index expr name operator literal type number index expr name index expr name operator name name index expr name index expr name name index expr name operator literal type number argument expr name name index expr name index expr name index expr name if condition expr name name index expr name index expr name index expr name operator name name index expr name operator literal type number index expr name index expr name operator name name index expr name index expr name name index expr name operator literal type number then block expr_stmt expr name name index expr name index expr name index expr name operator name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block if condition expr name name index expr name index expr name index expr name operator name then block expr_stmt expr name operator name name index expr name index expr name index expr name expr_stmt expr name operator name expr_stmt expr name operator name comment type line expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr name while condition expr name operator literal type number block expr_stmt expr name name index expr name name index expr name operator literal type number operator name name index expr name index expr name index expr name decl_stmt decl type name name init expr name name index expr name name index expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number operator literal type string return expr literal type number 
