comment type block include directive file using namespace name typedef type name name name define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block if condition expr name name index expr name index expr name operator name then block type pseudo continue decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name name index expr name operator name operator name name index expr name then block type pseudo continue if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name name index expr name index expr name argument expr name argument expr name else block decl_stmt decl type name name init expr name name index expr name name index expr name index expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name index expr name argument expr name argument expr name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name else block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr name argument expr name argument expr name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number operator literal type char return expr literal type number if condition expr name name index expr name operator call name argument_list operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator name comment type line decl_stmt decl type name name expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name comment type line for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator call name argument_list argument expr name argument expr literal type number argument expr name then block expr_stmt expr name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator operator ternary condition expr name operator name then expr literal type char else expr literal type char operator break else block type pseudo expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name return expr literal type number 
