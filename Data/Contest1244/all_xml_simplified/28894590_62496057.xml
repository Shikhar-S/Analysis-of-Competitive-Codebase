include directive file function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block expr_stmt expr name operator call name argument_list if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name name argument_list type generic argument expr name operator name name function type name name parameter_list block comment type line expr_stmt expr name operator call name argument_list operator expr name operator call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name operator literal type number operator expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr literal type number operator name operator expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block type pseudo expr_stmt expr operator name if condition expr name name index expr name operator operator operator name name index expr name name index expr name operator operator name name index expr name name index expr name operator then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr name if condition expr name operator name then block while condition expr name operator block if condition expr operator name then block type pseudo break for control init expr name operator call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr operator name if condition expr operator name name index expr name name index expr operator name then block type pseudo expr_stmt expr operator name operator expr name name index expr name name index expr operator name operator name name index expr operator name operator expr call name name operator name argument_list argument expr name name index expr operator name if condition expr operator name name index expr name name index expr operator name then block type pseudo expr_stmt expr operator name operator expr name name index expr name name index expr operator name operator name name index expr operator name operator expr call name name operator name argument_list argument expr name name index expr operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator ternary condition expr operator name name index expr name operator literal type char operator then expr literal type char else expr literal type char else block type pseudo expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
