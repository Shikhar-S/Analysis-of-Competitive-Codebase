include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number using name init type name name decl_stmt decl type name name decl_stmt decl type name name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block return expr literal type boolean elseif if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name return expr literal type boolean function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number while condition expr call name name operator name argument_list operator name block decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name break function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name index expr name operator name expr_stmt expr name operator name name index expr name index expr name if condition expr name operator operator literal type number operator name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name operator name operator name operator name operator name then block continue expr_stmt expr call name argument_list argument expr block expr name expr name expr name function type name name parameter_list block expr_stmt expr name operator name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type number operator literal type string expr_stmt expr name operator literal type string function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list if condition expr operator call name argument_list then block expr_stmt expr name operator operator literal type number operator literal type string return expr literal type number expr_stmt expr call name argument_list expr_stmt expr call name argument_list expr_stmt expr call name argument_list return expr literal type number 
