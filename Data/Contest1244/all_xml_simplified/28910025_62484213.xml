include directive file define directive macro name value define directive macro name value using namespace name decl_stmt decl type name name name index expr literal type number index expr name decl type ref prev name decl type ref prev name name index expr literal type number index expr name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name name index expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name init expr literal type number function type name name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name name init expr name name index expr name name index expr name index expr name index expr name expr_stmt expr name name index expr name index expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block if condition expr name name index expr name index expr name operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name name index expr name index expr name argument expr name argument expr operator name operator literal type number operator operator literal type number return expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number init expr block expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name index expr name operator name name index expr name index expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr operator literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name index expr name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
