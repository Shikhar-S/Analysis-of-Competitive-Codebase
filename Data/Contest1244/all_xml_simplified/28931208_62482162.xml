include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name init expr block expr call name name argument_list type generic argument expr name argument_list argument expr name expr call name name argument_list type generic argument expr name argument_list argument expr name macro name expr operator name operator operator name operator for control init expr name operator name operator name block for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type string return elseif if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name operator lambda capture argument modifier parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init expr name operator name operator name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr operator literal type number decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number do block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init expr name operator name operator name block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name name index expr name name index expr name index expr name if condition expr name operator literal type number operator name then block type pseudo expr_stmt expr name operator literal type number else block type pseudo expr_stmt expr operator name if condition expr operator name operator name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name condition expr call name argument_list argument expr name argument expr name operator name expr_stmt expr name operator name operator literal type char for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type char function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name init expr literal type number while condition expr name operator block expr_stmt expr call name argument_list return expr literal type number 
