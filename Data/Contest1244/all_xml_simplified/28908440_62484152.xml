include directive file pragma directive name name name literal name using namespace name ifdef directive name define directive macro name parameter_list parameter type name value else directive define directive macro name parameter_list parameter type name comment type line endif directive using name init type name name using name init type name name name using name init type name using name init type name decl_stmt decl type name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr name name index expr literal type number operator name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init expr name operator name operator name name index expr name name index expr name block type pseudo if condition expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type number operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr operator name block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list operator literal type number then block type pseudo return expr name operator operator literal type number operator literal type char operator expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list decl_stmt decl type name name init expr name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name operator name operator name operator name operator name then block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name name index expr name operator literal type number index expr name name index expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name comment type line if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number operator literal type number comment type line expr_stmt expr name operator name operator literal type char comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator literal type char comment type line comment type line 
