include directive file namespace name block using namespace name namespace name block define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name value typedef type name name name typedef type name name name typedef type name name name name typedef type name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name using namespace name namespace name block decl_stmt decl type specifier name name argument_list argument expr literal type number decl_stmt decl type specifier name name argument_list argument expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name argument_list argument expr literal type number decl_stmt decl type specifier name name argument_list argument expr literal type number decl_stmt decl type specifier name name argument_list argument expr literal type number operator literal type number comment type line decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number expr operator literal type number expr literal type number expr literal type number expr operator literal type number decl type ref prev name name index init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr operator literal type number expr operator literal type number using namespace name namespace name block define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value using namespace name namespace name block function type name name parameter_list parameter decl type name name block return expr name operator literal type number function type name name parameter_list parameter decl type name name block return expr operator name operator literal type number operator operator literal type number function type name name parameter_list parameter decl type name name block return expr name operator literal type number function type name name parameter_list parameter decl type name name block return expr name operator literal type number function type name name parameter_list parameter decl type name name block return expr name operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number for control init decl type name name init expr literal type number condition expr literal type number operator name operator name operator name incr expr name operator block type pseudo if condition expr name operator name operator literal type number then block type pseudo return expr literal type number return expr literal type number function type name name parameter_list parameter decl type name name block return expr literal type number operator operator name operator literal type number operator operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator literal type number else expr name operator name empty_stmt function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name decl_stmt decl type name name argument_list argument expr call name argument_list argument expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list operator operator name operator name operator literal type number operator empty_stmt function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block type pseudo expr_stmt expr name operator operator expr name operator literal type number return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block return expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block decl_stmt decl type name name argument_list argument expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name operator name operator operator name expr_stmt expr operator name operator name operator operator name expr_stmt expr name operator literal type number return expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name init expr name block return expr call name argument_list argument expr name argument expr name operator literal type number argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name using namespace name namespace name block define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function type name name parameter_list parameter decl type specifier name modifier name block decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type number return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type string if condition expr name operator literal type number then block type pseudo return expr literal type string while condition expr name block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator literal type number operator literal type number operator name operator expr name operator literal type number return expr name function type name name parameter_list parameter decl type specifier name modifier name block decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number condition expr name operator name incr expr name operator operator expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo return expr literal type number return expr literal type number using namespace name namespace name block define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name return expr name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name function type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator call name argument_list function type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator call name argument_list function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr call name argument_list argument expr name name operator name argument expr name name operator name function template parameter_list parameter type name name parameter type name name parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name operator literal type char function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name name block expr_stmt expr name operator name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block expr_stmt expr name operator name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name name block expr_stmt expr name operator name operator call name argument_list argument expr name operator name operator literal type char function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name incr expr name operator block expr_stmt expr name operator name name index expr name if condition expr name operator call name argument_list argument expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char empty_stmt expr_stmt expr call name argument_list argument expr literal type string function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator literal type char define directive macro name parameter_list parameter type name value using namespace name using namespace name macro name block macro name block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list decl type ref prev name init expr call name argument_list decl type ref prev name init expr call name argument_list decl type ref prev name init expr call name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr operator literal type number else block type pseudo expr_stmt expr call name argument_list argument expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr call name argument_list argument expr name argument expr name 
