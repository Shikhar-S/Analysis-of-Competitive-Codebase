include directive file include directive file include directive file include directive file include directive file define directive macro name value decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl name name index expr name operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr literal type number index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl type ref prev name using namespace name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name name init expr block expr name expr name expr name name index expr name expr_stmt expr name name index expr operator name operator name expr_stmt expr name name index expr name operator name empty_stmt function type name name parameter_list parameter decl type name name parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name operator name operator name then block type pseudo return expr name return expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name name index expr name operator name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr call name argument_list argument expr name argument expr name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number operator literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name if condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator operator expr name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type number argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number argument expr name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type char return expr literal type number 
