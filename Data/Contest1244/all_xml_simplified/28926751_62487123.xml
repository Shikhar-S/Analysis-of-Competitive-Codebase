comment type line include directive file include directive file using namespace name using namespace name name operator name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value comment type line comment type line comment type line comment type line comment type line typedef type name name name typedef type name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name comment type line comment type line decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number comment type line comment type line function_decl type name name parameter_list parameter decl type name name parameter decl type name name comment type line comment type line function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number comment type line expr_stmt expr name operator name operator name comment type line comment type line while condition expr name operator literal type number block comment type line if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name comment type line expr_stmt expr name operator name operator literal type number comment type line expr_stmt expr name operator operator name operator name operator operator name return expr name comment type line comment type line function type name name parameter_list parameter decl type name name parameter decl type name name init expr name block decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block comment type line comment type line return expr call name argument_list argument expr name argument expr name operator literal type number argument expr name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name operator name argument expr name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block type pseudo expr_stmt expr name name index expr name operator name operator for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name name index expr name comment type line function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type specifier name name parameter decl type specifier name name block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator name return expr name function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type specifier name name parameter decl type specifier name name block decl_stmt decl type name name init expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator name operator literal type number block decl_stmt decl type name name init expr operator name operator name operator operator literal type number decl_stmt decl type name name init expr operator name operator name operator operator literal type number operator literal type number if condition expr call name argument_list argument expr name argument expr name argument expr name operator call name argument_list argument expr name argument expr name argument expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr name for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list expr_stmt expr call name name operator name argument_list argument expr literal type number ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive comment type line decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number operator literal type number while condition expr name operator name block decl_stmt decl type name name init expr operator name operator name operator operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name if condition expr name then block expr_stmt expr name operator name else block expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator name comment type line decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr call name name argument_list type generic argument expr name argument_list argument expr name operator name comment type line 
