include directive file using namespace name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number function type name name parameter_list block decl_stmt decl type name name while condition expr call name name argument_list argument expr literal type string argument expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr operator name operator name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr operator name operator name name index expr name operator call name argument_list argument expr name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number operator literal type number do block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name condition expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number argument expr literal type string index expr name operator name 
