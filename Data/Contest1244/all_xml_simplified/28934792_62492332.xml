include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name block return expr operator name operator literal type number operator operator name function type name name parameter_list parameter decl type name name block return expr operator name operator literal type number operator name operator operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type char then expr literal type char else expr literal type char function type name name parameter_list block expr_stmt expr name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean macro name argument_list argument argument literal type number argument block if condition expr name name index expr call name argument_list argument expr name operator name name index expr name operator name name index expr call name argument_list argument expr name operator name name index expr name then block expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator literal type boolean if condition expr operator name then block if condition expr name operator literal type number then block macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name expr_stmt expr name operator name operator name return for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block decl_stmt decl type name name init expr name decl type ref prev name init expr name expr_stmt expr name name index expr name operator literal type boolean while condition expr operator name name index expr call name argument_list argument expr name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean while condition expr operator name name index expr call name argument_list argument expr name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr ternary condition expr operator name operator name operator then expr name operator name operator literal type number else expr operator name operator name operator name operator literal type number operator comment type line decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name name index expr call name argument_list argument expr name decl_stmt decl type name name init expr name name index expr call name argument_list argument expr name decl_stmt decl type name name init expr operator name operator operator name operator literal type number operator operator literal type number operator operator name comment type line while condition expr name operator name block if condition expr name operator name then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name else block decl_stmt decl type name name init expr name operator literal type number if condition expr name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type boolean ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line else directive comment type line comment type line endif directive expr_stmt expr call name argument_list ifdef directive name expr_stmt expr call name argument_list argument expr name argument expr literal type string argument expr operator name operator call name argument_list operator name endif directive return expr literal type number 
