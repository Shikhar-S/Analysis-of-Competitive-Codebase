include directive file using namespace name ifndef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier value endif directive typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number decl_stmt decl type name name init expr call name argument_list for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator name for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char expr_stmt expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr operator name block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name expr_stmt expr call name name operator name argument_list expr_stmt expr name name index expr name name index expr name operator literal type number operator name name index expr name name index expr name operator literal type number if condition expr operator name name index expr literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type number operator literal type number elseif if condition expr operator name name index expr literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type number operator literal type number else block type pseudo expr_stmt expr name name index expr name operator literal type number operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name name index expr name operator literal type number index expr name name index expr name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name argument expr sizeof argument_list argument expr name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
