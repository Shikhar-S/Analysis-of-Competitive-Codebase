include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type specifier name name init expr call name argument_list decl type ref prev name init expr literal type number for control init condition expr name name argument_list type generic argument expr literal type char operator name literal type char incr expr name operator name operator expr name operator call name argument_list block type pseudo empty_stmt for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type number operator if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator name function type name name parameter_list block macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name operator literal type number then block type pseudo return expr literal type number return expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name operator expr call name argument_list argument expr literal type string argument expr name operator literal type number if condition expr name operator literal type number operator literal type number operator call name argument_list then block expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr ternary condition expr operator operator name name index expr name operator literal type char operator operator name operator then expr literal type char else expr literal type char return expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name name index expr name operator name for control init decl type name name init expr literal type number decl type ref prev name condition expr name operator name incr block expr_stmt expr name operator name for control init condition expr name operator name operator literal type number operator name operator name name index expr name operator literal type number operator name name index expr name incr expr operator name block type pseudo empty_stmt if condition expr name operator name then block macro name argument_list argument argument argument expr_stmt expr name name index expr operator name operator literal type number operator operator name operator literal type number operator literal type number comment type line if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr operator name operator literal type number operator operator name operator literal type number expr_stmt expr name operator name operator literal type number macro name argument_list argument argument literal type number argument block if condition expr call name name operator name argument_list then block type pseudo break for control init decl type name name range expr name block decl_stmt decl type name name init expr operator name name operator name operator literal type number operator name operator operator name operator literal type number decl type ref prev name init expr name name operator name operator name operator literal type number comment type line if condition expr name name index expr name operator name name index expr name then block type pseudo continue if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name name operator name if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name name operator name expr_stmt expr name name index expr name operator name name index expr name operator literal type number if condition expr name name index expr name operator name name index expr name name operator name then block type pseudo expr_stmt expr name operator name name operator name if condition expr name name index expr name operator name name index expr name name operator name then block type pseudo expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator expr call name name operator name argument_list expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name else block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr ternary condition expr operator operator name name index expr name operator literal type char operator operator name operator then expr literal type char else expr literal type char return expr literal type number 
