include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr operator name operator literal type number operator operator name then block type pseudo continue if condition expr name name index expr name operator name name index expr operator name operator literal type number operator name operator operator name then block type pseudo continue expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name argument expr name else block if condition expr name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator operator literal type number if condition expr call name name operator name argument_list operator literal type number then block if condition expr name name index expr literal type number operator name operator literal type number operator call name name operator name argument_list operator name operator name operator literal type number then block expr_stmt expr name name index expr literal type number operator name operator call name name operator name argument_list operator name expr_stmt expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type boolean then block expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator operator literal type number operator name name index expr name operator operator literal type number then block type pseudo break expr_stmt expr name name index expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name name index expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator name expr_stmt expr name operator operator name operator name operator literal type number operator operator name while condition expr literal type boolean block if condition expr name name index expr name operator operator literal type number operator name name index expr name operator operator literal type number then block type pseudo break expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator name expr_stmt expr name operator operator name operator name operator literal type number operator operator name if condition expr call name name operator name argument_list operator literal type number operator name name index expr literal type number operator name operator literal type number operator name name index expr literal type number operator name operator name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator name operator name return expr literal type number 
