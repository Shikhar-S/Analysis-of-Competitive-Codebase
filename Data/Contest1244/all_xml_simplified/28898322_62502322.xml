include directive file define directive macro name value decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name init expr block expr literal type number decl type ref prev name name index expr name decl type ref prev name init expr literal type number decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name init expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr name else expr name operator literal type number function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator name then expr literal type number else expr name operator literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name decl_stmt decl type name name init expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block if condition expr name name index expr name operator name name index expr name operator name operator literal type number then block expr_stmt expr name name index expr name operator operator name for control init decl type name name init expr call name argument_list argument expr name condition expr name name index expr name operator name name index expr name operator operator name name index expr name incr expr name operator operator ternary condition expr name operator literal type number operator name then expr literal type number else expr name operator literal type number operator block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name decl_stmt decl type name name init expr literal type number while condition expr name operator block expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo break expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr name name index expr name comment type line if condition expr name name index expr call name argument_list argument expr name name index expr name operator name name index expr call name argument_list argument expr name name index expr name then block type pseudo expr_stmt expr name name index expr operator name operator name if condition expr operator name name index expr call name argument_list argument expr name name index expr name then block expr_stmt expr name name index expr call name argument_list argument expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name while condition expr operator name name index expr call name argument_list argument expr name name index expr name operator operator operator name name index expr call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name operator literal type number operator operator block expr_stmt expr name name index expr call name argument_list argument expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name if condition expr operator name name index expr call name argument_list argument expr name name index expr name then block expr_stmt expr name name index expr call name argument_list argument expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name while condition expr operator name name index expr call name argument_list argument expr name name index expr name operator operator operator name name index expr call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name operator literal type number operator operator block expr_stmt expr name name index expr call name argument_list argument expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name comment type line expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name name index expr name else block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name else block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr ternary condition expr name name index expr name operator literal type char then expr literal type char else expr literal type char return expr literal type number 
