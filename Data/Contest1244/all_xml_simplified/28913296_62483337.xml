include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value comment type line function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator operator literal type number operator name operator function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator operator literal type number operator name operator operator function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator operator operator literal type number operator name operator operator function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator operator literal type number operator name operator operator decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name block if condition expr name operator name operator name then block type pseudo return expr literal type boolean if condition expr operator name operator name operator name operator operator name operator literal type number then block type pseudo return expr literal type boolean expr_stmt expr name operator name expr_stmt expr name operator operator name operator name operator name operator operator name if condition expr name operator name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name operator operator name operator name operator return expr literal type boolean function type name name parameter_list parameter decl type name name block if condition expr name operator name operator name then block type pseudo return expr literal type boolean if condition expr operator name operator name operator name operator operator name operator literal type number then block type pseudo return expr literal type boolean expr_stmt expr name operator name expr_stmt expr name operator operator name operator name operator name operator operator name if condition expr name operator name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name operator operator name operator name operator return expr literal type boolean function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr call name argument_list argument expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name return elseif if condition expr call name argument_list argument expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name return expr_stmt expr call name argument_list argument expr literal type string return function type name name parameter_list block expr_stmt expr call name argument_list return expr literal type number 
