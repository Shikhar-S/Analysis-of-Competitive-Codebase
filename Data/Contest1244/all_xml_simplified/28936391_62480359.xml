include directive file using namespace name typedef type name name name define directive macro name value decl_stmt decl type name name name index expr name index expr literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo return expr name operator name operator expr literal type number return expr literal type number decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl name name index expr name index expr literal type number index expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name index expr literal type number operator name operator name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl specifier type name name name index expr literal type number index expr literal type number operator literal type number decl_stmt decl specifier type name name name index expr literal type number index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name index expr name index expr name operator name then block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name index expr name index expr name operator name then block if condition expr name operator operator literal type number operator name operator then block type pseudo continue if condition expr operator literal type number operator name operator operator name then block type pseudo continue if condition expr call name argument_list argument expr name name index expr name index expr name operator operator literal type number operator name operator argument expr name name index expr name index expr name index expr name operator name name index expr name index expr name index expr name then block type pseudo expr_stmt expr name name index expr name index expr name operator operator literal type number operator name operator operator operator name operator block expr name expr name expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name index expr name if condition expr name name index expr name index expr name operator name then block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr operator literal type number operator name operator operator name then block expr_stmt expr name name index expr name operator name operator literal type number return else block decl_stmt decl type name name init expr name name index expr name index expr name index expr name expr_stmt expr call name argument_list argument expr name name operator name argument expr name name operator name argument expr name name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator operator literal type number operator name name operator name operator function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name decl type ref prev name decl type ref prev name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number decl_stmt decl type name name decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr call name argument_list argument expr name argument expr name name index expr literal type number index expr name index expr name then block type pseudo expr_stmt expr name operator operator name operator block expr literal type number expr name expr name if condition expr name operator name then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name name operator name argument expr name name operator name argument expr name name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
