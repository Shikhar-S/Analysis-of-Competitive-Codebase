include directive file using namespace name define directive macro name value typedef type name name name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type name name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr operator call name argument_list argument expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number do block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type char operator condition expr call name argument_list argument expr name operator call name argument_list return expr ternary condition expr name then expr operator name else expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator decl_stmt decl type name name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number operator name operator name comment type line expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name index expr name operator call name argument_list macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block decl_stmt decl type name name for control init decl type name name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block type pseudo expr_stmt expr name operator name name index expr name operator name decl_stmt decl type name name for control init decl type name name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block type pseudo if condition expr name name index expr name operator name operator name then block type pseudo expr_stmt expr name operator name name index expr name operator name comment type line comment type line macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name index expr name operator name name index expr name index expr name comment type line expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name operator expr name operator name expr_stmt expr name name index expr name operator name operator expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator name operator expr name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string break 
