comment type block include directive file include directive file define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value using namespace name using namespace name comment type line function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block expr_stmt expr name operator operator ternary condition expr name operator name then expr name else expr name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block expr_stmt expr name operator operator ternary condition expr name operator name then expr name else expr name operator typedef type name name name typedef type name name name typedef type name name name typedef type name name name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name name index expr name operator for control init expr name operator name operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name while condition expr call name name operator name argument_list operator literal type number operator name block decl_stmt decl type name name init expr operator call name name operator name argument_list decl_stmt decl type name name init expr operator operator operator call name name operator name argument_list operator decl_stmt decl type name name init expr operator operator operator call name name operator name argument_list operator decl_stmt decl type name name init expr operator operator operator operator operator call name name operator name argument_list operator operator decl_stmt decl type name name init expr name decl type ref prev name init expr name if condition expr name name operator name operator name name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name operator name name operator name argument expr operator name operator call name argument_list argument expr name name operator name operator name name operator name if condition expr operator name then block type pseudo break expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name operator name operator operator ternary condition expr name name operator name operator name name operator name then expr literal type number else expr operator literal type number operator operator name expr_stmt expr name operator name operator name name operator name if condition expr name name operator name operator name name operator name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name operator name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator call name name operator name argument_list operator name operator call name name operator name argument_list operator name return expr literal type number 
