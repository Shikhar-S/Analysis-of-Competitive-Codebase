include directive file using namespace name define directive macro name value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr name name index expr name operator literal type number operator name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr literal type number else block expr_stmt expr call name name operator name argument_list operator name operator expr_stmt expr name operator name name index expr name while condition expr call name name operator name argument_list operator literal type number operator name operator literal type number block if condition expr call name name operator name argument_list operator name operator name operator call name name operator name argument_list operator name operator name then block type pseudo break if condition expr call name name operator name argument_list operator name operator call name name operator name argument_list operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name operator name name index expr literal type number operator name argument expr operator name name index expr literal type number operator name operator name name index expr literal type number operator name operator expr_stmt expr name operator name operator name name index expr literal type number operator name expr_stmt expr name operator name expr_stmt expr name name index expr literal type number operator name operator name if condition expr name name index expr literal type number operator name operator name name index expr literal type number operator name then block expr_stmt expr name name index expr literal type number operator name operator name name index expr literal type number operator name expr_stmt expr call name name operator name argument_list else block decl_stmt decl type name name init expr call name argument_list argument expr name operator call name name operator name argument_list operator name argument expr operator call name name operator name argument_list operator name operator name name index expr call name name operator name argument_list operator literal type number operator name operator expr_stmt expr name operator name operator call name name operator name argument_list operator name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list operator name operator name if condition expr call name name operator name argument_list operator name operator name name index expr call name name operator name argument_list operator literal type number operator name then block expr_stmt expr name name index expr call name name operator name argument_list operator literal type number operator name operator call name name operator name argument_list operator name expr_stmt expr call name name operator name argument_list if condition expr call name name operator name argument_list operator literal type number then block decl_stmt decl type name name init expr name name index expr literal type number operator name operator name name index expr literal type number operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name name index expr literal type number operator name argument expr name name index expr literal type number operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type string return expr literal type number 
