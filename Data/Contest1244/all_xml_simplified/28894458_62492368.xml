include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name name index expr literal type number index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name index expr name decl_stmt decl type name name name name index expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr call name argument_list argument expr name name index expr name operator literal type number then block type pseudo return decl_stmt decl type name name init expr ternary condition expr operator name name index expr name index expr literal type number operator name operator then expr name name index expr name index expr literal type number else expr name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name then block type pseudo continue expr_stmt expr name name index expr name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name index expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name break function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr literal type number index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr literal type number index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr literal type number index expr name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name break decl_stmt decl type name name init expr name decl type ref prev name init expr name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr name operator literal type number operator name operator name name index expr name index expr name operator name name index expr name index expr name expr_stmt expr name name index expr name operator literal type number operator name index expr name operator name expr_stmt expr name name index expr name operator literal type number operator name index expr name operator name expr_stmt expr call name argument_list argument expr name operator literal type number operator name argument expr name argument expr name argument expr name argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name init expr operator name operator literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue if condition expr name operator name name index expr name operator literal type number operator name then block expr_stmt expr name operator name name index expr name operator literal type number operator name expr_stmt expr name operator name operator literal type number operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type char return expr literal type number 
