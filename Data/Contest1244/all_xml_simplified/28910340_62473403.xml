include directive file using namespace name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char operator expr name operator call name argument_list if condition expr name then block type pseudo expr_stmt expr name operator operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name name index expr literal type number index expr literal type number index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block decl_stmt decl type specifier name name decl type ref prev name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name if condition expr name name index expr name operator name name index expr name then block type pseudo return expr operator call name argument_list argument expr literal type string if condition expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name else block type pseudo expr_stmt expr name name index expr name operator name if condition expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name else block type pseudo expr_stmt expr name name index expr name operator name decl_stmt decl type name name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block expr_stmt expr call name argument_list argument expr name operator name if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name index expr name index expr literal type number operator name name index expr name index expr name operator name name index expr name index expr name name index expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block expr_stmt expr name name index expr name operator literal type boolean if condition expr name operator literal type number then block for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name operator name operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr name index expr name argument expr name name index expr name index expr name index expr name operator literal type number operator name name index expr name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator ternary condition expr name name index expr name name index expr name then expr name name index expr name else expr name name index expr name decl_stmt decl type name name init expr literal type number operator literal type number decl type ref prev name decl type ref prev name for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name then block type pseudo if condition expr call name argument_list argument expr name argument expr name name index expr name index expr name index expr name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr name name index expr name name index expr name operator literal type number operator name for control init decl type specifier name name init expr name operator literal type number condition expr name incr expr operator name block expr_stmt expr name name index expr name name index expr name operator literal type number operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name name index expr name name index expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number expr_stmt expr name operator name return expr literal type number 
