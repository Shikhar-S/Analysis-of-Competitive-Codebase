include directive file define directive macro name value define directive macro name value using namespace name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type number expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name function type name name parameter_list block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number then block type pseudo continue expr_stmt expr name name index expr name operator name operator expr name operator name name index expr name index expr name name index expr name operator expr name name index expr name name index expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator call name argument_list argument expr name operator expr name name index expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name argument expr name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr literal type number operator name operator expr name name index expr literal type number operator name decl_stmt decl type name name init expr call name argument_list operator name name index expr name index expr name name index expr literal type number operator name name index expr name index expr name name index expr literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name operator expr name operator name expr_stmt expr name name index expr name name index expr literal type number operator name operator expr name name index expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name operator expr name name index expr literal type number operator name operator expr call name argument_list expr_stmt expr name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator operator ternary condition expr name operator name then expr literal type char else expr literal type char operator return expr literal type number 
