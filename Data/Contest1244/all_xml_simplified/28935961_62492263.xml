include directive file using namespace name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name parameter_list parameter type name parameter type name value comment type line define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name name block expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name name block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name operator name name index expr name return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name name argument_list type generic argument expr name name block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name macro name argument_list argument argument expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument expr_stmt expr name name index expr name name index expr name operator decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name block expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr name name operator name while condition expr literal type number block comment type block if condition expr name operator literal type number then block type pseudo break if condition expr call name name operator name argument_list operator literal type number then block type pseudo break decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr call name name operator name argument_list if condition expr name name operator name operator name name operator name then block expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr call name argument_list argument expr operator name operator name operator operator name argument expr name decl_stmt decl type name name init expr name operator name expr_stmt expr name operator name if condition expr name operator name operator name then block expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator name else block expr_stmt expr call name name operator name argument_list argument expr block expr name operator name expr name else block expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr call name argument_list argument expr operator name operator name operator operator name argument expr name decl_stmt decl type name name init expr name operator name expr_stmt expr name operator name if condition expr name operator name operator name then block expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator name else block expr_stmt expr call name name operator name argument_list argument expr block expr name operator name expr name decl_stmt decl type name name init expr call name name operator name argument_list operator name operator call name name operator name argument_list operator name expr_stmt expr name operator name operator name return expr literal type number 
