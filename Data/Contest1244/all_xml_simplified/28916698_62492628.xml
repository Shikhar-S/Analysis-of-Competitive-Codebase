pragma directive name name name name name pragma directive name name name name name include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value using name name operator name using name name operator name using name name operator name using name name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator expr_stmt expr name operator call name argument_list expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr name else expr operator name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name expr_stmt expr name name index expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name decl type ref prev name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block if condition expr name name index expr name operator name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block if condition expr name name index expr name operator name operator name name index expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name if condition expr name name index expr name then block type pseudo expr_stmt expr name name index expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator literal type number if condition expr name operator name then block expr_stmt expr call name name operator name argument_list if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr operator name then block type pseudo expr_stmt expr name name index expr name name index expr name operator name operator name name index expr literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator name operator name name index expr literal type number expr_stmt expr name operator literal type number else block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr name name index expr name operator name operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name name index expr name index expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name argument expr literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number 
