include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value ifdef directive name define directive macro name parameter_list parameter type name value else directive define directive macro name parameter_list parameter type name endif directive struct name block public type default constructor name parameter_list block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr call name name operator name argument_list operator literal type number operator name name index expr name operator name name index expr call name name operator name argument_list operator literal type number operator name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr literal type number else block type pseudo expr_stmt expr name name index expr call name name operator name argument_list operator literal type number operator name operator decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name name operator name argument_list operator literal type number while condition expr name name argument_list type generic argument expr name operator name literal type number block if condition expr name name index expr name operator name operator name name index expr name operator name operator name name index expr name operator name operator name then block if condition expr name name index expr name operator name operator operator name name index expr name operator literal type number operator name operator name name index expr name operator name operator operator name then block expr_stmt expr name name index expr name operator literal type number operator name operator name name index expr name operator name expr_stmt expr name operator name name index expr name operator name operator operator name name index expr name operator literal type number operator name operator name name index expr name operator name operator expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator else block expr_stmt expr name name index expr name operator name operator name name index expr name operator name operator name operator operator name name index expr name operator name operator expr_stmt expr name operator name operator operator name name index expr name operator name operator break elseif if condition expr name name index expr name operator name operator name name index expr name operator name operator name name index expr name operator name operator name then block if condition expr name name index expr name operator name operator operator name name index expr name operator name operator name name index expr name operator literal type number operator name operator operator name then block expr_stmt expr name name index expr name operator literal type number operator name operator name name index expr name operator name expr_stmt expr name operator name name index expr name operator name operator operator name name index expr name operator name operator name name index expr name operator literal type number operator name operator expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator else block expr_stmt expr name name index expr name operator name operator name name index expr name operator name operator name operator operator name name index expr name operator name operator expr_stmt expr name operator name operator operator name name index expr name operator name operator break else block type pseudo break decl_stmt decl type name name init expr literal type number while condition expr name name index expr name operator name operator literal type number block expr_stmt expr name operator decl_stmt decl type name name init expr call name name operator name argument_list operator literal type number while condition expr name name index expr name operator name operator literal type number block expr_stmt expr name operator expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name operator name return expr literal type number 
