include directive file include directive file include directive file include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block decl_stmt decl type name name init expr name name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr operator name name index expr name expr_stmt expr operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block type pseudo if condition expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator literal type number operator name name index expr name index expr name name index expr name decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name comment type line comment type line if condition expr name operator name then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number if condition expr name operator name then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number if condition expr name operator name then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number if condition expr name operator name then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number if condition expr name operator name then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number if condition expr name operator name then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator literal type string return expr literal type number 
