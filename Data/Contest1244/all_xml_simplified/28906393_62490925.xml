include directive file using namespace name function name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name name init expr call name name operator name argument_list operator call name name operator name argument_list decl_stmt decl type name name name init expr call name name operator name argument_list decl_stmt decl type name name name init expr call name name operator name argument_list while condition expr name operator name block if condition expr name operator literal type number then block type pseudo break if condition expr name operator literal type number operator name operator name then block decl_stmt decl type name name name init expr name name index expr name operator name name index expr name if condition expr name operator name operator operator name operator literal type number operator then block expr_stmt expr name operator name operator operator name operator literal type number operator expr_stmt expr name operator name expr_stmt expr name operator expr_stmt expr name operator else block decl_stmt decl type name name name init expr name operator operator name operator literal type number operator expr_stmt expr name operator name expr_stmt expr name operator name operator operator name operator literal type number operator if condition expr name operator literal type number then block expr_stmt expr name operator name operator operator name operator name operator expr_stmt expr name operator name break else block type pseudo break else block decl_stmt decl type name name name init expr name name index expr name operator name name index expr name if condition expr name operator name operator operator name operator name operator then block expr_stmt expr name operator name operator operator name operator name operator expr_stmt expr name operator name expr_stmt expr name operator expr_stmt expr name operator else block decl_stmt decl type name name name init expr name operator operator name operator name operator expr_stmt expr name operator name expr_stmt expr name operator name operator operator name operator name operator if condition expr name operator literal type number then block expr_stmt expr name operator name operator operator name operator expr_stmt expr name operator name break else block type pseudo break expr_stmt expr name operator name operator name 
