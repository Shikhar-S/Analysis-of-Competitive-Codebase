include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value class name block private type default public decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name function_decl type name name parameter_list function_decl type name name parameter_list function_decl type name name parameter_list function_decl type name name parameter_list function_decl type name name argument_list type generic argument expr name name parameter_list parameter decl type name name parameter decl type name name argument_list type generic argument expr name name function_decl type name name parameter_list function_decl type name name parameter_list parameter decl type name name function_decl type name name parameter_list parameter decl type name name function_decl type name name parameter_list parameter decl type name name parameter decl type name name function_decl type name name parameter_list parameter decl type name name parameter decl type name name comment type line function_decl type name name parameter_list parameter decl type name name comment type line function_decl type name name parameter_list function_decl type name name parameter_list decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name function type name name name operator name parameter_list block expr_stmt expr name operator name if condition expr name then block type pseudo expr_stmt expr name operator name operator literal type number comment type line else block type pseudo expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name if condition expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name macro name argument_list argument argument literal type number block decl_stmt decl type name name macro name argument_list argument argument block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name then block type pseudo expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name operator name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name if condition expr name then block expr_stmt expr name name index expr name operator name operator expr_stmt expr name name index expr name operator name operator return function type name name name operator name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name then block decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator if condition expr operator name then block type pseudo expr_stmt expr name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type boolean return function type name name name operator name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type boolean function type name name name operator name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr call name name argument_list type generic argument expr name argument_list return function type name name argument_list type generic argument expr name name name operator name parameter_list parameter decl type name name parameter decl type name name argument_list type generic argument expr name name comment type line block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr literal type number expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name name index expr name incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name operator literal type boolean return expr name function type name name name operator name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr literal type boolean while condition expr operator name block if condition expr name operator name then block type pseudo break while condition expr literal type number block if condition expr operator name name index expr name then block type pseudo break expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator literal type boolean break if condition expr name then block type pseudo break expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator return expr name function type name name name operator name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr literal type number while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr literal type number expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name name index expr name incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean return function type name name name operator name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name operator literal type number while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr call name name operator name argument_list operator literal type number expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name name index expr name incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr operator name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean return function type name name name operator name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type boolean function type name name name operator name parameter_list parameter decl type name name parameter decl type name name comment type line block if condition expr operator name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name operator literal type number return function type name name name operator name parameter_list parameter decl type name name comment type line block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name comment type line decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name expr_stmt expr name name operator name operator literal type number expr_stmt expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name while condition expr operator call name name operator name argument_list block expr_stmt expr name operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name if condition expr name name index expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name name index expr name incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name decl_stmt decl type name name if condition expr name then block type pseudo expr_stmt expr name operator name name index expr name index expr name else block type pseudo expr_stmt expr name operator literal type number if condition expr name name index expr name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator name name index expr name operator name expr_stmt expr name name operator name operator name name index expr name expr_stmt expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name function type name name name operator name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr name name operator name operator name expr_stmt expr name operator literal type number operator expr name operator literal type number expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr name name operator name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr name name operator name operator name return expr name function type name name name operator name parameter_list comment type line block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo return expr name function type name name parameter_list parameter decl type name block decl_stmt decl type name name decl_stmt decl type name name expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number decl_stmt decl type name name macro name argument_list argument argument literal type number block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name expr_stmt expr call name name operator name argument_list argument expr literal type number switch condition expr name block case expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number break case expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number break case expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number break case expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number break case expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number break case expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number break macro name argument_list argument argument block decl_stmt decl type name name init expr operator name name index expr name name operator name index expr name operator operator literal type number expr_stmt expr name operator name name operator name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name if condition expr operator name name operator name then block type pseudo expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator name operator name macro name argument_list argument argument block expr_stmt expr name operator operator name name index expr name name operator name index expr name operator literal type number operator operator literal type string expr_stmt expr name operator name return expr literal type number 
