include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name parameter_list parameter type name value define directive macro name value decl_stmt decl type name specifier name init expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number return elseif if condition expr call name argument_list argument expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name if condition expr name operator name then block type pseudo break decl_stmt decl type name name init expr name name index expr name index expr literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name init expr name do block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name name index expr name operator literal type number index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name condition expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator name operator literal type char decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type number operator literal type char function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name comment type line expr_stmt expr name operator literal type number while condition expr name operator block type pseudo expr_stmt expr call name argument_list return expr literal type number 
