include directive file define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value using namespace name using name init type name name using name init type name name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name specifier modifier name parameter decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name specifier modifier name parameter decl type name name parameter decl type name name block decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr name name index expr name index expr name macro name argument_list argument argument block if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name specifier modifier name parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name parameter decl type name name block decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator name expr_stmt expr name name index expr name operator name macro name argument_list argument argument block if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name modifier name name index block expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type number comment type line decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name name index expr name operator call name argument_list operator literal type number operator name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name decl_stmt decl type name name init expr name name index expr name index expr literal type number decl_stmt decl type name name init expr ternary condition expr name name index expr name index expr literal type number operator name then expr name name index expr name index expr literal type number else expr name name index expr name index expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr call name name name argument_list type generic argument expr name operator name argument_list argument expr call name argument_list argument expr literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr block expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr name operator name name index expr name index expr name operator name name index expr name index expr name expr block expr name expr name argument expr name expr_stmt expr name operator name name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name expr_stmt expr name name index expr name operator name name operator name operator name expr_stmt expr name name index expr name operator name name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name name operator name operator name argument expr name name operator name operator name macro name argument_list argument argument block expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr call name name operator name argument_list return expr literal type number 
