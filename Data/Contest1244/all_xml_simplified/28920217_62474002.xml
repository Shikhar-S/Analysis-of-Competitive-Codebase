define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file comment type line define directive macro name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name name typedef type name name name decl_stmt decl type name name argument_list argument expr name block operator operator decl_stmt decl type name name init expr call name argument_list argument expr operator name operator operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number decl_stmt decl type specifier name name init expr name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number function_decl type name name parameter_list function_decl type name name parameter_list function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list return expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block comment type line expr_stmt expr name operator operator literal type number operator name return if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name name index expr name operator call name argument_list while condition expr literal type boolean block expr_stmt expr call name name operator name argument_list argument expr name if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo break if condition expr name name index expr call name name operator name argument_list operator literal type number operator name name index expr name index expr literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number else block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr block expr operator literal type number expr operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr name name index expr name name index expr literal type number index expr name operator name name index expr name name index expr literal type number index expr name decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name then block expr_stmt expr name operator name name index expr name name index expr name index expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name break if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator block expr name expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name expr_stmt expr name name index expr literal type number operator name name operator name expr_stmt expr name name index expr literal type number operator name name operator name decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name break expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator name name index expr name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type string 
