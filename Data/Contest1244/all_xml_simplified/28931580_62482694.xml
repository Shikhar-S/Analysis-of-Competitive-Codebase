include directive file define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name init expr literal type number block for control init condition expr name incr expr name operator literal type number operator expr name operator literal type number operator name operator name operator name block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number operator name operator name operator name return expr name using name init type name name argument_list type generic argument expr name argument expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block decl_stmt decl type name name init expr literal type number operator name operator name return expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator name name index expr name index expr name return expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block decl_stmt decl type name name init expr literal type number operator name operator name expr_stmt expr name name index expr name operator name operator literal type number return expr call name argument_list argument expr name argument expr name argument expr name argument expr name return function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator if condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number then block type pseudo return expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name index expr literal type number decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator name name index expr name index expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name then block if condition expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name operator name name index expr name index expr name operator name name index expr name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number return expr literal type number return expr literal type number 
