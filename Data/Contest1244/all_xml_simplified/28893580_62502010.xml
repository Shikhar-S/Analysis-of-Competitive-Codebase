include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean operator expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name decl_stmt decl type name name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr name name index expr literal type number decl type ref prev name init expr name name index expr name operator literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr name operator name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr name operator name operator name return expr literal type number expr_stmt expr name operator operator expr name operator decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type boolean while condition expr name block expr_stmt expr name operator literal type boolean decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name operator name then block expr_stmt expr name operator name operator expr name operator name operator name expr_stmt expr name operator literal type boolean expr_stmt expr name operator else block decl_stmt decl type name name init expr name operator name if condition expr name then block expr_stmt expr name operator name expr_stmt expr name operator name operator name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name name index expr name if condition expr name operator name operator name then block expr_stmt expr name operator name operator expr name operator name operator name expr_stmt expr name operator literal type boolean expr_stmt expr name operator else block decl_stmt decl type name name init expr name operator name if condition expr name then block expr_stmt expr name operator name expr_stmt expr name operator name operator name comment type line expr_stmt expr name operator operator expr name operator expr_stmt expr name operator name operator name operator name return expr literal type number 
