include directive file using namespace name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name using name init type name name argument_list type generic argument expr name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name name index expr name operator name name index expr name index expr literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name name index expr name while condition expr literal type boolean block if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator operator literal type number break else block if condition expr name name index expr name index expr literal type number operator name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name index expr literal type number else block type pseudo expr_stmt expr name name index expr name operator name name index expr name index expr literal type number expr_stmt expr name operator name expr_stmt expr name operator name name index expr name comment type line decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr block expr literal type number expr block expr operator literal type number expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr operator literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator literal type number then block type pseudo continue decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name block expr_stmt expr name operator expr block expr name expr name empty_stmt expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name decl_stmt decl type name name init expr name name operator name operator name decl type ref prev name init expr name name operator name operator name decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block comment type line expr_stmt expr name name index expr name operator name operator literal type number comment type line expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name 
