include directive file using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name name name argument_list argument expr literal type number argument expr call name name argument_list type generic argument expr name name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr literal type number index expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator name name index expr name operator call name argument_list expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator name name index expr name operator call name argument_list if condition expr name operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break decl_stmt decl type name name name init expr operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name name init expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name init expr literal type number while condition expr name operator name block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator name name index expr name index expr name elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator name name index expr name index expr name if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name break expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator operator literal type number operator name operator name then block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type string 
