define directive macro name value include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator expr name name index expr name name index expr name operator decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type number operator name return expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr call name name operator name argument_list operator literal type number decl_stmt decl type name name init expr name name index expr name decl type ref prev name init expr name name index expr name decl_stmt decl type name name init expr name name index expr name name index expr name decl type ref prev name init expr name name index expr name name index expr name while condition expr name operator call name argument_list argument expr name argument expr name operator name operator name block if condition expr name operator name then block decl_stmt decl type name name init expr name name index expr name operator literal type number operator name name index expr name decl_stmt decl type name name init expr name operator name decl_stmt decl type name name init expr literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name name index expr name name index expr operator name if condition expr name then block type pseudo break else block decl_stmt decl type name name init expr name name index expr name operator name name index expr name operator literal type number decl_stmt decl type name name init expr name operator name decl_stmt decl type name name init expr literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name name index expr name name index expr operator name if condition expr name then block type pseudo break expr_stmt expr name operator name operator name operator name return expr literal type number 
