include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value using namespace name using namespace name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr name operator operator literal type number expr_stmt expr call name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator literal type number then block decl_stmt decl type name name init expr name expr_stmt expr name operator literal type number operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name name index expr name name index expr name index expr name expr_stmt expr name name index expr name name index expr name operator name elseif if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name index expr name expr_stmt expr name name index expr name name index expr name operator name elseif if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name index expr name expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator literal type number operator name operator name then block expr_stmt expr name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type string expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number if condition expr call name argument_list argument expr name literal type string argument expr literal type string then block expr_stmt expr call name argument_list argument expr name literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr name literal type string argument expr literal type string argument expr name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number break comment type line for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number 
