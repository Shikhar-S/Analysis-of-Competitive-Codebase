include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name name init expr call name name name argument_list type generic argument expr name name operator name argument_list decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator call name argument_list argument expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo throw expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name return expr operator call name name operator name argument_list function type name name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name name argument_list type generic argument expr name modifier name parameter decl type specifier name name argument_list type generic argument expr name name argument_list type generic argument expr name modifier name parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name name init expr name name index expr name index expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name expr_stmt expr call name name operator name argument_list argument expr name argument expr operator literal type number expr_stmt expr name name index expr name operator name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator name else block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator name name index expr name index expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr name return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name index expr literal type number break for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name name init expr call name name name argument_list type generic argument expr name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr operator literal type number block decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name block decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name block decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name block decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name block decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name block decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
