include directive file using namespace name function specifier type name name name parameter_list block decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr call name argument_list while condition expr name operator literal type char operator operator name name argument_list type generic argument expr literal type char operator name literal type char operator block type pseudo expr_stmt expr name operator call name argument_list if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type boolean operator expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list if condition expr name then block type pseudo expr_stmt expr name operator operator name return expr name function specifier type name name parameter_list parameter decl type name name name block if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr name operator operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type char typedef type name name name typedef type name name argument_list type generic argument expr name name argument expr name name name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name name init expr literal type number operator literal type number decl_stmt decl type name name name decl type ref prev name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name name block if condition expr name name index expr name then block type pseudo return expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block type pseudo expr_stmt expr call name argument_list argument expr name function type name name parameter_list block expr_stmt expr name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name index expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr operator name name index expr name expr_stmt expr operator name name index expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number decl_stmt decl type name name name init expr literal type number while condition expr name operator name operator name name index expr name operator literal type number block type pseudo expr_stmt expr operator name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name name init expr operator name name operator literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name init expr block expr literal type number expr literal type number expr literal type number do block decl_stmt decl type name name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr name name index expr name operator literal type number index expr name name index expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name condition expr call name argument_list argument expr call name argument_list argument expr name expr_stmt expr name operator name operator literal type string expr_stmt expr name operator block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name operator literal type number do block decl_stmt decl type name name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr name name index expr name operator literal type number index expr name name index expr name if condition expr name operator name then block macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator literal type string return expr literal type number condition expr call name argument_list argument expr call name argument_list argument expr name return expr literal type number 
