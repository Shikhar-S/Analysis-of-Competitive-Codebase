include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name operator literal type number constructor name parameter_list block expr_stmt expr name operator name operator literal type number function type name name parameter_list block if condition expr name operator name then block type pseudo return expr name name index expr name operator expr_stmt expr name operator literal type number operator expr name operator call name argument_list argument expr name argument expr literal type number argument expr name argument expr name return expr ternary condition expr name then expr name name index expr name operator else expr name function type name name parameter_list block decl_stmt decl type name name for control init expr name operator call name argument_list condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo empty_stmt if condition expr name then block type pseudo expr_stmt expr name operator return expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name argument expr name operator expr name operator literal type number expr_stmt expr name name index expr name operator operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name argument expr name decl name decl type ref prev name function specifier type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init expr name operator call name name operator name argument_list condition expr name name argument_list type generic argument expr literal type char operator name literal type char incr expr name operator call name name operator name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name name operator name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type char operator return expr name operator name function specifier type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init expr name operator call name name operator name argument_list condition expr name name argument_list type generic argument expr literal type char operator name literal type char incr expr name operator call name name operator name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name name operator name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type char operator return expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char else block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char operator expr name operator operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr literal type number while condition expr name block expr_stmt expr name name index expr operator name operator name operator literal type number operator literal type char expr_stmt expr name operator literal type number for control init condition expr name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char else block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char operator expr name operator operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr literal type number while condition expr name block expr_stmt expr name name index expr operator name operator name operator literal type number operator literal type char expr_stmt expr name operator literal type number for control init condition expr name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr name function specifier type name name parameter_list block decl_stmt decl type name name for control init expr name operator call name name operator name argument_list condition expr name operator literal type char operator name operator literal type char incr expr name operator call name name operator name argument_list block type pseudo empty_stmt return expr name define directive macro name value decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name function specifier type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr operator name operator name operator operator name operator literal type char then expr literal type number else expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr operator name operator name operator literal type number operator operator name operator name name index expr name operator name name index expr name operator name name index expr operator name operator literal type number operator operator name then block expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name return expr literal type number if condition expr name operator operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr ternary condition expr name name index expr name operator literal type char then expr literal type char else expr literal type char else block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number comment type line comment type line comment type line comment type line decl_stmt decl type name name init expr name while condition expr name operator name operator name block while condition expr name name index expr name operator name block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr name while condition expr operator name name index expr name operator name block type pseudo expr_stmt expr name operator expr_stmt expr name operator for control init decl type name name init expr name condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name if condition expr name operator name operator name operator name then block expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator literal type number else block expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator name operator ternary condition expr operator operator name operator literal type number operator operator call name argument_list argument expr name operator then expr literal type char else expr literal type char else block type pseudo expr_stmt expr name name index expr name operator name operator ternary condition expr name then expr literal type char else expr literal type char expr_stmt expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr ternary condition expr name name index expr name then expr name name index expr name else expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
