include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name index expr literal type number decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name name init expr name name index expr name index expr name expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr literal type number operator operator name operator name operator argument expr name return expr name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr operator call name argument_list argument expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name operator name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr literal type number operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr literal type number operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr literal type number operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr operator name name index expr name operator expr operator name name index expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number elseif if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr name decl type ref prev name init expr name name index expr name index expr literal type number decl_stmt decl type name name name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name then block decl_stmt decl type name name name init expr name name index expr name index expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
