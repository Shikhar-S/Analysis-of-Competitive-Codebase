pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name include directive file using namespace name define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value ifdef directive name include directive file else directive define directive macro name parameter_list parameter type modifier value endif directive decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator literal type number operator name operator operator name expr_stmt expr name operator literal type number expr_stmt expr name operator operator name operator literal type number operator name operator operator name return expr name function type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator name if condition expr name operator name then block expr_stmt expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator literal type number operator name operator operator name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator name name operator name operator name name operator name return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name operator literal type char return expr name decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name init expr name name index expr name operator literal type number operator name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator operator literal type number incr expr name operator block if condition expr name operator operator operator name name index expr name operator name name index expr name operator literal type number operator operator name operator then block expr_stmt expr name operator name operator name break expr_stmt expr name operator operator name name index expr name operator name name index expr name operator literal type number operator expr_stmt expr name operator operator name name index expr name operator name name index expr name operator literal type number operator operator name if condition expr name operator operator operator name name index expr name operator name operator name name index expr name operator name operator literal type number operator operator name operator then block expr_stmt expr name operator name operator name break expr_stmt expr name operator operator name name index expr name operator name operator name name index expr name operator name operator literal type number operator operator name expr_stmt expr name operator operator name name index expr name operator name operator name name index expr name operator name operator literal type number operator if condition expr name operator literal type number then block type pseudo break expr_stmt expr name operator call name argument_list argument expr literal type number argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block comment type line expr_stmt expr call name argument_list if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type string 
