include directive file using namespace name define directive macro name value decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name name index expr name operator literal type number init expr block expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name name index expr literal type number expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr name operator literal type number while condition expr literal type number block comment type line if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator literal type number if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator literal type number if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator name operator name name index expr name operator call name argument_list operator literal type number then block type pseudo break decl_stmt decl type name name for control init decl type name name init expr name name index expr name operator call name argument_list condition expr name operator name name index expr name operator call name argument_list incr expr name operator block if condition expr name name index expr operator name operator literal type number then block expr_stmt expr name name index expr operator name operator literal type number expr_stmt expr name operator operator name expr_stmt expr name operator name comment type line return expr name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number expr_stmt expr name operator name decl_stmt decl type name name name index expr name operator literal type number init expr block expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator comment type line if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name if condition expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name if condition expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name if condition expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name if condition expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name if condition expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name operator literal type string for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string 
