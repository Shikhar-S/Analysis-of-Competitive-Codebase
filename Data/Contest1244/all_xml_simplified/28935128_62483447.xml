include directive file using namespace name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number comment type line comment type line comment type line comment type line decl_stmt decl type name name name index expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block decl_stmt decl type name ifndef directive name name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator if condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number then block expr_stmt expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator literal type string operator name return expr literal type number else block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name return expr literal type number 
