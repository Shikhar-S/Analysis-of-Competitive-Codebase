include directive file define directive macro name value pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name define directive macro name value using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr operator name name index expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name argument expr name name for control init decl type name name range expr name block type pseudo expr_stmt expr name name index expr name operator decl_stmt decl type name name init expr name name index expr literal type number decl type ref prev name init expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr name name index expr name decl type ref prev name init expr name name index expr name while condition expr literal type boolean block if condition expr name operator name then block expr_stmt expr name operator literal type string return expr literal type number if condition expr name operator name operator name operator name then block expr_stmt expr name operator name operator name operator literal type string return expr literal type number if condition expr name operator name then block decl_stmt decl type name name init expr operator call name name operator name argument_list argument expr name comment type line decl_stmt decl type name name init expr name operator name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name name index expr name else block expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name operator literal type string return expr literal type number else block decl_stmt decl type name name init expr operator call name name operator name argument_list argument expr operator name expr_stmt expr name operator operator literal type number comment type line decl_stmt decl type name name init expr name operator name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name name index expr name else block expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name operator literal type string return expr literal type number return expr literal type number 
