include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr ternary condition expr name operator literal type number then expr name else expr name operator literal type number decl_stmt decl type name name init expr ternary condition expr name operator name then expr literal type number else expr name operator literal type number decl_stmt decl type name name init expr operator name name index expr name operator literal type char operator operator operator name name index expr name operator literal type char operator operator operator name name index expr name operator literal type char operator expr_stmt expr name name index expr name operator ternary condition expr name operator literal type number then expr literal type char else expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name comment type line decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr ternary condition expr name operator name then expr literal type number else expr name operator literal type number if condition expr name name index expr name then block type pseudo return expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr ternary condition expr name operator literal type number then expr name else expr name operator literal type number if condition expr name name index expr name then block type pseudo return expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr ternary condition expr name operator literal type number then expr name else expr name operator literal type number decl_stmt decl type name name init expr ternary condition expr name operator name then expr literal type number else expr name operator literal type number decl_stmt decl type name name init expr operator name name index expr name operator literal type char operator operator operator name name index expr name operator literal type char operator operator operator name name index expr name operator literal type char operator expr_stmt expr name name index expr name operator operator name name index expr name operator operator ternary condition expr name operator literal type number then expr literal type char else expr literal type char operator operator decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name if condition expr operator name then block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number return for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo continue if condition expr name name index expr name operator name operator name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name name index expr name elseif if condition expr name name index expr name operator name operator name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name name index expr name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char operator literal type char expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name name index expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr name operator literal type number comment type line expr_stmt expr call name argument_list return expr literal type number 
