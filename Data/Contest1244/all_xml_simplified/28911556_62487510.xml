comment type block include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name name decl_stmt decl type name name argument_list argument expr name block operator operator define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr literal type number block expr_stmt expr name name index expr name operator name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name block macro name argument_list argument argument block expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name operator name operator literal type string macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number operator literal type number operator literal type string function type name name parameter_list parameter decl type name name parameter decl type name name block macro name argument_list argument argument block expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name operator name operator literal type string macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number operator literal type number operator literal type string function type name name parameter_list block expr_stmt expr name operator name macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number index expr literal type number macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number index expr literal type number macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number index expr literal type number macro name argument_list argument argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block if condition expr name name index expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name operator literal type number if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name operator operator literal type number return expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block expr_stmt expr name operator name name index expr name name index expr name index expr name expr_stmt expr name operator name name index expr name name index expr name index expr operator name operator literal type number operator operator literal type number expr_stmt expr name operator name name index expr name name index expr name index expr operator name operator literal type number operator operator literal type number expr_stmt expr name operator name name index expr name name index expr name index expr name expr_stmt expr name operator name name index expr name name index expr name index expr operator name operator literal type number operator operator literal type number expr_stmt expr name operator name name index expr name name index expr name index expr operator name operator literal type number operator operator literal type number expr_stmt expr name operator expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number decl_stmt decl type name name init expr name expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type number argument expr name return if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type number argument expr name return if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type number argument expr name return if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type number argument expr name return if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type number argument expr name return if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type number argument expr name return function type name name parameter_list block function type name name parameter_list block expr_stmt expr call name argument_list expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name else directive endif directive decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list 
