include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number using namespace name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name function specifier type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr literal type char operator name operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name function specifier type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr literal type char operator name operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr name function type name name parameter_list block ifndef directive name decl_stmt decl type name name init expr call name argument_list expr_stmt expr name endif directive decl_stmt decl type name name init expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr literal type number index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr literal type number index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr literal type number index expr name operator call name argument_list decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type boolean if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr operator name then block expr_stmt expr name operator literal type string return expr literal type number else block expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number do block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator name name index expr operator name operator literal type number operator operator literal type number operator literal type number condition expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type char ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr call name argument_list operator name endif directive return expr literal type number 
