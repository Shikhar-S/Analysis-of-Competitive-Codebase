include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name typedef type name name name name name typedef type name name name name typedef type name name typedef type name name typedef type name name typedef type name name using namespace name using namespace name name operator name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name while condition expr literal type number block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean for control init decl type name name range expr name name index expr name block if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block expr_stmt expr name operator name expr_stmt expr name operator literal type boolean break if condition expr operator name then block break decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name init expr block expr block expr block expr literal type number expr literal type number expr literal type number expr block expr block expr literal type number expr literal type number expr literal type number expr block expr block expr literal type number expr literal type number expr literal type number expr block expr block expr literal type number expr literal type number expr literal type number expr block expr block expr literal type number expr literal type number expr literal type number expr block expr block expr literal type number expr literal type number expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name name index expr name index expr name return expr name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name block expr_stmt expr name name index expr name name index expr literal type number operator name name operator name expr_stmt expr name name index expr name name index expr literal type number operator name name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr block expr name name index expr name name index expr name operator literal type number expr name name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator name name index expr name return expr call name argument_list function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name comment type line comment type line comment type line decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr block expr operator literal type number expr operator literal type number decl_stmt decl type name name init expr operator literal type number for control init decl type name name range expr name block decl_stmt decl type name name init expr call name argument_list argument expr name name operator name if condition expr name operator operator literal type number operator name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name name operator name decl_stmt decl type name name init expr call name argument_list argument expr name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string return expr literal type number 
