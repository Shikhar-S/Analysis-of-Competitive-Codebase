include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value function type name name parameter_list block expr_stmt expr name ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name then block decl_stmt decl type name name init expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name while condition expr literal type number block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr operator literal type number for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr name operator name break comment type line if condition expr name operator operator literal type number then block type pseudo break expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator operator name operator literal type number operator operator literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name while condition expr literal type number block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr operator literal type number for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr name operator name break comment type line if condition expr name operator operator literal type number then block type pseudo break expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator operator name operator literal type number operator literal type number operator operator literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name empty_stmt for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type string else block type pseudo expr_stmt expr name operator operator literal type number return expr literal type number 
