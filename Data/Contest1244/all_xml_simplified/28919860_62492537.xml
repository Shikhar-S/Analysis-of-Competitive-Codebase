include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name using name init type name name decl_stmt decl type name name init expr literal type number define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type boolean function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type boolean decl type ref prev name init expr literal type boolean decl type ref prev name init expr literal type boolean for control init decl type name name range expr name name index expr name block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type boolean if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type boolean if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type boolean for control init decl type name name range expr name name index expr name block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type boolean if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type boolean if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type boolean if condition expr operator name then block return expr literal type number if condition expr operator name then block return expr literal type number return expr literal type number function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name range expr name name index expr name block if condition expr operator name operator literal type number operator name operator name name index expr name index expr literal type number operator operator name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name if condition expr operator name name index expr name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator name name index expr name index expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name function type name name parameter_list block comment type line decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name name index expr name operator call name argument_list operator literal type number operator name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block expr_stmt expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type boolean expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name name index expr name index expr literal type number operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name operator name name index expr name name index expr name index expr literal type number index expr name comment type line expr_stmt expr call name argument_list argument expr name comment type line if condition expr name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string return expr literal type number 
