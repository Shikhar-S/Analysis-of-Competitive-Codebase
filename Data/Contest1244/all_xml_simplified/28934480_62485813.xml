include directive file typedef type name name name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr call name argument_list argument expr name macro name argument_list argument argument block expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name macro name argument_list argument argument block expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name macro name argument_list argument argument block expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name decl_stmt decl type name name argument_list argument expr name argument expr literal type number decl_stmt decl type name name argument_list argument expr name argument expr literal type number macro name argument_list argument argument literal type number block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr operator name operator literal type number operator literal type number decl_stmt decl type name name macro name argument_list argument argument block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name then block decl_stmt decl type name name expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr literal type number expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr literal type number expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr literal type number expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr literal type number expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr literal type number expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name name index expr name operator name operator literal type number while condition expr literal type boolean block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name name index expr name operator name operator literal type number if condition expr name name index expr name operator literal type number then block type pseudo break decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr literal type number operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name macro name argument_list argument argument block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr ternary condition expr operator name operator name operator literal type number operator then expr literal type char else expr literal type char else block expr_stmt expr call name argument_list argument expr literal type string 
