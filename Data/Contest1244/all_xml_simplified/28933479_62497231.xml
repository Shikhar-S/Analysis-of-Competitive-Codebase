include directive file using namespace name define directive macro name value define directive macro name value function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name decl_stmt decl type name name argument_list argument expr name operator name argument expr name name argument_list argument expr operator name operator name operator block expr name operator name return expr literal type boolean return expr literal type boolean macro name argument_list argument argument block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value comment type line format doxygen decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr name operator literal type number if condition expr name then block type pseudo macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator literal type number operator name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator operator ternary condition expr operator name name index expr name operator then expr literal type char else expr literal type char operator expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name return expr name operator name function name parameter_list block comment type line comment type line expr_stmt expr name operator name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name operator literal type char macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr ternary condition expr name operator name then expr name operator literal type number else expr literal type number decl_stmt decl type name name init expr ternary condition expr literal type number operator name then expr name operator literal type number else expr name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator expr name operator literal type number if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name name index expr name else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator name name index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr literal type boolean operator name operator name operator name operator name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator literal type number operator name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator operator ternary condition expr name then expr literal type char else expr literal type char operator 
