include directive file using namespace name pragma directive name name name literal name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name index expr literal type number decl type ref prev name name index expr name decl type ref prev name name index expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name name index expr name operator name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name operator name operator name argument expr name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name index expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name then block expr_stmt expr name operator name if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number decl_stmt decl type name name init expr literal type number if condition expr call name argument_list argument expr name name index expr name operator literal type number then block macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name operator name operator name operator name operator name then block type pseudo continue decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name operator call name argument_list argument expr name name index expr name index expr literal type number argument expr name argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name name index expr name index expr literal type number argument expr name argument expr name argument expr name expr_stmt expr name name index expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr sizeof argument_list argument expr name operator expr name operator name else block macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name operator call name argument_list argument expr name name index expr name index expr literal type number argument expr name argument expr name argument expr name expr_stmt expr name name index expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr sizeof argument_list argument expr name operator expr name operator name expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator literal type char expr_stmt expr name operator name return expr literal type number 
