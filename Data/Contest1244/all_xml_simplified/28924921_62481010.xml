comment type block format doxygen include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name function specifier type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr name name index expr name operator name operator name name index expr name return expr name function specifier type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator operator name operator name operator literal type number operator return expr name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name expr_stmt expr name operator name name index expr name operator name name index expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name while condition expr name name index expr name operator name name index expr name operator literal type number block type pseudo expr_stmt expr operator name while condition expr name name index expr name operator name name index expr name operator literal type number block type pseudo expr_stmt expr operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number while condition expr name operator name operator name block if condition expr name operator operator name operator name operator literal type number operator then block decl_stmt decl type name name init expr name name index expr name operator literal type number operator name name index expr name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name expr_stmt expr operator name else block expr_stmt expr name name index expr name operator name operator name break else block decl_stmt decl type name name init expr name name index expr name operator name name index expr name operator literal type number if condition expr name operator name operator operator name operator name operator literal type number operator then block expr_stmt expr name operator name operator operator name operator name operator literal type number operator expr_stmt expr operator name else block expr_stmt expr name name index expr name operator name operator operator name operator name operator literal type number operator break continue expr_stmt expr operator name if condition expr name operator name then block type pseudo break if condition expr name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr operator name decl_stmt decl type name name init expr name while condition expr name name index expr name operator name name index expr name operator name operator name block type pseudo expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name operator call name argument_list argument expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr operator name decl_stmt decl type name name init expr name while condition expr name name index expr name operator name name index expr name operator name operator name block type pseudo expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name name index expr name return expr literal type number 
