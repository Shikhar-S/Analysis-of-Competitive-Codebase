include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block return expr name name index expr name operator operator ternary condition expr name operator name name index expr name then expr name else expr call name argument_list argument expr name name index expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr operator name operator literal type number operator operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr operator name operator literal type number operator operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr call name argument_list argument expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr block expr name expr literal type number expr name name index expr name operator literal type char while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name operator name decl_stmt decl type name name init expr name name operator name operator name decl_stmt decl type name name init expr name name operator name if condition expr name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name if condition expr call name argument_list argument expr name operator call name argument_list argument expr operator name operator literal type number operator operator name then block expr_stmt expr call name name operator name argument_list argument expr block expr block expr operator name operator literal type number operator operator name expr name expr name else block expr_stmt expr call name name operator name argument_list argument expr block expr block expr operator name operator literal type number operator operator name expr name operator literal type number expr name if condition expr call name argument_list argument expr name operator call name argument_list argument expr operator name operator literal type number operator name operator operator name then block expr_stmt expr call name name operator name argument_list argument expr block expr block expr operator name operator literal type number operator name operator operator name expr name expr name else block expr_stmt expr call name name operator name argument_list argument expr block expr block expr operator name operator literal type number operator name operator operator name expr name operator literal type number expr name decl_stmt decl type name name name index init expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block type pseudo continue if condition expr name name index expr name operator name then block expr_stmt expr name name index expr name operator literal type char operator name name index expr name else block decl_stmt decl type name name init expr operator name name index expr literal type number operator name name index expr name operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name 
