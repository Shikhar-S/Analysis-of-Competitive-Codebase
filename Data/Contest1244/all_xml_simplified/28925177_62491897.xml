include directive file using namespace name namespace name block define directive macro name value define directive macro name value comment type line decl_stmt decl type name name init expr literal type number function specifier type name name parameter_list block decl_stmt decl specifier type name name name index expr name modifier decl type ref prev name init expr name operator name modifier decl type ref prev name init expr name operator name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator call name argument_list argument expr name argument expr literal type number argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator literal type number return expr operator literal type number return expr operator name operator function specifier type name name parameter_list parameter decl type name name block return expr name operator literal type char operator name operator literal type char operator name operator literal type char operator name operator literal type char function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list expr_stmt expr name operator literal type number for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo empty_stmt if condition expr name then block type pseudo return expr literal type boolean if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number operator expr name operator call name argument_list for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char if condition expr name then block type pseudo expr_stmt expr name operator operator name return expr literal type boolean function specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list expr_stmt expr name operator literal type number for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo empty_stmt if condition expr name then block type pseudo return expr literal type boolean if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number operator expr name operator call name argument_list for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char if condition expr name operator literal type char then block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator call name argument_list for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator literal type number operator expr name operator name operator operator name operator literal type char operator if condition expr name then block type pseudo expr_stmt expr name operator operator name return expr literal type boolean function specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr call name argument_list for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo empty_stmt if condition expr name then block type pseudo return expr literal type boolean for control init condition expr operator call name argument_list argument expr name operator operator name incr expr name operator call name argument_list block type pseudo expr_stmt expr operator name operator operator name expr_stmt expr operator name operator literal type number return expr literal type boolean function specifier type name name parameter_list parameter decl type name modifier name block for control init expr name operator call name argument_list condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo empty_stmt if condition expr name then block expr_stmt expr name operator operator literal type number return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name modifier name parameter decl type name modifier modifier name block return expr call name argument_list argument expr name operator call name argument_list argument expr name operator undef directive name undef directive name empty_stmt comment type line using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name name index expr name index expr name name index expr operator name operator operator literal type number operator operator literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo continue else block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name name index expr operator name operator operator literal type number operator operator literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo continue else block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block comment type line comment type line expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr literal type number decl_stmt decl type name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break decl_stmt decl type name name init expr name do block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr literal type number operator name name index expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number condition expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
