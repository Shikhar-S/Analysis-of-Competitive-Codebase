include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr operator call name argument_list argument expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type number expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type name name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name decl type ref prev name init expr literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name init expr name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init decl type specifier name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block decl_stmt decl type name name init expr name name index expr name if condition expr name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator literal type number for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator name name index expr name index expr name expr_stmt expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name for control init decl type specifier name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block decl_stmt decl type name name init expr name name index expr name if condition expr name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator literal type number for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr name return function type name name parameter_list block expr_stmt expr name operator call name argument_list for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block for control init decl type specifier name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block decl_stmt decl type name name init expr name name index expr name for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name name index expr name index expr name operator name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number return expr literal type number 
