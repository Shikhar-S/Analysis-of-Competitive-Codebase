comment type block include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name using name init type name name name using name init type name name name using name init type name name name using name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name name decl_stmt decl type name name name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name name name index init expr block expr operator literal type number expr literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number expr literal type number expr operator literal type number decl_stmt decl type name name name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number expr literal type number expr operator literal type number expr operator literal type number function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name function specifier type name name parameter_list block expr_stmt expr name operator literal type string operator name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value comment type block function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr call name name argument_list type generic argument expr name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type boolean decl_stmt decl type name name init expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator name name index expr name index expr literal type number while condition expr literal type number block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo break if condition expr operator name name index expr name name index expr name index expr literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number else block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name argument_list type generic argument expr name name do block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name index expr name operator literal type number expr_stmt expr name operator name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name condition expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator name else block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type string return expr literal type number 
