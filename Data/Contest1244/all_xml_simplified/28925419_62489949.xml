include directive file define directive macro name value using namespace name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name name index expr name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name name index expr name expr_stmt expr name name index expr name operator name function specifier type name name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name name block return expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name function specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name expr_stmt expr name operator literal type number while condition expr name operator call name argument_list operator expr name operator literal type number block type pseudo empty_stmt do block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator condition expr name operator call name argument_list operator expr name operator literal type number return function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator return expr name operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr literal type number if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr literal type number return expr literal type number decl_stmt decl type name name name index expr name function specifier type name name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name init expr name name index expr name index expr name name index expr literal type number operator name name index expr name index expr name name index expr literal type number expr_stmt expr name name index expr name name index expr literal type number operator name expr_stmt expr name name index expr name name index expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name name index expr name name index expr name operator literal type number argument expr name name index expr name name index expr name operator literal type number expr_stmt expr name operator name name index expr name name index expr name name index expr name index expr name name index expr name return expr name decl_stmt decl type name name function type name name parameter_list block comment type line expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr name for control init decl type name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name if condition expr operator call name argument_list then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name name init expr literal type number decl type ref prev name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name then block decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name operator expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number return expr literal type number 
