include directive file include directive file include directive file include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number operator literal type string return expr literal type number decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break decl_stmt decl type name name init expr name name index expr name operator call name argument_list decl_stmt decl type name name name name init expr call name name name argument_list type generic argument expr name name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr operator literal type number expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr name decl_stmt decl type name name name name init expr name name index expr name index expr name expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name name index expr name operator name operator name name index expr name then block type pseudo expr_stmt expr name operator expr_stmt expr name operator name name index expr name index expr name name index expr name for control init decl type name name range expr name name index expr call name name operator name argument_list block if condition expr operator name name index expr name then block if condition expr operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr call name name operator name argument_list if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type string for control init decl type name name range expr name block expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator literal type string 
