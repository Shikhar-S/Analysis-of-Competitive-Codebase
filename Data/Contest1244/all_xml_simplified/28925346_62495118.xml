include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file decl_stmt decl specifier type specifier name name init expr literal type number using name init type name name using name init type name using namespace name decl_stmt decl template parameter_list parameter type name name specifier type name name init expr call name operator name name argument_list type generic argument expr name operator name argument_list operator literal type number operator literal type number operator literal type number function template parameter_list parameter type name name parameter type name name type name name argument_list type generic argument expr name name parameter_list parameter decl type name name parameter decl type specifier name modifier name block return expr call name name argument_list type generic argument expr name argument_list argument expr cast type static argument_list type generic argument expr name argument_list argument expr name argument expr name function template parameter_list parameter type name parameter type modifier name parameter type name name type name name parameter_list parameter decl type name name parameter decl type name modifier name block return expr call name name argument_list type generic argument expr decltype argument_list argument expr call name argument_list argument expr name operator argument_list argument expr cast type static argument_list type generic argument expr name argument_list argument expr name argument expr call name argument_list argument expr name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block expr_stmt expr name operator operator ternary condition expr name operator name then expr name else expr name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block expr_stmt expr name operator operator ternary condition expr name operator name then expr name else expr name operator function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name name block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator name name index expr name return expr name operator literal type string function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr literal type number name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number elseif if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number decl type ref prev name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name operator for control init expr name operator name operator name name index expr name block if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr name name argument_list type generic argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr literal type number argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name do block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name condition expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
