include directive file using namespace name define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number operator literal type number function type name name parameter_list block comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name operator lambda capture argument modifier parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name decl_stmt decl type name name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name name index expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr operator name name index expr name then block expr_stmt expr name operator name break expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr name operator if condition expr name operator literal type number then block return expr literal type boolean for control init decl type name name range expr name name index expr name block if condition expr name operator name then block if condition expr operator call name argument_list argument expr name argument expr name then block return expr literal type boolean return expr literal type boolean decl_stmt decl type name name init expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr literal type number operator name if condition expr operator name operator name name index expr literal type number operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block continue expr_stmt expr name operator name name index expr name index expr literal type number decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name operator name operator name then block expr_stmt expr name operator name break decl_stmt decl type name name init expr literal type boolean expr_stmt expr name name index expr literal type number operator name if condition expr operator call name argument_list argument expr name argument expr literal type number then block expr_stmt expr name operator literal type boolean if condition expr operator name operator name name index expr literal type number operator call name argument_list operator literal type number then block expr_stmt expr name name index expr literal type number operator name if condition expr operator call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number then block expr_stmt expr name operator literal type boolean if condition expr operator name then block expr_stmt expr name operator literal type string return expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator expr name operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number if condition expr operator name operator name name index expr literal type number operator call name argument_list operator literal type number then block expr_stmt expr name name index expr literal type number operator name expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr literal type number expr_stmt expr name operator name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type number operator literal type string expr_stmt expr name operator literal type string return expr literal type number 
