pragma directive name include directive file using namespace name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator name operator operator name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value pragma directive name decl_stmt decl type name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list argument expr literal type number argument expr call name argument_list argument expr name macro name argument_list argument expr_stmt expr name operator name name index expr literal type number index expr name macro name argument_list argument expr_stmt expr name operator name name index expr literal type number index expr name macro name argument_list argument expr_stmt expr name operator name name index expr literal type number index expr name expr_stmt expr name operator call name argument_list argument expr name macro name argument_list argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator name if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number operator name operator name operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr literal type number decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name init expr operator name operator name operator name decl_stmt decl type name name decl_stmt decl type name name argument_list argument expr block expr literal type number expr literal type number argument expr block expr literal type number expr literal type number argument expr block expr literal type number expr literal type number argument expr block expr literal type number expr literal type number argument expr block expr literal type number expr literal type number argument expr block expr literal type number expr literal type number for control init decl type name name range expr name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr name name operator name macro name argument_list argument block expr_stmt expr name operator name name index expr name index expr name name index expr name expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr name operator call name argument_list argument expr operator name operator name name operator name operator argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name macro name argument_list argument expr_stmt expr name operator operator name name index expr name operator literal type number operator operator literal type string 
