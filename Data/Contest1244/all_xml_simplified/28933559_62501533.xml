include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name define directive macro name value comment type block using namespace name function_decl type name name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name name function_decl type name name name parameter_list parameter decl type name name parameter decl type name name function_decl type name name parameter_list parameter decl type name name parameter decl type name name function_decl type name name parameter_list function_decl type name name parameter_list function_decl type name name parameter_list parameter decl type name name parameter decl type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr name operator literal type number function_decl type name name argument_list type generic argument expr name name parameter_list parameter decl type name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name expr_stmt expr name name index expr literal type number operator name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name name index expr name operator name operator call name name operator name argument_list expr_stmt expr name operator decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name operator literal type number operator name comment type line comment type line decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name name index expr name operator name name index expr name operator literal type number if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator name operator operator name name index expr name operator name operator comment type line if condition expr name operator name then block type pseudo return expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name name index expr name operator name operator call name name operator name argument_list decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name operator literal type number operator name comment type line comment type line decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator operator name name index expr name operator name operator operator name name index expr name operator literal type number if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator name operator operator name name index expr name operator comment type line if condition expr name operator name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list block decl_stmt decl type name comment type line comment type line name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number comment type line while condition expr name operator name block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr call name argument_list argument expr name argument expr name argument expr name then block expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number else block type pseudo expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator name return expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name operator name operator literal type number operator name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr operator name name index expr name operator name operator name name index expr name operator operator name expr_stmt expr name operator operator name operator call name argument_list argument expr name argument expr name operator operator name return expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name function type name name parameter_list block expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name operator operator name function type name name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name name init expr literal type number expr_stmt expr name operator name operator name while condition expr name operator literal type number block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator name operator operator name return expr name function type name name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number return expr operator name operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block if condition expr name operator name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr name argument expr name decl_stmt decl type name name init expr name expr_stmt expr name operator name expr_stmt expr name operator name operator name operator operator name operator name operator function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name 
