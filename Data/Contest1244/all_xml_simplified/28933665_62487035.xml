include directive file using namespace name comment type line define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name parameter type modifier value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type modifier value define directive macro name parameter_list parameter type name value ifndef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier endif directive comment type line function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number function type name name parameter_list block expr_stmt expr name operator literal type char function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator literal type char operator name expr_stmt expr call name argument_list argument expr name operator comment type line struct name block public type default constructor name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl name comment type line typedef type name name name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name index expr name operator literal type number operator name name index expr name index expr name operator name name index expr name index expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name function type name name parameter_list block expr_stmt expr name operator name macro name argument_list argument argument literal type number macro name argument_list argument argument expr_stmt expr name operator name name index expr name index expr name macro name argument_list argument argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number decl_stmt decl type name name init expr name name index expr literal type number operator call name argument_list expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr name operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr name operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr name operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr name operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr name operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr operator literal type number macro name argument_list argument argument literal type number block expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name name index expr literal type number block if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name for control init decl type name name range expr name name index expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number macro name argument_list argument argument expr_stmt expr name operator name name index expr name name index expr name index expr name index expr name if condition expr call name argument_list argument expr name argument expr name then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name operator literal type string macro name argument_list argument argument block expr_stmt expr name operator name name index expr name index expr name operator literal type number operator operator ternary condition expr name operator name operator literal type number then expr literal type string else expr literal type string operator 
