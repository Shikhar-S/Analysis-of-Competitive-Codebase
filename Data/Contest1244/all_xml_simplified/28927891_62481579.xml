pragma directive name name name name name pragma directive name name name name name include directive file define directive macro name value define directive macro name parameter_list value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value using namespace name define directive macro name value function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type char for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type number operator expr name operator call name argument_list block type pseudo empty_stmt return expr name operator name define directive macro name value decl_stmt decl type name name name index expr literal type number index expr name decl type ref prev name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr literal type number operator name operator expr name name index expr literal type number operator name macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name return expr name function type name name parameter_list block expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name index expr name operator call name argument_list macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator operator expr name name index expr name operator macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number break decl_stmt decl type name name init expr operator literal type number operator literal type number operator macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name then block if condition expr call name argument_list argument expr name argument expr name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name name index expr name operator name name index expr name expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
