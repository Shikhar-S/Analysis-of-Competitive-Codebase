include directive file using namespace name define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo break decl_stmt decl type name name init expr name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name modifier name init expr name name index expr name index expr name expr_stmt expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr name operator name name index expr name index expr name operator name name index expr name index expr name decl_stmt decl type name name name index expr literal type number init expr block expr name expr name decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator name decl_stmt decl type name name init expr literal type number while condition expr literal type boolean block decl_stmt decl type name name init expr literal type number operator literal type number operator literal type number operator name name index expr literal type number operator name name index expr literal type number expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name operator if condition expr name operator name then block type pseudo break expr_stmt expr name name index expr literal type number operator name name index expr literal type number expr_stmt expr name name index expr literal type number operator name decl_stmt decl type name name init expr name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator name expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name init expr operator call name argument_list argument expr operator name name index expr literal type number index expr literal type number argument expr operator name name index expr literal type number index expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name index expr name operator name then block type pseudo continue expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name operator name operator literal type number decl_stmt decl type name name name index expr literal type number init expr block expr name expr name decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator name decl_stmt decl type name name init expr literal type number while condition expr name operator name block decl_stmt decl type name name init expr literal type number operator literal type number operator literal type number operator name name index expr literal type number operator name name index expr literal type number expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator if condition expr name operator name then block type pseudo break expr_stmt expr name name index expr literal type number operator name name index expr literal type number expr_stmt expr name name index expr literal type number operator name decl_stmt decl type name name init expr name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list return expr literal type number 
