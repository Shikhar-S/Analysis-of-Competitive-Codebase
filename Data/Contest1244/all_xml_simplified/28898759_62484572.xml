include directive file using namespace name decl_stmt decl type name name decl_stmt decl type name name name decl type ref prev name name index expr literal type number decl_stmt decl type name name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name name index expr name expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr name operator else block type pseudo break for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr name operator else block type pseudo break while condition expr name operator literal type number operator name operator name block decl_stmt decl type name name init expr literal type number if condition expr name operator name then block decl_stmt decl type name name name init expr name name index expr name operator name name index expr name operator literal type number decl_stmt decl type name name name init expr call name argument_list argument expr name operator name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type number else block decl_stmt decl type name name name init expr name name index expr name operator literal type number operator name name index expr name decl_stmt decl type name name name init expr call name argument_list argument expr name operator name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type number if condition expr name then block type pseudo break comment type line for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr name operator else block type pseudo break for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator expr_stmt expr name operator else block type pseudo break expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name return expr literal type number 
