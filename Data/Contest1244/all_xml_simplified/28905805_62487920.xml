include directive file using namespace name define directive macro name value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name decl_stmt decl type name name name index expr literal type number index expr name operator literal type number for control init expr name operator literal type number condition expr name operator literal type number incr expr name operator block for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number for control init expr name operator literal type number condition expr name operator name operator literal type number incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo break if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator name then block expr_stmt expr name operator operator literal type number return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator name decl_stmt decl type name name init expr name expr_stmt expr name name index expr literal type number operator name name index expr name index expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name for control init expr name operator literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name index expr name if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type number operator name expr_stmt expr name operator name comment type line comment type line decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type number elseif if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type number else block type pseudo expr_stmt expr name operator literal type number decl_stmt decl type name name name index init expr block expr name expr name expr name decl_stmt decl type name name init expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr operator name operator literal type number operator operator literal type number expr_stmt expr name operator name name index expr name index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name for control init expr name operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr name operator literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr operator name operator literal type number operator operator literal type number comment type line expr_stmt expr name name index expr name name index expr name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type string 
