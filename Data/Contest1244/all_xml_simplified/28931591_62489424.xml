include directive file define directive macro name value define directive macro name value define directive macro name value using namespace name function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name init expr literal type number block for control init condition expr name incr expr name operator literal type number operator expr name operator literal type number operator name operator name operator name block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number operator name operator name operator name return expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr ternary condition expr name name index expr name then expr literal type char else expr literal type char expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name operator name name index expr name operator name operator name operator operator literal type char operator name name index expr name operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator name name index expr name operator literal type number then block expr_stmt expr name operator operator name operator literal type number operator operator name break if condition expr name operator operator literal type number then block if condition expr name operator literal type number then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name argument_list expr_stmt expr name operator literal type number for control init decl type name name init expr name decl type ref prev name condition expr name operator name operator name incr expr name operator name block for control init expr name operator name condition expr name name index expr name operator name name index expr name incr expr name operator block type pseudo empty_stmt expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator while condition expr name operator name operator name operator name name index expr name operator literal type number operator name name index expr name block type pseudo expr_stmt expr name operator comment type line comment type line expr_stmt expr name name index expr name operator name name index expr literal type number operator name expr_stmt expr name name index expr name operator name name index expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr operator name name index expr name operator name name index expr name operator literal type number operator operator literal type number for control init decl type name name init expr name name index expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator name operator name name index expr name name index expr name elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator name operator literal type number for control init decl type name name init expr name name index expr name operator literal type number operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number operator name operator name then block expr_stmt expr name name index expr name operator name operator name name index expr name name index expr name operator literal type number elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr call name argument_list return expr literal type number 
