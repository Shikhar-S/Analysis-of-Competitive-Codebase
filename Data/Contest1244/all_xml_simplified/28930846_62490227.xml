include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block return expr literal type boolean return expr literal type boolean decl_stmt decl type name name name init expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name name block expr_stmt expr name name index expr name operator name operator literal type number operator literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block decl_stmt decl type name name init expr name name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr name operator name name index expr name index expr name operator literal type number operator literal type number if condition expr name name index expr name operator literal type number operator name operator name then block comment type line comment type line comment type line comment type line if condition expr name operator name name index expr name index expr name operator literal type number operator literal type number operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name operator name name index expr name index expr name operator literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name name block expr_stmt expr name name index expr name operator name operator literal type number operator literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block decl_stmt decl type name name init expr name name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr name operator name operator literal type number operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr name operator name name index expr name index expr name operator literal type number operator literal type number if condition expr name name index expr name operator literal type number operator name operator name then block comment type line comment type line comment type line comment type line if condition expr name operator name name index expr name index expr name operator literal type number operator literal type number operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name operator name name index expr name index expr name operator literal type number operator literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name if condition expr call name argument_list argument expr name then block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name break for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr ternary condition expr name operator name then expr literal type char else expr literal type char else block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
