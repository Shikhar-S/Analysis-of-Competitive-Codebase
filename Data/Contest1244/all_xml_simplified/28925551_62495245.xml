include directive file pragma directive name name name name name using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name name function type name name parameter_list block expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr name name index expr name operator literal type number operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr name argument expr name operator name argument expr name name index expr name operator name expr_stmt expr name name index expr name name index expr name operator expr_stmt expr name operator literal type number operator expr name operator name operator literal type number expr_stmt expr name operator name name index expr name operator literal type number operator name name index expr literal type number while condition expr name operator name operator name block if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name name init expr literal type number operator name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr name operator literal type number operator name name index expr name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name name index expr name operator literal type number operator name name index expr name expr_stmt expr name operator continue else block expr_stmt expr name operator name operator name name index expr name break else block decl_stmt decl type name name name init expr literal type number operator name name index expr name operator operator name name index expr name operator name name index expr name operator literal type number operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr name operator literal type number operator name name index expr name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name name index expr name operator name name index expr name operator literal type number expr_stmt expr name operator continue else block expr_stmt expr name operator name operator name name index expr name break expr_stmt expr call name argument_list argument expr literal type string argument expr name return expr literal type number 
