comment type block comment type line include directive file using namespace name typedef type name name name typedef type name name name name typedef type name name name define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function type name name parameter_list parameter decl type name modifier name parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name comment type line comment type line comment type line function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr operator name operator name operator operator operator name operator name operator operator operator name operator name operator operator operator name operator name operator function type name name parameter_list parameter decl type name modifier name parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator literal type string function type name name parameter_list block decl_stmt decl type name name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name decl_stmt decl type name name init expr name name index expr literal type number decl type ref prev name init expr name name index expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr literal type number while condition expr literal type number block while condition expr name operator name operator name name index expr name operator name block type pseudo expr_stmt expr name operator while condition expr name operator literal type number operator name name index expr name operator name block type pseudo expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name operator name if condition expr name operator name operator name operator literal type number then block if condition expr name operator name then block type pseudo break decl_stmt decl type name name init expr call name argument_list argument expr name operator name argument expr name name index expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name else block if condition expr name operator name operator name operator literal type number then block type pseudo break decl_stmt decl type name name init expr call name argument_list argument expr name operator operator name operator name operator literal type number operator argument expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr name operator name operator operator name operator name operator literal type number operator expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name operator name if condition expr name operator name operator literal type number then block expr_stmt expr name operator literal type number break expr_stmt expr name operator name operator name return expr literal type number 
