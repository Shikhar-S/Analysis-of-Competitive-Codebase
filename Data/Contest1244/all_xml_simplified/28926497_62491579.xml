include directive file using namespace name typedef type name name typedef type name name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr operator literal type number operator literal type number operator decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator operator expr name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name break decl_stmt decl type name name argument_list argument expr name decl type ref prev name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name index expr name index expr literal type number operator name operator name operator name name index expr name index expr name decl_stmt decl type name name init expr operator name operator name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name name index expr name index expr name then block expr_stmt expr name operator name operator expr name operator name name index expr name index expr name break expr_stmt expr name name index expr name operator name decl_stmt decl type name name argument_list argument expr name decl type ref prev name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name operator name operator name name index expr name index expr name index expr name then block type pseudo expr_stmt expr name operator name name index expr name index expr name index expr name operator expr name operator name operator expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr name name index expr name operator name operator expr name name index expr name name index expr name operator name for control init expr name operator name name index expr name name index expr name condition expr name incr expr name operator name name index expr name block expr_stmt expr name name index expr name operator literal type number operator name operator name expr_stmt expr name operator name operator expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number return expr literal type number 
