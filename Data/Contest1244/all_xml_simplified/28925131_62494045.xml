comment type line include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value function type name name parameter_list parameter decl type name name block expr_stmt expr name operator name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator name function type name name parameter_list parameter decl type name name name block expr_stmt expr name operator name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator name function type name name parameter_list parameter decl type name name name block expr_stmt expr name operator name function type name name parameter_list parameter decl type name name name name block expr_stmt expr name operator name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator name function type name name parameter_list parameter decl type name name name block expr_stmt expr name operator name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator literal type char operator name operator literal type char function type name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator literal type char operator name operator literal type char function type name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator literal type char operator name operator literal type char function type name name parameter_list parameter decl type name name block expr_stmt expr name operator operator ternary condition expr name then expr literal type string else expr literal type string operator function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator literal type char expr_stmt expr call name argument_list argument expr name name operator name expr_stmt expr name operator literal type char expr_stmt expr call name argument_list argument expr name name operator name expr_stmt expr name operator literal type char function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type char for control init expr name operator name operator name block type pseudo expr_stmt expr name operator operator ternary condition expr name operator then expr literal type string else expr literal type string operator operator expr call name argument_list argument expr name expr_stmt expr name operator literal type string function type name name parameter_list block expr_stmt expr name operator literal type string function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr name if condition expr sizeof type pack argument_list argument expr name then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr name operator ifndef directive name define directive macro name parameter_list parameter type name modifier value else directive define directive macro name parameter_list parameter type name modifier endif directive decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block if condition expr name name index expr name index expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name index expr name argument expr name return expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block comment type line decl_stmt decl type name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator literal type number block expr_stmt expr name operator name operator name name index expr name name index expr name index expr name operator literal type number comment type line if condition expr name operator literal type number operator call name name operator name argument_list then block expr_stmt expr name operator name operator name name index expr name name index expr name operator literal type number index expr name operator literal type number comment type line if condition expr name operator literal type number operator call name name operator name argument_list then block expr_stmt expr name operator name operator name name index expr name name index expr name operator literal type number index expr name operator literal type number comment type line comment type line return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator literal type number block expr_stmt expr name name index expr name name index expr name operator name if condition expr name operator literal type number operator call name name operator name argument_list then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number operator name if condition expr name operator literal type number operator call name name operator name argument_list then block type pseudo expr_stmt expr name name index expr name name index expr name operator literal type number operator name for control init expr name operator literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number expr_stmt expr call name argument_list argument expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name then block expr_stmt expr name operator operator literal type number operator name return expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo break expr_stmt expr call name argument_list argument expr name argument expr operator literal type number comment type line decl_stmt decl type name name init expr operator name operator name operator operator name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator name operator name if condition expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number elseif if condition expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number elseif if condition expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number elseif if condition expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number elseif if condition expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number else block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number 
