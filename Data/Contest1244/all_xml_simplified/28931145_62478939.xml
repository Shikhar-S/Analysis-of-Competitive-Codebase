include directive file define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name init expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name operator expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name name index expr name expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr operator name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name parameter_list block expr_stmt expr name operator operator expr name operator expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name function type name name parameter_list block expr_stmt expr name operator decl_stmt decl type name name name index expr literal type number index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list expr_stmt expr call name argument_list expr_stmt expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator operator literal type number operator name operator operator literal type number then block decl_stmt decl type name name init expr literal type boolean expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr name operator name name index expr name index expr name if condition expr name operator literal type boolean then block type pseudo expr_stmt expr call name argument_list for control init decl type name name init expr name name index expr name condition expr name operator operator literal type number incr expr name operator name name index expr name block if condition expr name name index expr name operator name then block type pseudo continue expr_stmt expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name argument expr name argument expr operator literal type number argument expr name argument expr name if condition expr operator name then block if condition expr name operator literal type boolean then block type pseudo expr_stmt expr call name argument_list if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name elseif if condition expr name operator operator literal type number then block if condition expr name operator name then block expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr name operator name name index expr name index expr name decl_stmt decl type name name init expr literal type boolean if condition expr name operator literal type boolean then block type pseudo expr_stmt expr call name argument_list for control init decl type name name init expr name name index expr name condition expr name operator operator literal type number incr expr name operator name name index expr name block if condition expr name name index expr name operator name then block type pseudo continue expr_stmt expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name argument expr name argument expr name argument expr name argument expr name if condition expr operator name then block if condition expr name operator literal type boolean then block type pseudo expr_stmt expr call name argument_list if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name else comment type line block if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr name operator name name index expr name index expr name decl_stmt decl type name name init expr literal type boolean if condition expr name operator literal type boolean then block type pseudo expr_stmt expr call name argument_list for control init decl type name name init expr name name index expr name condition expr name operator operator literal type number incr expr name operator name name index expr name block if condition expr name name index expr name operator name then block type pseudo continue expr_stmt expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name name index expr name argument expr name argument expr name argument expr name argument expr name if condition expr operator name then block if condition expr name operator literal type boolean then block type pseudo expr_stmt expr call name argument_list if condition expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr call name argument_list expr_stmt expr call name argument_list function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr operator literal type number argument expr literal type number break comment type line expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr ternary condition expr name operator name then expr literal type char else expr literal type char 
