include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name name name index expr name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name name name decl type ref prev name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr literal type number then block expr_stmt expr name operator expr_stmt expr name operator name if condition expr name name index expr name operator name name index expr name operator literal type number then block expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator name then block expr_stmt expr name operator literal type number return expr literal type number expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator name name index expr name operator literal type number comment type block while condition expr literal type boolean block comment type line if condition expr name operator name then block expr_stmt expr name operator literal type number return expr literal type number if condition expr name operator literal type number operator name operator name then block expr_stmt expr name operator name operator name return expr literal type number if condition expr name operator name then block decl_stmt decl type name name name name init expr name name index expr name operator literal type number decl_stmt decl type name name name name init expr name operator name name index expr name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name operator operator name operator name operator return expr literal type number else block expr_stmt expr name operator name operator name decl_stmt decl type name name name name init expr name while condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number operator name operator name block type pseudo expr_stmt expr name operator operator expr name operator expr_stmt expr name operator name name index expr name else block decl_stmt decl type name name name name init expr name name index expr name operator literal type number decl_stmt decl type name name name name init expr name name index expr name operator name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name operator operator name operator name operator return expr literal type number else block expr_stmt expr name operator name operator name decl_stmt decl type name name name name init expr name while condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number operator name operator name block type pseudo expr_stmt expr name operator operator expr name operator expr_stmt expr name operator name name index expr name 
