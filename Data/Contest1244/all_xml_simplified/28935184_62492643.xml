define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name decl type ref prev name name index expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator function template parameter_list parameter type name name type name name parameter_list block decl_stmt decl type name name argument_list argument expr literal type number decl type ref prev name argument_list argument expr literal type number decl_stmt decl type name name argument_list argument expr call name argument_list while condition expr operator call name argument_list argument expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block expr_stmt expr name operator name operator literal type number operator name operator literal type number expr_stmt expr name operator call name argument_list return expr name operator name function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr operator name operator literal type string operator operator call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr operator name operator literal type string operator operator call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name include directive file decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string endif directive expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name index expr name operator call name name argument_list type generic argument expr name argument_list macro name argument_list argument argument literal type number argument block decl_stmt decl type specifier name name argument_list argument expr call name name argument_list type generic argument expr name argument_list decl type ref prev name argument_list argument expr call name name argument_list type generic argument expr name argument_list expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number while condition expr name operator name block decl_stmt decl type name name init expr name name index expr name operator for control init decl type specifier name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block type pseudo if condition expr operator name name index expr name name index expr name then block type pseudo expr_stmt expr name name index expr name name index expr operator name operator name name index expr name operator name name index expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name name index expr name operator literal type number operator operator ternary condition expr name name index expr name operator literal type number operator literal type number then expr literal type number else expr literal type number operator operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr operator literal type number decl type ref prev name argument_list argument expr operator literal type number do block expr_stmt expr name operator decl_stmt decl type name name name argument_list argument expr literal type number macro name argument_list argument argument literal type number argument literal type number for control init decl type name name range expr name name index expr name name index expr name block type pseudo expr_stmt expr name operator name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name condition expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number macro name argument_list argument argument literal type number argument literal type number for control init decl type name name range expr name name index expr name name index expr name block type pseudo expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr ternary condition expr name operator name then expr literal type char else expr literal type char return expr literal type number return expr literal type number 
