include directive file using namespace name define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number operator literal type number function type name name parameter_list block comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator operator name name index expr name operator literal type char operator decl_stmt decl type name name name index expr name decl type ref prev name name index expr name expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr operator name operator literal type number operator operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr name operator name for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator operator literal type number then block expr_stmt expr name name index expr name operator name name index expr literal type number else block break expr_stmt expr name operator operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr operator name operator literal type number operator name operator operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator operator literal type number then block expr_stmt expr name name index expr name operator name name index expr name operator literal type number else block break if condition expr name name index expr literal type number operator operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name operator name name index expr name operator name then block decl_stmt decl type name name decl type ref prev name if condition expr name name index expr name operator name then block expr_stmt expr name operator name operator operator name operator name name index expr name operator else block expr_stmt expr name operator name name index expr name operator name if condition expr name name index expr name operator name then block expr_stmt expr name operator name operator operator name name index expr name operator name operator else block expr_stmt expr name operator name operator name name index expr name if condition expr call name argument_list argument expr name argument expr name operator name then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number else block if condition expr name operator name then block expr_stmt expr name name index expr name operator name name index expr name name index expr name else block expr_stmt expr name name index expr name operator name name index expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string expr_stmt expr name operator literal type string return expr literal type number 
