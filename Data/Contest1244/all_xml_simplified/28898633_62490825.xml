comment type block include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value include directive file include directive file typedef type name name name typedef type name name name using namespace name using namespace name function_decl template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type specifier name modifier name block return expr literal type char operator name operator literal type char function type name name parameter_list parameter decl type specifier name modifier name block return expr call name argument_list argument expr operator name operator name function type name name parameter_list parameter decl type name name block return expr operator ternary condition expr name then expr literal type string else expr literal type string operator function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name block decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr literal type string for control init decl type name name init expr literal type number condition expr name operator cast type static argument_list type generic argument expr name argument_list argument expr call name name operator name argument_list incr expr name operator block if condition expr operator name then block expr_stmt expr name operator literal type string expr_stmt expr name operator literal type boolean expr_stmt expr name operator call name argument_list argument expr name name index expr name expr_stmt expr name operator literal type string return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name name block decl_stmt decl type name name init expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator cast type static argument_list type generic argument expr name argument_list argument expr literal type char operator name name index expr name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr literal type string for control init decl type specifier specifier modifier name range expr name block if condition expr operator name then block expr_stmt expr name operator literal type string expr_stmt expr name operator literal type boolean expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator literal type string return expr name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr literal type string operator call name argument_list argument expr name name operator name operator literal type string operator call name argument_list argument expr name name operator name operator literal type string function type name name parameter_list block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator literal type string operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name operator ifdef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier endif directive typedef type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name argument expr name name decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block for control init decl type name name range expr name name index expr name block if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number break decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr block expr literal type number expr block expr literal type number expr literal type number argument expr block expr literal type number expr block expr literal type number expr literal type number argument expr block expr literal type number expr block expr literal type number expr literal type number argument expr block expr literal type number expr block expr literal type number expr literal type number argument expr block expr literal type number expr block expr literal type number expr literal type number argument expr block expr literal type number expr block expr literal type number expr literal type number decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name operator name elseif if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name operator name name operator name else block type pseudo expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name operator name name operator name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name name index expr name name index expr name operator name name index expr name operator name elseif if condition expr name operator literal type number operator literal type number then block expr_stmt expr name name index expr name name index expr name operator name name index expr name operator name name operator name else block type pseudo expr_stmt expr name name index expr name name index expr name operator name name index expr name operator name name operator name expr_stmt expr name operator name operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list expr_stmt expr call name argument_list return expr literal type number 
