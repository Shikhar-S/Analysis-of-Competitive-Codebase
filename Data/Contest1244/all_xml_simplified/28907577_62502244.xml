pragma directive name name name literal name include directive file using namespace name typedef type name name name function_decl type name name parameter_list ifdef directive name include directive file else directive define directive macro name parameter_list parameter type modifier value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean operator expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list endif directive decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator name name index expr name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator operator name operator literal type number operator operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator literal type string return for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator call name argument_list argument expr block expr literal type number expr name operator name name index expr name expr_stmt expr name name index expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator call name argument_list argument expr block expr name name index expr name expr name name index expr name expr_stmt expr name operator name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string index expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string index expr name operator name operator literal type number 
