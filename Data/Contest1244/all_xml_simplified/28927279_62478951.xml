define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block return macro name argument_list argument argument literal type number block if condition expr name operator operator literal type number operator name name index expr name operator name then block type pseudo continue if condition expr name operator operator literal type number operator name name index expr name operator name then block type pseudo continue expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr name operator name name index expr name index expr name if condition expr name operator name operator literal type number then block if condition expr name operator name then block expr_stmt expr name operator name macro name argument_list argument argument expr_stmt expr name name index expr name operator name name index expr name else block macro name argument_list argument argument block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator literal type number argument expr name operator name name index expr name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr literal type number operator name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr literal type number operator name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr literal type number operator name macro name argument_list argument argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator elseif if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator literal type string operator name return expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr operator literal type number argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator operator literal type number expr_stmt expr name operator name operator name macro name argument_list argument argument block expr_stmt expr name operator operator name name index expr name operator literal type number operator operator literal type string expr_stmt expr name operator name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive expr_stmt expr call name argument_list return expr literal type number 
