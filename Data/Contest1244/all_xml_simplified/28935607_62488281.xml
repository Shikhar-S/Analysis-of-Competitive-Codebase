comment type block pragma directive name name name literal name pragma directive name name name literal name comment type line include directive file include directive file include directive file using namespace name using namespace name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name define directive macro name parameter_list parameter type name value comment type line define directive macro name parameter_list parameter type name value comment type line define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number typedef type name name decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr name return expr call name argument_list argument expr name function_decl type name name parameter_list parameter decl type name name parameter decl type name name decl_stmt decl type name name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo return expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name operator name operator name then block expr_stmt expr call name name operator name argument_list argument expr name return expr name name index expr name index expr name name index expr name operator call name argument_list argument expr name argument expr name argument expr name operator literal type number function type name name parameter_list block expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr literal type number index expr name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr literal type number index expr name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr literal type number index expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name argument expr operator literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr operator name name index expr name then block type pseudo expr_stmt expr name operator literal type number if condition expr name then block expr_stmt expr name operator operator literal type number return else block decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number block macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name then block expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr literal type number operator name name index expr name index expr name name index expr literal type number operator name name index expr name index expr name name index expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name name index expr name operator name name index expr name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr name operator literal type string comment type block comment type block function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number comment type line comment type line while condition expr name operator block expr_stmt expr call name argument_list function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr name operator name if condition expr name operator literal type number then block type pseudo return expr operator operator call name argument_list argument expr operator name operator name operator operator name argument expr name operator literal type number operator name operator operator name operator operator name else block type pseudo return expr call name argument_list argument expr operator name operator name operator operator name argument expr name operator literal type number operator name comment type line 
