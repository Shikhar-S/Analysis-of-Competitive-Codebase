comment type line include directive file define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number typedef type name name name index expr name ifndef directive name define directive macro name parameter_list value endif directive decl_stmt decl type name name name index expr literal type number operator literal type number modifier decl type ref prev name init expr name modifier decl type ref prev name init expr name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char return expr name operator name decl_stmt decl type name name name index expr literal type number operator literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name init expr operator literal type number decl type ref prev name function specifier type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name operator literal type number argument expr name operator expr name operator operator literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name init expr literal type char block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr call name argument_list if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr operator name operator literal type number operator expr name operator operator name while condition expr name name index expr operator name operator name operator literal type number operator literal type number operator expr name operator literal type number block type pseudo empty_stmt while condition expr name name index expr operator name operator name name index expr name operator expr operator name block type pseudo empty_stmt expr_stmt expr name name index expr operator name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr literal type number decl_stmt decl type name name decl type ref prev name init expr literal type number decl type ref prev name decl_stmt decl type name name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator block expr name expr name name index expr name operator expr name name index expr name operator name operator expr operator name name index expr name expr_stmt expr name name index expr operator name operator block expr name expr name name index expr name operator expr name name index expr name operator name operator expr operator name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name name index expr name name index expr operator name operator literal type number operator operator literal type number operator literal type number index expr name operator expr operator name macro name argument_list argument if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name name index expr name name index expr operator name operator literal type number operator operator literal type number operator literal type number operator expr operator name macro name argument_list argument if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name index expr name operator call name argument_list macro name argument_list argument argument literal type number argument block decl_stmt decl type name name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name name index expr name operator literal type number then block type pseudo return expr operator call name argument_list argument expr literal type string if condition expr name name index expr name operator literal type number then block type pseudo return expr operator call name argument_list argument expr literal type string macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name break macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name do block expr_stmt expr name operator literal type number operator expr name operator literal type number operator expr call name argument_list argument expr name argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name name index expr name condition expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator expr name operator literal type number operator expr call name argument_list argument expr name argument expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name argument expr literal type char return expr call name argument_list operator expr literal type number 
