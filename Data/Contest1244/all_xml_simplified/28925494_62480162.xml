include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value using namespace name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator literal type number operator name operator name expr_stmt expr name operator name name index expr literal type number operator name operator name index expr name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name name index expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator operator name operator operator operator name operator expr name name index expr name operator operator expr_stmt expr name name index expr name operator name operator expr name name index expr name operator function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name decl type ref prev name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name operator name elseif if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block type pseudo expr_stmt expr name operator name name index expr name operator name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block type pseudo if condition expr name name index expr name operator name operator name then block type pseudo expr_stmt expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue expr_stmt expr name operator name name index expr name index expr name operator name name index expr name index expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name argument expr sizeof name expr_stmt expr name operator name operator expr name name index expr name operator name operator expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number return expr literal type number 
