include directive file define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr operator name operator name name index expr name operator expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator expr_stmt expr name operator name comment type line decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl_stmt decl type name name init expr name name index expr name decl type ref prev name init expr name name index expr name while condition expr name block if condition expr name operator name then block type pseudo break if condition expr name name index expr name operator name name index expr name then block if condition expr operator name name index expr name operator literal type number operator name name index expr name operator operator name name index expr name operator name then block type pseudo expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator expr name operator name name index expr name operator literal type number operator expr name operator operator name name index expr name operator literal type number operator name name index expr name operator operator name name index expr name operator expr name operator else block if condition expr operator name name index expr name operator name name index expr name operator literal type number operator operator name name index expr name operator name then block type pseudo expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator expr name operator name name index expr name operator literal type number operator expr name operator operator name name index expr name operator name name index expr name operator literal type number operator operator name name index expr name operator expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name return expr literal type number 
