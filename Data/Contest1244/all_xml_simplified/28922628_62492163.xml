include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value using namespace name decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number argument expr name if condition expr name operator literal type number operator literal type number then block return expr operator name operator name operator name operator operator name else block return expr operator name operator name operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block return expr name operator name return expr name operator name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number macro name argument_list argument literal type number argument block expr_stmt expr name operator name expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block expr_stmt expr name operator literal type number expr_stmt expr name operator return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type char expr_stmt expr name operator literal type number return expr name operator literal type number decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name operator name then block expr_stmt expr call name argument_list argument expr call name argument_list argument expr name operator name argument expr name argument expr literal type boolean elseif if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block while condition expr literal type number block if condition expr name operator literal type number operator literal type number operator name operator literal type number operator literal type number then block return expr literal type boolean else block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number if condition expr name operator literal type number operator name operator literal type number then block return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type specifier name modifier name name index block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number comment type line decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name name index expr literal type number index expr name macro name argument_list argument literal type number argument literal type number block expr_stmt expr name operator name name index expr literal type number index expr name macro name argument_list argument literal type number argument literal type number block expr_stmt expr name operator name name index expr literal type number index expr name macro name argument_list argument literal type number argument literal type number block expr_stmt expr name operator name name index expr literal type number index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name macro name argument_list argument literal type number argument block expr_stmt expr call name name operator name argument_list argument expr block decl_stmt decl type name name decl type ref prev name macro name argument_list argument literal type number argument literal type number block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name name index expr literal type number index expr literal type number init expr block expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number init expr block expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name macro name argument_list argument literal type number argument literal type number block comment type line macro name argument_list argument literal type number argument block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break while condition expr call name name operator name argument_list operator literal type number block expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator name name index expr name index expr literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name name index expr name index expr literal type number index expr name operator literal type number while condition expr operator call name name operator name argument_list block expr_stmt expr operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name name index expr operator call name argument_list incr expr name operator block if condition expr name name index expr operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number if condition expr call name name operator name argument_list argument expr name name index expr index expr name then block continue expr_stmt expr name name index expr name name index expr index expr name operator name name index expr name index expr operator operator name name index expr name index expr name name index expr operator literal type number expr_stmt expr operator literal type number empty_stmt comment type line comment type line comment type line expr_stmt expr name operator name name index expr name name index expr name index expr operator name name index expr name index expr name name index expr operator literal type number expr_stmt expr operator literal type number index expr name name index expr index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name name index expr index expr name expr_stmt expr call name name operator name argument_list argument expr name name index expr index expr name expr_stmt expr operator name operator name operator block expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr_stmt expr name operator name operator name macro name argument_list argument literal type number argument literal type number block if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name operator name name index expr name operator literal type number operator literal type number expr_stmt expr name operator name return expr literal type number 
