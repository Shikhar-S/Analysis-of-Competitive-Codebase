comment type block include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name name decl_stmt decl type name name argument_list argument expr name block operator operator define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr name block expr name expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr name block expr name expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name name index expr name operator name operator literal type char macro name argument_list argument argument expr_stmt expr name name index expr name operator operator name name index expr name operator name name index expr operator name operator literal type number operator operator name operator name name index expr name operator name name index expr operator name operator literal type number operator name operator operator name operator decl_stmt decl type name name init expr literal type number macro name argument_list argument argument expr_stmt expr name operator name name index expr name if condition expr name operator literal type number then block macro name argument_list argument argument block expr_stmt expr name operator operator ternary condition expr operator name name index expr name operator operator name operator literal type number operator operator operator literal type number then expr literal type char else expr literal type char operator return for control init decl type name name init expr literal type number condition expr name operator literal type number operator name incr expr operator name block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator block expr literal type number expr name name index expr name operator name if condition expr name then block if condition expr name name index expr name operator literal type number operator name operator name then block if condition expr name name index expr name operator literal type number operator name operator literal type number operator name name index expr name operator name then block expr_stmt expr name name index expr name operator name operator name name index expr name operator literal type number operator name operator literal type number expr_stmt expr name name index expr name operator name operator name name index expr name operator literal type number operator name for control init decl type name name init expr literal type number operator name operator literal type number condition expr name operator literal type number incr expr operator name block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator block expr literal type number expr name name index expr name operator name if condition expr name operator literal type number operator name operator literal type number then block if condition expr name name index expr name operator literal type number operator name operator name then block if condition expr name name index expr name operator literal type number operator name operator literal type number operator name name index expr name operator name then block expr_stmt expr name name index expr name operator name operator name name index expr name operator literal type number operator name operator literal type number expr_stmt expr name name index expr name operator name operator name name index expr name operator literal type number operator name macro name argument_list argument argument expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator name macro name argument_list argument argument expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator name macro name argument_list argument argument block if condition expr name name index expr name then block type pseudo expr_stmt expr name operator operator ternary condition expr name name index expr name operator literal type number then expr literal type char else expr literal type char operator else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name name operator name operator name then block type pseudo expr_stmt expr name operator operator ternary condition expr name name operator name operator literal type number then expr literal type char else expr literal type char operator else block expr_stmt expr name operator operator ternary condition expr operator operator name operator literal type number operator operator name name index expr name operator operator literal type number then expr literal type char else expr literal type char operator function type name name parameter_list block function type name name parameter_list block expr_stmt expr call name argument_list expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name else directive endif directive decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list 
