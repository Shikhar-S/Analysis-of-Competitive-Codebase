comment type line define directive macro name value using name init type name using name init type name ifdef directive name decl_stmt decl type specifier name name init expr literal type number else directive decl_stmt decl type specifier name name init expr operator literal type number endif directive include directive file using namespace name using namespace name if directive expr literal type number include directive file include directive file endif directive define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value if directive expr literal type number define directive macro name parameter_list parameter type modifier value function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name modifier name block expr_stmt expr name operator name name index expr name operator literal type string operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name modifier name parameter decl type name modifier modifier name block expr_stmt expr name operator name name index expr name operator literal type string operator name operator literal type string expr_stmt expr call name argument_list argument expr name argument expr name operator literal type number argument expr name argument expr name operator function template parameter_list parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier modifier name block decl_stmt decl type name name init expr literal type string decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr literal type string decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name block decl_stmt decl type name name init expr operator call name name operator name argument_list operator operator call name name operator name argument_list operator literal type char operator call name name operator name argument_list operator literal type char operator if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type char if condition expr name operator literal type char operator operator call name name operator name argument_list operator call name argument_list operator operator operator name operator call name name operator name argument_list operator call name argument_list operator literal type char operator operator then block type pseudo continue if condition expr call name name operator name argument_list operator name operator literal type char then block if condition expr operator call name name operator name argument_list operator call name argument_list operator call name name operator name argument_list operator call name argument_list operator literal type char then block type pseudo expr_stmt expr call name name operator name argument_list operator call name argument_list expr_stmt expr call name name operator name argument_list argument expr literal type string continue expr_stmt expr call name name operator name argument_list operator call name argument_list argument expr name if condition expr operator call name name operator name argument_list operator call name name operator name argument_list operator literal type char then block expr_stmt expr call name name operator name argument_list continue decl_stmt decl type name name init expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr name operator literal type number operator name operator literal type number if condition expr name operator name name operator name then block type pseudo continue if condition expr name operator call name name operator name argument_list operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name continue if condition expr call name name operator name argument_list then block if condition expr operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name continue if condition expr name then block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list continue if condition expr name then block if condition expr call name name operator name argument_list operator name name index expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list continue expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name argument expr name operator return expr call name name operator name argument_list struct template parameter_list parameter type template parameter_list parameter type name modifier name name parameter type name name parameter type name name name block public type default using name init type name name argument_list type generic argument expr name argument expr name argument expr name operator literal type number using name init type name name argument_list type generic argument expr name typename name operator name function template parameter_list parameter type name modifier name specifier type name name parameter_list parameter decl type name name parameter decl type specifier name name parameter decl type name modifier name block return expr call name argument_list argument expr name argument expr call name name operator name argument_list argument expr name argument expr name operator struct template parameter_list parameter type template parameter_list parameter type name modifier name name parameter type name name name name argument_list type generic argument expr name argument expr name argument expr literal type number block public type default using name init type name using name init type name name argument_list type generic argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type specifier name name block return expr call name argument_list argument expr name argument expr name decl_stmt decl template parameter_list parameter type name name parameter type name modifier name type name name argument_list argument expr name name argument expr name operator name name typename name name name name operator name decl type ref prev name modifier argument_list argument expr name decl type ref prev name operator name argument_list argument expr name operator name name operator name argument expr name argument expr sizeof type pack argument_list argument expr name operator call name operator name argument_list argument expr name argument expr name operator endif directive comment type block name name typename name name name argument_list argument_list argument expr name name argument expr name operator name argument expr name comment type block name name typename name decl type ref prev name typename name name modifier name name argument_list argument expr name operator name argument expr specifier name name argument_list type generic argument expr name argument expr name operator name argument_list argument expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string argument expr name comment type block name name typename name decl type ref prev name typename name name modifier name name argument_list argument expr name operator name argument expr specifier name name argument_list type generic argument expr name argument expr name operator name argument_list argument expr operator name name operator call name name operator name argument_list name operator call name name operator name argument_list operator name operator name operator operator ternary condition expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator operator operator name argument expr name comment type block name name typename name decl type ref prev name typename name name modifier name name argument_list argument expr name operator name argument expr specifier name name argument_list type generic argument expr name argument expr name operator name argument_list argument expr operator name name operator call name name operator name argument_list name operator call name name operator name argument_list operator name operator name operator operator ternary condition expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator operator operator name argument expr name comment type block name name typename name decl type ref prev name typename name decl type ref prev name typename name name modifier name name argument_list argument expr name operator name argument expr specifier name name argument_list type generic argument expr name argument expr name argument expr name operator name argument_list argument expr name operator literal type string argument expr operator name name operator call name name operator name argument_list name operator call name name operator name argument_list operator name operator name operator operator ternary condition expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator operator operator name argument expr name operator literal type string argument expr name comment type block name name typename name decl type ref prev name typename name decl type ref prev name typename name name modifier name name argument_list argument expr name operator name argument expr specifier name name argument_list type generic argument expr name argument expr name argument expr name operator name argument_list argument expr name operator literal type string argument expr operator name name operator call name name operator name argument_list name operator call name name operator name argument_list operator name operator name operator operator ternary condition expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator operator operator name argument expr name operator literal type string argument expr name comment type block name name typename name decl type ref prev name typename name decl type ref prev name typename name decl type ref prev name typename name name modifier name name argument_list argument expr name operator name argument expr specifier name name argument_list type generic argument expr name argument expr name argument expr name argument expr name operator name argument_list argument expr name operator literal type string argument expr operator name name operator call name name operator name argument_list name operator call name name operator name argument_list operator name operator name operator operator ternary condition expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator operator name name operator name operator literal type string operator name name operator name argument expr name operator literal type string argument expr name comment type block name name typename name decl type ref prev name typename name decl type ref prev name typename name decl type ref prev name typename name name modifier name name argument_list argument expr name operator name argument expr specifier name name argument_list type generic argument expr name argument expr name argument expr name argument expr name operator name argument_list argument expr name operator literal type string argument expr operator name name operator call name name operator name argument_list name operator call name name operator name argument_list operator name operator name operator operator ternary condition expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator operator name name operator name operator literal type string operator name name operator name argument expr name operator literal type string argument expr name comment type block name name typename name name modifier name name argument_list argument expr name operator name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr operator name name operator call name name operator name argument_list name operator call name name operator name argument_list operator name operator name operator operator name operator literal type string argument expr name name init expr name name using name init type name name using name init type name name name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name function type name name parameter_list block return expr call name argument_list argument expr call name name argument_list type generic argument expr name argument_list argument expr call name name operator name argument_list operator call name argument_list operator call name argument_list operator literal type number function type name name parameter_list parameter decl type name name block return expr operator name operator literal type number operator operator operator name operator literal type number operator function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator name then block type pseudo return expr name if condition expr call name argument_list argument expr name operator name then block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name while condition expr name block if condition expr operator name then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator name argument expr name expr_stmt expr name operator call name argument_list argument expr name operator name argument expr name expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl type specifier name name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type name name init expr ternary condition expr sizeof argument_list argument expr name operator sizeof argument_list argument expr name then expr call name argument_list argument expr name else expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type char function type name name parameter_list parameter decl type name name init expr literal type string parameter decl type name name init expr literal type string parameter decl type name name init expr literal type boolean block expr_stmt expr call name argument_list argument expr call name argument_list argument expr call name argument_list argument expr literal type number if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number macro name argument_list argument literal type number literal type string expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr literal type string argument expr name macro name argument_list argument literal type number literal type string expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr literal type string argument expr name comment type line function type name name parameter_list block expr_stmt expr call name argument_list comment type line decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr name if condition expr call name name operator name argument_list argument expr literal type char operator name name operator name then block decl_stmt decl type name name init expr block expr name expr operator name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator block expr call name argument_list argument expr name name operator name argument expr name macro name argument_list argument argument expr_stmt expr name operator call name argument_list argument expr block expr name expr name name operator name operator literal type number operator name name operator name operator literal type number expr name name operator name operator literal type number operator name operator name name operator name expr name name operator name operator literal type number operator name name operator name operator literal type number expr name name operator name operator literal type number operator name operator name name operator name expr name operator name name operator name operator name name operator name operator literal type number expr name operator name name operator name operator name operator name name operator name expr name operator name name operator name operator name name operator name operator literal type number expr name operator name name operator name operator name operator name name operator name expr_stmt expr name operator name operator name 
