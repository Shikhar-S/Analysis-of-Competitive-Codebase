include directive file define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value using namespace name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number typedef type name name name typedef type name name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name decl_stmt decl type name name init expr literal type boolean for control init expr name operator call name argument_list condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type char operator for control init expr name operator literal type number condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char if condition expr name then block type pseudo expr_stmt expr name operator operator name struct template parameter_list parameter type name name parameter type name name parameter type name name name block public type default define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name name index expr name expr_stmt expr name name index expr name name index expr name operator name operator name function type operator type name modifier name name parameter_list parameter decl type name name block return expr name name index expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name operator literal type number operator name name index expr name operator name name index expr name operator literal type number then block expr_stmt expr name name index expr operator name operator name name index expr name expr_stmt expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name while condition expr name operator name block if condition expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name then block type pseudo break if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr operator name operator name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr name operator literal type number operator name name index expr name expr_stmt expr name operator else block type pseudo expr_stmt expr name name index expr name operator name operator name name index expr name operator expr name operator operator name operator name name index expr name operator operator name name index expr name else block decl_stmt decl type name name init expr operator name operator name name index expr name operator operator name name index expr name operator name name index expr name operator literal type number operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr name operator literal type number operator name name index expr name expr_stmt expr name operator else block type pseudo expr_stmt expr name name index expr name operator name operator name name index expr name operator expr name operator operator name operator name name index expr name operator operator name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name name index expr name return expr literal type number 
