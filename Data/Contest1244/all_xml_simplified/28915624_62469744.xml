include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value comment type line define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list argument expr literal type number using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name init expr operator literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name if condition expr name operator literal type char then block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator operator literal type number then block expr_stmt expr name operator name operator literal type string continue decl_stmt decl type name name init expr name decl type ref prev name init expr name if condition expr name operator name then block expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name operator literal type number operator literal type number argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name operator name operator literal type number argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type string else block expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name operator literal type number operator literal type number argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr operator name operator name operator operator literal type number argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type string 
