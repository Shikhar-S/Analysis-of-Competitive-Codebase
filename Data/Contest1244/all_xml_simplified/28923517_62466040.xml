ifndef directive name pragma directive name name name literal name endif directive include directive file using namespace name comment type line ifdef directive name define directive macro name parameter_list parameter type name value else directive define directive macro name parameter_list parameter type name endif directive define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value using name init type name name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name argument expr name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr operator name name argument_list type generic argument expr literal type char operator name literal type char operator operator name operator literal type char block type pseudo expr_stmt expr name operator call name argument_list if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator call name argument_list operator expr name operator operator literal type number while condition expr literal type char operator name operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block if condition expr name operator literal type number then block type pseudo return expr literal type number operator name if condition expr name operator literal type number then block type pseudo return expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr operator name operator name operator operator name argument expr name operator literal type number argument expr name return expr operator name operator operator ternary condition expr name operator literal type number then expr name else expr literal type number operator operator operator name function type name name parameter_list block decl_stmt decl type name name argument_list argument expr call name argument_list argument expr name operator call name argument_list argument expr name call lambda name name argument_list type generic argument expr name block argument_list argument expr name operator call name argument_list argument expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name operator name operator name operator name operator name expr_stmt expr name operator operator name operator literal type number operator operator name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator name operator literal type number if condition expr name operator name operator name then block type pseudo expr_stmt expr name operator name name name operator name else block type pseudo expr_stmt expr name operator operator literal type number operator name return expr literal type number 
