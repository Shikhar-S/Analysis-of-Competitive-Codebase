include directive file define directive macro name value using namespace name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block expr_stmt expr name operator name name index expr name operator name if condition expr name operator name then block expr_stmt expr name operator operator literal type number continue else block type pseudo break expr_stmt expr name name index expr name index expr name index expr name operator literal type number operator name operator name if condition expr name operator operator literal type number then block type pseudo return expr name name index expr name name index expr name index expr name index expr name index expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name name index expr name index expr name index expr name argument expr name argument expr name operator name name index expr name name index expr name index expr name index expr name index expr name return expr name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block expr_stmt expr name operator name name index expr name operator name break decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block expr_stmt expr name operator name name index expr name operator name if condition expr name operator name then block type pseudo continue else block type pseudo break expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr name index expr name index expr name operator name operator expr name name index expr name index expr name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr name if condition expr name operator name operator name name index expr name index expr name operator name name index expr name index expr name then block expr_stmt expr name operator name operator expr name operator name expr_stmt expr name operator name operator name name index expr name index expr name operator name name index expr name index expr name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name index expr name operator literal type number operator literal type char expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator operator expr name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name return expr literal type number 
