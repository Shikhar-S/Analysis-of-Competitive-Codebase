include directive file using namespace name define directive macro name value decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name name name index expr literal type number index expr literal type number decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name name index expr name operator expr name name index expr name operator name operator expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr ternary condition expr name operator literal type number then expr name operator literal type number else expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name index expr literal type number operator name name index expr literal type number index expr name expr_stmt expr name name index expr name index expr literal type number operator name name index expr literal type number index expr name expr_stmt expr name name index expr name index expr literal type number operator name name index expr literal type number index expr name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name argument expr name argument expr name operator literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator operator expr name name index expr name operator expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator literal type number if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr operator name then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr literal type number operator expr name operator literal type number expr_stmt expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number expr_stmt expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number expr_stmt expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number expr_stmt expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number expr_stmt expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number expr_stmt expr name operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name if condition expr name operator name then block type pseudo expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name name index expr name return expr literal type number 
