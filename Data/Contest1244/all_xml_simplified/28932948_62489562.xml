include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean decl_stmt decl specifier type name name name init expr literal type number define directive macro name value define directive macro name parameter_list value decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number macro name argument_list argument argument literal type number macro name argument_list argument argument expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name macro name argument_list argument argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type number then block type pseudo continue else block expr_stmt expr name operator operator literal type number operator name return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number macro name argument_list argument argument literal type number macro name argument_list argument argument literal type number macro name argument_list argument argument literal type number expr_stmt expr name name index expr name index expr name index expr name operator name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name macro name argument_list argument argument literal type number expr_stmt expr name name index expr name index expr name index expr literal type number operator name name index expr name index expr name macro name argument_list argument argument literal type number block expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name if condition expr name name index expr name name index expr name index expr literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number else block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number macro name argument_list argument argument literal type number block macro name argument_list argument argument literal type number block macro name argument_list argument argument literal type number block if condition expr name operator name operator name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name index expr name index expr name argument expr name name index expr name index expr name index expr name operator name name index expr name index expr name expr_stmt expr name operator name decl_stmt decl type name name init expr name decl_stmt decl type name name decl type ref prev name macro name argument_list argument argument literal type number macro name argument_list argument argument literal type number block if condition expr call name argument_list argument expr name argument expr name name index expr name index expr name index expr name then block expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number decl_stmt decl type name name name index init expr block expr name expr name expr literal type number operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number block expr_stmt expr name name index expr name operator name name index expr name operator literal type number if condition expr name name index expr name name index expr name index expr literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number else block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name operator expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name operator name operator name macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type string index expr name operator literal type number operator call name name operator name argument_list 
