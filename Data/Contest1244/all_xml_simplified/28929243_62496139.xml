include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value using namespace name using namespace name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number function type name name parameter_list parameter decl type name name block decl_stmt decl type name name macro name argument_list argument argument literal type number argument block expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name for control init decl type name name range expr name block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator name argument expr name operator name decl_stmt decl type name name init expr name operator name operator operator ternary condition expr name then expr name name index expr name operator literal type number else expr literal type number operator decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator name argument expr name operator name operator name expr_stmt expr name operator operator name name index expr name operator operator name operator name operator operator operator name operator name operator operator if condition expr name operator name then block type pseudo return expr literal type number return expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name expr_stmt expr name name index expr literal type number operator name name index expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number operator literal type number while condition expr name operator name operator literal type number block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr call name argument_list argument expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name if condition expr call name argument_list argument expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name 
