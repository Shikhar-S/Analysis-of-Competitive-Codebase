comment type line include directive file define directive macro name value define directive macro name value using namespace name typedef type name name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr operator name operator literal type number operator name operator operator name operator name name index expr name operator name name index expr operator name operator literal type number operator operator name then block type pseudo return expr literal type number return expr literal type number function type name name parameter_list block decl_stmt decl type name name name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name if condition expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type number if condition expr call name argument_list then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name expr_stmt expr name operator operator ternary condition expr name then expr literal type char else expr literal type char operator expr_stmt expr call name argument_list argument expr literal type number for control init decl type name name init expr name condition expr name operator literal type number operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name expr_stmt expr name name index expr literal type number operator name operator literal type number operator literal type number for control init decl type name name init expr literal type number operator name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name name index expr operator name operator literal type number operator name operator operator name then block decl_stmt decl type name name init expr name operator name name index expr name operator literal type number if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name init expr name operator literal type number if condition expr operator name operator name operator literal type number operator operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator name operator name operator literal type number operator operator literal type number decl_stmt decl type name name init expr name operator literal type number while condition expr name operator name operator name block expr_stmt expr name operator expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator operator literal type number expr_stmt expr name name index expr name operator operator literal type number while condition expr name operator name operator name block expr_stmt expr name name index expr name operator operator name name index expr name expr_stmt expr name name index expr name operator operator name name index expr name expr_stmt expr name name index expr name operator operator literal type number expr_stmt expr name name index expr name operator operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator name operator name operator literal type number operator operator literal type number decl_stmt decl type name name init expr name operator literal type number while condition expr name operator name operator name block expr_stmt expr name operator expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator operator literal type number expr_stmt expr name name index expr name operator operator literal type number while condition expr name operator name operator name block expr_stmt expr name name index expr name operator operator name name index expr name expr_stmt expr name name index expr name operator operator name name index expr name expr_stmt expr name name index expr name operator operator literal type number expr_stmt expr name name index expr name operator operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator ternary condition expr name name index expr name then expr name name index expr name else expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name expr_stmt expr name operator operator ternary condition expr name then expr literal type char else expr literal type char operator return expr literal type number comment type block 
