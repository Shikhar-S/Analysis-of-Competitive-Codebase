include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type name name decl type ref prev name init expr name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name operator operator ternary condition expr name then expr literal type number else expr operator literal type number operator expr_stmt expr name operator operator name operator literal type number operator operator literal type number decl_stmt decl type name name init expr name name index expr name index expr name comment type line macro name argument_list argument argument block if condition expr name operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name index expr name macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument block if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number elseif if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr literal type number argument expr operator literal type number argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type string decl_stmt decl type name name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr name name index expr literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator name operator literal type number decl_stmt decl type name name init expr name operator operator ternary condition expr name then expr literal type number else expr operator literal type number operator expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name operator name if condition expr name operator name operator literal type number then block type pseudo break macro name argument_list argument argument block if condition expr name operator name then block type pseudo continue expr_stmt expr name operator name expr_stmt expr name operator name break macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator literal type string index expr name operator name operator literal type number return expr literal type number 
