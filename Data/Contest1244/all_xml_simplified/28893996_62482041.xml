include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr literal type number index expr literal type number index expr name decl_stmt decl type name name name index expr literal type number index expr literal type number index expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type specifier name name init expr call name argument_list decl type ref prev name init expr literal type number for control init condition expr name name argument_list type generic argument expr literal type char operator name literal type char incr expr name operator name operator expr name operator call name argument_list block type pseudo empty_stmt for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type number operator if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name index expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr name name index expr name operator call name argument_list argument expr name operator expr name name index expr name operator call name argument_list argument expr name expr_stmt expr operator name name index expr name operator expr operator name name index expr name if condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name argument expr literal type number break macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name index expr name index expr literal type number operator name name index expr name index expr name name index expr literal type number macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name index expr name index expr name operator literal type number then block macro name argument_list argument argument literal type number argument literal type number if condition expr name operator name operator name operator name then block if condition expr operator name name index expr name index expr name index expr name then block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name index expr name index expr name operator literal type number operator name name index expr name index expr name name index expr name operator expr name name index expr name index expr name index expr name operator call name argument_list argument expr name argument expr name elseif if condition expr name name index expr name index expr name index expr name operator name name index expr name index expr name index expr name operator literal type number operator name name index expr name index expr name name index expr name then block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name index expr name index expr name operator literal type number operator name name index expr name index expr name name index expr name operator expr name name index expr name index expr name index expr name operator call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name index expr name index expr name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name index expr name index expr name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr name break macro name argument_list argument argument argument literal type number block expr_stmt expr name name index expr name name index expr name operator name name operator name operator expr name operator name name index expr name name operator name index expr name name operator name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
