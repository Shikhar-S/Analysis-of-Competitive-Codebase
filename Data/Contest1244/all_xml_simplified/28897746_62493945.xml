include directive file comment type line using namespace name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name argument expr name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number operator call name argument_list argument expr literal type number define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number decl_stmt decl type name name name index expr literal type number init expr block expr operator literal type number expr operator literal type number expr operator literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr operator literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number expr operator literal type number expr literal type number expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr name else block type pseudo return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr name else block type pseudo return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name operator literal type number then block type pseudo return expr name if condition expr name operator name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name while condition expr name operator literal type number block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator literal type number function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator operator name operator literal type number operator expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number operator name operator name then block type pseudo return expr literal type number decl_stmt decl type name name init expr name name index expr name expr_stmt expr name operator name name index expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name name index expr name expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr name name index expr name expr_stmt expr name operator name name index expr name operator name expr_stmt expr name operator name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name name index expr name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator name name index expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr operator literal type number while condition expr name operator name operator literal type number block decl_stmt decl type name name init expr operator name operator name operator operator literal type number decl_stmt decl type name name init expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name operator call name name operator name argument_list decl_stmt decl type name name init expr operator name name index expr name operator literal type number operator name name index expr name operator operator name operator literal type number operator if condition expr name operator name then block expr_stmt expr name operator name name index expr name operator name name index expr name operator name operator operator name operator name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name operator call name name operator name argument_list decl_stmt decl type name name init expr operator name name index expr name operator name operator name expr_stmt expr name operator name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator operator name operator name operator literal type number operator expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name operator name 
