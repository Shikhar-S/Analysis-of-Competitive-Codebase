include directive file using namespace name comment type line define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type modifier value function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name block expr_stmt expr name operator name operator literal type string operator name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name parameter decl type name modifier modifier name block decl_stmt decl type specifier name modifier name init expr call name argument_list argument expr name operator literal type number argument expr literal type char expr_stmt expr call name name operator name argument_list argument expr name argument expr name operator name operator literal type string operator name operator literal type string expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator comment type line decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr operator literal type number expr_stmt expr name operator literal type string operator name macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator operator literal type number then block expr_stmt expr name operator name operator name return decl_stmt decl type name name init expr name operator call name argument_list argument expr name argument expr name operator name operator literal type number decl_stmt decl type name name init expr operator name operator name operator literal type number operator operator call name argument_list argument expr name argument expr name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name function type name name parameter_list block expr_stmt expr name ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list comment type line 
