include directive file using namespace name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value pragma directive name name name name name pragma directive name name name name name pragma directive name name name name name literal name literal name function specifier type name name parameter_list parameter decl type name block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name while condition expr name operator call name argument_list operator expr name name argument_list type generic argument expr literal type number operator name literal type number block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number do block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator condition expr name operator call name argument_list operator expr name operator literal type number operator name operator literal type number return expr ternary condition expr name then expr name else expr operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name specifier modifier name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name specifier modifier name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name index expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name if condition expr operator name then block type pseudo return if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type number return macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name name index expr name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr name name index expr name decl type ref prev name init expr name name index expr name name index expr name expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator name name index expr name expr_stmt expr name operator name name index expr name index expr name name index expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name name index expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name function type name name parameter_list block macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name name index expr name operator literal type number function type name name parameter_list block decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name operator name then block expr_stmt expr name operator name name index expr literal type number index expr name operator name name index expr name index expr name expr_stmt expr name name index expr literal type number operator name operator expr name name index expr name operator name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator literal type number then block type pseudo continue expr_stmt expr call name argument_list argument expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr name name index expr literal type number index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name operator name then block type pseudo macro name argument_list argument argument literal type number argument literal type number if condition expr name operator name operator name operator name then block expr_stmt expr name operator name name index expr literal type number index expr name operator name name index expr name index expr name operator name name index expr name index expr name expr_stmt expr name name index expr literal type number operator name operator expr name name index expr name operator name operator expr name name index expr name operator name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator literal type number then block type pseudo continue expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator literal type number then block type pseudo continue expr_stmt expr call name argument_list argument expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name index expr literal type number operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name index expr literal type number operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name index expr literal type number operator call name argument_list macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number if condition expr operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name name index expr literal type number operator call name argument_list operator literal type number then block type pseudo expr_stmt expr call name argument_list else block type pseudo expr_stmt expr call name argument_list return expr literal type number 
