include directive file using namespace name function type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator name for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name if condition expr operator name then block type pseudo return expr_stmt expr call name argument_list argument expr name operator literal type number operator expr call name argument_list argument expr name operator literal type number operator literal type number function type name name parameter_list parameter decl type name name block if condition expr operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type char else block type pseudo expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type char define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr call name argument_list argument expr name expr_stmt expr name operator name operator name operator operator name operator name operator literal type number operator operator expr name operator name operator name operator operator name operator name operator literal type number operator if condition expr name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name else block type pseudo expr_stmt expr call name argument_list argument expr operator literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name while condition expr name operator block type pseudo expr_stmt expr call name argument_list return expr literal type number 
