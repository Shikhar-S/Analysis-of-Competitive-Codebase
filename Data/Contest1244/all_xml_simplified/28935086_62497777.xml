include directive file using namespace name typedef type name name name name name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name name index expr name operator if condition expr name name index expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator expr_stmt expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name init expr name name index expr name operator name name index expr name while condition expr name operator literal type number block if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block decl_stmt decl type name name init expr name name index expr name operator literal type number operator name name index expr name if condition expr operator name operator name name index expr name name index expr name operator operator name then block expr_stmt expr name operator name operator operator name operator name name index expr name name index expr name operator expr_stmt expr name operator name operator name expr_stmt expr name name index expr name name index expr name operator literal type number operator name name index expr name name index expr name operator literal type number operator name name index expr name name index expr name expr_stmt expr name operator else block expr_stmt expr name operator name operator operator name operator name name index expr name name index expr name operator expr_stmt expr name operator literal type number else block decl_stmt decl type name name init expr name name index expr name operator name name index expr name operator literal type number if condition expr operator name operator name name index expr name name index expr name operator operator name then block expr_stmt expr name operator name operator operator name operator name name index expr name name index expr name operator expr_stmt expr name operator name operator name expr_stmt expr name name index expr name name index expr name operator literal type number operator name name index expr name name index expr name operator literal type number operator name name index expr name name index expr name expr_stmt expr name operator else block expr_stmt expr name operator name operator operator name operator name name index expr name name index expr name operator expr_stmt expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name return expr literal type number 
