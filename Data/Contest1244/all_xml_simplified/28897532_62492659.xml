include directive file using namespace name ifdef directive name define directive macro name parameter_list parameter type name value define directive macro name parameter_list value else directive define directive macro name parameter_list parameter type name define directive macro name parameter_list endif directive typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number expr_stmt expr name name index expr name operator literal type number operator name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name while condition expr name name index expr name operator name name index expr name operator name operator name block expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name name index expr name operator name operator literal type number expr_stmt expr name operator name operator name operator literal type number operator call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name name index expr name operator literal type number operator name name index expr name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator name break expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number else block expr_stmt expr name operator name name index expr name operator name operator literal type number operator name name index expr name operator name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator name break expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr name name index expr name operator name name index expr name return expr literal type number 
