include directive file define directive macro name value using namespace name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name decl_stmt decl type name name name name index expr name index expr literal type number define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr call name argument_list while condition expr operator call name argument_list argument expr name block type pseudo expr_stmt expr operator name operator literal type char operator operator operator name operator literal type boolean operator operator expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list if condition expr name then block type pseudo expr_stmt expr name operator operator name function specifier type name name parameter_list block decl_stmt decl specifier type name name return expr call name argument_list argument expr name operator expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name decl_stmt decl specifier type name name name index expr literal type number decl_stmt decl type name name init expr literal type number for control init expr name condition expr name operator literal type number incr expr name operator literal type number operator expr operator name block type pseudo expr_stmt expr name name index expr name operator name operator literal type number operator literal type char expr_stmt expr name name index expr name operator name operator literal type char for control init expr name condition expr operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name return function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name name index expr name operator expr name name index expr name operator name expr_stmt expr name name index expr name operator name operator expr operator name name index expr name return function type name name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number decl_stmt decl type name name name init expr name name index expr name index expr name name index expr name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block decl_stmt decl type name name init expr name name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block decl_stmt decl type name name init expr name name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number return function type name name parameter_list block expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name name index expr name index expr name decl_stmt decl type name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name argument expr name if condition expr name name index expr name operator literal type number operator name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name name init expr literal type number decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name operator name operator name operator name operator name then block type pseudo continue expr_stmt expr name name index expr literal type number operator name operator expr name name index expr literal type number operator name operator expr name name index expr literal type number operator name expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr literal type number operator name name index expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr ternary condition expr name operator name then expr literal type char else expr literal type char return expr literal type number 
