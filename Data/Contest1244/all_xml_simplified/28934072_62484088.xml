include directive file using namespace name using name init type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name parameter decl type name name argument_list type generic argument expr name argument expr name name block decl_stmt decl type name name init expr call name argument_list argument expr name name operator name operator name name operator name return expr name operator name name operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr block decl_stmt decl type name name init expr name while condition expr name operator literal type number operator name operator name name index expr name operator literal type number operator name name index expr name block type pseudo expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number while condition expr name block if condition expr operator name operator call name name operator name argument_list operator literal type number then block type pseudo break if condition expr name name index expr literal type number operator name operator name name index expr operator name operator call name name operator name argument_list operator literal type number operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr literal type number operator name operator name name index expr literal type number operator name operator name name index expr literal type number operator name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name decl_stmt decl type name name init expr name name index expr literal type number expr_stmt expr call name name operator name argument_list expr_stmt expr name name index expr literal type number operator name operator name name operator name else block decl_stmt decl type name name init expr operator name operator call name name operator name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator literal type number operator name operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number operator name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list operator name operator name name operator name while condition expr name block if condition expr name name index expr literal type number operator name operator name name index expr operator name operator call name name operator name argument_list operator literal type number operator name then block if condition expr name operator name name index expr literal type number operator name then block type pseudo break decl_stmt decl type name name init expr name operator name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name operator name expr_stmt expr name operator name operator name name index expr literal type number operator name else block if condition expr name operator call name name operator name argument_list operator name then block type pseudo break decl_stmt decl type name name init expr name operator call name name operator name argument_list operator name expr_stmt expr call name name operator name argument_list operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list operator name operator name name index expr literal type number operator name return expr literal type number 
