include directive file using namespace name ifndef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier value endif directive typedef type name name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number decl_stmt decl type name name init expr call name argument_list for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator name for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char expr_stmt expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr name operator literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator operator name operator literal type number operator operator name expr_stmt expr name operator literal type number expr_stmt expr name operator operator name operator name operator name operator operator name if condition expr name then block type pseudo expr_stmt expr name operator operator name operator name operator operator name return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr name else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator name argument expr name argument expr name expr_stmt expr name operator name operator name operator name return expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name decl_stmt decl type name name init expr name operator name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr operator call name argument_list argument expr name operator name argument expr name argument expr name operator name operator operator name decl_stmt decl type name name init expr operator name operator literal type number operator name operator name operator operator name if condition expr name operator name operator name operator name operator literal type number operator name operator literal type number operator literal type number operator name operator name operator literal type number operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name operator name argument expr operator name name operator name argument expr operator name name operator name operator operator name name operator name operator operator name name operator name else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
