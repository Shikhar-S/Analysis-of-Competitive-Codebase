include directive file using namespace name define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number operator name operator name expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name index expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name name index expr name index expr literal type number decl_stmt decl type name name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr name name index expr name index expr name operator name name index expr name index expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator name operator expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name name index expr name operator name operator expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number argument expr ternary condition expr name operator name then expr literal type char else expr literal type char 
