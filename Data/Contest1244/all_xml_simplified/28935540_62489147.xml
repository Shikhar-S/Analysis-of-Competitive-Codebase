include directive file using namespace name define directive macro name parameter_list parameter type name value namespace name block decl_stmt decl type specifier name name init expr operator literal type number operator literal type number operator operator literal type number decl_stmt decl type name name name index expr name modifier decl type ref prev name modifier decl type ref prev name decl type ref prev name name index expr name modifier decl type ref prev name init expr name modifier decl type ref prev name init expr name operator name operator literal type number decl type ref prev name decl type ref prev name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name define directive macro name parameter_list value function specifier type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name operator name argument expr name operator expr name operator name function specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator call name argument_list function specifier type name name parameter_list parameter decl type name name block expr_stmt expr operator name operator operator name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list function specifier type name name parameter_list parameter decl type specifier name modifier name block decl_stmt decl type name name init expr call name argument_list argument expr name for control init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name function specifier type name name parameter_list parameter decl type name modifier name block for control init expr name operator call name argument_list condition expr name name argument_list type generic argument expr literal type number operator name literal type number operator name operator literal type char incr block type pseudo expr_stmt expr name operator call name argument_list for control init condition expr name operator literal type number operator name operator literal type number operator name operator literal type char incr expr operator name operator expr name operator call name argument_list block type pseudo expr_stmt expr operator name operator name expr_stmt expr operator name operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number for control init expr name operator literal type number operator expr name operator call name argument_list condition expr operator name name argument_list type generic argument expr literal type char operator name literal type char operator operator operator name incr expr name operator call name argument_list block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator name operator name for control init expr name operator literal type number condition expr name operator literal type char operator name operator literal type char operator operator name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type number operator operator expr name operator name operator name expr_stmt expr name operator name return expr operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type char if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name while condition expr name block type pseudo expr_stmt expr name name index expr operator name operator name operator literal type number operator literal type char operator expr name operator literal type number while condition expr name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator struct name block public type default destructor name name parameter_list block expr_stmt expr call name argument_list decl name using name name operator name using name name operator name using name name operator name using name name operator name using name name operator name using name name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr operator name then expr name else expr call name argument_list argument expr name argument expr name operator name typedef type name name typedef type name name name typedef type name name comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line decl_stmt decl type specifier name name init expr literal type number function template parameter_list parameter type name name type specifier name name parameter_list parameter decl type name name block return expr ternary condition expr name operator name operator literal type number then expr name operator name else expr operator ternary condition expr name operator name then expr name operator name else expr name operator function template parameter_list parameter type name name type specifier name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name operator name decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string endif directive decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr call name argument_list argument expr name expr_stmt expr name operator name operator name operator expr name operator literal type number while condition expr name operator operator name operator name operator operator name operator name operator literal type number block decl_stmt decl type name name init expr name operator name operator name if condition expr name operator name operator literal type number then block expr_stmt expr name operator name operator name if condition expr name operator name operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number else block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr literal type char operator expr call name argument_list argument expr name operator expr call name argument_list argument expr literal type char operator expr call name argument_list argument expr name operator name operator name operator expr call name argument_list argument expr literal type char return expr literal type number expr_stmt expr operator name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
