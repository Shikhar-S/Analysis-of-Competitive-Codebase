include directive file using namespace name typedef type name name typedef type name name name typedef type name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean comment type line decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name decl type ref prev name argument_list argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name init expr block expr name expr name expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name name index expr name operator call name argument_list operator literal type number operator name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number operator literal type string return expr literal type number decl_stmt decl type name name init expr operator literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break if condition expr name operator operator literal type number then block expr_stmt expr name operator operator literal type number operator literal type string return expr operator literal type number decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number block macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name name index expr name index expr literal type number decl_stmt decl type name name init expr name name index expr name index expr name operator name name index expr name index expr name decl_stmt decl type name name argument_list argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name while condition expr name name index expr name operator call name argument_list operator literal type number block decl_stmt decl type name name init expr name name index expr name index expr literal type number if condition expr name operator name then block expr_stmt expr name operator name name index expr name index expr literal type number decl_stmt decl type name name init expr literal type number operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type string macro name argument_list argument argument literal type number argument block expr_stmt expr name operator operator ternary condition expr name operator literal type number then expr literal type string else expr literal type string operator operator name name index expr name operator literal type number expr_stmt expr name operator literal type string 
