include directive file using namespace name function type name name name parameter_list parameter decl type name name name parameter decl type name name name block if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name operator name argument expr name function type name name parameter_list block decl_stmt decl type name name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name if condition expr name operator name operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name name init expr operator literal type number decl_stmt decl type name name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr operator name operator name operator name operator operator name operator literal type number then block type pseudo expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr operator name operator name operator name operator operator name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator operator literal type number operator name operator operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number decl_stmt decl type name name name init expr name operator name operator name operator name operator name if condition expr name operator operator name operator name operator operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number expr_stmt expr name operator name operator name decl_stmt decl type name name name decl_stmt decl type name name name decl_stmt decl type name name name init expr name operator name operator name operator name operator name if condition expr name operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name else block decl_stmt decl type name name name init expr name operator operator name operator name operator if condition expr operator name operator name operator operator operator name operator name operator operator name then block expr_stmt expr name operator name operator name operator operator name operator name operator else block expr_stmt expr name operator name decl_stmt decl type name name name init expr operator name operator name operator operator operator name operator name operator decl_stmt decl type name name name init expr name operator name decl_stmt decl type name name name init expr name operator name operator name decl_stmt decl type name name name init expr name operator name operator name if condition expr name operator literal type number operator name operator literal type number operator name operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number expr_stmt expr name operator name operator literal type char operator name operator literal type char operator name operator name comment type line comment type line 
