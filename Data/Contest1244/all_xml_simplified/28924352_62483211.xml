comment type block include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name name argument_list argument expr literal type number argument expr call name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name argument expr operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name name decl type ref prev name expr_stmt expr name operator name for control init decl type name name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name for control init decl type name name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number elseif if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name decl_stmt decl type name name name init expr literal type number operator literal type number expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number do block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator operator literal type number expr_stmt expr name name index expr name operator name name index expr literal type number decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr name expr_stmt expr name operator name name index expr name name index expr literal type number index expr name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name name index expr name index expr literal type number operator operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name index expr literal type number argument expr name name index expr name index expr literal type number expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name operator name name index expr name name index expr name operator literal type number index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name condition expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr name operator name operator literal type char for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type number operator literal type char return expr literal type number 
