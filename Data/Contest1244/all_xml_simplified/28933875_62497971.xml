include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name index expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name macro name argument_list argument argument if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name index expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name operator expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number break decl_stmt decl type name name init expr name decl type ref prev name name index expr literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name operator name operator name operator name operator name then block type pseudo continue decl_stmt decl type name name name index expr literal type number init expr block expr name expr name expr name decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name name index expr name index expr name name index expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator name operator literal type string macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator literal type number operator literal type string return expr literal type number 
