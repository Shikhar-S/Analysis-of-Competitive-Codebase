include directive file using namespace name typedef type name name name define directive macro name value decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr operator name name index expr name then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name break decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name then block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr name name index expr name if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr name name index expr name if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr name name index expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name then block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr name name index expr name if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr name name index expr name if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator name if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator name if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number return expr literal type number 
