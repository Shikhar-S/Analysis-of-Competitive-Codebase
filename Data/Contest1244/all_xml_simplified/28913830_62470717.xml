include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr operator call name argument_list argument expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name operator name decl_stmt decl type name name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator block decl_stmt decl type name name init expr call name argument_list expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list operator literal type number incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator name operator literal type number break for control init decl type name name init expr call name name operator name argument_list operator literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator name operator literal type number break decl_stmt decl type name name init expr name if condition expr name then block expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator name operator literal type number operator operator literal type number if condition expr name then block expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator name operator name return expr literal type number 
