include directive file using namespace name typedef type name name name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name index expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name index expr name argument expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name name index expr name operator expr name operator name name index expr name name index expr name index expr name name index expr name operator expr name name index expr name name index expr name operator name name index expr name macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument literal type number if condition expr name operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name operator expr name operator name name index expr name index expr name name index expr name operator expr name name index expr name name index expr name operator name name index expr name return expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number do block decl_stmt decl type name name init expr call name argument_list argument expr literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name condition expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
