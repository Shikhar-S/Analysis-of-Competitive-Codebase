pragma directive name name name literal name include directive file using namespace name typedef type name name name function_decl type name name parameter_list ifdef directive name include directive file else directive define directive macro name parameter_list parameter type modifier value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean operator expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list endif directive decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator block expr name expr name name index expr name expr_stmt expr name name index expr name operator name operator expr_stmt expr name name index expr name operator block expr name expr name name index expr name expr_stmt expr name name index expr name operator name operator expr_stmt expr name name index expr name operator operator expr name name index expr name operator decl_stmt decl type specifier name name name index expr literal type number index expr literal type number init expr block expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr literal type number index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator name name index expr name name index expr name index expr name index expr name expr_stmt expr name name index expr name operator name name index expr name index expr name for control init decl type name name init expr name name index expr name condition expr operator name incr expr name operator name name index expr name operator name block if condition expr name name index expr name operator name operator name then block expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name argument expr operator name operator literal type number operator operator literal type number argument expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr operator name operator name expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator operator expr name operator expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name elseif if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type string return decl_stmt decl type name name init expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr literal type number argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type string expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr literal type number argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator operator name name index expr name operator literal type number operator operator literal type string index expr name operator name operator literal type number 
