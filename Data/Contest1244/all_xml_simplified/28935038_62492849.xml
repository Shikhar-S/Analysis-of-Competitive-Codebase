include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number operator literal type number decl_stmt decl type specifier name name init expr name operator operator name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name index expr name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block macro name argument_list argument argument literal type number argument block if condition expr name operator name operator name operator name then block type pseudo return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name index expr name index expr name operator name decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name index expr name macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument block if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr name operator operator literal type number operator name expr_stmt expr call name argument_list argument expr literal type number decl_stmt decl type name name init expr operator literal type number macro name argument_list argument argument literal type number argument block if condition expr call name argument_list argument expr name name index expr name operator literal type number then block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name argument expr operator literal type number macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr name name index expr name name index expr literal type number index expr name operator name name index expr name name index expr literal type number index expr name expr_stmt expr name name index expr literal type number index expr name index expr name operator call name argument_list argument expr name name index expr literal type number index expr name index expr name argument expr name macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name index expr name index expr name operator call name argument_list argument expr name name index expr name index expr name index expr name argument expr name name index expr name operator literal type number index expr name index expr name operator name name index expr name name index expr name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type number index expr name index expr name operator name name index expr name operator literal type number index expr name index expr name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name name index expr name operator literal type number index expr name index expr name operator name macro name argument_list argument argument argument literal type number block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number operator name decl_stmt decl type name name init expr operator literal type number macro name argument_list argument argument literal type number argument block if condition expr name operator name operator name operator name then block type pseudo continue if condition expr name name index expr name operator literal type number index expr name index expr name operator name name index expr name name index expr name index expr name operator name name index expr name index expr name index expr name then block expr_stmt expr name operator name comment type line expr_stmt expr name operator name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name name index expr name operator name name index expr name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator literal type number operator literal type string expr_stmt expr name operator name return expr literal type number 
