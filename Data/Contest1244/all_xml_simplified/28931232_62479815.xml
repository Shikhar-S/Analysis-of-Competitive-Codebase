include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name init expr name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name name index expr name then block type pseudo return expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator operator literal type number operator literal type number operator literal type number operator name operator name operator for control init decl type name name range expr name name index expr name block if condition expr name name index expr name operator literal type number then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr literal type number expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name name index expr name index expr name if condition expr name operator name then block expr_stmt expr name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator name name index expr name function name parameter_list block expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name index expr name macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr operator name operator expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name operator ternary condition expr operator name name index expr name index expr literal type number operator name operator then expr name name index expr name index expr literal type number else expr name name index expr name index expr literal type number if condition expr name then block expr_stmt expr name operator literal type string operator name operator literal type char operator name operator literal type char operator name operator literal type char expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator literal type char macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator literal type number operator literal type char 
