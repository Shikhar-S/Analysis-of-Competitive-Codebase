include directive file using namespace name define directive macro name value function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr operator name operator literal type number operator operator name operator name name index expr name operator name name index expr operator name operator literal type number operator name operator operator name then block type pseudo expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr operator name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block comment type line if condition expr operator name name index expr name operator name name index expr operator name operator literal type number operator operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name elseif if condition expr operator name name index expr name operator name name index expr operator name operator literal type number operator name operator operator name then block expr_stmt expr call name name operator name argument_list argument expr name comment type line comment type line decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name while condition expr name block decl_stmt decl type name name init expr call name name operator name argument_list decl type ref prev name init expr call name name operator name argument_list comment type line if condition expr name operator name operator literal type number then block break for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr operator name operator literal type number operator operator name comment type line expr_stmt expr name name index expr name operator literal type number if condition expr operator name name index expr operator name operator literal type number operator name operator operator name then block expr_stmt expr call name name operator name argument_list argument expr operator name operator literal type number operator name operator operator name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr operator name operator literal type number operator name operator operator name expr_stmt expr name name index expr name operator literal type number comment type line if condition expr operator name name index expr operator name operator literal type number operator operator name then block expr_stmt expr call name name operator name argument_list argument expr operator name operator literal type number operator operator name comment type line expr_stmt expr operator name comment type block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator name name index expr name else block if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type char if condition expr name name index expr name operator literal type char operator operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr name operator literal type char if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type char if condition expr name name index expr name operator literal type char operator operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr name operator literal type char function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list return expr literal type number 
