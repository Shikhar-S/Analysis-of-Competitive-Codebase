pragma directive name name name name literal name comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name pragma directive name name literal name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block type pseudo expr_stmt expr name operator operator name operator literal type char operator operator expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char operator expr name operator call name argument_list return expr name operator ternary condition expr name then expr operator name else expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type char else block type pseudo expr_stmt expr call name argument_list argument expr literal type char return if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr name operator operator name decl_stmt decl specifier type name name name index expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block type pseudo expr_stmt expr name name index expr name operator operator name operator literal type number operator literal type number operator expr name operator literal type number while condition expr name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr operator name if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type char else block type pseudo expr_stmt expr call name argument_list argument expr literal type char function type name name parameter_list parameter decl type name name block return expr name operator operator operator name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block return expr call name argument_list argument expr name argument expr call name argument_list argument expr name operator function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block return expr call name argument_list argument expr name argument expr call name argument_list argument expr name operator function type name name parameter_list block expr_stmt expr name operator literal type char function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block expr_stmt expr name operator name operator literal type string expr_stmt expr call name argument_list argument expr name operator define directive macro name parameter_list parameter type modifier value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number comment type line decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init condition expr name incr expr name operator literal type number operator expr name operator name operator name operator name block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name return expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name argument expr operator name decl_stmt decl type name name init expr name operator name decl_stmt decl type name name init expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator if condition expr name operator name then block type pseudo expr_stmt expr name operator if condition expr name operator name operator name then block expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name return expr literal type number 
