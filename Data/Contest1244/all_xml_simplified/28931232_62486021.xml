include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list block macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator operator name name index expr name operator name name index expr name operator literal type number operator operator name for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr operator name block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator operator name name index expr name operator literal type number operator name name index expr name operator operator operator name operator name operator literal type number operator function type name name parameter_list parameter decl type name name block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator literal type number operator expr name operator literal type number operator expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator name while condition expr name operator literal type number operator name name index expr name operator name block if condition expr name operator name operator literal type number then block expr_stmt expr name operator operator name name index expr name operator literal type number operator name name index expr name operator operator name expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name operator name name index expr name operator name if condition expr name operator name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator literal type number operator name operator name if condition expr name operator name then block type pseudo return expr literal type number expr_stmt expr name operator literal type number operator expr name operator literal type number operator expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator name while condition expr name operator name operator literal type number operator name name index expr name operator name block if condition expr name operator literal type number then block expr_stmt expr name operator operator name name index expr name operator name name index expr name operator literal type number operator operator name expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name operator name name index expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name operator name name index expr name operator literal type number operator name if condition expr name operator name then block type pseudo return expr literal type number return expr literal type number function name parameter_list block expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name expr_stmt expr call name argument_list decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr literal type number while condition expr name operator name operator literal type number block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr call name argument_list argument expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name operator literal type char 
