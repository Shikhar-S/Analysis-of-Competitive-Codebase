include directive file define directive macro name parameter_list parameter type name value using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name index expr literal type number decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name name index expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name name index expr name index expr literal type number function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name elseif if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr operator name then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr name name index expr name name index expr literal type number index expr name operator name name index expr name name index expr literal type number index expr name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number then block expr_stmt expr name operator name name index expr name name index expr name index expr name expr_stmt expr name name index expr name operator name break if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator expr name operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr name name index expr literal type number operator name operator expr name name index expr name name index expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name name index expr name operator name break expr_stmt expr name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator literal type string return expr literal type number 
