include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name name name index expr literal type number index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name name index expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number operator name return decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator name break decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr name for control init condition incr block expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type boolean break if condition expr operator name then block type pseudo break decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name operator name operator name operator name operator name operator name then block decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr name name index expr name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name index expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator name elseif if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name name index expr name name index expr name operator name else block type pseudo expr_stmt expr name name index expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name argument_list expr_stmt expr call name argument_list 
