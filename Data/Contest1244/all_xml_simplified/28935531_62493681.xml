define directive macro name value define directive macro name value include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr ternary condition expr name then expr operator name else expr name function template parameter_list parameter type name name specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr ternary condition expr name then expr operator name else expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name index expr literal type number index expr literal type number decl type ref prev name name index expr literal type number index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name name name index expr name index expr literal type number index expr literal type number decl type ref prev name init expr literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr operator name name index expr name expr_stmt expr name name index expr operator name operator operator name operator block expr name name index expr name expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name init expr literal type number block decl_stmt decl type name name for control init decl type specifier name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block expr_stmt expr name operator name name index expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr name operator name operator expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr call name argument_list while condition expr operator call name argument_list argument expr name operator operator call name argument_list argument expr name operator name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator expr name operator call name argument_list function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type string decl type ref prev name init expr literal type string for control init decl type specifier name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list operator literal type number else block type pseudo expr_stmt expr name operator name name index expr name for control init decl type specifier name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list operator literal type number else block type pseudo expr_stmt expr name operator name name index expr name for control init decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator call name name operator name argument_list operator name operator call name name operator name argument_list incr expr operator name operator expr operator name block type pseudo if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr operator name return expr name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr literal type number decl type ref prev name decl type ref prev name init expr name for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list for control init decl type specifier name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator call name argument_list operator expr name operator call name argument_list operator expr call name argument_list argument expr name argument expr name operator expr call name argument_list argument expr name argument expr name for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number elseif if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr name name index expr literal type number index expr name index expr name operator name name index expr name index expr name operator name name index expr name index expr name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name for control init decl type specifier name name init expr name name index expr name name index expr name decl type ref prev name init expr literal type number condition expr name operator name operator name incr expr name operator name name index expr name operator expr operator name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name then block type pseudo continue for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator name operator name operator name then block type pseudo continue expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name operator literal type number index expr name index expr name operator name name index expr name index expr name expr_stmt expr name name index expr name index expr name index expr name operator name for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name operator name operator name name index expr name index expr name index expr name operator name then block type pseudo expr_stmt expr name operator name name index expr name index expr name index expr name operator expr name operator name operator expr name operator name expr_stmt expr name name index expr name operator name operator expr call name argument_list argument expr literal type string argument expr name while condition expr name operator name operator literal type number block type pseudo expr_stmt expr name operator name name index expr name operator expr name operator name name index expr name index expr name index expr name operator expr name name index expr name operator name operator expr name operator name operator expr name operator name operator expr operator name for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number expr_stmt expr name 
