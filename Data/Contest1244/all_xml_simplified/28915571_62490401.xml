include directive file using namespace name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name name name index expr literal type number index expr literal type number decl_stmt decl type name name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name index expr name operator name name index expr name index expr literal type number operator name operator name expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr name expr_stmt expr name operator name expr_stmt expr name operator literal type number operator name operator name decl_stmt decl type name name init expr name name index expr name index expr literal type number if condition expr name name index expr name name index expr name index expr literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name operator name if condition expr name operator name name index expr name index expr name then block expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator literal type number operator name operator name expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator name expr_stmt expr name operator name name index expr name decl_stmt decl type name name init expr name name index expr name index expr literal type number if condition expr name name index expr name name index expr name index expr literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number expr_stmt expr name operator name expr_stmt expr name operator name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type string 
