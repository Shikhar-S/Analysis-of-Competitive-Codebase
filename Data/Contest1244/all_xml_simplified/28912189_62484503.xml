include directive file using namespace name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name value decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name name index expr name operator call name argument_list operator literal type number then block expr_stmt expr name operator operator literal type number expr_stmt expr call name argument_list argument expr literal type number if condition expr name name index expr name operator call name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name init expr name name index expr name index expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr operator name operator literal type number operator operator literal type number argument expr name return expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number for control init expr name operator literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name init expr block expr literal type number expr literal type number expr literal type number expr_stmt expr name operator block expr literal type number expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number do block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr call name argument_list argument expr name argument expr literal type number argument expr literal type number argument expr name argument expr name condition expr call name argument_list argument expr call name argument_list argument expr name expr_stmt expr name operator name name operator name operator literal type char expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr literal type number argument expr name name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type string return expr literal type number 
