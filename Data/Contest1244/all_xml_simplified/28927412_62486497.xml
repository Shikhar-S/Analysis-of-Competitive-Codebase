include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value typedef type name name argument_list type generic argument expr name name name typedef type name name argument_list type generic argument expr name name argument expr name name name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name operator literal type number for control init condition expr name incr expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name comment type line decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator name operator operator name function type name name parameter_list block comment type line expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name expr_stmt expr name operator literal type number operator name operator operator name operator name operator operator call name argument_list argument expr name argument expr name operator name expr_stmt expr name operator operator name operator name operator name operator name operator name operator if condition expr call name argument_list argument expr name argument expr name operator name operator literal type number operator call name argument_list argument expr name argument expr name operator name operator call name argument_list argument expr name operator name argument expr name operator literal type number then block comment type line else block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator operator name operator name operator operator literal type number block expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type boolean while condition expr literal type number block expr_stmt expr name operator comment type line if condition expr name operator literal type number operator name then block expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator literal type boolean else block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name operator operator name operator name operator expr_stmt expr name operator operator name operator name operator name operator operator name expr_stmt expr name operator name operator name operator name if condition expr name operator literal type number operator name operator literal type number operator name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name comment type line comment type line return expr literal type number elseif if condition expr name operator literal type number operator name operator literal type number then block break expr_stmt expr call name argument_list argument expr literal type string comment type line comment type line comment type line comment type line comment type line return expr literal type number 
