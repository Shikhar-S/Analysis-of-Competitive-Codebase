/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author ExplodingFreeze
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>
#define int long long
#define f(i,a,b) for(int i=(a);i<(b);i++)
const int MOD=1e9+7;
using pii=std::pair<int,int>;
//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); <-- PUT IN main()/solve()!

using namespace std;

int n,p,w,d;
const int steps=1e6;
class CTheFootballSeason {
public:
	void solve(std::istream& in, std::ostream& out) {
		in >> n >> p >> w >> d;
		if(n*w<p)
		{
			out << "-1\n";
			return;
		}
		int maxwins=p/w+(p%w!=0);
		int i=0,j=0;
		while(i<=min(steps,maxwins))
		{
			while(j<n&&((maxwins-i)*w)+(j*d)<p)
				j++;
			if(j>=n)
			{
				out << "-1\n";
				return;
			}
			if(((maxwins-i)*w)+(j*d)==p)
			{
				int wins=maxwins-i;
				int draws=j;
				out << wins << " " << draws << " " << n-wins-draws << "\n";
				return;
			}
			i++;
		}
		out << "-1\n";
		return;
	}
};


int32_t main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	CTheFootballSeason solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
