<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29179334_63006340.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;set&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ull</name></cpp:macro> <cpp:value>unsigned long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mp</name></cpp:macro> <cpp:value>make_pair</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name><init>=<expr><literal type="number">1e5</literal><operator>+</operator><literal type="number">5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>inf</name><init>=<expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name>mod</name><init>=<expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<comment type="line">//bool p[maxn][maxn];</comment>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
<comment type="line">//ll ans=0;</comment>
<comment type="line">//inline void dfs(int x,int y){</comment>
<comment type="line">//    if(y&gt;m){</comment>
<comment type="line">//        ans++;</comment>
<comment type="line" format="doxygen">////        for(int i=1;i&lt;=n;i++){</comment>
<comment type="line" format="doxygen">////            for(int j=1;j&lt;=m;j++){</comment>
<comment type="line" format="doxygen">////                cout&lt;&lt;p[i][j]&lt;&lt;" ";</comment>
<comment type="line" format="doxygen">////            }</comment>
<comment type="line" format="doxygen">////            puts("");</comment>
<comment type="line" format="doxygen">////        }</comment>
<comment type="line" format="doxygen">////        puts("-------------");</comment>
<comment type="line">//        return ;</comment>
<comment type="line">//    }</comment>
<comment type="line">//</comment>
<comment type="line" format="doxygen">////    cout&lt;&lt;"x="&lt;&lt;x&lt;&lt;"  y="&lt;&lt;y&lt;&lt;endl;</comment>
<comment type="line" format="doxygen">////</comment>
<comment type="line" format="doxygen">////    for(int i=1;i&lt;=n;i++){</comment>
<comment type="line" format="doxygen">////            for(int j=1;j&lt;=m;j++){</comment>
<comment type="line" format="doxygen">////                cout&lt;&lt;p[i][j]&lt;&lt;" ";</comment>
<comment type="line" format="doxygen">////            }</comment>
<comment type="line" format="doxygen">////            puts("");</comment>
<comment type="line" format="doxygen">////        }</comment>
<comment type="line" format="doxygen">////    puts("*************");</comment>
<comment type="line">//</comment>
<comment type="line">//    int ax,ay;</comment>
<comment type="line">//    if(x&gt;1 &amp;&amp; y&gt;1){</comment>
<comment type="line">//        if(p[x-1][y]&amp;&amp;p[x][y-1]){</comment>
<comment type="line">//            if(x==n){</comment>
<comment type="line">//                ax=1,ay=y+1;</comment>
<comment type="line">//            }</comment>
<comment type="line">//            else{</comment>
<comment type="line">//                ax=x+1,ay=y;</comment>
<comment type="line">//            }</comment>
<comment type="line">//            for(int i=0;i&lt;1;i++){</comment>
<comment type="line">//                p[x][y]=i;</comment>
<comment type="line">//                dfs(ax,ay);</comment>
<comment type="line">//                p[x][y]=0;</comment>
<comment type="line">//            }</comment>
<comment type="line">//        }</comment>
<comment type="line">//        else if(!p[x-1][y]&amp;&amp;!p[x][y-1]){</comment>
<comment type="line">//            if(x==n){</comment>
<comment type="line">//                ax=1,ay=y+1;</comment>
<comment type="line">//            }</comment>
<comment type="line">//            else{</comment>
<comment type="line">//                ax=x+1,ay=y;</comment>
<comment type="line">//            }</comment>
<comment type="line">//            for(int i=1;i&lt;2;i++){</comment>
<comment type="line">//                p[x][y]=i;</comment>
<comment type="line">//                dfs(ax,ay);</comment>
<comment type="line">//                p[x][y]=0;</comment>
<comment type="line">//            }</comment>
<comment type="line">//        }</comment>
<comment type="line">//        else{</comment>
<comment type="line">//            if(x==n){</comment>
<comment type="line">//                ax=1,ay=y+1;</comment>
<comment type="line">//            }</comment>
<comment type="line">//            else{</comment>
<comment type="line">//                ax=x+1,ay=y;</comment>
<comment type="line">//            }</comment>
<comment type="line">//            for(int i=0;i&lt;2;i++){</comment>
<comment type="line">//                if(p[x-1][y-1]==i)continue;</comment>
<comment type="line">//                if(x&lt;n&amp;&amp;p[x+1][y-1]==p[x][y-1]&amp;&amp;p[x][y-1]==i)continue;</comment>
<comment type="line">//                p[x][y]=i;</comment>
<comment type="line">//                dfs(ax,ay);</comment>
<comment type="line">//                p[x][y]=0;</comment>
<comment type="line">//            }</comment>
<comment type="line">//        }</comment>
<comment type="line">//    }</comment>
<comment type="line">//    else if(x==1&amp;&amp;y==1){</comment>
<comment type="line">//        if(x==n){</comment>
<comment type="line">//            ax=1,ay=y+1;</comment>
<comment type="line">//        }</comment>
<comment type="line">//        else{</comment>
<comment type="line">//            ax=x+1,ay=y;</comment>
<comment type="line">//        }</comment>
<comment type="line">//        for(int i=0;i&lt;2;i++){</comment>
<comment type="line">//            p[x][y]=i;</comment>
<comment type="line">//            dfs(ax,ay);</comment>
<comment type="line">//            p[x][y]=0;</comment>
<comment type="line">//        }</comment>
<comment type="line">//    }</comment>
<comment type="line">//    else if(x==1){</comment>
<comment type="line">//        if(x==n){</comment>
<comment type="line">//            ax=1,ay=y+1;</comment>
<comment type="line">//        }</comment>
<comment type="line">//        else{</comment>
<comment type="line">//            ax=x+1,ay=y;</comment>
<comment type="line">//        }</comment>
<comment type="line">//        for(int i=0;i&lt;2;i++){</comment>
<comment type="line">//            if(y&gt;2&amp;&amp;p[x][y-2]==i&amp;&amp;p[x][y-1]==p[x][y-2])continue;</comment>
<comment type="line">//            if(n&gt;1&amp;&amp;p[x][y-1]==p[x+1][y-1]&amp;&amp;p[x][y-1]==i)continue;</comment>
<comment type="line">//            p[x][y]=i;</comment>
<comment type="line">//            dfs(ax,ay);</comment>
<comment type="line">//            p[x][y]=0;</comment>
<comment type="line">//        }</comment>
<comment type="line">//    }</comment>
<comment type="line">//    else{</comment>
<comment type="line">//        if(x==n){</comment>
<comment type="line">//            ax=1,ay=y+1;</comment>
<comment type="line">//        }</comment>
<comment type="line">//        else{</comment>
<comment type="line">//            ax=x+1,ay=y;</comment>
<comment type="line">//        }</comment>
<comment type="line">//        for(int i=0;i&lt;2;i++){</comment>
<comment type="line">//            if(x&gt;2&amp;&amp;p[x-2][y]==i&amp;&amp;p[x-2][y]==p[x-1][y])continue;</comment>
<comment type="line">//            p[x][y]=i;</comment>
<comment type="line">//            dfs(ax,ay);</comment>
<comment type="line">//            p[x][y]=0;</comment>
<comment type="line">//        }</comment>
<comment type="line">//    }</comment>
<comment type="line">//}</comment>
<decl_stmt><decl><type><name>ll</name></type> <name><name>dp1</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>dp2</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>dp1</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">2</literal></expr><operator>,</operator><expr><name><name>dp1</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>=</operator><literal type="number">4</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">3</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>m</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name><name>dp1</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>dp1</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>dp1</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><name><name>dp2</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr><operator>,</operator><expr><name><name>dp2</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">3</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name><name>dp2</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>dp2</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>dp2</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
    }</block></for>


    <decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><name><name>dp1</name><index>[<expr><name>m</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <if>if<condition>(<expr><name>n</name><operator>==</operator><literal type="number">2</literal></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%I64d\n"</literal></expr></argument>,<argument><expr><operator>(</operator><name>ans</name><operator>+</operator><literal type="number">2</literal><operator>)</operator><operator>%</operator><name>mod</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>
    <elseif>else <if>if<condition>(<expr><name>n</name><operator>&gt;</operator><literal type="number">2</literal></expr>)</condition><then><block>{
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
            <expr_stmt><expr><name>ans</name><operator>=</operator><operator>(</operator><name>ans</name><operator>+</operator><name><name>dp2</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%I64d\n"</literal></expr></argument>,<argument><expr><name>ans</name><operator>%</operator><name>mod</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if></elseif>
    <else>else <block type="pseudo"><expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%I64d\n"</literal></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></else></if>

<comment type="line">//    for(int i=1;i&lt;=30;i++){</comment>
<comment type="line">//        for(int j=1;j&lt;=5;j++){</comment>
<comment type="line">//            ans=0;</comment>
<comment type="line">//            n=i,m=j;</comment>
<comment type="line">//            dfs(1,1);</comment>
<comment type="line">//            cout&lt;&lt;"i="&lt;&lt;i&lt;&lt;"  j="&lt;&lt;j&lt;&lt;"  ans="&lt;&lt;ans&lt;&lt;"   ";</comment>
<comment type="line">//        }</comment>
<comment type="line">//        puts("");</comment>
<comment type="line">//    }</comment>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>

<comment type="block">/*

*/</comment>
</unit>
