<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29148140_63001850.cpp"><comment type="line">//D1. The World Is Just a Programming Task (Easy Version)</comment>
<comment type="line">//By: Terrasse</comment>
<comment type="line">//2019å¹´ 10æ 20æ¥ æææ¥ 17:55:47 CST</comment>

<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAXN</name></cpp:macro> <cpp:value>555</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INF</name></cpp:macro> <cpp:value>0x3f3f3f3f</cpp:value></cpp:define>
<comment type="line">//#define swap(x,y) ((x)^=(y)^=(x)^=(y))</comment>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>n</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>c</name><index>[<expr><name>MAXN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name><name>a</name><index>[<expr><name>MAXN</name></expr>]</index></name></decl>;</decl_stmt>
<function_decl><specifier>inline</specifier> <type><name>int</name></type> <name>calc</name><parameter_list>()</parameter_list>;</function_decl>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><specifier>register</specifier> <name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>j</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>k</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>ans1</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>ans2</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>cnt</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>maxb</name><init>=<expr><operator>-</operator><name>INF</name></expr></init></decl>,<decl><type ref="prev"/><name>btf</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>c</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'('</literal><operator>)</operator></expr>;</expr_stmt>
    }</block></for>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><operator>++</operator><name>cnt</name></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <if>if<condition>(<expr><name>cnt</name><operator>*</operator><literal type="number">2</literal><operator>!=</operator><name>n</name></expr>)</condition><then>
    <block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="char">'0'</literal><operator>&lt;&lt;</operator><name>endl</name><operator>&lt;&lt;</operator><literal type="string">"1 1"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
    <block>{
        <for>for<control>(<init><expr><name>j</name><operator>=</operator><name>i</name></expr>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>j</name></expr></incr>)</control>
        <block>{
            <expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>btf</name><operator>=</operator><call><name>calc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>maxb</name><operator>&lt;</operator><name>btf</name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>maxb</name><operator>=</operator><name>btf</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>ans1</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>ans2</name><operator>=</operator><name>j</name></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
    }</block></for>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>maxb</name><operator>&lt;&lt;</operator><name>endl</name><operator>&lt;&lt;</operator><name>ans1</name><operator>&lt;&lt;</operator><literal type="char">' '</literal><operator>&lt;&lt;</operator><name>ans2</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
<function><specifier>inline</specifier> <type><name>int</name></type> <name>calc</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><specifier>register</specifier> <name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>minc</name><init>=<expr><name>INF</name></expr></init></decl>,<decl><type ref="prev"/><name>cnt</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>ret</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>p</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then>
        <block>{
            <if>if<condition>(<expr><name>minc</name><operator>&gt;</operator><operator>++</operator><name>cnt</name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>minc</name><operator>=</operator><name>cnt</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>p</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></then>
        <else>else
        <block>{
            <expr_stmt><expr><operator>--</operator><name>cnt</name></expr>;</expr_stmt>
        }</block></else></if>
    }</block></for>
    <for>for<control>(<init><expr><name>cnt</name><operator>=</operator><literal type="number">0</literal></expr><operator>,</operator><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>a</name><index>[<expr><name>p</name></expr>]</index></name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><operator>++</operator><name>cnt</name></expr>;</expr_stmt>
        }</block></then>
        <else>else
        <block>{
            <if>if<condition>(<expr><operator>--</operator><name>cnt</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><operator>++</operator><name>ret</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></else></if>
        <if>if<condition>(<expr><name>p</name><operator>==</operator><name>n</name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>p</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
        }</block></then>
        <else>else
        <block>{
            <expr_stmt><expr><operator>++</operator><name>p</name></expr>;</expr_stmt>
        }</block></else></if>
    }</block></for>
    <return>return <expr><name>ret</name></expr>;</return>
}</block></function>
</unit>
