<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29171380_62977556.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<typedef>typedef <type><name>long</name> <name>double</name></type> <name>ld</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FASTIO</name></cpp:macro> <cpp:value>ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);</cpp:value></cpp:define>
  
<using>using <namespace>namespace <name>std</name>;</namespace></using>
 
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>inf</name> <init>= <expr><literal type="number">1e17</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>N</name> <init>= <expr><literal type="number">1e6</literal><operator>+</operator><literal type="number">10</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>bits</name> <init>= <expr><literal type="number">30</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>mod</name> <init>= <expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><name>FASTIO</name></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>ll</name></type> <name>t</name></decl>;</decl_stmt>
    
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>

    <while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition><block>{
        <decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><name>ll</name></type> <name>e1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>e2</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>ll</name></type> <name>temp</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
            

            <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>temp</name></expr>;</expr_stmt>

            <if>if<condition>(<expr><name>temp</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>e1</name><operator>++</operator></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>

        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>

        <for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>m</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
            

            <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>temp</name></expr>;</expr_stmt>

            <if>if<condition>(<expr><name>temp</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>e2</name><operator>++</operator></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>

        <decl_stmt><decl><type><name>ll</name></type> <name>ans</name> <init>= <expr><name>e1</name><operator>*</operator><name>e2</name> <operator>+</operator> <operator>(</operator><name>n</name><operator>-</operator><name>e1</name><operator>)</operator><operator>*</operator><operator>(</operator><name>m</name><operator>-</operator><name>e2</name><operator>)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><literal type="string">"\n"</literal></expr>;</expr_stmt>
    }</block></while>
}</block></function></unit>
