<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29140600_62999069.cpp"><comment type="line">//#include&lt;bits/stdc++.h&gt;</comment>
<comment type="line">//using namespace std;</comment>
<comment type="line">//typedef long long ll;</comment>
<comment type="line">//const int N=1e7+10;</comment>
<comment type="line">//int n,m;</comment>
<comment type="line">//int g[10][10];</comment>
<comment type="line">//int dir[4][2]={0,1,1,0,0,-1,-1,0};</comment>
<comment type="line">//int sum=0;</comment>
<comment type="line">//bool judge()</comment>
<comment type="line">//{</comment>
<comment type="line">//    bool ok=true;</comment>
<comment type="line">//    for(int i=1;i&lt;=n;++i)</comment>
<comment type="line">//    {</comment>
<comment type="line">//        for(int j=1;j&lt;=m;++j)</comment>
<comment type="line">//        {</comment>
<comment type="line">//            int cnt=0;</comment>
<comment type="line">//            for(int k=0;k&lt;4;++k)</comment>
<comment type="line">//            {</comment>
<comment type="line">//                int xx=i+dir[k][0];</comment>
<comment type="line">//                int yy=j+dir[k][1];</comment>
<comment type="line">//                if(xx&gt;=1&amp;&amp;xx&lt;=n&amp;&amp;yy&gt;=1&amp;&amp;yy&lt;=m)</comment>
<comment type="line">//                {</comment>
<comment type="line">//                    if(g[xx][yy]==g[i][j])</comment>
<comment type="line">//                        cnt++;</comment>
<comment type="line">//                }</comment>
<comment type="line">//            }</comment>
<comment type="line">//            if(cnt &gt; 1)</comment>
<comment type="line">//                return false;</comment>
<comment type="line">//        }</comment>
<comment type="line">//    }</comment>
<comment type="line">//    return true;</comment>
<comment type="line">//</comment>
<comment type="line">//}</comment>
<comment type="line">//void dfs(int k)</comment>
<comment type="line">//{</comment>
<comment type="line">//    if(k&gt;n*m)</comment>
<comment type="line">//    {</comment>
<comment type="line">//        if(judge())</comment>
<comment type="line">//        {</comment>
<comment type="line">//            sum++;</comment>
<comment type="line">//        }</comment>
<comment type="line">//        return ;</comment>
<comment type="line">//    }</comment>
<comment type="line">//    int x=(k+m-1)/m;</comment>
<comment type="line">//    int y=k%m;</comment>
<comment type="line">//    if(y==0) y=m;</comment>
<comment type="line">//    g[x][y]=0;</comment>
<comment type="line">//    if(!(x&gt;1&amp;&amp;y&gt;1&amp;&amp;g[x-1][y]==g[x][y]&amp;&amp;g[x][y-1]==g[x][y]))</comment>
<comment type="line">//        dfs(k+1);</comment>
<comment type="line">//    g[x][y]=1;</comment>
<comment type="line">//    if(!(x&gt;1&amp;&amp;y&gt;1&amp;&amp;g[x-1][y]==g[x][y]&amp;&amp;g[x][y-1]==g[x][y]))</comment>
<comment type="line">//        dfs(k+1);</comment>
<comment type="line">//    return ;</comment>
<comment type="line">//}</comment>
<comment type="line">//int main()</comment>
<comment type="line">//{</comment>
<comment type="line">//    sum=0;</comment>
<comment type="line">//    for(int i=1;i&lt;=1;++i)</comment>
<comment type="line">//    {</comment>
<comment type="line">//        for(int j=1;j&lt;=7;++j)</comment>
<comment type="line">//        {</comment>
<comment type="line">//            if( j &lt; i)</comment>
<comment type="line">//            {</comment>
<comment type="line">//                 printf("   ");</comment>
<comment type="line">//                 continue;</comment>
<comment type="line">//            }</comment>
<comment type="line">//            sum=0;</comment>
<comment type="line">//            n=i;</comment>
<comment type="line">//            m=j;</comment>
<comment type="line">//            dfs(1);</comment>
<comment type="line">//            printf("%2d ",sum);</comment>
<comment type="line">//        }</comment>
<comment type="line">//        cout&lt;&lt;endl;</comment>
<comment type="line">//    }</comment>
<comment type="line">//    while(cin&gt;&gt;n&gt;&gt;m)</comment>
<comment type="line">//    {</comment>
<comment type="line">//        sum=0;</comment>
<comment type="line">//        dfs(1);</comment>
<comment type="line">//        cout&lt;&lt;sum&lt;&lt;endl;</comment>
<comment type="line">//    }</comment>
<comment type="line">//}</comment>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name><init>=<expr><literal type="number">1e5</literal><operator>+</operator><literal type="number">10</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>mod</name><init>=<expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<function><type><name>ll</name></type> <name>qpow</name><parameter_list>(<parameter><decl><type><name>ll</name></type> <name>a</name></decl></parameter>,<parameter><decl><type><name>ll</name></type> <name>b</name></decl></parameter>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><name>b</name></expr>)</condition>
    <block>{
        <if>if<condition>(<expr><name>b</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>=</operator><name>ans</name><operator>*</operator><name>a</name><operator>%</operator><name>mod</name></expr>;</expr_stmt></block></then></if>
        <expr_stmt><expr><name>a</name><operator>=</operator><name>a</name><operator>*</operator><name>a</name><operator>%</operator><name>mod</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>b</name><operator>&gt;&gt;=</operator><literal type="number">1</literal></expr>;</expr_stmt>
    }</block></while>
    <return>return <expr><name>ans</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><name>ll</name></type> <name><name>d</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>f</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
    <while>while<condition>(<expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>)</condition>
    <block>{
        <if>if<condition>(<expr><name>n</name><operator>&gt;</operator><name>m</name></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name>n</name></expr></argument>,<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
        <decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>m</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
            <block type="pseudo"><expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><name>ans</name><operator>=</operator><name><name>f</name><index>[<expr><name>m</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>d</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
<comment type="line">//        cout&lt;&lt;" ans:"&lt;&lt;ans&lt;&lt;endl;</comment>
        <expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><name>ans</name></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
        <block>{
            <expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>d</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt><empty_stmt>;</empty_stmt>
            <expr_stmt><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>d</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>d</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
<comment type="line">//            cout&lt;&lt;" i:"&lt;&lt;i&lt;&lt;" :"&lt;&lt;f[i]&lt;&lt;endl;</comment>
        }</block></for>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>f</name><index>[<expr><name>n</name></expr>]</index></name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    }</block></while>

}</block></function>
</unit>
