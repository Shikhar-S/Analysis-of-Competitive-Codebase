<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29147131_62989691.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>N</name> <init>= <expr><literal type="number">1e6</literal><operator>+</operator><literal type="number">10</literal></expr></init></decl> ;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>wkmefklwe423mklfwemklfkwlflkwe</name> <init>= <expr><literal type="number">234</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>a</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>wkmefklw234234emklfwemklfkwlflkwe</name> <init>= <expr><literal type="number">234</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>wkmefklw23423emklfwemklfkwlflkwe</name> <init>= <expr><literal type="number">234</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>wkmefklwemkl234234fwemklfkwlflkwe</name> <init>= <expr><literal type="number">234</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>sum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt>
    <for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> ;</init> <condition><expr><name>i</name><operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name>sum</name><operator>+=</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>wkmefklwe3242mklfwemklfkwlflkwe</name> <init>= <expr><literal type="number">234</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>wkmefk23423lwemklfwemklfkwlflkwe</name> <init>= <expr><literal type="number">234</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>cnt</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name><operator>/</operator><literal type="number">2</literal></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name>cnt</name><operator>+=</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
    }</block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>wkmefklwemklfw234234emklfkwlflkwe</name> <init>= <expr><literal type="number">234</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>wkmefklwemklfwemkl23423fkwlflkwe</name> <init>= <expr><literal type="number">234</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <operator>(</operator><name>sum</name><operator>-</operator><name>cnt</name><operator>)</operator><operator>*</operator><operator>(</operator><name>sum</name><operator>-</operator><name>cnt</name><operator>)</operator><operator>+</operator><name>cnt</name><operator>*</operator><name>cnt</name> <operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>wkmefklwemklfw23423emklfkwlflkwe</name> <init>= <expr><literal type="number">234</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>wkmefklwemklfwemkl223423423fkwlflkwe</name> <init>= <expr><literal type="number">234</literal></expr></init></decl>;</decl_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>

<comment type="block">/*
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;iostream&gt;
using namespace std;
struct node{
    int num;
    node* next[26];
    node()
    {
        num=0;
        memset(next,NULL,sizeof(next));
    }
};
node* root=new node();
node* rt;
int id,len;
void build(char str[30])
{
    rt=root;
    len=strlen(str);
    for(int i=0;i&lt;len;i++)
    {
        id=str[i]-'a';
        if(rt-&gt;next[id]==NULL)
            rt-&gt;next[id]=new node();
        rt=rt-&gt;next[id];
        rt-&gt;num++;
    }
}
int querry(char str[30])
{
    rt=root;
    len=strlen(str);
    for(int i=0;i&lt;len;i++)
    {
        id=str[i]-'a';
        if(rt-&gt;next[id]==NULL)
            return 0;
        rt=rt-&gt;next[id];
    }
    return rt-&gt;num;
}
int main()
{
    char str[30];
    while(gets(str)&amp;&amp;str[0])
    {
        build(str);
    }
    while(gets(str))
    {
        printf("%d\n",querry(str));
    }
    return 0;
}
*/</comment>
</unit>
