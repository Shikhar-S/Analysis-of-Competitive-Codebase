<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29180226_62982588.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>l</name></decl>, <decl><type ref="prev"/><name>r</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name><name>arr</name><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>arr</name></expr></argument>,<argument><expr><name>arr</name><operator>+</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>l</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>r</name> <operator>=</operator> <name>n</name><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<expr_stmt><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>l</name> <operator>&lt;</operator> <name>r</name></expr>)</condition> <block>{
		<expr_stmt><expr><name>x</name><operator>+=</operator><name><name>arr</name><index>[<expr><name>l</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>y</name><operator>+=</operator><name><name>arr</name><index>[<expr><name>r</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>l</name><operator>++</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>r</name><operator>--</operator></expr>;</expr_stmt>
	}</block></while>
	<if>if<condition>(<expr><name>l</name><operator>==</operator><name>r</name></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>y</name><operator>+=</operator><name><name>arr</name><index>[<expr><name>r</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>y</name><operator>*</operator><name>y</name><operator>+</operator><name>x</name><operator>*</operator><name>x</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	
}</block></function>
</unit>
