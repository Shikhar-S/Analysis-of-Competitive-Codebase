<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29175208_62980908.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>signed</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
	<for>for<control>(<init><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr>;</init><condition><expr><name>t</name><operator>--</operator></expr>;</condition><incr/>)</control>
	<block>{
		<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>x</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>a1</name></decl>,<decl><type ref="prev"/><name>a2</name></decl>,<decl><type ref="prev"/><name>b1</name></decl>,<decl><type ref="prev"/><name>b2</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>a1</name> <operator>=</operator> <name>a2</name> <operator>=</operator> <name>b1</name> <operator>=</operator> <name>b2</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<for>for<control>(<init><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</init><condition><expr><name>n</name><operator>--</operator> <operator>&amp;&amp;</operator> <name>cin</name> <operator>&gt;&gt;</operator> <name>x</name></expr>;</condition><incr/>)</control>
			<block type="pseudo"><if>if<condition>(<expr><name>x</name> <operator>&amp;</operator> <literal type="number">1</literal></expr>)</condition><then>
				<block type="pseudo"><expr_stmt><expr><name>a1</name><operator>++</operator></expr>;</expr_stmt></block></then>
			<else>else
				<block type="pseudo"><expr_stmt><expr><name>a2</name><operator>++</operator></expr>;</expr_stmt></block></else></if></block></for>
		<for>for<control>(<init><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</init><condition><expr><name>n</name><operator>--</operator> <operator>&amp;&amp;</operator> <name>cin</name> <operator>&gt;&gt;</operator> <name>x</name></expr>;</condition><incr/>)</control>
			<block type="pseudo"><if>if<condition>(<expr><name>x</name> <operator>&amp;</operator> <literal type="number">1</literal></expr>)</condition><then>
				<block type="pseudo"><expr_stmt><expr><name>b1</name><operator>++</operator></expr>;</expr_stmt></block></then>
			<else>else
				<block type="pseudo"><expr_stmt><expr><name>b2</name><operator>++</operator></expr>;</expr_stmt></block></else></if></block></for>
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>a1</name> <operator>*</operator> <name>b1</name> <operator>+</operator> <name>a2</name> <operator>*</operator> <name>b2</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
	}</block></for>
}</block></function></unit>
