<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29143344_62983169.cpp"><comment type="block">/*
                                                                                                                                                `
                                                                                                                                                `
                                                                                                                                                `
                                                                                                                                                `
                                                                                                                                                `
                                                                                                                                                `
                                                                                                                                                `
                                                                                                                                                `
                                                                         `!!!;'                                                                 `
                                                           '%$@########################&amp;&amp;%:.                                                    `
                                                       .%###################################%.                                                  `
                                                    .`|######################################%                                                  `
                                                 .!@###############################################$'                                           `
                                              .!@#########################@@@#########################&amp;;.                                       `
                                             :@##################@@@&amp;&amp;@@@$!!%&amp;@@@@@@@###################&amp;'                                      `
                                          :&amp;################@@@&amp;$%%||||!!:'':;!!||%|!%&amp;@@#################%`                                    `
                                         |###############@@&amp;&amp;$%|!;;::::':'''':::;;!!|%%%$&amp;&amp;@###############$`                                   `
                                      :&amp;#############@&amp;$%||||!;'````````````'''```'':::'':!|$@@###############;                                 `
                                    :@#############@$$%|!;;;;:'``````...```...`...`'':::''';|%$$$&amp;############&amp;'                                `
                                   |##############&amp;$$$%||!!;:'`````..````....`...```''::::;!!||$&amp;&amp;@@###########&amp;'                               `
                                 !##############@$%|!!!;::'''`````...``.....`````````'''::::;;::!|%$&amp;############|                              `
                                :@##########@&amp;%!:'`::;;:'``....```.......  .``....````````````'':;!|%$@############;                            `
                               ;##########@%;```...`'''`...  .....    ................   .`.    `:!!!!%%%&amp;#########|                            `
                              ;##########&amp;|:.`'`. ..`...   .......   .....  ..  .....   ...   .'':!!:.`''!@#########|.                          `
                              !##########|'`.;!`       .  ......          ..    .      ....  .::'`. .. .`'|@########@:                          `
                              ;##########%'`'%!    ..       .  .                ..    .```.   ';:`..``.`':|@########@:                          `
                              !##########$:;$&amp;;                     . `|%;.  `;||;::`.``';;.  .;!: `;:`';|$#########@!.                         `
                              !##########@$&amp;@|. ...... .`':!|;` !$|%%'!##$' `|####$:`:;:!&amp;$:. '$&amp;!';!!||%&amp;############;                         `
                             `$#############&amp;:  `!!'`:;;;||%@&amp;!'!&amp;&amp;$;.|##%`.|#####%`'$@$&amp;##%` .:||;;;;%@##############!                         `
                             :@#############|. .!&amp;@|;%@@@@@&amp;@@#@&amp;@#@&amp;@############@@#####@:   .`'%@%!!&amp;###############!                         `
                             :@############@;   :&amp;@!;$###@|%|!$@@######################@%`    .;|!;!|%@###############!                         `
                             :@############@:   `$#$%#@@##&amp;@################@$$$&amp;$%|!'       `%#@|;':|&amp;###############!                         `
                              !##########@$%:    |####@&amp;######$;.                          ..`'`      ;@##############!                         `
                              !##########!       ;#########|.                             `;`         ;###############!                         `
                              ;##########;       `%######;                           '$###&amp;:          `%@############&amp;'                         `
                               !########@:       .'.       .:;`                   .|%:                   !##########&amp;'                          `
                               !########@:                                                               ;#########@:                           `
                                !######%.     !##&amp;;.        .                  `%&amp;!`             '&amp;###&amp;' !#########!                            `
                                |#######;.%###!                 `!&amp;###@|;;%@###%.    ';;|&amp;$:;;`     |#%. .%###%$###!                            `
                               !#######|  `%#&amp;'    |##&amp;$####&amp;:     !##########;    `%#####%.!#|.   .%@:   ;###;`%##!                            `
                                !#$!$##!   :@#!        .|###$'.    ;##|.  :&amp;#@;    .``::`          ;@|.   :@#@: `$#|                            `
                                :&amp;&amp;|&amp;##;   :&amp;#!                   :&amp;##;    .%##!                   !&amp;'    ;@##!  |#!                            `
                                 |@@##@;  .`%#!                  '$##;      ;##$`                 :@!    .|##@; :&amp;!                             `
                                 !&amp;|&amp;##%:'.  :&amp;!                :@#%.        .%##;               |&amp;!.   `|@!   `$!                              `
                                 '$%%###&amp;;.   '&amp;&amp;'            `%##&amp;'           |##@&amp;:    ...;&amp;&amp;&amp;@;     .;&amp;#|':;$&amp;:                              `
                                 .|######&amp;;        '$@@@@@@@@#|                                        :&amp;######%`                               `
                                   !#####&amp;:                                                           '$#####@:                                 `
                                   '$#####@:                                                          ;#####$`                                  `
                                     '&amp;####%.                 ``                                     '$#####;                                   `
                                      !#####$'                |@:  .:%|;;;;!$#####@#|               '&amp;###$:                                     `
                                       :&amp;####&amp;:               ;####################@:    ':`       `%###@:                                      `
                                         ;#####@%:.                                         `'';|@######$`                                      `
                                         `$######@|`                                        !#&amp;||@#####$`                                       `
                                          :&amp;######@%'.                        .`''''` .';!|%@#@$$@####&amp;:                                        `
                                           |######@|'.   ;##$!!%@##########################@:   '$####;                                         `
                                           :&amp;#####$;''.`%#########&amp;'             `|@$:         .%###@;                                          `
                                            :@####@;          |#@##&amp;$;         `|%'           .|####!                                           `
                                              !####@;                                .        |####!                                            `
                                               :@###@|`         .                 `|!.       |####%.                                            `
                                                .|####!          `;$@%|!!!!!%&amp;&amp;@#$;.        !#####|                                             `
                                                .%####&amp;:              '%&amp;@@@|`             '&amp;#####|                                             `
                                                .%#####|.                                 :&amp;######%`                                            `
                                       :|||;`    !#######;                              .%#####@@#####@$;.                                      `
                                   `$#############&amp;%!%#####|.                         :@####%:..'!&amp;######@;                                     `
                                  `$#############|`..'%#######!                      ;####&amp;;.    .'%#######!                                    `
                                .|##############@!`    .'%#########%'.          '%#####%`           :@#######@%;:.                              `
                          ;%|;. !############%::;'        `!&amp;############@&amp;&amp;@#######@%'               !###########&amp;'                            `
                         !################$'   .:'         '|&amp;######################$:.               :@#############@@@@@@;                    `
                      ';$##&amp;;:&amp;###########$`                  :|$@################%:.                 !#####################@;                  `
                   '%####@$!:.  `%#########!                    .:!%&amp;@#######@%!;'.                   |##############%!$@####!                  `
                .|#######&amp;;'. .    |#######%.                      .':;!!!!!!;`...                   .|############|. :$@@####%.                `
                !####&amp;$&amp;@#@!:'.       ;#####%`                  .`';;'... ..''``.                    !##########%`    ''':$######$`             `
                ;#####@$$;`%&amp;:.         `%####;                   .:;;:'':;||!:`                    !#########!          :&amp;#@@####!             `
          '%######@######!   !!            :$@$`                    ...`.'::`..                   '$######@!`         '|$$&amp;!!@#######@!.        `
     '$#########@&amp;$$@######@:    ;: . `'    ....                      ...``.                    `$######&amp;'           '!;`'!@######&amp;&amp;########$'  `
  ;############@#@@@@@$|%@###$`  `!!.;' .     :!.                                             .%#####!.            .;::&amp;####|`..`  ..;@########!'
  |########&amp;|;'``..`:'    ..!##%:.    ;;      `.                                            .|###|`             `'|###@&amp;$|`  ..   .`|&amp;&amp;@#######%:
  |###@#@@#&amp;|:`.`';;:;!!!;:;''!$##&amp;;'.  .'%; .;&amp;###&amp;|$!                                     '$; .|$:;|`   ...;&amp;###$'    ....      :||%&amp;########%:
  |#######@$;!%%:```           .!@###&amp;|`   :|'!########@#!                                ;@! :@####%'. `|@###&amp;:         ..`:::%$$&amp;$$$&amp;@##@@@##|:
  |########$;::'`         .`.     `%#####%!: .. !#####%` !#%.                        !; '%; !#############&amp;:          `::`.```. .':.  :$@&amp;&amp;&amp;###|:
  !####@%:::;;:::::` .........            '.  !#######%;;';; `%#&amp;'             ;&amp;: `;``$@!%########&amp;&amp;##&amp;|::::'.             ':.     `!%@@######|:
  !#####%;;::.       ...... ....`..  ..  '::!|&amp;########$';%`.'` .;%:        !#$';$%|&amp;$!&amp;##########$'        `';;;;!&amp;##&amp;%||||||%;`   .:|&amp;###@###|:
  |#######|`...      `|$&amp;&amp;$$!`....           ;$:  :&amp;#@:     `'''``.   .%########&amp;'  .%#@&amp;$%$#####$`     ....`:%&amp;@@@@@@&amp;&amp;@@!`.      .`'%@#######|'
  |######@@$:       .`..`!@&amp;$&amp;&amp;&amp;&amp;:                ;@#######@@#$%@######&amp;$;    '%@##%!@###@&amp;&amp;@####%.     `!&amp;@@@@@$:..`..``.``...     `|&amp;####@@##!'
  ;###&amp;|;::!&amp;#&amp;%%%%:         .'::::;|$&amp;&amp;$%|'..;%%&amp;#######%;$########@&amp;#####%`   '|@###;    '%####$;::::::`            '!|%%%%%%%%%&amp;#$:'::.'%###|'
  `%###@|;|%$%$@#&amp;|;::::`          '|%%%%%$%|%|;';$##@|'.   |######&amp;'     .:|$%: :&amp;@|'.     !####%.              `::;:!$@######&amp;%%%%%!'  ':;&amp;##|:
  '$##%:.    :&amp;##@####@$;.  ..                    `$|     :; !#####|      '|%:  ``    ...   !####!          .  ..:&amp;#@@@@##@&amp;||$;         :&amp;####|'
  !####&amp;@@&amp;;        ...`.'%@##@@#@@&amp;!`            :&amp;&amp;!.       !###&amp;'  :||:.`   !%'     ``:$######@@@&amp;&amp;@@@&amp;@##$;``....             |@@@@########!'
  !#######@$||!:          ';!;;;!&amp;###&amp;|||||||||||%&amp;##@!`.     !###&amp;||%!!!:   .:;`        `;;%####$;:;;;;;;;;;;;::.         '||||||&amp;#####%!;;$##!`
  `%#&amp;:.`:!||||||%@#@%;::;;;'                     ;@@:    .. .%###|.   `:::'  .:!;'`':'`   `$####!             ':;;;;!%@@&amp;%%%|;`        `;%&amp;###|:
  .%##|..       '$##@@@@@@#&amp;:...`..              `$#$'        !##%`   ..`.`:%@@! '%@$:''. .`|####|... .........`:%###@#@@@|`        ....`%#####|:
  !###@&amp;!       .`.```':!&amp;##@&amp;&amp;&amp;&amp;$:              '&amp;#%.        !#&amp;'     ````.    .```:%&amp;&amp;&amp;&amp;&amp;@#####@!':|$&amp;&amp;$&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;@##|`````.       !@@@#######!'
  :&amp;#########@$||||:            `::::;;;;;!!;;;:;$###$'  .'`  |#@|.  .:;;:.                `%####%:''':::::`               `!||&amp;##$;;;:::.  ;##|:
  .%#@$%$%%%%%$@###$::::::'.           ...`;|!::!&amp;##@$%|||!' .%##&amp;%%$%'        `'.         :&amp;####!                  .':::'::%@&amp;$%%!` .!!':;$###%:
  :&amp;#############@|.              .  '$##################&amp;;..!@###@#######%'.             .!#####!          .              `$#####@|``;&amp;|!&amp;####|:
  |####&amp;%'   .''''':|@###@$$$$$$%;.             |####%`      .|#@;.         .;$$$%$&amp;$$$$$$&amp;######$:..:|%$$$$$$$&amp;&amp;&amp;&amp;@######&amp;;'''.    ;$&amp;########|:
  |#######@%;;`    '!|!||$#######&amp;|!!!;;;!!!;`.!#####@: .;|!!|&amp;#$'   `:'':;;$######################################%!|!!!!!;.  .`;|&amp;######@####%:
  |############$!''''..';$&amp;&amp;&amp;&amp;@########################$;'!;`:@#&amp;:``'|$@######@@@@&amp;&amp;&amp;&amp;&amp;&amp;&amp;@#######@&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;@@&amp;&amp;&amp;&amp;$|:.    .`''$########@&amp;@####%:
  |###&amp;%$&amp;#################@%;'  ..      `|@############$: `%@###########$`  `%%:.     . :@######|         !#####################@$%&amp;##########%:
  |#######################################@&amp;&amp;@######################@@&amp;@#######################################################################%:
*/</comment>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_CRT_SECURE_NO_WARNINGS</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;set&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stack&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ctime&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;queue&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cctype&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bitset&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdlib&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cassert&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fstream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<typedef>typedef <type><name>long</name> <name>long</name></type> <name>LL</name>;</typedef>

<function><specifier>inline</specifier> <type><name>char</name></type> <name>gc</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><specifier>static</specifier> <type><specifier>const</specifier> <name>LL</name></type> <name>L</name> <init>= <expr><literal type="number">233333</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>static</specifier> <type><name>char</name></type> <name><name>sxd</name><index>[<expr><name>L</name></expr>]</index></name></decl>, <modifier>*</modifier><decl><type ref="prev"/><name>sss</name> <init>= <expr><name>sxd</name></expr></init></decl>, <modifier>*</modifier><decl><type ref="prev"/><name>ttt</name> <init>= <expr><name>sxd</name></expr></init></decl>;</decl_stmt>
	<if>if <condition>(<expr><name>sss</name> <operator>==</operator> <name>ttt</name></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>ttt</name> <operator>=</operator> <operator>(</operator><name>sss</name> <operator>=</operator> <name>sxd</name><operator>)</operator> <operator>+</operator> <call><name>fread</name><argument_list>(<argument><expr><name>sxd</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>L</name></expr></argument>, <argument><expr><name>stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if>if <condition>(<expr><name>sss</name> <operator>==</operator> <name>ttt</name></expr>)</condition><then> <block>{
			<return>return <expr><name>EOF</name></expr>;</return>
		}</block></then></if>
	}</block></then></if>
	<return>return <expr><operator>*</operator><name>sss</name><operator>++</operator></expr>;</return>
}</block></function>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>_AT_HOME</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dd</name></cpp:macro> <cpp:value>c = gc()</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dd</name></cpp:macro> <cpp:value>c = getchar()</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function><specifier>inline</specifier> <type><name>char</name></type> <name>readalpha</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>char</name></type> <name>dd</name></decl>;</decl_stmt>
	<for>for <control>(<init>;</init> <condition><expr><operator>!</operator><call><name>isalpha</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>dd</name></expr></incr>)</control><block type="pseudo"><empty_stmt>;</empty_stmt></block></for>
	<return>return <expr><name>c</name></expr>;</return>
}</block></function>

<function><specifier>inline</specifier> <type><name>char</name></type> <name>readchar</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>char</name></type> <name>dd</name></decl>;</decl_stmt>
	<for>for <control>(<init>;</init> <condition><expr><name>c</name> <operator>==</operator> <literal type="char">' '</literal></expr>;</condition> <incr><expr><name>dd</name></expr></incr>)</control><block type="pseudo"><empty_stmt>;</empty_stmt></block></for>
	<return>return <expr><name>c</name></expr>;</return>
}</block></function>

<function><template>template <parameter_list>&lt;<parameter><type><name>class</name></type> <name>T</name></parameter>&gt;</parameter_list></template>
<specifier>inline</specifier> <type><name>bool</name></type> <name>read</name><parameter_list>(<parameter><decl><type><name>T</name><modifier>&amp;</modifier></type> <name>x</name></decl></parameter>)</parameter_list> <block>{
	<decl_stmt><decl><type><name>bool</name></type> <name>flg</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>char</name></type> <name>dd</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<for>for <control>(<init>;</init> <condition><expr><operator>!</operator><call><name>isdigit</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>dd</name></expr></incr>)</control> <block>{
		<if>if <condition>(<expr><name>c</name> <operator>==</operator> <literal type="char">'-'</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><name>flg</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
		}</block></then> <elseif>else <if>if<condition>(<expr><name>c</name> <operator>==</operator> <name>EOF</name></expr>)</condition><then> <block>{
			<return>return <expr><literal type="boolean">false</literal></expr>;</return>
		}</block></then></if></elseif></if>
	}</block></for>
	<for>for <control>(<init>;</init> <condition><expr><call><name>isdigit</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>dd</name></expr></incr>)</control> <block>{
		<expr_stmt><expr><name>x</name> <operator>=</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>c</name> <operator>^</operator> <literal type="number">48</literal><operator>)</operator></expr>;</expr_stmt>
	}</block></for>
	<if>if <condition>(<expr><name>flg</name></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>x</name> <operator>=</operator> <operator>-</operator><name>x</name></expr>;</expr_stmt>
	}</block></then></if>
	<return>return <expr><literal type="boolean">true</literal></expr>;</return>
}</block></function>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>dd</name></cpp:undef>

<function><template>template <parameter_list>&lt;<parameter><type><name>class</name></type> <name>T</name></parameter>&gt;</parameter_list></template>
<specifier>inline</specifier> <type><name>void</name></type> <name>write</name><parameter_list>(<parameter><decl><type><name>T</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{
	<if>if <condition>(<expr><name>x</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
		<expr_stmt><expr><call><name>putchar</name><argument_list>(<argument><expr><literal type="char">'-'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>x</name> <operator>=</operator> <operator>-</operator><name>x</name></expr>;</expr_stmt>
	}</block></then></if>
	<if>if <condition>(<expr><name>x</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>)</condition><then> <block>{
		<expr_stmt><expr><call><name>putchar</name><argument_list>(<argument><expr><name>x</name> <operator>|</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	}</block></then></if>
	<expr_stmt><expr><call><name>write</name><argument_list>(<argument><expr><name>x</name> <operator>/</operator> <literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>putchar</name><argument_list>(<argument><expr><operator>(</operator><name>x</name> <operator>%</operator> <literal type="number">10</literal><operator>)</operator> <operator>|</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><template>template <parameter_list>&lt;<parameter><type><name>class</name></type> <name>T</name></parameter>&gt;</parameter_list></template>
<specifier>inline</specifier> <type><name>void</name></type> <name>writesp</name><parameter_list>(<parameter><decl><type><name>T</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{
	<expr_stmt><expr><call><name>write</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>putchar</name><argument_list>(<argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><template>template <parameter_list>&lt;<parameter><type><name>class</name></type> <name>T</name></parameter>&gt;</parameter_list></template>
<specifier>inline</specifier> <type><name>void</name></type> <name>writeln</name><parameter_list>(<parameter><decl><type><name>T</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{
	<expr_stmt><expr><call><name>write</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<typedef>typedef <type><name>long</name> <name>long</name></type> <name>LL</name>;</typedef>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name> <init>= <expr><literal type="number">100005</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>LL</name></type> <name><name>aa</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>read</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
		<expr_stmt><expr><call><name>read</name><argument_list>(<argument><expr><name><name>aa</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>aa</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>aa</name> <operator>+</operator> <name>n</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>LL</name></type> <name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>b</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <operator>(</operator><name>n</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
		<expr_stmt><expr><name>a</name> <operator>+=</operator> <name><name>aa</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><operator>(</operator><name>n</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
		<expr_stmt><expr><name>b</name> <operator>+=</operator> <name><name>aa</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name>write</name><argument_list>(<argument><expr><name>a</name> <operator>*</operator> <name>a</name> <operator>+</operator> <name>b</name> <operator>*</operator> <name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
