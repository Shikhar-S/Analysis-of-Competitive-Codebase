<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29176191_62982151.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mp</name></cpp:macro> <cpp:value>make_pair</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fi</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>se</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ff</name></cpp:macro> <cpp:value>fi.fi</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fs</name></cpp:macro> <cpp:value>fi.se</cpp:value></cpp:define>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>

<decl_stmt><decl><type><name>ll</name></type> <name><name>arr</name><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>cout</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
<comment type="line">//	int z,x,c;</comment>
	<decl_stmt><decl><type><name>int</name></type> <name>tc</name></decl>;</decl_stmt>
<comment type="line">//	cin&gt;&gt;tc;</comment>
	
<comment type="line">//	for(int t=1;t&lt;=tc;t++){</comment>
		<decl_stmt><decl><type><name>int</name></type> <name>z</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>z</name></expr>;</expr_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>q</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>q</name><operator>&lt;=</operator><name>z</name></expr>;</condition><incr><expr><name>q</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>arr</name><index>[<expr><name>q</name></expr>]</index></name></expr>;</expr_stmt></block></for>
		
		<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>arr</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>arr</name><operator>+</operator><literal type="number">1</literal><operator>+</operator><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>patok</name><init>=<expr><name>z</name><operator>/</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>ll</name></type> <name>temp1</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>temp2</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>q</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>q</name><operator>&lt;=</operator><name>z</name></expr>;</condition><incr><expr><name>q</name><operator>++</operator></expr></incr>)</control><block>{
			<if>if<condition>(<expr><name>q</name><operator>&lt;=</operator><name>patok</name></expr>)</condition><then><block>{
				<expr_stmt><expr><name>temp1</name><operator>+=</operator><name><name>arr</name><index>[<expr><name>q</name></expr>]</index></name></expr>;</expr_stmt>
			}</block></then>
			<else>else <block type="pseudo"><expr_stmt><expr><name>temp2</name><operator>+=</operator><name><name>arr</name><index>[<expr><name>q</name></expr>]</index></name></expr>;</expr_stmt></block></else></if>
		}</block></for>
		<decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><name>temp1</name><operator>*</operator><name>temp1</name> <operator>+</operator> <name>temp2</name><operator>*</operator><name>temp2</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
<comment type="line">//	}</comment>
}</block></function></unit>
