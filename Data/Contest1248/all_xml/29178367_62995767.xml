<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29178367_62995767.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>long</name> <name>long</name></type> <name>DIM</name> <init>= <expr><literal type="number">100007</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>,<decl><type ref="prev"/><name>k</name></decl>,<decl><type ref="prev"/><name>p</name></decl>,<decl><type ref="prev"/><name>res</name></decl>,<decl><type ref="prev"/><name>all</name></decl>,<decl><type ref="prev"/><name>c0</name></decl>,<decl><type ref="prev"/><name>c1</name></decl>,<decl><type ref="prev"/><name>p0</name></decl>,<decl><type ref="prev"/><name>p1</name></decl>,<decl><type ref="prev"/><name>nt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name><name>f</name><index>[<expr><name>DIM</name></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>a</name><index>[<expr><literal type="number">107</literal></expr>]</index><index>[<expr><literal type="number">107</literal></expr>]</index></name></decl>;</decl_stmt>
<comment type="block">/*
long long num;
bool ok(int n, int m) {
    num++;
    int flag = 0;
    for(int i = 1; i &lt;= n; i++) {
        for(int j = 1; j &lt;= m; j++) {
            int same = 0;
          //  cout&lt;&lt;a[i][j];
            if(i &gt; 1 &amp;&amp; a[i-1][j] == a[i][j]) same++;
            if(i &lt; n &amp;&amp; a[i+1][j] == a[i][j]) same++;
            if(j &gt; 1 &amp;&amp; a[i][j-1] == a[i][j]) same++;
            if(j &lt; m &amp;&amp; a[i][j+1] == a[i][j]) same++;
            if(same &gt; 1) flag = 1;
        }
        //cout&lt;&lt;endl;
    }
    //if(flag == 0) cout&lt;&lt;"OK"&lt;&lt;endl;
    //cout&lt;&lt;endl&lt;&lt;"------------"&lt;&lt;endl;
    return flag == 0;

}

void rec(int r, int c, int val) {
    a[r][c] = val;
    if(r == n &amp;&amp; c == m) {
        if(ok(n,m)) res++;
        return;
    }

    if(c == m) {
        rec(r+1,1,0);
        rec(r+1,1,1);
    } else {
        rec(r,c+1,0);
        rec(r,c+1,1);
    }
}
*/</comment>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
<comment type="line">//    freopen("input.txt", "r", stdin);</comment>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>m</name></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>MODULO</name> <init>= <expr><literal type="number">1000000007</literal></expr></init></decl>;</decl_stmt>
    <if>if<condition>(<expr><name>n</name> <operator>&gt;</operator> <name>m</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name>n</name></expr></argument>,<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
    <expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <call><name>max</name><argument_list>(<argument><expr><name>n</name></expr></argument>,<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator> <operator>%</operator> <name>MODULO</name></expr>;</expr_stmt></block></for>
    <expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name><name>f</name><index>[<expr><name>m</name></expr>]</index></name><operator>+</operator><name><name>f</name><index>[<expr><name>n</name></expr>]</index></name><operator>-</operator><literal type="number">2</literal><operator>+</operator><name>MODULO</name><operator>)</operator> <operator>%</operator> <name>MODULO</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>res</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>

<comment type="block">/*
    for(n = 1; n &lt;= 4; n++)
        for(m = n; m &lt;= 10; m++) {
            res = 0;
            rec(1,1,0);
            rec(1,1,1);
            cout&lt;&lt;"N="&lt;&lt;n&lt;&lt;' '&lt;&lt;"M="&lt;&lt;m&lt;&lt;' '&lt;&lt;"RES="&lt;&lt;res&lt;&lt;endl;
        }
        */</comment>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
