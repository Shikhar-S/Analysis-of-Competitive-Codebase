<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29180118_62985587.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define> 
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>a</name><index>[<expr><literal type="number">100004</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%lld"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
	 }</block></for> 
	 <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>a</name><operator>+</operator><name>n</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	 <if>if <condition>(<expr><name>n</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
	 <block>{
	 	<decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	 	<decl_stmt><decl><type><name>ll</name></type> <name>xx</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	 	<decl_stmt><decl><type><name>ll</name></type> <name>yy</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	 	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	 	<block>{
	 		<if>if <condition>(<expr><name>i</name><operator>&lt;=</operator><name>n</name><operator>/</operator><literal type="number">2</literal></expr>)</condition><then>
	 		<block>{
	 			<expr_stmt><expr><name>xx</name><operator>=</operator><name>xx</name><operator>+</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
			 }</block></then>
			 <else>else
			 <block>{
			 	<expr_stmt><expr><name>yy</name><operator>=</operator><name>yy</name><operator>+</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
			 }</block></else></if>
		 }</block></for>
		 <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>xx</name><operator>*</operator><name>xx</name><operator>+</operator><name>yy</name><operator>*</operator><name>yy</name></expr>;</expr_stmt>
	 }</block></then>
	 <else>else
	 <block>{
	 		<decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	 	<decl_stmt><decl><type><name>ll</name></type> <name>xx</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	 	<decl_stmt><decl><type><name>ll</name></type> <name>yy</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	 	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	 	<block>{
	 		<if>if <condition>(<expr><name>i</name><operator>&lt;=</operator><name>n</name><operator>/</operator><literal type="number">2</literal></expr>)</condition><then>
	 		<block>{
	 			<expr_stmt><expr><name>xx</name><operator>=</operator><name>xx</name><operator>+</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
			 }</block></then>
			 <else>else
			 <block>{
			 	<expr_stmt><expr><name>yy</name><operator>=</operator><name>yy</name><operator>+</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
			 }</block></else></if>
		 }</block></for>
		 <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>xx</name><operator>*</operator><name>xx</name><operator>+</operator><name>yy</name><operator>*</operator><name>yy</name></expr>;</expr_stmt>
	 }</block></else></if>
}</block></function>

</unit>
