<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29163745_62982849.cpp">    <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
        <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
        <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>
        <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
        <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
        <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;deque&gt;</cpp:file></cpp:include>
		<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cmath&gt;</cpp:file></cpp:include>
        <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;set&gt;</cpp:file></cpp:include>
        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ld</name></cpp:macro> <cpp:value>long double</cpp:value></cpp:define>
        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>cld</name></cpp:macro> <cpp:value>const long double</cpp:value></cpp:define>
        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>cll</name></cpp:macro> <cpp:value>const long long</cpp:value></cpp:define>
        <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

 <function><name>main</name><parameter_list>()</parameter_list> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl> , <decl><type ref="prev"/><name>ans</name></decl>;</decl_stmt>
<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>A</name> <init>= <expr><name>a</name></expr></init></decl> ;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>mas</name><index>[<expr><name>A</name></expr>]</index></name></decl>;</decl_stmt>
<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>a</name></expr> ;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
    <block type="pseudo"><expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>mas</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>

    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>mas</name></expr></argument> , <argument><expr><name>mas</name> <operator>+</operator> <name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <decl_stmt><decl><type><name>int</name></type> <name>sh1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>sh2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>


    

    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>a</name><operator>/</operator><literal type="number">2</literal></expr>;</condition> <incr><expr><operator>++</operator> <name>i</name></expr></incr>)</control>
        <block type="pseudo"><expr_stmt><expr><name>sh1</name><operator>+=</operator><name><name>mas</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>a</name><operator>/</operator><literal type="number">2</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>a</name></expr> ;</condition><incr><expr><operator>++</operator> <name>i</name></expr></incr>)</control>
        <block type="pseudo"><expr_stmt><expr><name>sh2</name><operator>+=</operator><name><name>mas</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>



    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>sh1</name><operator>*</operator><name>sh1</name> <operator>+</operator> <name>sh2</name><operator>*</operator><name>sh2</name></expr>;</expr_stmt>
}</block></function>

</unit>
