<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29139400_63003750.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iomanip&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;stack&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>endl</name></cpp:macro> <cpp:value>"\n"</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>const</specifier> <name>long</name> <name>long</name></type> <name>INF</name> <init>= <expr><operator>(</operator><name>long</name> <name>long</name><operator>)</operator><literal type="number">1e18</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>long</name> <name>long</name></type> <name>MOD</name> <init>= <expr><literal type="number">1</literal><literal type="char">'000'</literal><literal type="number">000</literal><literal type="char">'007; 

string yn(bool f){return f?"Yes":"No";}
string YN(bool f){return f?"YES":"NO";}



signed main(){
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	cout&lt;&lt;fixed&lt;&lt;setprecision(10);
	
	int n;
	int maximum = -1, a, b;
	string s;
	
	cin&gt;&gt;n;
	
	cin&gt;&gt;s;
	
	if(count(s.begin(), s.end(), '</literal></expr>)</init>') != count(s.begin(), s.end(), '<argument_list>(<argument><expr><literal type="char">')){
		cout&lt;&lt;0&lt;&lt;endl;
		cout&lt;&lt;1&lt;&lt;" "&lt;&lt;1&lt;&lt;endl;
		return 0;
	}
	
	for(int i = 0; i &lt; n; i++){
		for(int j = i; j &lt; n; j++){
			swap(s[i], s[j]);
			
			stack&lt;int&gt; sta;
			int con = 0;
			
			for(int k = 0; k &lt; n; k++){
				if(s[k] == '</literal><operator>(</operator><literal type="char">'</literal></expr></argument></argument_list></decl></decl_stmt>){
					sta.push(1);
				} else {
					int temp = -1;
					
					while(true){
						if(sta.size()){
							temp = sta.top(); sta.pop();

							if(temp == 1){
								sta.push(2);
								break;
							} else {
								
							}
						} else {
							con++;
							temp = -1;
							break;
						}
					}
				}
			}
			for(int k = 0; k &lt; con; k++){
				int temp = -1;
				while(true){
					if(sta.size()){
						temp = sta.top(); sta.pop();

						if(temp == 1){
							sta.push(2);
							break;
						} else {
							
						}
					} else {
						con++;
						temp = -1;
						break;
					}
				}
			}
			
			
			int X = sta.size();
			// cout&lt;&lt;"i = "&lt;&lt;i&lt;&lt;" j = "&lt;&lt;j&lt;&lt;" sta "&lt;&lt;sta.size()&lt;&lt;" s = "&lt;&lt;s&lt;&lt;" max = "&lt;&lt;maximum&lt;&lt;endl;
			
			// cout&lt;&lt;maximum&lt;&lt;" &lt; "&lt;&lt;sta.size()&lt;&lt;endl;
			if(maximum &lt; X){
				maximum = X;
				// cout&lt;&lt;maximum&lt;&lt;" &lt;&gt; "&lt;&lt;sta.size()&lt;&lt;endl;
				a = i+1, b = j+1;
			}
			
			swap(s[i], s[j]);
		}
	}
	
	cout&lt;&lt;maximum&lt;&lt;endl;
	cout&lt;&lt;a&lt;&lt;" "&lt;&lt;b&lt;&lt;endl;
	
	
	return 0;
}</unit>
