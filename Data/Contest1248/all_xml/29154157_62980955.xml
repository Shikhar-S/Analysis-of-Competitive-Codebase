<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29154157_62980955.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fp</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(register int i=a,I=b+1;i&lt;I;++i)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fd</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(register int i=a,I=b-1;i&gt;I;--i)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>go</name><parameter_list>(<parameter><type><name>u</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>file</name><parameter_list>(<parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>freopen(s".in","r",stdin),freopen(s".out","w",stdout)</cpp:value></cpp:define>
<function><template>template<parameter_list>&lt;<parameter><type><name>class</name></type> <name>T</name></parameter>&gt;</parameter_list></template><specifier>inline</specifier> <type><name>bool</name></type> <name>cmax</name><parameter_list>(<parameter><decl><type><name>T</name><modifier>&amp;</modifier></type><name>a</name></decl></parameter>,<parameter><decl><type><specifier>const</specifier> <name>T</name><modifier>&amp;</modifier></type><name>b</name></decl></parameter>)</parameter_list><block>{<return>return <expr><ternary><condition><expr><name>a</name><operator>&lt;</operator><name>b</name></expr>?</condition><then><expr><name>a</name><operator>=</operator><name>b</name></expr></then></ternary></expr><operator>,</operator><expr><literal type="number">1</literal><operator>:</operator><literal type="number">0</literal></expr>;</return>}</block></function>
<function><template>template<parameter_list>&lt;<parameter><type><name>class</name></type> <name>T</name></parameter>&gt;</parameter_list></template><specifier>inline</specifier> <type><name>bool</name></type> <name>cmin</name><parameter_list>(<parameter><decl><type><name>T</name><modifier>&amp;</modifier></type><name>a</name></decl></parameter>,<parameter><decl><type><specifier>const</specifier> <name>T</name><modifier>&amp;</modifier></type><name>b</name></decl></parameter>)</parameter_list><block>{<return>return <expr><ternary><condition><expr><name>a</name><operator>&gt;</operator><name>b</name></expr>?</condition><then><expr><name>a</name><operator>=</operator><name>b</name></expr></then></ternary></expr><operator>,</operator><expr><literal type="number">1</literal><operator>:</operator><literal type="number">0</literal></expr>;</return>}</block></function>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>char</name></type> <name><name>ss</name><index>[<expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">17</literal></expr>]</index></name></decl>,<modifier>*</modifier><decl><type ref="prev"/><name>A</name><init>=<expr><name>ss</name></expr></init></decl>,<modifier>*</modifier><decl><type ref="prev"/><name>B</name><init>=<expr><name>ss</name></expr></init></decl>;</decl_stmt>
<function><specifier>inline</specifier> <type><name>char</name></type> <name>gc</name><parameter_list>()</parameter_list><block>{<return>return <expr><ternary><condition><expr><name>A</name><operator>==</operator><name>B</name><operator>&amp;&amp;</operator><operator>(</operator><name>B</name><operator>=</operator><operator>(</operator><name>A</name><operator>=</operator><name>ss</name><operator>)</operator><operator>+</operator><call><name>fread</name><argument_list>(<argument><expr><name>ss</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">17</literal></expr></argument>,<argument><expr><name>stdin</name></expr></argument>)</argument_list></call><operator>,</operator><name>A</name><operator>==</operator><name>B</name><operator>)</operator></expr>?</condition><then><expr><operator>-</operator><literal type="number">1</literal></expr></then><else>:<expr><operator>*</operator><name>A</name><operator>++</operator></expr></else></ternary></expr>;</return>}</block></function>
<function><template>template<parameter_list>&lt;<parameter><type><name>class</name></type> <name>T</name></parameter>&gt;</parameter_list></template><specifier>inline</specifier> <type><name>void</name></type> <name>sd</name><parameter_list>(<parameter><decl><type><name>T</name><modifier>&amp;</modifier></type><name>x</name></decl></parameter>)</parameter_list><block>{
	<decl_stmt><decl><type><name>char</name></type> <name>c</name></decl>;</decl_stmt><decl_stmt><decl><type><name>T</name></type> <name>y</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt><while>while<condition>(<expr><name>c</name><operator>=</operator><call><name>gc</name><argument_list>()</argument_list></call></expr><operator>,</operator><expr><operator>(</operator><name>c</name><operator>&lt;</operator><literal type="number">48</literal><operator>||</operator><literal type="number">57</literal><operator>&lt;</operator><name>c</name><operator>)</operator><operator>&amp;&amp;</operator><name>c</name><operator>!=</operator><operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><if>if<condition>(<expr><name>c</name><operator>==</operator><literal type="number">45</literal></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>y</name><operator>=</operator><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if></block></while><expr_stmt><expr><name>x</name><operator>=</operator><name>c</name><operator>-</operator><literal type="number">48</literal></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>c</name><operator>=</operator><call><name>gc</name><argument_list>()</argument_list></call></expr><operator>,</operator><expr><literal type="number">47</literal><operator>&lt;</operator><name>c</name><operator>&amp;&amp;</operator><name>c</name><operator>&lt;</operator><literal type="number">58</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>x</name><operator>=</operator><name>x</name><operator>*</operator><literal type="number">10</literal><operator>+</operator><name>c</name><operator>-</operator><literal type="number">48</literal></expr>;</expr_stmt></block></while><expr_stmt><expr><name>x</name><operator>*=</operator><name>y</name></expr>;</expr_stmt>
}</block></function>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name><init>=<expr><literal type="number">1e5</literal><operator>+</operator><literal type="number">5</literal></expr></init></decl>;</decl_stmt>
<typedef>typedef <type><name>int</name></type> <name><name>arr</name><index>[<expr><name>N</name></expr>]</index></name>;</typedef>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt><decl_stmt><decl><type><name>arr</name></type> <name>a</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>ONLINE_JUDGE</name></cpp:ifndef>
		<expr_stmt><expr><call><name>file</name><argument_list>(<argument><expr><literal type="string">"s"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name>sd</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<macro><name>fp</name><argument_list>(<argument>i</argument>,<argument><literal type="number">1</literal></argument>,<argument>n</argument>)</argument_list></macro><expr_stmt><expr><call><name>sd</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>a</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>a</name><operator>+</operator><name>n</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>dx</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>dy</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<macro><name>fp</name><argument_list>(<argument>i</argument>,<argument><literal type="number">1</literal></argument>,<argument>n/<literal type="number">2</literal></argument>)</argument_list></macro>
		<expr_stmt><expr><name>dy</name><operator>+=</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr><operator>,</operator><expr><name>dx</name><operator>+=</operator><name><name>a</name><index>[<expr><name>n</name><operator>-</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
	<if>if<condition>(<expr><name>n</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>dx</name><operator>+=</operator><name><name>a</name><index>[<expr><name>n</name><operator>/</operator><literal type="number">2</literal><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt></block></then></if>
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%lld\n"</literal></expr></argument>,<argument><expr><operator>(</operator><name>ll</name><operator>)</operator><name>dx</name><operator>*</operator><name>dx</name><operator>+</operator><operator>(</operator><name>ll</name><operator>)</operator><name>dy</name><operator>*</operator><name>dy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
