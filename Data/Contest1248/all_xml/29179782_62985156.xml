<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29179782_62985156.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<using>using <name>ll</name> <init>= <type><name>long</name> <name>long</name></type></init>;</using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
  <decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr>;</expr_stmt>

  <while>while <condition>( <expr><name>t</name><operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr> )</condition> <block>{

    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>p_0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>p_1</name></decl>;</decl_stmt>
    <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{
      <decl_stmt><decl><type><name>int</name></type> <name>tp</name></decl>;</decl_stmt>
      <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>tp</name></expr>;</expr_stmt>
      <expr_stmt><expr><name>p_0</name> <operator>+=</operator> <ternary><condition><expr><operator>(</operator> <name>tp</name><operator>%</operator><literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal> <operator>)</operator></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><name>p_1</name> <operator>=</operator> <name>n</name> <operator>-</operator> <name>p_0</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>m</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>m</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>q_0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>q_1</name></decl>;</decl_stmt>
    <for>for <control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>m</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr> )</control> <block>{
      <decl_stmt><decl><type><name>int</name></type> <name>tq</name></decl>;</decl_stmt>
      <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>tq</name></expr>;</expr_stmt>
      <expr_stmt><expr><name>q_0</name> <operator>+=</operator> <ternary><condition><expr><operator>(</operator> <name>tq</name><operator>%</operator><literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal> <operator>)</operator></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><name>q_1</name> <operator>=</operator> <name>m</name> <operator>-</operator> <name>q_0</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>ans</name> <init>= <expr><operator>(</operator> <name>p_0</name><operator>*</operator><name>q_0</name> <operator>)</operator> <operator>+</operator> <operator>(</operator> <name>p_1</name><operator>*</operator><name>q_1</name> <operator>)</operator></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>

  }</block></while>

  <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
