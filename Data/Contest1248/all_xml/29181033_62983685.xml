<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29181033_62983685.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<typedef>typedef <type><name>long</name> <name>double</name></type> <name>ld</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>war</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(long long i=s;i&lt;n;i++)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>speed</name></cpp:macro> <cpp:value>ios_base::sync_with_stdio(false);cin.tie(NULL)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fr</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sc</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mod</name></cpp:macro> <cpp:value>1000000007</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vctr2d</name></cpp:macro> <cpp:value>vector&lt;vector&lt;long long&gt;&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>vctr</name></cpp:macro> <cpp:value>vector&lt;long long&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pll</name></cpp:macro> <cpp:value>pair&lt;long long,long long&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rz</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>resize(n)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>all</name><parameter_list>(<parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>v.begin(),v.end()</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mkp</name></cpp:macro> <cpp:value>make_pair</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mod2</name></cpp:macro>  <cpp:value>998244353</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arrin</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i = 0; i &lt; n ; i++){cin&gt;&gt;a[i];}</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arrout</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i = 0;i &lt; n; i++){cout&lt;&lt;a[i]&lt;&lt;" ";}</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ex</name><parameter_list>(<parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>cout&lt;&lt;s&lt;&lt;endl;exit(0);</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>itr</name></cpp:macro> <cpp:value>iterator</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tra</name><parameter_list>(<parameter><type><name>it</name></type></parameter>,<parameter><type><name>m</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(it=m.begin();it!=m.end();++it)</cpp:value></cpp:define>
<comment type="line">//___________________________________________________________________________________________________________________________________________________________</comment>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
          <decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
          <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
          <while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition>
          <block>{
                    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
                    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name>int</name></type> <name><name>pp</name><index>[<expr><name>n</name></expr>]</index></name></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name>arrin</name><argument_list>(<argument><expr><name>pp</name></expr></argument>,<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name>int</name></type> <name>m</name></decl>;</decl_stmt>
                    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name>int</name></type> <name><name>qq</name><index>[<expr><name>m</name></expr>]</index></name></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name>arrin</name><argument_list>(<argument><expr><name>qq</name></expr></argument>,<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name>ll</name></type> <name>pp_o</name></decl>,<decl><type ref="prev"/><name>qq_o</name></decl>;</decl_stmt>
                    <expr_stmt><expr><name>pp_o</name> <operator>=</operator> <name>qq_o</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
                    <macro><name>war</name><argument_list>(<argument>i</argument>,<argument><literal type="number">0</literal></argument>,<argument>n</argument>)</argument_list></macro>
                    <block>{
                              <expr_stmt><expr><name>pp_o</name> <operator>+=</operator> <operator>(</operator><name><name>pp</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>
                    }</block>
                    <macro><name>war</name><argument_list>(<argument>i</argument>,<argument><literal type="number">0</literal></argument>,<argument>m</argument>)</argument_list></macro>
                    <block>{
                              <expr_stmt><expr><name>qq_o</name> <operator>+=</operator> <operator>(</operator><name><name>qq</name><index>[<expr><name>i</name></expr>]</index></name><operator>%</operator><literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>
                    }</block>
                    <decl_stmt><decl><type><name>ll</name></type> <name>ans</name> <init>= <expr><name>pp_o</name><operator>*</operator><name>qq_o</name></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name>ans</name> <operator>+=</operator> <operator>(</operator><name>n</name><operator>-</operator><name>pp_o</name><operator>)</operator><operator>*</operator><operator>(</operator><name>m</name><operator>-</operator><name>qq_o</name><operator>)</operator></expr>;</expr_stmt>
                    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
          }</block></while>


}</block></function>
</unit>
