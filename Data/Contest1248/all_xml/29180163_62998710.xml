<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29180163_62998710.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>int</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ld</name></cpp:macro> <cpp:value>long double</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fi</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>se</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pii</name></cpp:macro> <cpp:value>pair&lt;int,int&gt;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>all</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(x).begin(), (x).end()</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>MOD</name> <init>= <expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>mpow</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>p</name><init>=<expr><name>MOD</name></expr></init></decl></parameter>)</parameter_list><block>{<expr_stmt><expr><name>a</name><operator>=</operator><name>a</name><operator>%</operator><name>p</name></expr>;</expr_stmt><decl_stmt><decl><type><name>int</name></type> <name>res</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt><while>while<condition>(<expr><name>b</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><block>{<if>if<condition>(<expr><name>b</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>res</name><operator>=</operator><operator>(</operator><name>res</name><operator>*</operator><name>a</name><operator>)</operator><operator>%</operator><name>p</name></expr>;</expr_stmt></block></then></if><expr_stmt><expr><name>a</name><operator>=</operator><operator>(</operator><name>a</name><operator>*</operator><name>a</name><operator>)</operator><operator>%</operator><name>p</name></expr>;</expr_stmt><expr_stmt><expr><name>b</name><operator>=</operator><name>b</name><operator>&gt;&gt;</operator><literal type="number">1</literal></expr>;</expr_stmt>}</block></while><return>return <expr><name>res</name><operator>%</operator><name>p</name></expr>;</return>}</block></function>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name><init>=<expr><literal type="number">1e5</literal><operator>+</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>f</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int32_t</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
      <expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>ONLINE_JUDGE</name></cpp:ifndef>
      <expr_stmt><expr><call><name>freopen</name><argument_list>(<argument><expr><literal type="string">"input.txt"</literal></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>, <argument><expr><name>stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="line">// freopen("output.txt","w",stdout);</comment>
      <cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
      <expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>=</operator><literal type="number">4</literal></expr>;</expr_stmt>
      <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">3</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>N</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>%</operator><name>MOD</name></expr>;</expr_stmt></block></for>
      <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
      <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
      <comment type="line">// int x=n-3;</comment>
      <comment type="line">// cout&lt;&lt;mpow(2,x)&lt;&lt;" ";</comment>
      <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><operator>(</operator><name><name>f</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>f</name><index>[<expr><name>m</name></expr>]</index></name><operator>+</operator><name><name>f</name><index>[<expr><name>n</name></expr>]</index></name><operator>-</operator><operator>(</operator><name><name>f</name><index>[<expr><name>n</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>f</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>)</operator><operator>%</operator><name>MOD</name><operator>&lt;&lt;</operator><literal type="string">"\n"</literal></expr>;</expr_stmt>
      <comment type="line">// int tot=(n*m);</comment>
      <comment type="line">// int ans=0;</comment>
      <comment type="line">// for(int ii=0;ii&lt;(1LL&lt;&lt;tot);ii++)</comment>
      <comment type="line">// {</comment>
      <comment type="line">//   int a[n][m];</comment>
      <comment type="line">//   for(int j=0;j&lt;tot;j++)</comment>
      <comment type="line">//   {</comment>
      <comment type="line">//     int x;</comment>
      <comment type="line">//     if(ii&amp;(1LL&lt;&lt;j)) x=1;</comment>
      <comment type="line">//     else x=0;</comment>
      <comment type="line">//     a[j/m][j%m]=x;</comment>
      <comment type="line">//   }</comment>
      <comment type="line">//   bool f=true;</comment>
      <comment type="line">//   for(int i=0;i&lt;n;i++)</comment>
      <comment type="line">//   {</comment>
      <comment type="line">//     for(int j=0;j&lt;m;j++)</comment>
      <comment type="line">//     {</comment>
      <comment type="line">//       int cnt=0;</comment>
      <comment type="line">//       if(i-1&gt;=0&amp;&amp;a[i-1][j]==a[i][j]) cnt++;</comment>
      <comment type="line">//       if(i+1&lt;n&amp;&amp;a[i+1][j]==a[i][j]) cnt++;</comment>
      <comment type="line">//       if(j-1&gt;=0&amp;&amp;a[i][j-1]==a[i][j]) cnt++;</comment>
      <comment type="line">//       if(j+1&lt;m&amp;&amp;a[i][j+1]==a[i][j]) cnt++;</comment>
      <comment type="line">//       if(cnt&gt;1) f=false;</comment>
      <comment type="line">//     }</comment>
      <comment type="line">//   }</comment>
      <comment type="line">//   if(f) ans++;</comment>
      <comment type="line">// }</comment>
      <comment type="line">// cout&lt;&lt;ans&lt;&lt;"\n";</comment>
}</block></function>
<comment type="line">// I never lose. I either win or I learn</comment></unit>
