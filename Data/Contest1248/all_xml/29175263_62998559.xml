<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29175263_62998559.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstdlib&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><literal type="number">501</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name>ans1</name></decl>,<decl><type ref="prev"/><name>ans2</name></decl>,<decl><type ref="prev"/><name>ans</name><init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>char</name></type> <name>v</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>u</name></decl>,<decl><type ref="prev"/><name>mn</name></decl>,<decl><type ref="prev"/><name>mm</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>v</name></expr>;</expr_stmt>
		<if>if<condition>(<expr><name>v</name><operator>==</operator><literal type="char">'('</literal></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then>
		<else>else
			<block type="pseudo"><expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block></else></if>
	}</block></for>
	<expr_stmt><expr><name>u</name><operator>=</operator><literal type="number">0</literal></expr><operator>,</operator><expr><name>mn</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>k</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>k</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>k</name><operator>++</operator></expr></incr>)</control>
		<block type="pseudo"><expr_stmt><expr><name>u</name><operator>+=</operator><name><name>a</name><index>[<expr><name>k</name></expr>]</index></name></expr><operator>,</operator><expr><name>mn</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>mn</name></expr></argument>,<argument><expr><name>u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
	<expr_stmt><expr><name>u</name><operator>=</operator><literal type="number">0</literal></expr><operator>,</operator><expr><name>mm</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>k</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>k</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>k</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name>u</name><operator>+=</operator><name><name>a</name><index>[<expr><name>k</name></expr>]</index></name></expr>;</expr_stmt>
		<if>if<condition>(<expr><name>u</name><operator>==</operator><name>mn</name></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name>mm</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
	}</block></for>
	<if>if<condition>(<expr><name>mm</name><operator>&gt;</operator><name>ans</name></expr>)</condition><then>
		<block type="pseudo"><expr_stmt><expr><name>ans</name><operator>=</operator><name>mm</name></expr><operator>,</operator><expr><name>ans1</name><operator>=</operator><literal type="number">1</literal></expr><operator>,</operator><expr><name>ans2</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
	<if>if<condition>(<expr><name>u</name></expr>)</condition><then>
	<block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">0</literal><operator>&lt;&lt;</operator><name>endl</name><operator>&lt;&lt;</operator><literal type="string">"1 1"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block type="pseudo"><for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
		<block>{
			<expr_stmt><expr><name>u</name><operator>=</operator><literal type="number">0</literal></expr><operator>,</operator><expr><name>mn</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for>for<control>(<init><decl><type><name>int</name></type> <name>k</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>k</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>k</name><operator>++</operator></expr></incr>)</control>
				<block type="pseudo"><expr_stmt><expr><name>u</name><operator>+=</operator><name><name>a</name><index>[<expr><name>k</name></expr>]</index></name></expr><operator>,</operator><expr><name>mn</name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name>mn</name></expr></argument>,<argument><expr><name>u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for>
			<expr_stmt><expr><name>u</name><operator>=</operator><literal type="number">0</literal></expr><operator>,</operator><expr><name>mm</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
			<for>for<control>(<init><decl><type><name>int</name></type> <name>k</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>k</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>k</name><operator>++</operator></expr></incr>)</control>
			<block>{
				<expr_stmt><expr><name>u</name><operator>+=</operator><name><name>a</name><index>[<expr><name>k</name></expr>]</index></name></expr>;</expr_stmt>
				<if>if<condition>(<expr><name>u</name><operator>==</operator><name>mn</name></expr>)</condition><then>
					<block type="pseudo"><expr_stmt><expr><name>mm</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
			}</block></for>
			<if>if<condition>(<expr><name>mm</name><operator>&gt;</operator><name>ans</name></expr>)</condition><then>
				<block type="pseudo"><expr_stmt><expr><name>ans</name><operator>=</operator><name>mm</name></expr><operator>,</operator><expr><name>ans1</name><operator>=</operator><name>i</name></expr><operator>,</operator><expr><name>ans2</name><operator>=</operator><name>j</name></expr>;</expr_stmt></block></then></if>
			<expr_stmt><expr><call><name>swap</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for></block></for>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name><operator>&lt;&lt;</operator><name>ans1</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name>ans2</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
