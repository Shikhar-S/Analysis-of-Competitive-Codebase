<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29174157_62978774.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name> ;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>long</name> <name>long</name> <name>int</name></type> <name>N</name> <init>= <expr><literal type="number">2e5</literal> <operator>+</operator> <literal type="number">100</literal></expr></init></decl> ;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>n</name></decl> , <decl><type ref="prev"/><name>m</name></decl> , <decl><type ref="prev"/><name><name>q</name><index>[<expr><name>N</name></expr>]</index></name></decl> , <decl><type ref="prev"/><name><name>p</name><index>[<expr><name>N</name></expr>]</index></name></decl> , <decl><type ref="prev"/><name>t</name></decl> ;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr> ;</expr_stmt>
	<while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition><block>{
		<decl_stmt><decl><type><name>long</name> <name>long</name> <name>int</name></type> <name>cnt1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>cnt2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> , <decl><type ref="prev"/><name>cnt3</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ,<decl><type ref="prev"/><name>cnt4</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</decl_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr> ;</expr_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
			<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>p</name><index>[<expr><name>i</name></expr>]</index></name></expr> ;</expr_stmt>
			<if>if<condition>(<expr><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name> <operator>%</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
				<expr_stmt><expr><name>cnt1</name><operator>++</operator></expr> ;</expr_stmt>
			}</block></then><else>else<block>{
				<expr_stmt><expr><name>cnt2</name><operator>++</operator></expr> ;</expr_stmt>
			}</block></else></if>
		}</block></for>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>m</name></expr> ;</expr_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>m</name></expr> ;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control><block>{
			<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>q</name><index>[<expr><name>i</name></expr>]</index></name></expr> ;</expr_stmt>
			<if>if<condition>(<expr><name><name>q</name><index>[<expr><name>i</name></expr>]</index></name> <operator>%</operator> <literal type="number">2</literal></expr>)</condition><then><block>{
				<expr_stmt><expr><name>cnt3</name><operator>++</operator></expr> ;</expr_stmt>
			}</block></then><else>else<block>{
				<expr_stmt><expr><name>cnt4</name><operator>++</operator></expr> ;</expr_stmt>
			}</block></else></if>
		}</block></for>
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>cnt1</name> <operator>*</operator> <name>cnt3</name> <operator>+</operator> <name>cnt2</name> <operator>*</operator> <name>cnt4</name> <operator>&lt;&lt;</operator> <literal type="char">'\n'</literal></expr> ;</expr_stmt>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr> ;</return>
}</block></function>
</unit>
