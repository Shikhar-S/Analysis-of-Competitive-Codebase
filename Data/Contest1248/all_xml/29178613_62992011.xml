<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1248/all/29178613_62992011.cpp"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_CRT_SECURE_NO_WARNINGS</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cmath&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;set&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;queue&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ull</name></cpp:macro> <cpp:value>unsigned long long</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>INF</name> <init>= <expr><literal type="number">1e18</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>double</name></type> <name>PI</name> <init>= <expr><call><name>acos</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">1.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>MAX_N</name> <init>= <expr><literal type="number">100005</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>MOD</name> <init>= <expr><literal type="number">1e9</literal> <operator>+</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>dpA</name><index>[<expr><name>MAX_N</name></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>dpB</name><index>[<expr><name>MAX_N</name></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<comment type="line">//freopen(".in", "r", stdin);</comment>
	<comment type="line">//freopen(".out", "w", stdout);</comment>
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name> <operator>&gt;&gt;</operator> <name>m</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name>dpA</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>dpB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>dpA</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>dpB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_N</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name><name>dpA</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>dpB</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name><name>dpB</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>dpB</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>dpA</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name><name>dpA</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>dpA</name><index>[<expr><name>i</name></expr>]</index></name> <operator>%=</operator> <name>MOD</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>dpB</name><index>[<expr><name>i</name></expr>]</index></name> <operator>%=</operator> <name>MOD</name></expr>;</expr_stmt>
	}</block></for>

	<decl_stmt><decl><type><name>ll</name></type> <name>res</name> <init>= <expr><operator>(</operator><name><name>dpA</name><index>[<expr><name>n</name></expr>]</index></name> <operator>+</operator> <name><name>dpB</name><index>[<expr><name>n</name></expr>]</index></name> <operator>+</operator> <name><name>dpA</name><index>[<expr><name>m</name></expr>]</index></name> <operator>+</operator> <name><name>dpB</name><index>[<expr><name>m</name></expr>]</index></name> <operator>+</operator> <name>MOD</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator> <operator>%</operator> <name>MOD</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>res</name></expr>;</expr_stmt>

	<comment type="line">//system("pause");</comment>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
