include directive file define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name name using namespace name struct name block public type default function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean comment type line comment type line decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name macro name argument_list argument expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name while condition expr call name name operator name argument_list operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list operator operator operator call name name operator name argument_list operator call name name operator name argument_list operator name operator operator call name name operator name argument_list operator decl_stmt decl type name name init expr call name name operator name argument_list operator operator operator call name name operator name argument_list operator operator call name name operator name argument_list operator call name name operator name argument_list operator name operator decl_stmt decl type name name init expr literal type boolean if condition expr name then block decl_stmt decl type name name init expr operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list if condition expr call name name operator name argument_list then block decl_stmt decl type name name init expr call name name operator name argument_list operator name decl_stmt decl type name name init expr call name name operator name argument_list operator name expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator name comment type line if condition expr call name name operator name argument_list operator call name name operator name argument_list operator name operator name operator call name name operator name argument_list argument expr call name name operator name argument_list operator name operator call name name operator name argument_list operator operator operator call name name operator name argument_list operator call name name operator name argument_list operator name operator operator call name name operator name argument_list operator then block expr_stmt expr name operator literal type boolean expr_stmt expr name operator call name name operator name argument_list operator name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr name operator name operator operator call name name operator name argument_list operator literal type number operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name elseif if condition expr call name name operator name argument_list then block decl_stmt decl type name name init expr operator call name name operator name argument_list if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block decl_stmt decl type name name init expr name operator name operator operator call name name operator name argument_list operator literal type number operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list if condition expr name operator operator name then block decl_stmt decl type name name init expr call name name operator name argument_list operator name decl_stmt decl type name name init expr call name name operator name argument_list operator name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block decl_stmt decl type name name init expr name operator name if condition expr call name name operator name argument_list then block type pseudo expr_stmt expr name operator call name name operator name argument_list operator name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type char return expr literal type number 
