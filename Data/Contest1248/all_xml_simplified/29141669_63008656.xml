comment type block include directive file using namespace name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list comment type line for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr literal type number if condition expr name name index expr operator name operator literal type number operator name operator operator name operator literal type char operator name name index expr name operator literal type char then block type pseudo continue decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name operator operator name operator name operator incr expr name operator block if condition expr name name index expr name operator name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo break if condition expr name operator literal type number then block return expr name return expr literal type number function type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type name name parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name name index expr name name index expr name operator literal type char expr_stmt expr name name index expr name name index expr name operator literal type char comment type line decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name name index expr name operator literal type char expr_stmt expr name name index expr name name index expr name operator literal type char return expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator call name name operator name argument_list then block expr_stmt expr name operator literal type number operator name expr_stmt expr name operator literal type number operator literal type string operator literal type number operator name return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name init expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name operator literal type number operator literal type string operator name name operator name operator name operator literal type number operator name return expr literal type number 
