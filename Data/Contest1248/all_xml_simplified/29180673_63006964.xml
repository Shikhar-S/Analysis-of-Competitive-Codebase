include directive file define directive macro name value define directive macro name parameter_list parameter type name parameter type name value using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list expr_stmt expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name operator literal type number operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name operator operator name operator literal type number operator literal type number operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr name operator call name argument_list argument expr name operator name expr_stmt expr name name index expr name operator name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name name index expr name operator operator literal type number while condition expr name operator name block decl_stmt decl type name name init expr name name index expr name operator expr_stmt expr name name index expr name operator literal type number for control init decl type name name range expr name name index expr name block expr_stmt expr name operator name if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type number operator expr name name index expr name operator operator name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string return expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator operator literal type number operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name operator operator name operator literal type number operator literal type number operator while condition expr name operator name block decl_stmt decl type name name init expr name name index expr name operator expr_stmt expr name name index expr name operator name operator literal type number for control init decl type name name range expr name name index expr name block comment type line if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type number operator expr name name index expr name operator operator name operator name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string return expr_stmt expr call name argument_list argument expr literal type string function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator block type pseudo expr_stmt expr call name argument_list 
