include directive file define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list value define directive macro name parameter_list value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list value define directive macro name parameter_list parameter type name value define directive macro name parameter_list value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value using namespace name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name operator name decl type ref prev name init expr literal type number while condition expr name block if condition expr name operator literal type number then block expr_stmt expr name operator name operator expr name operator name expr_stmt expr name operator name operator expr name operator name operator expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name block return expr name operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator name expr_stmt expr name operator name function type name name parameter_list parameter decl type name name block function type name name parameter_list parameter decl type name name parameter decl type name name block while condition expr name operator name block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr call name argument_list argument expr name then block type pseudo expr_stmt expr name operator name operator literal type number else block type pseudo expr_stmt expr name operator name operator literal type number return expr name function type name name parameter_list parameter decl type name name block return expr name operator literal type number function type name name parameter_list parameter decl type name name block return expr name operator literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number return expr operator name operator call name argument_list argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name operator call name argument_list argument expr name operator name operator name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name operator call name argument_list argument expr name operator name operator name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr call name argument_list argument expr name operator name operator name then block type pseudo return expr literal type number return expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr operator name operator name operator operator operator name operator name operator operator operator name operator name operator operator operator name operator name operator function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type boolean if condition expr name operator literal type number then block type pseudo return expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block type pseudo if condition expr name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function specifier type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name name argument_list type generic argument expr literal type number operator name literal type number block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type number operator name operator literal type number block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type number expr_stmt expr name operator call name argument_list return expr name operator name function specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name if condition expr name operator literal type number then block type pseudo return expr name if condition expr operator operator name operator literal type number operator operator operator operator name operator literal type number operator then block type pseudo return expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator literal type number elseif if condition expr operator operator name operator literal type number operator then block type pseudo return expr call name argument_list argument expr name argument expr name operator literal type number elseif if condition expr operator operator name operator literal type number operator then block type pseudo return expr call name argument_list argument expr name operator literal type number argument expr name else block type pseudo return expr call name argument_list argument expr call name argument_list argument expr name operator name argument expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator name operator call name argument_list argument expr name argument expr name decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name decl_stmt decl type name name init expr operator name if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name name index expr name operator name name index expr name operator literal type number operator operator operator name name index expr name operator name name index expr name operator literal type number operator else block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name name index expr name operator name name index expr name operator literal type number operator operator operator name name index expr name operator name name index expr name operator literal type number operator expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name operator literal type number operator literal type number operator name name index expr name operator literal type number operator literal type number operator operator name name index expr name operator name name index expr name operator literal type number operator literal type number operator operator operator name name index expr name operator name name index expr name operator literal type number operator literal type number operator expr_stmt expr name operator name return expr literal type number 
