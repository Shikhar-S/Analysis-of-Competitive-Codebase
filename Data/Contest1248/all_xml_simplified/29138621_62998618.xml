comment type line include directive file using namespace name using name init type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name block expr_stmt expr name operator operator ternary condition expr name then expr literal type string else expr literal type string operator return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block decl_stmt decl specifier type name name name index expr name decl type ref prev name decl_stmt decl specifier type name name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator operator name expr_stmt expr name name index expr name operator operator name expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name elseif if condition expr name name index expr name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr operator name for control init condition incr block decl_stmt decl type name name init expr name name index expr operator name expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo break function type name name parameter_list parameter decl type name name block expr_stmt expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name argument expr name operator name operator literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name operator name operator literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name operator name operator literal type number argument expr literal type number function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name if condition expr name operator name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name then block expr_stmt expr call name argument_list argument expr literal type number return decl_stmt decl type name name argument_list type generic argument expr name name init expr name name index expr literal type number decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name range expr name name index expr name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr name operator call name name operator name argument_list operator literal type char operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator literal type char function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list return expr literal type number 
