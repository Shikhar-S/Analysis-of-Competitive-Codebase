include directive file using namespace name typedef type name name name typedef type name name name name typedef type name name name define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list expr_stmt expr call name name operator name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type boolean expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr operator literal type number for control init decl type name name range expr name block if condition expr operator name name index expr name then block expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type boolean if condition expr call name name operator name argument_list operator name then block expr_stmt expr name operator literal type boolean for control init decl type name name range expr name block expr_stmt expr name name index expr name operator name for control init decl type name name range expr name block if condition expr operator name then block type pseudo break for control init decl type name name range expr name name index expr name block if condition expr name name index expr name operator name then block expr_stmt expr name operator literal type boolean if condition expr call name name operator name argument_list operator name then block expr_stmt expr name operator name if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string operator name operator call name name operator name argument_list operator literal type string decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type boolean for control init decl type name name range expr name block expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator literal type string return expr literal type number 
