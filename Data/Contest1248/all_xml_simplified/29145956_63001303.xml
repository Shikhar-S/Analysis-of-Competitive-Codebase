include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name typedef type name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name specifier name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr name operator name decl_stmt decl type name name name index expr name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl name name index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator operator name operator block expr name name index expr name expr name expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name index expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr name condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr name operator literal type number index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number expr_stmt expr name name index expr name index expr literal type number operator call name argument_list argument expr name name index expr name operator literal type number index expr literal type number argument expr name name index expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name continue for control init decl type name name init expr name condition expr name operator literal type number incr expr operator name block expr_stmt expr name name index expr name index expr literal type number operator call name argument_list argument expr name name index expr name operator literal type number index expr literal type number argument expr name name index expr name if condition expr name name index expr name index expr literal type number operator name name index expr name operator literal type number operator literal type number operator name name index expr name operator literal type number index expr literal type number operator name name index expr name operator name name index expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr operator name expr_stmt expr name operator name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name operator expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name return expr literal type number 
