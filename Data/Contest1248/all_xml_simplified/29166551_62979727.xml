include directive file using namespace name using name init type name name name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function type name name parameter_list parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name return expr name function type name name parameter_list parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name return expr name function type name name parameter_list parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name return expr name function type name name parameter_list parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name return expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr literal type string argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr literal type string argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name init expr literal type number block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr operator name operator name function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr literal type string argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name name operator name expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr name name operator name function type name name parameter_list parameter decl type name name block macro name argument_list argument block expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list function type name name parameter_list parameter decl type name name block macro name argument_list argument block expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list function type name name parameter_list parameter decl type name name block macro name argument_list argument block expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr operator name operator name operator then expr name else expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr operator name operator name operator then expr name else expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr name operator name operator name operator call name argument_list argument expr name argument expr name argument expr name operator call name argument_list argument expr name argument expr name argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr operator name else expr name decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list macro name argument_list argument block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument block expr_stmt expr name name index expr name operator call name argument_list if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument block expr_stmt expr name name index expr name operator call name argument_list if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator expr_stmt expr name operator name operator name operator name operator name operator name return expr literal type number 
