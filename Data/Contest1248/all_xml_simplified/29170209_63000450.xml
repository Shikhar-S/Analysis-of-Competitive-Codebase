include directive file typedef type name name name using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl name name index expr name operator literal type number define directive macro name value define directive macro name value define directive macro name value function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name operator name name index expr name operator name operator literal type number expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name operator name operator literal type number if condition expr name operator name then block type pseudo return expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator expr call name argument_list argument expr name argument expr name operator literal type number argument expr name function specifier type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name else block decl_stmt decl type name name init expr name name index expr name operator name expr_stmt expr name name index expr name operator ternary condition expr operator name name index expr name operator name operator name name index expr name operator name operator then expr name name index expr name else expr name name index expr name expr_stmt expr name name index expr name operator name operator name function specifier type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block expr_stmt expr name name index expr name operator name operator name name index expr name operator name operator expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name operator expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name return expr_stmt expr call name argument_list argument expr name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name operator name operator name then block if condition expr name name index expr name operator name operator name name operator name then block expr_stmt expr name operator name name index expr name elseif if condition expr name name index expr name operator name operator name name operator name then block expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name name index expr name operator name expr_stmt expr name name operator name operator name name index expr name operator name return expr_stmt expr call name argument_list argument expr name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name operator literal type number argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name operator name operator name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name argument expr name return expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr call name argument_list argument expr name argument expr name operator name expr_stmt expr call name argument_list argument expr literal type string function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr name operator literal type number operator name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator name operator operator ternary condition expr name name index expr name operator literal type char then expr literal type number else expr operator literal type number operator expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name argument expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name operator name argument expr name argument expr name name index expr name operator name comment type line if condition expr call name argument_list argument expr name argument expr name operator name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator name operator literal type number if condition expr name name index expr name operator literal type number then block if condition expr name name operator name operator literal type number then block if condition expr name name operator name operator name then block expr_stmt expr name operator name name operator name expr_stmt expr name operator name operator literal type number else block if condition expr name name operator name operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name argument expr name name operator name argument expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator name operator literal type number expr_stmt expr call name argument_list argument expr name name operator name operator literal type number if condition expr name name operator name operator name then block expr_stmt expr name operator name name operator name expr_stmt expr name operator name operator expr name operator name name operator name operator literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name argument expr name name operator name argument expr operator literal type number elseif if condition expr name name operator name operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name argument expr name name operator name argument expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator name operator literal type number expr_stmt expr call name argument_list argument expr name name operator name operator operator literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name argument expr name name operator name argument expr literal type number if condition expr name name operator name operator name name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name name operator name operator literal type number argument expr name name operator name argument expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator name operator literal type number expr_stmt expr call name argument_list argument expr name name operator name operator literal type number if condition expr name name operator name operator name then block expr_stmt expr name operator name name operator name expr_stmt expr name operator name operator expr name operator name name operator name operator literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name argument expr name name operator name argument expr operator literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name argument expr name argument expr operator name name index expr name if condition expr name operator name then block type pseudo expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name return expr literal type number 
