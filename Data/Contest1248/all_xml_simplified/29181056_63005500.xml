include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name argument_list type generic argument expr name name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name define directive macro name value comment type block class name block private type default public decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name block return expr operator name operator literal type number operator function type name name parameter_list parameter decl type name name block return expr operator name operator literal type number operator operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator name else block expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr operator name operator name operator operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr operator name operator name operator operator literal type number operator literal type number argument expr name decl_stmt decl type name name init expr name name index expr call name argument_list argument expr name decl_stmt decl type name name init expr name name index expr call name argument_list argument expr name expr_stmt expr name name index expr name operator ternary condition expr name name index expr name operator name name index expr name then expr name else expr name constructor name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr literal type number operator name argument expr operator literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name operator name operator name then block type pseudo return expr operator literal type number if condition expr name operator name operator name operator name then block type pseudo return expr name name index expr name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr operator name operator name operator operator literal type number argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr operator name operator name operator operator literal type number operator literal type number argument expr name argument expr name argument expr name if condition expr name operator operator literal type number then block type pseudo return expr name if condition expr name operator operator literal type number then block type pseudo return expr name return expr operator ternary condition expr name name index expr name operator name name index expr name then expr name else expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number return expr call name argument_list argument expr literal type number argument expr literal type number argument expr name operator literal type number argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr name if condition expr name operator operator name operator name operator operator literal type number then block type pseudo return expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr operator name operator name operator operator literal type number argument expr name return expr call name argument_list argument expr call name argument_list argument expr name argument expr operator name operator name operator operator literal type number operator literal type number argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr name operator literal type number argument expr name expr_stmt expr name operator literal type number while condition expr name operator literal type number block decl_stmt decl type name name init expr name name index expr call name argument_list argument expr name decl_stmt decl type name name init expr name name index expr call name argument_list argument expr name if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator ternary condition expr name name index expr name operator name name index expr name then expr name else expr name expr_stmt expr name operator literal type number class name block private type default public decl_stmt decl type name name decl_stmt decl type name name constructor name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr operator name name index expr name operator name operator name operator then expr name else expr operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator call name argument_list argument expr name argument expr name then block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name else block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator function type name name parameter_list block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo if condition expr name name index expr name operator name operator name name index expr name operator name then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list block decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name return expr call name name operator name argument_list function type name name parameter_list parameter decl type name name block comment type line comment type line comment type line comment type line comment type line decl_stmt decl type name name argument_list argument expr literal type number argument expr name return expr name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type char expr literal type char expr literal type char expr literal type char expr literal type char decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name then block type pseudo return for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr operator literal type number operator literal type number operator for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name index expr name operator name name index expr name index expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr name name index expr name index expr name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator operator literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name decl_stmt decl type name name init expr operator literal type number operator literal type number operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name decl_stmt decl type name name name index expr name expr_stmt expr name name index expr literal type number operator name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator name operator literal type number if condition expr name name index expr name operator literal type number operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr literal type string argument expr literal type number decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name operator literal type number argument expr name operator literal type number 
