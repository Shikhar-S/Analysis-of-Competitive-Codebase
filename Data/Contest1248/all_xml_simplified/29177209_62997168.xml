include directive file using namespace name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string for control init decl type specifier specifier modifier name range expr name block expr_stmt expr name operator name operator literal type string expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name comment type line comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number operator operator name operator name operator incr expr name operator block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr name operator name operator literal type number then block expr_stmt expr name name index expr name operator name index expr name operator name operator literal type number decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number decl_stmt decl type name name name index init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr name operator name name index expr name decl_stmt decl type name name init expr name operator name name index expr name if condition expr name operator literal type number operator name operator name operator name operator literal type number operator name operator name then block type pseudo continue if condition expr name name index expr name index expr name operator name name index expr name index expr name then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr name operator literal type boolean break if condition expr name then block expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name operator literal type string expr_stmt expr name operator name expr_stmt expr name operator name return expr name function type name name parameter_list block decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name comment type line if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr name operator literal type number operator name return elseif if condition expr name operator literal type number operator name operator literal type number then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator name operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator name operator name return expr_stmt expr name operator operator operator literal type number operator name name index expr name operator name operator literal type number operator name name index expr name operator name operator operator name operator name operator literal type number operator operator name operator name function type name name parameter_list block ifdef directive name expr_stmt expr call name name operator name argument_list argument expr name name operator name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list 
