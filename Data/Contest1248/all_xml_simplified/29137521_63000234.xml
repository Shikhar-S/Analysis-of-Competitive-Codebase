include directive file define directive macro name value using namespace name namespace name block function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block return expr name return expr call name argument_list argument expr name argument expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator else block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr name argument expr name decl_stmt decl type name name init expr name expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name operator name function template parameter_list parameter type name name specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator literal type char operator operator call name argument_list argument expr name block type pseudo expr_stmt expr name operator call name argument_list if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number operator expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type char decl_stmt decl type specifier name name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name name init expr call name name operator name name argument_list type generic argument expr name name argument_list decl_stmt decl type name name name init expr call name name operator name name argument_list type generic argument expr name name argument_list decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number operator literal type number incr expr name operator block decl_stmt decl type name name name init expr name expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr literal type number if condition expr name operator literal type number then block expr_stmt expr name operator literal type number elseif if condition expr name operator literal type number then block expr_stmt expr name operator literal type number else block for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name name init expr name expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator name operator operator name return expr literal type number 
