include directive file using namespace name comment type line define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name parameter type modifier value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type modifier value define directive macro name parameter_list parameter type name value ifndef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier endif directive comment type line function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number function type name name parameter_list block expr_stmt expr name operator literal type char function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator literal type char operator name expr_stmt expr call name argument_list argument expr name operator comment type line struct name block public type default constructor name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl name comment type line struct template parameter_list parameter type name name name block public type default comment type line private decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name public constructor name parameter_list block constructor name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name block expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name block comment type line decl_stmt decl type name name init expr operator name operator call name name operator name argument_list decl type ref prev name init expr literal type number while condition expr operator literal type number operator name operator operator name block type pseudo expr_stmt expr operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number operator name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr literal type number index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name index expr name operator call name name argument_list type generic argument expr name argument_list argument expr name name index expr name operator literal type number index expr name argument expr name name index expr name operator literal type number index expr call name name argument_list type generic argument expr name argument_list argument expr name operator operator literal type number operator operator name operator literal type number operator operator argument expr name operator literal type number function specifier type name name parameter_list parameter decl type specifier name name parameter decl type specifier name name block comment type line decl_stmt decl type name name init expr name name index expr name operator name return expr call name name argument_list type generic argument expr name argument_list argument expr name name index expr name index expr name argument expr name name index expr name index expr name operator operator literal type number operator name operator function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number argument expr literal type number macro name argument_list argument argument block decl_stmt decl type name name init expr name name index expr name if condition expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type number operator else block type pseudo expr_stmt expr name name index expr name operator literal type number operator expr_stmt expr name name index expr name operator literal type number operator name name index expr name if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name macro name argument_list argument argument expr_stmt expr name name index expr name operator name name index expr name operator literal type number decl_stmt decl type name name init expr name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list argument expr literal type number argument expr literal type number macro name argument_list argument argument macro name argument_list argument argument block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block decl_stmt decl type name name init expr name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr name argument expr name name index expr name macro name argument_list argument argument argument literal type number expr_stmt expr call name argument_list argument expr name argument expr name name index expr name operator literal type number macro name argument_list argument argument argument literal type number expr_stmt expr call name argument_list argument expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator macro name argument_list argument argument argument literal type number if condition expr name name index expr name operator literal type number operator name then block type pseudo expr_stmt expr name operator macro name argument_list argument argument argument literal type number if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator if condition expr call name argument_list argument expr name argument expr name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block decl_stmt decl type name name init expr name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr name argument expr name name index expr name macro name argument_list argument argument argument literal type number expr_stmt expr call name argument_list argument expr name argument expr name name index expr name operator literal type number macro name argument_list argument argument argument literal type number expr_stmt expr call name argument_list argument expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator macro name argument_list argument argument argument literal type number if condition expr name name index expr name operator literal type number operator name then block type pseudo expr_stmt expr name operator macro name argument_list argument argument argument literal type number if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator if condition expr call name argument_list argument expr name argument expr name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator literal type char operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type char return expr literal type number 
