include directive file include directive file using namespace name struct name block public type default decl_stmt decl type name name name decl_stmt decl type name name decl type ref prev name constructor name parameter_list parameter decl type name name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block if condition expr name name operator name operator name name operator name operator name name operator name operator literal type number operator name name operator name operator literal type number then block type pseudo return expr name name operator name operator name name operator name if condition expr name name operator name operator name name operator name operator name name operator name operator literal type number operator name name operator name operator literal type number then block type pseudo return expr literal type boolean if condition expr name name operator name operator name name operator name operator name name operator name operator literal type number operator name name operator name operator literal type number then block type pseudo return expr literal type boolean return expr name name operator name operator name name operator name function type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic name decl type ref prev name for control init decl type specifier name modifier name range expr name block if condition expr name name operator name operator literal type number then block expr_stmt expr name name index expr name name index expr literal type number operator literal type boolean expr_stmt expr name name index expr name name index expr literal type number operator name name operator name expr_stmt expr call name name operator name argument_list while condition expr operator call name name operator name argument_list operator name name index expr call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list if condition expr operator operator call name name operator name argument_list operator operator call name name operator name argument_list operator call name name operator name argument_list operator call name name operator name argument_list operator operator operator call name name operator name argument_list operator operator call name name operator name argument_list operator then block expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr operator call name name operator name argument_list then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name argument expr literal type number argument expr operator literal type number else block if condition expr call name name operator name argument_list then block expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name argument expr literal type number argument expr operator literal type number while condition expr operator call name name operator name argument_list operator name name index expr call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list if condition expr operator operator call name name operator name argument_list operator call name name operator name argument_list operator name name operator name operator operator call name name operator name argument_list then block expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name else block expr_stmt expr call name name operator name argument_list argument expr name name operator name for control init decl type specifier specifier modifier name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name return expr literal type number 
