include directive file function type name name parameter_list parameter decl type name block decl_stmt decl type name name do block type pseudo expr_stmt expr name operator call name argument_list condition expr name operator literal type char operator name operator literal type char return expr name operator literal type char decl_stmt decl specifier type name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr name name index expr name else block type pseudo return expr name name index expr name operator name name index expr name operator literal type number function type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator operator ternary condition expr name name index expr name then expr literal type number else expr operator literal type number operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator literal type number operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator name operator literal type number operator name name index expr name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator operator ternary condition expr name name index expr name then expr literal type number else expr operator literal type number operator if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name if condition expr name operator literal type number then block type pseudo return expr literal type number else block type pseudo return expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name block decl_stmt decl type name name expr_stmt expr name name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name then block type pseudo expr_stmt expr operator name else block type pseudo expr_stmt expr operator name if condition expr name operator name then block expr_stmt expr name name operator name operator literal type string operator name name operator name return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl type ref prev name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name name operator name operator name operator name name operator name operator name operator literal type number operator literal type char operator name operator literal type number operator name name operator name return expr literal type number 
