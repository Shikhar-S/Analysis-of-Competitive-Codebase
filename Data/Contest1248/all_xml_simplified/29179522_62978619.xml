comment type block include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name ifdef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier endif directive define directive macro name parameter_list parameter type name value function type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr literal type number argument expr name function type name name parameter_list parameter decl type name name block return expr literal type string operator name operator literal type string function_decl template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr literal type string operator call name argument_list argument expr name name operator name operator literal type string operator call name argument_list argument expr name name operator name operator literal type string function template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name name block decl_stmt decl type name name init expr literal type string for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block type pseudo expr_stmt expr name operator call name argument_list argument expr name name index expr name operator literal type string if condition expr operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr call name name operator name argument_list expr_stmt expr name operator literal type string return expr name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name operator operator name operator name operator operator operator name operator name operator function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list 
