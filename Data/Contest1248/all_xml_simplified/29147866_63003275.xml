include directive file using namespace name comment type block function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number comment type line decl_stmt decl type name name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr call name argument_list argument expr literal type number argument expr literal type number decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number comment type line expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator name name operator name then block type pseudo expr_stmt expr name name operator name operator elseif if condition expr name operator name name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number expr_stmt expr name operator name name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number comment type line expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator name name operator name then block type pseudo expr_stmt expr name name operator name operator elseif if condition expr name operator name name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name name operator name operator name then block expr_stmt expr name operator name name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator literal type char operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number return expr literal type number 
