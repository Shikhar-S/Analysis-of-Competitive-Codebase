include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value using namespace name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type number operator expr name operator call name argument_list return expr name operator name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl name name index expr literal type number operator literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name name index expr name operator operator name expr_stmt expr name name index expr operator name operator name expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name operator name block if condition expr operator name name index expr name name index expr name operator name then block expr_stmt expr call name argument_list argument expr name name index expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name name index expr name operator name elseif if condition expr name name index expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name name index expr name operator name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr operator name decl_stmt decl type name name init expr literal type number do block expr_stmt expr name operator name name index expr name operator expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number condition expr name operator name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list expr_stmt expr name operator name operator name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block decl_stmt decl type name name init expr name decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name name index expr name operator name operator name name index expr name name index expr name operator name then block type pseudo expr_stmt expr operator name name index expr name name index expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name return expr literal type number 
