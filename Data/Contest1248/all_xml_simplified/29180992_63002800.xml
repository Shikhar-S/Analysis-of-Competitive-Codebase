comment type line include directive file decl_stmt decl type name name operator name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name operator name specifier modifier name block if condition expr name operator literal type number then block type pseudo return expr literal type boolean decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator return expr name operator name operator name function type name name parameter_list parameter decl type name name operator name name block decl_stmt decl type name name init expr name decl_stmt decl type name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator ternary condition expr operator name name index expr name operator literal type char operator then expr literal type number else expr operator literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list operator name operator literal type number argument expr call name name operator name argument_list expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator ternary condition expr operator name name index expr name operator literal type char operator then expr literal type number else expr operator literal type number if condition expr operator name then block type pseudo expr_stmt expr name operator return expr name function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name operator name argument_list argument expr literal type number expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name if condition expr operator call name argument_list argument expr name then block expr_stmt expr name name operator name operator literal type string return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name operator name operator name operator literal type string expr_stmt expr name name operator name operator name operator literal type string operator name operator literal type string 
