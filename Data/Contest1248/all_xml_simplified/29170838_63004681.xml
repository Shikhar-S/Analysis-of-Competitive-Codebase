include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block expr_stmt expr name operator ternary condition expr name operator literal type number then expr name operator name operator name else expr name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name operator name return expr name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator operator literal type number else block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator ternary condition expr name operator literal type number then expr name else expr operator literal type number else block expr_stmt expr name operator expr_stmt expr name name index expr name operator name expr_stmt expr name operator name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator ternary condition expr name operator literal type number then expr name else expr operator literal type number else block expr_stmt expr name operator expr_stmt expr name name index expr name operator name else block expr_stmt expr name operator expr_stmt expr name name index expr name operator operator literal type number decl_stmt decl type name name init expr ternary condition expr name name index expr name operator literal type number operator literal type number then expr literal type number else expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name operator literal type number operator name name index expr name operator name operator literal type number operator literal type number return expr name function type name name parameter_list block comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number while condition expr name operator name block expr_stmt expr name operator name decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr call name argument_list if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator literal type string operator name operator name return expr literal type number 
