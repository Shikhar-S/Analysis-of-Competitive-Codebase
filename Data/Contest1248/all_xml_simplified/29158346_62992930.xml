include directive file namespace name block define directive macro name value define directive macro name value define directive macro name value comment type line decl_stmt decl type name name init expr literal type number function specifier type name name parameter_list block decl_stmt decl specifier type name name name index expr name modifier decl type ref prev name init expr name operator name modifier decl type ref prev name init expr name operator name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator call name argument_list argument expr name argument expr literal type number argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator literal type number return expr operator literal type number comment type line return expr operator name operator function specifier type name name parameter_list parameter decl type name name block return expr name operator literal type char operator name operator literal type char operator name operator literal type char operator name operator literal type char function specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list expr_stmt expr name operator literal type number for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo empty_stmt if condition expr name then block type pseudo return if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number operator expr name operator call name argument_list for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char if condition expr name then block type pseudo expr_stmt expr name operator operator name function specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list expr_stmt expr name operator literal type number for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo empty_stmt if condition expr name then block type pseudo return if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number operator expr name operator call name argument_list for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char if condition expr name then block type pseudo expr_stmt expr name operator operator name function specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list expr_stmt expr name operator literal type number for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo empty_stmt if condition expr name then block type pseudo return if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number operator expr name operator call name argument_list for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char if condition expr name operator literal type char then block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator call name argument_list for control init condition expr name operator literal type char operator name operator literal type char incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator literal type number operator expr name operator name operator operator name operator literal type char operator if condition expr name then block type pseudo expr_stmt expr name operator operator name function specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr call name argument_list for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo empty_stmt if condition expr name then block type pseudo return for control init condition expr operator call name argument_list argument expr name operator operator name incr expr name operator call name argument_list block type pseudo expr_stmt expr operator name operator operator name expr_stmt expr operator name operator literal type number function specifier type name name parameter_list parameter decl type name modifier name block for control init expr name operator call name argument_list condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo empty_stmt if condition expr name then block expr_stmt expr name operator operator literal type number return struct name block public type default decl_stmt decl type name modifier name modifier decl type ref prev name modifier decl type ref prev name constructor name parameter_list block expr_stmt expr name operator operator name name index expr name expr_stmt expr name operator name expr_stmt expr name operator name operator name function type name name parameter_list parameter decl type name name block if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr operator name operator operator name function type name name parameter_list parameter decl type name name block decl_stmt decl specifier type name name name index expr literal type number modifier decl type ref prev name expr_stmt expr name operator name if condition expr operator name then block type pseudo expr_stmt expr operator name operator operator literal type char if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name while condition expr name block type pseudo expr_stmt expr operator name operator operator name operator literal type number operator literal type char operator expr name operator literal type number while condition expr name operator operator name block type pseudo expr_stmt expr call name argument_list argument expr operator name function type name name parameter_list parameter decl type name name block decl_stmt decl specifier type name name name index expr literal type number modifier decl type ref prev name expr_stmt expr name operator name if condition expr operator name then block type pseudo expr_stmt expr operator name operator operator literal type char if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name while condition expr name block type pseudo expr_stmt expr operator name operator operator name operator literal type number operator literal type char operator expr name operator literal type number while condition expr name operator operator name block type pseudo expr_stmt expr call name argument_list argument expr operator name expr_stmt expr call name argument_list argument expr literal type char function type name name parameter_list parameter decl type name name block decl_stmt decl specifier type name name name index expr literal type number modifier decl type ref prev name expr_stmt expr name operator name if condition expr operator name then block type pseudo expr_stmt expr operator name operator operator literal type char if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name while condition expr name block type pseudo expr_stmt expr operator name operator operator name operator literal type number operator literal type char operator expr name operator literal type number while condition expr name operator operator name block type pseudo expr_stmt expr call name argument_list argument expr operator name function type name name parameter_list parameter decl type name name block decl_stmt decl specifier type name name name index expr literal type number modifier decl type ref prev name expr_stmt expr name operator name if condition expr operator name then block type pseudo expr_stmt expr operator name operator operator literal type char if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name while condition expr name block type pseudo expr_stmt expr operator name operator operator name operator literal type number operator literal type char operator expr name operator literal type number while condition expr name operator operator name block type pseudo expr_stmt expr call name argument_list argument expr operator name expr_stmt expr call name argument_list argument expr literal type char function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl specifier type name name name index init expr block expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number if condition expr name operator operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name expr_stmt expr name operator name name index expr name decl_stmt decl type name name init expr operator name operator call name argument_list argument expr name if condition expr name operator call name argument_list argument expr name operator literal type number then block type pseudo expr_stmt expr operator name decl_stmt decl type name name init expr name operator name name index expr name decl type ref prev name init expr name operator name operator name name index expr name expr_stmt expr call name argument_list argument expr name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name operator name operator name name index expr name operator name name index expr name incr expr call name argument_list argument expr literal type char operator expr operator name block type pseudo empty_stmt expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type char function type name name parameter_list parameter decl type name modifier name block while condition expr operator name block type pseudo expr_stmt expr call name argument_list argument expr operator name operator function type name name parameter_list parameter decl type name modifier name block while condition expr operator name block type pseudo expr_stmt expr call name argument_list argument expr operator name operator expr_stmt expr call name argument_list argument expr literal type char function type name name parameter_list block if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name operator name argument expr name expr_stmt expr name operator name destructor name name parameter_list block expr_stmt expr call name argument_list decl name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr literal type char function specifier type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name argument expr name function specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr call name name operator name argument_list argument expr name function specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr call name name operator name argument_list argument expr name function specifier type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type char function specifier type name name parameter_list block expr_stmt expr call name name operator name argument_list undef directive name undef directive name undef directive name empty_stmt using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name name operator name argument_list argument expr literal type boolean operator expr call name name operator name argument_list argument expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator operator name expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr literal type number operator name name index expr name expr_stmt expr name name index expr literal type number operator name name index expr name operator literal type number expr_stmt expr name name index expr literal type number operator name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
