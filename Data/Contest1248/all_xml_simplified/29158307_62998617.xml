pragma directive name name name name literal name define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name function type name name parameter_list block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator name operator literal type char expr_stmt expr call name argument_list argument expr name operator using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name using name init type name name argument_list type generic argument expr name name argument expr name name function type name name parameter_list block decl_stmt decl type name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name index expr literal type number comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator literal type number if condition expr name operator literal type number operator name then block expr_stmt expr name operator name name index expr name elseif if condition expr name operator literal type number operator name then block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator operator ternary condition expr name operator literal type char then expr literal type number else expr operator literal type number operator expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator return expr name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr block expr literal type number expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr name operator literal type string return for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number operator name condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator block expr name operator literal type number expr name operator literal type number expr_stmt expr name operator name operator literal type string expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator literal type string function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list expr_stmt expr call name argument_list ifndef directive name expr_stmt expr name operator literal type char operator operator name operator call name argument_list operator name operator literal type char endif directive 
