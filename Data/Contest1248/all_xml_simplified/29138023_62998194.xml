include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value using namespace name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name function type name name parameter_list block comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr block expr literal type number expr literal type number macro name argument_list argument argument block macro name argument_list argument argument literal type number block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type string decl_stmt decl type name name init expr literal type boolean macro name argument_list argument argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name then block expr_stmt expr name operator name else block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr operator literal type number macro name argument_list argument argument block if condition expr name operator operator name then block expr_stmt expr name operator name break if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name break expr_stmt expr name operator if condition expr name operator name then block type pseudo expr_stmt expr name operator call name name operator name argument_list argument expr name argument expr name operator name operator literal type number expr_stmt expr name operator call name name operator name argument_list argument expr literal type number argument expr name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number macro name argument_list argument argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator name then block expr_stmt expr name name operator name operator name operator literal type number expr_stmt expr name name operator name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name name operator name operator literal type char operator name name operator name return expr literal type number 
