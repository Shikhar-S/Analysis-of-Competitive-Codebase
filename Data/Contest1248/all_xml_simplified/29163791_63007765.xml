include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value using namespace name function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name decl_stmt decl type name name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr literal type number argument expr name operator literal type number expr_stmt expr name operator else block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr operator literal type number argument expr name operator literal type number expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator macro name argument_list argument argument literal type number argument block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name while condition expr operator call name name operator name argument_list block expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr call name name operator name argument_list argument expr name name index expr name if condition expr name name index expr literal type number operator name operator literal type number then block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name operator name name index expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr name break expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr literal type number operator name expr_stmt expr name operator name name index expr name operator name else block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator literal type number break if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator name operator literal type char operator name return expr literal type number 
