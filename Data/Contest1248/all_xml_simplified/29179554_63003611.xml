include directive file using namespace name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number function template parameter_list parameter type name name specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator expr_stmt expr name operator call name argument_list return expr name operator name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name name index expr name operator operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name elseif if condition expr name name index expr name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator decl_stmt decl type name name init expr literal type number while condition expr name operator name block expr_stmt expr name operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator function type name name parameter_list block expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list while condition expr name operator block expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list operator expr name operator call name name argument_list type generic argument expr name argument_list expr_stmt expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator literal type number operator expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name operator literal type number operator expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number while condition expr operator call name name operator name argument_list block expr_stmt expr call name name operator name argument_list expr_stmt expr name name index expr literal type number operator call name argument_list operator expr name name index expr literal type number operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name name argument_list type generic argument expr name argument_list decl type ref prev name init expr call name name argument_list type generic argument expr name argument_list if condition expr name operator name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name range expr name name index expr name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr operator name name index expr name name index expr name if condition expr name name index expr name name index expr literal type number operator name then block expr_stmt expr call name argument_list argument expr literal type string continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name name index expr name operator name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr literal type number operator call name argument_list argument expr name name index expr literal type number operator call name argument_list for control init decl type name name range expr name name index expr literal type number block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name range expr name name index expr literal type number block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string goto name expr_stmt expr call name argument_list argument expr literal type string label name empty_stmt return expr literal type number 
