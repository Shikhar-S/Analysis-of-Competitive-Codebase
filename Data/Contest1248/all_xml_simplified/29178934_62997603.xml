pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name include directive file using name name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr name decl type ref prev name decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr ternary condition expr operator name name index expr name operator literal type char operator then expr name operator else expr name operator if condition expr name name index expr name operator literal type char then block type pseudo continue if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number decl type ref prev name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block expr_stmt expr name operator if condition expr operator name then block type pseudo expr_stmt expr name operator expr_stmt expr name operator ternary condition expr operator name operator name operator then expr literal type number else expr name operator literal type number return expr name function type name name parameter_list block decl_stmt decl type name name init expr literal type number if condition expr literal type number operator literal type number then block type pseudo empty_stmt expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr name operator literal type number operator expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr ternary condition expr operator name name index expr name operator literal type char operator then expr name operator else expr name operator if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name operator call name argument_list operator expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name operator literal type number decl type ref prev name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr operator name operator call name argument_list operator operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name 
