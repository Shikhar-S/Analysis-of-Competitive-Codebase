include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name name name function_decl type name name parameter_list function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean comment type line comment type line expr_stmt expr call name argument_list comment type line comment type line ifndef directive name expr_stmt expr call name argument_list argument expr name endif directive return expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name name index expr name operator operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name else block if condition expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr literal type number operator while condition expr literal type boolean block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr name name index expr name operator name name index expr literal type number expr_stmt expr name name index expr name operator literal type number if condition expr name operator name then block type pseudo break function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block comment type line expr_stmt expr name name index expr name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator operator name name index expr name name index expr name operator operator operator name name index expr name name index expr name operator name operator then block expr_stmt expr name operator name name index expr name break if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string 
