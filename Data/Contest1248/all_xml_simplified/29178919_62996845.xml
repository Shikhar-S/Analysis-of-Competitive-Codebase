include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name function name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name else directive comment type line comment type line endif directive expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr literal type number operator literal type number decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr block expr literal type number expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list operator name name operator name decl_stmt decl type name name init expr call name name operator name argument_list operator name decl_stmt decl type name name init expr call name name operator name argument_list operator name name operator name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list comment type line if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list operator name decl_stmt decl type name name init expr call name name operator name argument_list operator name if condition expr operator call name name operator name argument_list operator operator operator call name name operator name argument_list operator operator name then block type pseudo break expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr block expr literal type number expr name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator name elseif if condition expr name operator literal type number then block if condition expr call name name operator name argument_list operator operator operator call name name operator name argument_list operator operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr block expr literal type number expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type char return expr literal type number 
