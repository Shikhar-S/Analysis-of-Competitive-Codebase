comment type block include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type specifier name name block comment type block return expr operator name operator name operator operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type specifier name name block if condition expr name operator name operator literal type number then block type pseudo return expr ternary condition expr name operator literal type number then expr name operator literal type number else expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator literal type number return expr name operator name function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name parameter decl type name name parameter decl type name name block if condition expr operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator name expr_stmt expr name operator name operator operator name operator name operator return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type specifier name name block return expr ternary condition expr name operator name operator name then expr name operator name operator name else expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type specifier name name block return expr ternary condition expr name operator name then expr name operator name operator name else expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type specifier name name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name operator operator name operator name operator name operator operator name return expr name function type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list expr_stmt expr name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name while condition expr name operator block expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator name name index expr literal type number operator name name index expr literal type number operator literal type number expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number operator expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number operator expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator name name index expr literal type number operator operator name operator name name index expr literal type number operator operator name operator name name index expr literal type number operator operator name operator name name index expr literal type number 
