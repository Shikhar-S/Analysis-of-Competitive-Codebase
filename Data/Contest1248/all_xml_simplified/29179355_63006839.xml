comment type line comment type line include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr name name operator name operator name name operator name function type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name if condition expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name operator if condition expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name expr literal type number if condition expr name name index expr name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name expr literal type number if condition expr name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name expr literal type number decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block if condition expr name name operator name operator literal type number then block if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name operator name name operator name expr_stmt expr name operator literal type number else block expr_stmt expr name operator for control init decl type name name range expr name block if condition expr name name operator name operator literal type number then block if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name operator literal type number break else block expr_stmt expr name operator for control init decl type name name range expr name block if condition expr name name operator name operator literal type number then block if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name operator name name operator name expr_stmt expr name operator literal type number else block expr_stmt expr name operator for control init decl type name name range expr name block if condition expr name name operator name operator literal type number then block if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name operator literal type number break else block expr_stmt expr name operator if condition expr name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr operator operator name operator name operator operator name operator operator literal type number argument expr operator operator name operator name operator operator name operator operator literal type number else block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr operator name operator name operator operator name operator literal type number argument expr operator name operator name operator operator name operator literal type number return expr literal type number 
