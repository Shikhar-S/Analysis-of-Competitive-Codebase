pragma directive name name name name name pragma directive name name name name name pragma directive name name name literal name include directive file include directive file include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name constructor name parameter_list block expr_stmt expr name operator operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name if condition expr name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name comment type line function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name name index expr name operator operator name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr name name index expr name condition expr name operator operator literal type number incr expr name operator name name index expr name operator name block decl_stmt decl type name name init expr name name index expr name operator name if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name elseif if condition expr operator name name index expr name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator while condition expr literal type number block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator name if condition expr name operator name then block break function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return comment type line comment type line comment type line comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name name index expr name condition expr name operator operator literal type number incr expr name operator name name index expr name operator name block if condition expr name name index expr name operator name name index expr name name index expr name operator name then block expr_stmt expr name name index expr name name index expr name operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number operator operator name name index expr name operator call name argument_list operator name name index expr name operator call name argument_list operator name then block expr_stmt expr name operator name break if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return else block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type char function type name name parameter_list block while condition expr operator call name name operator name argument_list block type pseudo expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator operator literal type number expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator literal type number expr_stmt expr name operator name operator name operator literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list expr_stmt expr call name argument_list expr_stmt expr call name argument_list return expr literal type number 
