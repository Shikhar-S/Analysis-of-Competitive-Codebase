include directive file define directive macro name value define directive macro name value using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator operator name name index expr name operator literal type char operator expr_stmt expr name operator operator name name index expr name operator literal type char operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name operator name operator name incr expr name operator block decl_stmt decl type name name init expr name operator name expr_stmt expr name operator operator name name index expr name operator literal type char operator expr_stmt expr name operator operator name name index expr name operator literal type char operator if condition expr operator name then block type pseudo expr_stmt expr name operator return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator operator name name index expr name operator literal type char operator operator expr name operator operator name name index expr name operator literal type char operator if condition expr name operator literal type number then block type pseudo return expr name operator literal type number operator name operator literal type string operator name operator expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type number argument expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator name operator name operator literal type string operator name operator name empty_stmt 
