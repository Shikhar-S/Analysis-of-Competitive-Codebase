include directive file include directive file include directive file using name name operator name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block expr_stmt expr name operator call name argument_list function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator else block expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string else block decl_stmt decl type name name init expr literal type number decl type ref prev name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator operator ternary condition expr name name index expr name operator literal type char then expr literal type number else expr operator literal type number operator if condition expr name name index expr name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name elseif if condition expr name name index expr name operator name then block expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name return expr literal type number 
