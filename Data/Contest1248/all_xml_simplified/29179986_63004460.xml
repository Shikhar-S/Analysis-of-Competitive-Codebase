ifdef directive name define directive macro name value define directive macro name value else directive define directive macro name value define directive macro name endif directive include directive file using namespace name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value pragma directive name name name literal name using namespace name define directive macro name value define directive macro name parameter_list parameter type modifier value function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name name block expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator operator ternary condition expr name operator literal type number operator call name name operator name argument_list then expr literal type string else expr literal type string operator expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator operator name operator operator ternary condition expr call name argument_list argument expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name name block expr_stmt expr name operator literal type string for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator literal type string operator operator name name operator name operator operator literal type string operator operator name name operator name operator operator literal type string operator operator ternary condition expr call name argument_list argument expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator expr_stmt expr name operator literal type string return expr name function type name name parameter_list block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name modifier name parameter decl type name modifier modifier name block expr_stmt expr name operator name if condition expr sizeof type pack argument_list argument expr name operator literal type number then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr name operator function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name specifier modifier name block if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name return expr literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name specifier modifier name block if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name return expr literal type boolean function_decl type name name parameter_list function type name name parameter_list parameter decl type name block expr_stmt expr name name operator name operator name name operator name operator call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name argument_list return expr literal type number using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name decl_stmt decl type specifier name name init expr operator literal type number operator literal type number operator operator literal type number decl_stmt decl type specifier name name name init expr literal type number operator literal type number function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name decl_stmt decl type name name init expr lambda capture argument modifier parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator call name name operator name argument_list operator literal type string operator call name name operator name argument_list operator name macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number operator operator ternary condition expr name operator call name name operator name argument_list operator literal type number then expr literal type string else expr literal type string operator macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number operator operator ternary condition expr name operator call name name operator name argument_list operator literal type number then expr literal type string else expr literal type string operator macro name argument_list argument argument block expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list argument expr literal type number operator name decl_stmt decl type name name init expr literal type number operator name macro name argument_list argument argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type boolean decl_stmt decl type name name argument_list type generic argument expr name operator name operator name init expr lambda capture argument modifier parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name operator literal type boolean for control init decl type name name range expr name name index expr name block if condition expr name name index expr name operator name then block type pseudo continue expr_stmt expr name name index expr name operator name operator literal type boolean expr_stmt expr call name argument_list argument expr operator name operator name operator operator name expr_stmt expr call name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument expr_stmt expr name operator call name argument_list argument expr name name index expr name if condition expr name operator literal type number operator name operator name then block decl_stmt decl type name name decl type ref prev name macro name argument_list argument argument block if condition expr name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name continue macro name argument_list argument argument expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator literal type number macro name argument_list argument argument expr_stmt expr name operator call name argument_list argument expr name name index expr name if condition expr name operator literal type number operator name operator name then block decl_stmt decl type name name decl type ref prev name macro name argument_list argument argument block if condition expr name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name continue expr_stmt expr name operator literal type string operator name 
