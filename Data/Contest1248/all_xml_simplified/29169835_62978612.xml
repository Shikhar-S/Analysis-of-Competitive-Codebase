comment type block include directive file include directive file include directive file using namespace name using namespace name typedef type name name argument_list type generic argument expr name name argument expr name argument expr name name argument_list type generic argument expr name name argument expr name argument expr name name pragma directive name name name literal name comment type line comment type line using name init type name name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator operator name operator name operator operator operator name operator name operator operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number return expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr name operator literal type number decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name macro name argument_list argument argument literal type number block expr_stmt expr name operator name name index expr name macro name argument_list argument argument literal type number block expr_stmt expr name operator name name index expr name operator name operator literal type number expr_stmt expr name operator name operator name operator name operator name 
