include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number using namespace name decl_stmt decl type name name name index expr literal type number operator literal type number modifier decl type ref prev name init expr name modifier decl type ref prev name init expr name function specifier type name name parameter_list block return expr ternary condition expr name operator name operator operator name operator operator name operator name operator operator call name argument_list argument expr name argument expr literal type number argument expr literal type number operator literal type number argument expr name operator name operator name operator then expr operator literal type number else expr operator name operator function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name decl_stmt decl type name name init expr literal type number while condition expr name operator call name argument_list operator expr operator name operator literal type number operator literal type number operator name operator operator name operator operator literal type number block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator name operator literal type number while condition expr name operator call name argument_list operator expr literal type number operator name operator name operator literal type number block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type number expr_stmt expr name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number typedef type name name name index expr name typedef type name name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name for control init decl type name name range expr name name index expr name block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name function specifier type name name parameter_list block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator call name argument_list operator expr name name index expr name operator call name argument_list macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator literal type number macro name argument_list argument argument literal type number argument if condition expr operator name name index expr name then block type pseudo expr_stmt expr operator name operator expr call name argument_list argument expr name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name operator name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string return expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator literal type number operator expr call name argument_list argument expr name name index expr name argument expr name name index expr name macro name argument_list argument argument literal type number argument if condition expr operator name name index expr name then block type pseudo expr_stmt expr operator name operator expr call name argument_list argument expr name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string return expr_stmt expr call name argument_list argument expr literal type string function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string endif directive decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name while condition expr name operator block type pseudo expr_stmt expr call name argument_list return expr literal type number 
