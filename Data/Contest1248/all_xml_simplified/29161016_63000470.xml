include directive file using namespace name using name init type name name using name init type name using name init type name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name init expr block expr operator literal type number expr literal type number expr literal type number expr literal type number decl type ref prev name init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init condition expr name incr expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name return expr name comment type line decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number init expr block function type name name parameter_list parameter decl type name name block return expr operator name name index expr name index expr literal type number index expr literal type number operator name name index expr name index expr literal type number index expr literal type number operator name name index expr name index expr literal type number index expr literal type number operator name name index expr name index expr literal type number index expr literal type number operator operator name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr literal type number index expr name index expr name operator literal type number macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name index expr literal type number index expr literal type number operator name name index expr name operator literal type number index expr literal type number index expr literal type number expr_stmt expr name name index expr name index expr literal type number index expr literal type number operator name name index expr name operator literal type number index expr literal type number index expr literal type number operator name name index expr name operator literal type number index expr literal type number index expr literal type number expr_stmt expr name name index expr name index expr literal type number index expr literal type number operator name name index expr name operator literal type number index expr literal type number index expr literal type number operator name name index expr name operator literal type number index expr literal type number index expr literal type number expr_stmt expr name name index expr name index expr literal type number index expr literal type number operator name name index expr name operator literal type number index expr literal type number index expr literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name index expr name index expr name operator name if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type number operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator name else block type pseudo expr_stmt expr name operator operator call name argument_list argument expr name operator call name argument_list argument expr name operator name operator literal type number operator operator name operator name 
