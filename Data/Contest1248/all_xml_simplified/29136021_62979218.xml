include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number comment type block using namespace name function type name name parameter_list parameter decl type name name parameter decl type name name block comment type line if condition expr name operator literal type number then block type pseudo return expr name if condition expr name operator literal type number then block type pseudo return expr name comment type line if condition expr name operator name then block type pseudo return expr name comment type line if condition expr name operator name then block type pseudo return expr call name argument_list argument expr name operator name argument expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name name index parameter decl type name name block return expr operator call name argument_list argument expr name argument expr name operator name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name name comment type line block decl_stmt decl type name name if condition expr name operator literal type number then block type pseudo return expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number if condition expr name operator literal type number operator literal type number then block type pseudo return expr name operator name else block if condition expr name operator literal type number then block type pseudo return expr name operator name operator name else block type pseudo return expr operator name operator name operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name comment type line for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name incr expr name operator block if condition expr name operator name operator literal type number then block comment type line if condition expr name operator name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else comment type line block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block return expr literal type boolean decl_stmt decl type name name init expr literal type number while condition expr name operator name operator name block if condition expr name operator name operator literal type number then block return expr literal type boolean expr_stmt expr name operator literal type number return expr literal type boolean function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name parameter decl type name name block decl_stmt decl type name name init expr name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator call name argument_list argument expr name name index expr name argument expr name return expr name function type name name parameter_list parameter decl type name name block comment type line decl_stmt decl type name name argument_list type generic argument expr name name while condition expr name operator literal type number operator literal type number block expr_stmt expr name operator literal type number operator literal type string expr_stmt expr name operator name operator literal type number comment type line comment type line for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name incr expr name operator name operator literal type number block comment type line while condition expr name operator name operator literal type number block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name operator name comment type line comment type line if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name block return expr name operator operator operator operator name operator operator name operator literal type number operator operator operator function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator else block expr_stmt expr name operator decl_stmt decl type name name expr_stmt expr name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator else block expr_stmt expr name operator decl_stmt decl type name name init expr name operator name operator name operator name expr_stmt expr name operator name operator name function type name name parameter_list block expr_stmt expr name expr_stmt expr call name argument_list 
