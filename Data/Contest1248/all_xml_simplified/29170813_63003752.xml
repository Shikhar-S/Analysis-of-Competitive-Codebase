include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value function type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list expr_stmt expr name operator name function type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list expr_stmt expr name operator name using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block comment type line expr_stmt expr name name index expr literal type number operator name comment type line macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr name name index expr name operator literal type number operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name incr expr name operator block expr_stmt expr name name index expr name operator ternary condition expr name name index expr name operator literal type char then expr name name index expr name operator literal type number operator literal type number else expr name name index expr name operator literal type number operator literal type number if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr operator literal type number expr_stmt expr name name index expr name operator ternary condition expr name operator literal type number then expr literal type number else expr literal type number decl_stmt decl type name name init expr literal type number if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name name index expr name operator name name index expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator comment type line if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name operator expr name operator name comment type line comment type line comment type line function type name name parameter_list block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr literal type number macro name argument_list argument argument argument block expr_stmt expr name operator ternary condition expr name name index expr name operator literal type char then expr literal type number else expr operator literal type number if condition expr name operator literal type number then block type pseudo break expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number macro name argument_list argument argument literal type number argument macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name name index expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name return expr literal type number 
