comment type line include directive file using namespace name decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator name expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr name operator operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type char return function type name name parameter_list block expr_stmt expr name operator name operator name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name operator operator ternary condition expr name name index expr name operator literal type char then expr operator literal type number else expr literal type number operator operator name name index expr name operator literal type number if condition expr literal type number operator name name index expr name then block type pseudo return expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block while condition expr name operator name operator name name index expr name operator name name index expr name operator name block expr_stmt expr operator name expr_stmt expr name name index expr operator name operator block expr name name index expr name expr name if condition expr literal type number operator name name index expr name operator name then block type pseudo expr_stmt expr operator name for control init decl type name name init expr literal type number operator name condition expr name operator name operator literal type number incr expr operator name block while condition expr name operator name operator name operator name name index expr name operator name operator name block expr_stmt expr operator name while condition expr name operator name operator name name index expr name operator name name index expr name operator name block expr_stmt expr operator name expr_stmt expr name operator operator ternary condition expr name name index expr name operator name operator literal type char then expr literal type number else expr operator literal type number operator if condition expr operator name operator name name index expr name operator name then block type pseudo expr_stmt expr operator name expr_stmt expr name name index expr operator name operator block expr name name index expr name expr name return expr name function type name name parameter_list block expr_stmt expr name operator literal type string operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr name condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr name operator name operator name operator name operator literal type string operator name function name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number ifndef directive name expr_stmt expr call name argument_list argument expr name argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type string argument expr name endif directive expr_stmt expr name operator literal type number comment type line while condition expr name operator block expr_stmt expr call name argument_list expr_stmt expr call name argument_list 
