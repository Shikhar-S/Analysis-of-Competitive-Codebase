include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr call name name operator name argument_list then block type pseudo return expr literal type boolean expr_stmt expr call name name operator name argument_list else block expr_stmt expr call name name operator name argument_list argument expr literal type number return expr call name name operator name argument_list decl_stmt decl type name name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name index expr name init expr block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr name operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo return for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo return if condition expr name operator literal type number then block type pseudo return decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator expr name operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name return expr literal type number comment type block 
