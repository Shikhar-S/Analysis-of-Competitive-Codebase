comment type block define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name function specifier type name name parameter_list block decl_stmt decl specifier type specifier name name init expr literal type number decl_stmt decl specifier type name name name index expr name modifier decl type ref prev name init expr name modifier decl type ref prev name init expr name if condition expr name operator name then block expr_stmt expr name operator operator name operator name operator operator call name argument_list argument expr name argument expr literal type number argument expr name argument expr name if condition expr name operator name then block return expr name return expr operator name operator ifndef directive name define directive macro name value else directive define directive macro name value endif directive function specifier type name name parameter_list block decl_stmt decl type name name for control init condition expr operator call name argument_list argument expr name incr expr name block type pseudo empty_stmt return expr name function specifier type name name parameter_list block decl_stmt decl type name name for control init condition expr name operator literal type char incr expr name block type pseudo empty_stmt return expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator literal type number for control init condition expr operator call name argument_list argument expr name incr expr name block if condition expr name operator literal type char then block expr_stmt expr name operator literal type boolean elseif if condition expr name operator name then block return expr literal type boolean for control init condition expr call name argument_list argument expr name incr expr name block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator if condition expr name then block expr_stmt expr name operator operator name return expr literal type boolean undef directive name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr name operator operator name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name operator literal type number return expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr operator name operator literal type number operator operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type char function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator name return expr name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number elseif if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number else block expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name incr expr operator name block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name operator else block expr_stmt expr name operator if condition expr operator name operator operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number then block expr_stmt expr name operator return expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr call name argument_list if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name return expr literal type number 
