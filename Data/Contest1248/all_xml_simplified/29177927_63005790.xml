include directive file using namespace name function type name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type name name block if condition expr call name name operator name argument_list operator literal type number then block type pseudo return expr call name argument_list argument expr literal type number argument expr literal type number comment type line decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr call name argument_list argument expr literal type number argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr call name name operator name argument_list argument expr literal type number comment type line for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char operator name operator name name index expr name operator literal type number operator literal type number operator literal type number operator name name index expr name operator name name index expr name operator literal type number operator literal type number operator literal type char then block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number operator operator ternary condition expr operator name operator name name index expr name operator literal type number operator literal type number operator literal type number operator then expr name name index expr name operator name name index expr name operator literal type number operator literal type number else expr literal type number operator expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr operator operator name operator name name index expr name operator literal type number operator argument expr name comment type line return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr literal type number if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo break if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator call name name operator name argument_list argument expr literal type number operator name name index expr literal type number if condition expr name operator name then block expr_stmt expr name operator name operator literal type string operator name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number operator name then block expr_stmt expr name name index expr name operator literal type char continue elseif if condition expr name operator literal type number operator name then block expr_stmt expr name name index expr name operator literal type char continue expr_stmt expr name name index expr name operator ternary condition expr call name argument_list operator literal type number operator literal type number then expr literal type char else expr literal type char if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name init expr call name argument_list argument expr literal type number argument expr call name argument_list argument expr literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block for control init decl type name name init expr name condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr call name argument_list argument expr name operator name decl_stmt decl type name name init expr operator operator name name operator name operator operator call name name operator name argument_list comment type line decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr operator name operator name operator call name name operator name argument_list operator operator call name name operator name argument_list operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo break if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name comment type block if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator name name operator name operator name operator name name operator name operator name operator literal type number operator literal type string operator name name operator name operator name operator literal type number 
