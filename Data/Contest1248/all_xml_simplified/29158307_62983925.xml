pragma directive name name name name literal name define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name function type name name parameter_list block expr_stmt expr name operator name decl_stmt decl type specifier name name init expr literal type number function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator name operator literal type char expr_stmt expr call name argument_list argument expr name operator using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name using name init type name name argument_list type generic argument expr name name argument expr name name function type name name parameter_list block function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator name block if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator else block expr_stmt expr name operator name name index expr name expr_stmt expr name operator expr_stmt expr name operator literal type number operator name expr_stmt expr name operator name operator name operator name operator name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list expr_stmt expr call name argument_list ifndef directive name expr_stmt expr name operator literal type char operator operator name operator call name argument_list operator name operator literal type char endif directive 
