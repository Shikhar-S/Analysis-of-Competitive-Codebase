pragma directive name name name literal name include directive file using namespace name typedef type name name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type modifier value decl_stmt decl type specifier name name init expr literal type number function specifier type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator operator name then expr operator literal type number else expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name block expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list argument expr name for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name function template parameter_list parameter type name name type name name argument_list type generic argument expr name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name argument_list type generic argument expr name name init expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name operator call name name operator name argument_list return expr name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list argument expr block expr literal type number expr literal type number expr literal type number argument expr block expr literal type number expr literal type number expr literal type number argument expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name argument_list argument expr block expr literal type number expr literal type number expr literal type number argument expr block expr literal type number expr literal type number expr literal type number argument expr block expr literal type number expr literal type number expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr call name name operator name argument_list operator call name argument_list decl_stmt decl type name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator operator name name index expr name index expr name operator name name index expr name index expr name operator name name index expr name index expr name operator name operator operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name if condition expr name operator literal type number then block type pseudo return expr name if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number return expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr name if condition expr name operator literal type number then block type pseudo return expr name operator call name argument_list argument expr name argument expr name operator literal type number operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number return expr name operator name operator name function type name name parameter_list block ifdef directive name comment type line endif directive expr_stmt expr name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name operator literal type number argument expr call name argument_list argument expr block expr block expr literal type number expr block expr literal type number expr block expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name operator literal type number argument expr call name argument_list argument expr block expr block expr literal type number expr block expr literal type number expr block expr name operator literal type number index expr literal type number index expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name operator literal type number argument expr call name argument_list argument expr block expr block expr literal type number expr block expr literal type number expr block expr name operator literal type number index expr literal type number index expr literal type number expr_stmt expr name operator literal type string operator name operator literal type string operator name operator literal type string operator name operator name comment type line expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name operator literal type number argument expr call name argument_list argument expr block expr block expr name expr block expr name expr block expr operator name operator name operator operator name operator name operator operator name operator operator name index expr literal type number index expr literal type number operator name comment type line comment type line return expr literal type number warning directive 
