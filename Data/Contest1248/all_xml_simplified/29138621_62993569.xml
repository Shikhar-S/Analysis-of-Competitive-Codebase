comment type line include directive file using namespace name using name init type name name decl_stmt decl type name name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number function type name name parameter_list parameter decl type specifier name modifier name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator ternary condition expr name name index expr name operator literal type char then expr literal type number else expr operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name name index expr name argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name if condition expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type char operator literal type number operator name then block expr_stmt expr name operator literal type string return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr call name argument_list argument expr name argument expr call name argument_list argument expr name then block expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name operator literal type char operator name operator literal type char return expr literal type number 
