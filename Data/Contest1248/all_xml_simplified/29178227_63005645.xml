pragma directive name name name literal name literal name include directive file using namespace name define directive macro name value define directive macro name value decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name decl_stmt decl type name name function type name name parameter_list block decl_stmt decl type name name init expr call name name operator name argument_list if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type number operator name operator literal type string operator name expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr name name index expr literal type number operator ternary condition expr name name index expr literal type number operator literal type char then expr literal type number else expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number if condition expr name name index expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type number operator name operator literal type string operator name expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number else block type pseudo expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator operator ternary condition expr operator name operator name operator name operator name operator then expr name else expr literal type number operator operator name then block type pseudo expr_stmt expr name operator name name index expr name operator operator ternary condition expr operator name operator name operator name operator name operator then expr name else expr literal type number operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator operator ternary condition expr operator name operator name operator name operator name operator then expr name else expr literal type number operator operator name then block type pseudo expr_stmt expr operator name return expr name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name operator operator name operator literal type number operator operator literal type string operator operator name operator literal type number operator operator name return expr literal type number 
