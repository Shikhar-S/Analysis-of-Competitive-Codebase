include directive file define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name for control init decl type name name range expr name name index expr name block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name operator literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name while condition expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator literal type number while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr name name index expr name then block type pseudo continue expr_stmt expr name operator expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr operator name operator call name name operator name argument_list if condition expr name operator literal type number operator name operator name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name operator name for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string macro name argument_list argument argument literal type number argument literal type number if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string 
