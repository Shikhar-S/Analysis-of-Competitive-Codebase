comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value using namespace name decl_stmt decl type specifier name name init expr operator literal type number struct name block public type default decl_stmt decl type name name decl name name index expr name operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name function specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type char for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator expr_stmt expr name operator ternary condition expr name then expr operator name else expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator operator literal type number operator name operator operator literal type number then expr operator literal type number else expr operator ternary condition expr name operator operator literal type number then expr name else expr operator ternary condition expr name operator operator literal type number then expr name else expr call name argument_list argument expr name argument expr name operator operator function specifier type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator literal type number operator name argument expr name name index expr name operator literal type number operator literal type number operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name name index expr name operator name operator name name index expr name return decl_stmt decl type name name init expr operator name operator name operator operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name argument expr name expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number argument expr name operator literal type number argument expr name expr_stmt expr call name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name name argument_list type generic argument expr name operator name name then block type pseudo return if condition expr name operator name then block expr_stmt expr name name index expr name operator name operator name return decl_stmt decl type name name init expr operator name operator name operator operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number argument expr name operator literal type number argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name name argument_list type generic argument expr name operator name name then block type pseudo return expr operator literal type number if condition expr name operator name operator name operator name then block type pseudo return expr name name index expr name operator name decl_stmt decl type name name init expr operator name operator name operator operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number operator literal type number argument expr name operator literal type number argument expr name argument expr name argument expr name return expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr literal type number argument expr name return expr operator name operator operator literal type number operator operator name operator name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr literal type number argument expr name return expr operator name operator operator literal type number operator operator name operator name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr literal type number argument expr name if condition expr name operator operator literal type number operator name operator name then block type pseudo expr_stmt expr name operator literal type number operator expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr literal type number argument expr name function type name name parameter_list block comment type line comment type line expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name then block expr_stmt expr name operator literal type number expr_stmt expr name operator name while condition expr name operator name block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr call name argument_list argument expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name operator literal type number else block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr literal type number argument expr name expr_stmt expr name operator literal type number expr_stmt expr name operator name while condition expr name operator name block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr call name argument_list argument expr name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name operator literal type number expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr name argument expr name argument expr operator literal type number expr_stmt expr name operator literal type number expr_stmt expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
