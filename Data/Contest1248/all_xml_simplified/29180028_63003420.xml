include directive file using namespace name typedef type name name typedef type name name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name name index expr name function specifier type name name parameter_list block decl_stmt decl type name name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type number operator expr name name index expr name operator literal type number expr_stmt expr name operator literal type number operator expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr operator name operator name else block if condition expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator else block type pseudo expr_stmt expr name name index expr operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator name name index expr name operator operator name decl_stmt decl type name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name decl_stmt decl type name name argument_list argument expr literal type number for control init decl type name name init expr name condition expr name operator name operator name incr expr operator name block decl_stmt decl type name name argument_list argument expr ternary condition expr name operator literal type number then expr name operator name else expr name if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block expr_stmt expr name operator expr_stmt expr name operator operator operator name operator return expr name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator operator name name index expr name operator literal type char operator if condition expr name operator name operator name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name argument_list argument expr call name argument_list decl type ref prev name argument_list argument expr literal type number decl type ref prev name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr call name argument_list if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name operator expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name return expr literal type number 
