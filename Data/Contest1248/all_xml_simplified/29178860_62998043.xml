include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number if condition expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name continue expr_stmt expr name name index expr literal type number operator name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name expr_stmt expr name name index expr name operator name name index expr name for control init decl type name name init expr name operator literal type number condition expr name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name name index expr name operator literal type number operator literal type number then block type pseudo continue if condition expr name name index expr name operator literal type number operator name name index expr name operator name name index expr name operator literal type number operator literal type number then block type pseudo continue expr_stmt expr name operator if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator expr name operator name operator expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type char operator name operator name 
