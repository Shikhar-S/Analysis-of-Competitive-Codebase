include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name function type name name parameter_list block comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr block expr literal type number expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block comment type line comment type line decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator comment type line comment type line if condition expr name operator name then block if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type number else block decl_stmt decl type name name init expr name decl type ref prev name decl type ref prev name init expr literal type number for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr name operator name break expr_stmt expr name operator comment type line for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr operator name then block type pseudo expr_stmt expr name operator expr_stmt expr name operator else block type pseudo expr_stmt expr name operator else block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr operator name then block type pseudo expr_stmt expr name operator expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator block expr name expr name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name return expr literal type number 
