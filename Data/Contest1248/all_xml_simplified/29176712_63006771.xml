ifdef directive name define directive macro name include directive file define directive macro name value endif directive define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number if condition expr name name index expr name operator literal type char then block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator else block expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo continue if condition expr name operator literal type number then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator break decl_stmt decl type name name init expr name name index expr name operator literal type number decl_stmt decl type name name init expr name name index expr name operator literal type number if condition expr name operator literal type number operator name operator name then block continue if condition expr name operator operator name then block type pseudo expr_stmt expr name operator return expr name function type name name parameter_list block if directive expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr block expr literal type number expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator block expr name operator literal type number expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator name operator literal type string expr_stmt expr name operator name name operator name operator literal type string operator name name operator name return expr literal type number 
