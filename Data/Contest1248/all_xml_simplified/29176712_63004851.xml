ifdef directive name define directive macro name include directive file define directive macro name value endif directive define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value struct name block public type default decl_stmt decl type name name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name name operator name argument expr name name operator name function type name name parameter_list block if directive expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name decl_stmt decl type name name name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name argument expr literal type number decl_stmt decl type name name name init expr literal type number while condition expr call name name operator name argument_list operator literal type number block decl_stmt decl type name name init expr operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr name name operator name if condition expr name name operator name operator name then block if condition expr call name name operator name argument_list operator literal type number operator operator operator call name name operator name argument_list operator operator name name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name operator name decl_stmt decl type name name name init expr call name argument_list argument expr name name operator name argument expr name decl_stmt decl type name name name init expr name operator name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name name operator name operator name name operator name expr_stmt expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name else block expr_stmt expr call name name operator name argument_list argument expr name name operator name else block comment type line expr_stmt expr name name index expr name name operator name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name if condition expr call name name operator name argument_list operator literal type number then block type pseudo continue comment type line if condition expr call name name operator name argument_list operator literal type number operator operator operator call name name operator name argument_list operator operator operator call name name operator name argument_list then block decl_stmt decl type name name init expr operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name name init expr call name argument_list argument expr name name operator name argument expr name decl_stmt decl type name name name init expr name operator name expr_stmt expr name operator name decl_stmt decl type name name expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string return expr literal type number 
