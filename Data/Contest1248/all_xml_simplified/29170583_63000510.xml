include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator comment type line if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name 
