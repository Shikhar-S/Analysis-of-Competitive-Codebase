include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean decl_stmt decl specifier type name name name init expr literal type number define directive macro name value define directive macro name parameter_list value decl_stmt decl specifier type name name name init expr literal type number comment type line struct template parameter_list parameter type name name name block public type default decl_stmt decl type name name name constructor specifier name parameter_list parameter decl type name name name init expr literal type number noexcept macro name argument_list argument block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name function specifier type name name parameter_list block return expr name function type operator specifier type name name name parameter_list specifier noexcept block return expr ternary condition expr name then expr name operator name else expr literal type number function type operator specifier type name name name parameter_list parameter decl type specifier name modifier name specifier noexcept block return expr call name argument_list argument expr operator name operator name function type operator specifier type name name name parameter_list parameter decl type specifier name modifier name specifier noexcept block return expr call name argument_list argument expr operator name operator name function type operator specifier type name name name parameter_list parameter decl type specifier name modifier name specifier noexcept block return expr call name argument_list argument expr operator name operator name function type operator specifier type name name name parameter_list parameter decl type specifier name modifier name specifier noexcept block return expr call name argument_list argument expr operator name operator name function type operator specifier type name modifier name name parameter_list parameter decl type specifier name modifier name noexcept block expr_stmt expr name operator name name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator specifier type name modifier name name parameter_list parameter decl type specifier name modifier name noexcept block expr_stmt expr name operator name name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr operator name function type operator specifier type name modifier name name parameter_list parameter decl type specifier name modifier name noexcept block expr_stmt expr name operator name operator name name operator name operator name return expr operator name function type operator specifier type name modifier name name parameter_list parameter decl type specifier name modifier name noexcept block decl_stmt decl type name name name init expr name name operator name decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number while condition expr name block decl_stmt decl type name name name init expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr operator name function type operator specifier type name name name parameter_list parameter decl type specifier name modifier name specifier noexcept block return expr name name operator name operator name name operator name function type operator specifier type name name name parameter_list parameter decl type specifier name modifier name specifier noexcept block return expr name name operator name operator name name operator name friend function type operator specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name noexcept block return expr name operator name name operator name friend function type operator specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name noexcept block return expr name operator name name operator name friend function specifier type name name argument_list type generic argument expr name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type name name name noexcept block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number name expr_stmt expr operator name operator name if condition expr name operator literal type number then block type pseudo name expr_stmt expr operator name operator name return expr name comment type line struct template parameter_list parameter type name name name block public type default decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl type ref prev name constructor specifier name parameter_list block constructor specifier name parameter_list parameter decl type name name noexcept macro name argument_list argument argument literal type number operator macro name argument_list argument argument literal type number operator macro name argument_list argument argument literal type number block expr_stmt expr call name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name noexcept block expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number operator expr call name name operator name argument_list argument expr name argument expr literal type number operator expr call name name operator name argument_list argument expr name argument expr literal type number decl_stmt decl type name name init expr name name index expr literal type number operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name expr_stmt expr name name index expr name operator operator name name index expr name operator name operator operator name operator name operator expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name specifier noexcept block if condition expr name operator name operator name operator literal type number operator name operator literal type number then block type pseudo return expr literal type number return expr name name index expr name operator name name index expr name operator name name index expr name operator name function specifier type name name parameter_list parameter decl type name name specifier noexcept block if condition expr name operator literal type number then block type pseudo return expr literal type number return expr name name index expr name function specifier type name name parameter_list parameter decl type name name specifier noexcept block if condition expr name operator literal type number then block type pseudo return expr literal type number return expr name name index expr name function specifier type name name parameter_list parameter decl type name name specifier noexcept block if condition expr name operator literal type number then block type pseudo return expr literal type number return expr name name index expr name using name init type name name argument_list type generic argument expr name decl_stmt decl type name name argument_list type generic argument expr name name comment type line function type name name parameter_list block expr_stmt expr call name argument_list expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number literal type number block comment type line decl_stmt decl type name name init expr name decl type ref prev name init expr name operator name operator literal type number expr_stmt expr name operator call name name operator name argument_list argument expr name operator name argument expr name macro name argument_list argument argument literal type number argument literal type number literal type number block decl_stmt decl type name name init expr name decl type ref prev name init expr name operator name operator literal type number expr_stmt expr name operator call name name operator name argument_list argument expr name operator name argument expr name expr_stmt expr name operator name operator literal type number operator name 
