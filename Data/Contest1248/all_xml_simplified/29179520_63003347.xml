include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr name struct name block public type default decl_stmt decl type name name name index expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block while condition expr name operator name block expr_stmt expr name name index expr name operator name expr_stmt expr name operator name operator operator name function specifier type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator operator name return expr name decl name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr name name index expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name name index expr name operator call name name operator name argument_list expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list comment type line decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name operator call name name operator name argument_list if condition expr name name index expr name operator name then block for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name name index expr name index expr name comment type line if condition expr operator call name name operator name argument_list operator call name name operator name argument_list operator name operator name then block comment type line expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list operator name operator literal type number argument expr literal type number expr_stmt expr call name name operator name argument_list if condition expr operator call name name operator name argument_list then block decl_stmt decl type name name init expr call name name operator name argument_list if condition expr call name name operator name argument_list argument expr name operator name then block expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr operator ternary condition expr call name name operator name argument_list then expr name else expr call name name operator name argument_list operator name operator expr_stmt expr name operator name if condition expr operator call name name operator name argument_list argument expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr operator literal type number comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name return expr literal type number 
