include directive file using namespace name comment type line define directive macro name value pragma directive name name name name literal name pragma directive name name name literal name pragma directive name name name literal name decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name namespace name block function specifier type name name parameter_list block expr_stmt expr call name name operator name argument_list function specifier type name name parameter_list parameter decl type name name block while condition expr operator call name name operator name argument_list operator call name name operator name argument_list operator name block type pseudo expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name block if condition expr operator call name name operator name argument_list operator call name name operator name argument_list operator name then block type pseudo expr_stmt expr call name name operator name argument_list function specifier type name name parameter_list block return expr call name name operator name argument_list empty_stmt decl_stmt decl type name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function specifier type name name parameter_list block expr_stmt expr call name name operator name argument_list expr_stmt expr name name index expr literal type number operator name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number operator name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number operator name operator literal type number incr expr name operator block if condition expr name operator name operator literal type number then block if condition expr call name name operator name argument_list operator name operator name name index expr name operator name then block expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name operator literal type number expr_stmt expr name operator name name index expr name operator name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name name index expr name return expr name function type name name parameter_list block expr_stmt expr name operator name if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator literal type string return decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr call name name operator name argument_list argument expr name else block expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list operator call name name operator name argument_list then block expr_stmt expr name operator literal type string return for control init decl type name name init expr literal type number condition expr name operator literal type number operator name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator operator ternary condition expr name name index expr name operator name operator literal type char then expr literal type number else expr operator literal type number operator decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name range expr name block for control init decl type name name range expr name block expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator literal type number operator name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator operator ternary condition expr name name index expr name operator name operator literal type char then expr literal type number else expr operator literal type number operator decl_stmt decl type name name init expr call name argument_list if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number operator literal type char operator name operator literal type number function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number if condition expr name then block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list return expr literal type number 
