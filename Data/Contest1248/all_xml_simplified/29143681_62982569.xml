include directive file using namespace name using name init type name name using name init type name name using name init type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name modifier value define directive macro name parameter_list parameter type name modifier value define directive macro name parameter_list parameter type name modifier value decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list function specifier type name name parameter_list block return expr call name argument_list argument expr operator name operator call name argument_list function specifier type name name parameter_list parameter decl type name name block return expr call name argument_list operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator literal type number function specifier type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr literal type number block return expr name operator operator operator name operator name operator name operator function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block decl_stmt decl type name name init expr literal type number for control init condition expr name incr expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name return expr name function template parameter_list parameter type name name parameter type name modifier name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr name operator call name argument_list argument expr block expr name expr name operator function template parameter_list parameter type name name parameter type name modifier name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr name operator call name argument_list argument expr block expr name expr name operator function type name name parameter_list parameter decl type name name block return expr operator name operator literal type string operator name operator literal type string function type name name parameter_list parameter decl type specifier name modifier name block return expr literal type char operator name operator literal type char function type name name parameter_list parameter decl type specifier name modifier name block return expr call name argument_list argument expr operator name operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name then expr literal type string else expr literal type string function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block return expr literal type char operator call name argument_list argument expr name name operator name operator literal type char operator call name argument_list argument expr name name operator name operator literal type char function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name for control init expr name operator name operator name block type pseudo expr_stmt expr name operator operator ternary condition expr name operator then expr literal type string else expr literal type string operator operator call name argument_list argument expr name return expr literal type char operator name operator literal type char function type name name parameter_list block expr_stmt expr name operator literal type string function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator call name argument_list argument expr name if condition expr sizeof type pack argument_list argument expr name then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr name operator ifndef directive name define directive macro name parameter_list parameter type modifier else directive define directive macro name parameter_list parameter type name modifier value endif directive function type name name parameter_list parameter decl type name name block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init expr name operator name operator name block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name decl_stmt decl type name name init expr name operator name operator name operator name if condition expr name operator literal type number operator literal type number then block expr_stmt expr name operator name name index expr name operator literal type number expr_stmt expr name operator name name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name operator name operator name expr_stmt expr name operator name function type name name parameter_list block function type name name parameter_list parameter decl type name name block function type name name parameter_list block expr_stmt expr call name argument_list decl_stmt decl type name name init expr literal type number if condition expr literal type boolean then block type pseudo expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name modifier name name index block ifdef directive name decl_stmt decl type name name init expr call name name operator name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr name argument expr literal type string argument expr call name name operator name name argument_list type generic argument expr name argument_list argument expr call name name operator name operator name argument_list operator name operator call name argument_list else directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name argument_list endif directive return expr literal type number 
