<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29074739_62785814.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long int</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>eb</name></cpp:macro> <cpp:value>emplace_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>xx</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>yy</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INF</name></cpp:macro> <cpp:value>0x3f3f3f3f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>show</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>cerr&lt;&lt;#x&lt;&lt;" : "&lt;&lt;x&lt;&lt;'\n';</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>yogeshk972</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>cerr&lt;&lt;"\nTime Taken : "&lt;&lt;(float)(clock()-time_p)/CLOCKS_PER_SEC&lt;&lt;"\n";</cpp:value></cpp:define>
<decl_stmt><decl><type><name>clock_t</name></type> <name>time_p</name><init>=<expr><call><name>clock</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name><init>=<expr><literal type="number">2e5</literal><operator>+</operator><literal type="number">1</literal></expr></init></decl>, <decl><type ref="prev"/><name>mod</name><init>= <expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>


<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition><block>{
		<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>,<decl><type ref="prev"/><name>res</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name><operator>&gt;&gt;</operator><name>c</name></expr>;</expr_stmt>
		
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>a</name> <operator>&amp;&amp;</operator> <name>b</name><operator>-</operator><literal type="number">2</literal><operator>*</operator><name>i</name><operator>&gt;=</operator><literal type="number">0</literal></expr> ;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
			<decl_stmt><decl><type><name>int</name></type>  <name>y</name><init>= <expr><name>b</name><operator>-</operator><literal type="number">2</literal><operator>*</operator><name>i</name></expr></init></decl>;</decl_stmt>
			<if>if<condition>( <expr><literal type="number">2</literal><operator>*</operator><name>y</name><operator>&lt;=</operator><name>c</name></expr> )</condition><then> <block type="pseudo"><expr_stmt><expr><name>res</name><operator>=</operator><call><name>max</name><argument_list>( <argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">3</literal><operator>*</operator><name>i</name><operator>+</operator><name>y</name><operator>+</operator><literal type="number">2</literal><operator>*</operator><name>y</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block></then>
			<else>else <block type="pseudo"><expr_stmt><expr><name>res</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">3</literal><operator>*</operator><name>i</name> <operator>+</operator> <name>c</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">2</literal><operator>*</operator><operator>(</operator><name>c</name><operator>/</operator><literal type="number">2</literal><operator>)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt></block></else></if>
		}</block></for>
		
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>res</name><operator>&lt;&lt;</operator><literal type="string">"\n"</literal></expr>;</expr_stmt>
	}</block></while>
	
    <expr_stmt><expr><call><name>yogeshk972</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
