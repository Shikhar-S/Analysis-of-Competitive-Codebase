<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29067038_62786082.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LL</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>LL</name></type> <name>mod</name><init>=<expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<function><type><name>LL</name></type> <name>pow2</name><parameter_list>(<parameter><decl><type><name>LL</name></type> <name>x</name></decl></parameter>,<parameter><decl><type><name>LL</name></type> <name>p</name></decl></parameter>)</parameter_list><block>{
    <decl_stmt><decl><type><name>LL</name></type> <name>ans</name><init>=<expr><literal type="number">1ll</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init>;</init><condition><expr><name>p</name></expr>;</condition><incr><expr><name>p</name><operator>&gt;&gt;=</operator><literal type="number">1ll</literal></expr><operator>,</operator><expr><name>x</name><operator>=</operator><name>x</name><operator>*</operator><name>x</name><operator>%</operator><name>mod</name></expr></incr>)</control><block type="pseudo"><if>if<condition>(<expr><name>p</name><operator>&amp;</operator><literal type="number">1ll</literal></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>ans</name><operator>=</operator><name>ans</name><operator>*</operator><name>x</name><operator>%</operator><name>mod</name></expr>;</expr_stmt></block></then></if></block></for>
    <return>return <expr><name>ans</name></expr>;</return>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <decl_stmt><decl><type><name>LL</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><call><name>pow2</name><argument_list>(<argument><expr><call><name>pow2</name><argument_list>(<argument><expr><literal type="number">2ll</literal></expr></argument>,<argument><expr><name>m</name></expr></argument>)</argument_list></call><operator>-</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
