<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29041475_62784866.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>ans</name></decl> , <decl><type ref="prev"/><name>t</name></decl> , <decl><type ref="prev"/><name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl> , <decl><type ref="prev"/><name>c</name></decl> , <decl><type ref="prev"/><name>d</name></decl> ;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
   <comment type="line">// freopen("x.inp","r",stdin);</comment>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
    <while>while <condition>( <expr><name>t</name><operator>--</operator></expr> )</condition>
    <block>{
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name><operator>&gt;&gt;</operator><name>c</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>ans</name> <operator>=</operator> <literal type="number">0</literal></expr> ;</expr_stmt>
        <expr_stmt><expr><name>d</name> <operator>=</operator>  <call><name>min</name><argument_list>( <argument><expr><name>b</name></expr></argument> , <argument><expr><name>c</name><operator>/</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>  ;</expr_stmt>
        <expr_stmt><expr><name>ans</name> <operator>+=</operator>  <literal type="number">3</literal> <operator>*</operator> <name>d</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>b</name> <operator>-=</operator> <name>d</name></expr> ;</expr_stmt>
        <expr_stmt><expr><name>ans</name> <operator>+=</operator> <literal type="number">3</literal> <operator>*</operator> <call><name>min</name><argument_list>( <argument><expr><name>a</name></expr></argument> , <argument><expr><name>b</name><operator>/</operator><literal type="number">2</literal></expr></argument> )</argument_list></call></expr> ;</expr_stmt>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><literal type="string">"\n"</literal></expr> ;</expr_stmt>
    }</block></while>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
