<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29063350_62785875.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LL</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PB</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>P</name></cpp:macro> <cpp:value>push</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mem</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>memset(x,y,sizeof(x))</cpp:value></cpp:define>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
  <decl_stmt><decl><type><name>LL</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>,<decl><type ref="prev"/><name>d</name></decl>,<decl><type ref="prev"/><name>e</name></decl>,<decl><type ref="prev"/><name>i</name></decl>,<decl><type ref="prev"/><name>j</name></decl>,<decl><type ref="prev"/><name>k</name></decl>,<decl><type ref="prev"/><name>test</name></decl>,<decl><type ref="prev"/><name>tc</name></decl>,<decl><type ref="prev"/><name>s</name></decl>;</decl_stmt>

  <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>test</name></expr>;</expr_stmt>
  <for>for<control>(<init><expr><name>tc</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>tc</name><operator>&lt;=</operator><name>test</name></expr>;</condition><incr><expr><name>tc</name><operator>++</operator></expr></incr>)</control>
  <block>{
      <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name><operator>&gt;&gt;</operator><name>c</name></expr>;</expr_stmt>

      <expr_stmt><expr><name>s</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>d</name><operator>=</operator><name>c</name><operator>/</operator><literal type="number">2</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>s</name><operator>+=</operator><operator>(</operator><call><name>min</name><argument_list>(<argument><expr><name>d</name></expr></argument>,<argument><expr><name>b</name></expr></argument>)</argument_list></call><operator>*</operator><literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>
      <expr_stmt><expr><name>b</name><operator>-=</operator><call><name>min</name><argument_list>(<argument><expr><name>d</name></expr></argument>,<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name>d</name><operator>=</operator><name>b</name><operator>/</operator><literal type="number">2</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>s</name><operator>+=</operator><operator>(</operator><call><name>min</name><argument_list>(<argument><expr><name>d</name></expr></argument>,<argument><expr><name>a</name></expr></argument>)</argument_list></call><operator>*</operator><literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>
      <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>s</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
  }</block></for>

}</block></function>
</unit>
