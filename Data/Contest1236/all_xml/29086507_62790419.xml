<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29086507_62790419.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><literal type="number">1000</literal></expr>]</index><index>[<expr><literal type="number">1000</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>temp</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt><while>while<condition>(<expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>)</condition>
    <block>{
        <if>if<condition>(<expr><name>i</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then>
        <block>{
             <decl_stmt><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt><while>while<condition>(<expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>)</condition>
         <block>{
             <expr_stmt><expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>temp</name></expr>;</expr_stmt>
             <expr_stmt><expr><name>temp</name><operator>++</operator></expr>;</expr_stmt>
             <expr_stmt><expr><name>j</name><operator>++</operator></expr>;</expr_stmt>
         }</block></while>
        }</block></then>
        <else>else
        <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>n</name></expr></init></decl>;</decl_stmt><while>while<condition>(<expr><name>j</name><operator>&gt;=</operator><literal type="number">1</literal></expr>)</condition>
         <block>{
             <expr_stmt><expr><name><name>a</name><index>[<expr><name>j</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>temp</name></expr>;</expr_stmt>
             <expr_stmt><expr><name>temp</name><operator>++</operator></expr>;</expr_stmt>
             <expr_stmt><expr><name>j</name><operator>--</operator></expr>;</expr_stmt>
         }</block></while>
        }</block></else></if>

        <expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>
    }</block></while>
    <expr_stmt><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt><while>while<condition>(<expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>)</condition>
    <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt><while>while<condition>(<expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>)</condition>
        <block>{
            <if>if<condition>(<expr><name>j</name><operator>!=</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">" "</literal></expr>;</expr_stmt></block></then></if>
            <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>j</name><operator>++</operator></expr>;</expr_stmt>
        }</block></while>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>
    }</block></while>

    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
