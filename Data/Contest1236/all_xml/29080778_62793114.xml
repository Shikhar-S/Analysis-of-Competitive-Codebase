<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29080778_62793114.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<comment type="line">// your code goes here</comment>
	<decl_stmt><decl><type><name>int</name></type> <name>r</name></decl>,<decl><type ref="prev"/><name>q</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>q</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
	<comment type="line">//cin &gt;&gt; q;</comment>
	<for>for<control>(<init><expr><name>r</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>r</name><operator>&lt;</operator><name>q</name></expr>;</condition><incr><expr><name>r</name><operator>++</operator></expr></incr>)</control><block>{
		<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>i</name></decl>,<decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
		<if>if<condition>(<expr><name>n</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
			<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
				<for>for<control>(<init><expr><name>j</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>j</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block>{
					<if>if<condition>(<expr><name>j</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>n</name><operator>*</operator><name>j</name><operator>+</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
					}</block></then> <else>else <block>{
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>n</name><operator>*</operator><operator>(</operator><name>j</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>-</operator><name>i</name></expr>;</expr_stmt>
					}</block></else></if>
					<if>if<condition>(<expr><name>j</name><operator>!=</operator><name>n</name><operator>-</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal></expr>;</expr_stmt></block></then></if>
				}</block></for>
				<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
			}</block></for>
		}</block></then> <else>else <block>{
			<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
				<for>for<control>(<init><expr><name>j</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>j</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block>{
					<if>if<condition>(<expr><name>j</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>n</name><operator>*</operator><name>j</name><operator>+</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
					}</block></then> <else>else <block>{
						<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>n</name><operator>*</operator><operator>(</operator><name>j</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>-</operator><name>i</name></expr>;</expr_stmt>
					}</block></else></if>
					<if>if<condition>(<expr><name>j</name><operator>!=</operator><name>n</name><operator>-</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal></expr>;</expr_stmt></block></then></if>
				}</block></for>
				<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
			}</block></for>
		}</block></else></if>
	}</block></for>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
