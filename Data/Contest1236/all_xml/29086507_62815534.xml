<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29086507_62815534.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name><name>z</name><index>[<expr><literal type="number">300050</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>y</name><index>[<expr><literal type="number">300050</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>xzy</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>xzz</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">100001</literal></expr></init></decl>;</decl_stmt><while>while<condition>(<expr><name>i</name><operator>&lt;=</operator><literal type="number">100000</literal><operator>+</operator><name>n</name></expr>)</condition>
    <block>{
        <expr_stmt><expr><name><name>z</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>y</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>
    }</block></while>
    <expr_stmt><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt><while>while<condition>(<expr><name>i</name><operator>&lt;=</operator><name>m</name></expr>)</condition>
    <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>temp</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>temp</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>mm</name><init>=<expr><name>temp</name><operator>-</operator><name>i</name><operator>+</operator><literal type="number">100000</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name><name>y</name><index>[<expr><name>mm</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+=</operator><name><name>y</name><index>[<expr><name>mm</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>y</name><index>[<expr><name>mm</name></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>mm</name><operator>=</operator><name>temp</name><operator>+</operator><name>i</name><operator>+</operator><literal type="number">100000</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>z</name><index>[<expr><name>mm</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>+=</operator><name><name>z</name><index>[<expr><name>mm</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>z</name><index>[<expr><name>mm</name></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>
    }</block></while>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>sum</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>temp</name><init>=<expr><literal type="number">100001</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt><while>while<condition>(<expr><name>i</name><operator>&lt;=</operator><literal type="number">100000</literal><operator>+</operator><name>n</name></expr>)</condition>
    <block>{
        <if>if<condition>(<expr><name><name>y</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><literal type="number">0</literal></expr>)</condition><then>
        <block>{
            <while>while<condition>(<expr><name><name>y</name><index>[<expr><name>i</name></expr>]</index></name><operator>--</operator></expr>)</condition>
            <block>{
                <expr_stmt><expr><name>sum</name><operator>=</operator><name>sum</name><operator>+</operator><call><name>min</name><argument_list>(<argument><expr><name>i</name><operator>+</operator><name>m</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">100000</literal><operator>+</operator><name>n</name></expr></argument>)</argument_list></call><operator>-</operator><name>temp</name></expr>;</expr_stmt>
               <comment type="line">// cout&lt;&lt;"***"&lt;&lt;temp&lt;&lt;" "&lt;&lt;sum&lt;&lt;endl;</comment>
                <expr_stmt><expr><name>temp</name><operator>++</operator></expr>;</expr_stmt>
            }</block></while>
        }</block></then></if>
        <expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt>
    }</block></while>
    <expr_stmt><expr><name>temp</name><operator>=</operator><literal type="number">100000</literal><operator>+</operator><name>n</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>i</name><operator>=</operator><literal type="number">300005</literal></expr>;</expr_stmt><while>while<condition>(<expr><name>i</name><operator>&gt;=</operator><literal type="number">100001</literal></expr>)</condition>
    <block>{
        <if>if<condition>(<expr><name><name>z</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><literal type="number">0</literal></expr>)</condition><then>
        <block>{
            <while>while<condition>(<expr><name><name>z</name><index>[<expr><name>i</name></expr>]</index></name><operator>--</operator></expr>)</condition>
            <block>{
                <expr_stmt><expr><name>sum</name><operator>=</operator><name>sum</name><operator>-</operator><call><name>max</name><argument_list>(<argument><expr><name>i</name><operator>-</operator><name>m</name><operator>-</operator><literal type="number">1</literal></expr></argument>,<argument><expr><literal type="number">100001</literal></expr></argument>)</argument_list></call><operator>+</operator><name>temp</name></expr>;</expr_stmt>
               <comment type="line">// cout&lt;&lt;temp&lt;&lt;"***"&lt;&lt;sum&lt;&lt;endl;</comment>
                <expr_stmt><expr><name>temp</name><operator>--</operator></expr>;</expr_stmt>
            }</block></while>
        }</block></then></if>
        <expr_stmt><expr><name>i</name><operator>--</operator></expr>;</expr_stmt>
    }</block></while>
    <if>if<condition>(<expr><name>n</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">0</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then>
    <else>else <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>sum</name><operator>+</operator><name>n</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></else></if>

    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
