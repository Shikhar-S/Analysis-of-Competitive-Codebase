<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29065728_62786607.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>, <decl><type ref="prev"/><name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<while>while <condition>(<expr><name>T</name><operator>--</operator></expr>)</condition> <block>{
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>a</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>b</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>t3</name> <init>= <expr><name>c</name><operator>/</operator><literal type="number">2</literal></expr></init></decl>, <decl><type ref="prev"/><name>ans</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><name>b</name> <operator>&gt;</operator> <name>t3</name></expr>)</condition><then> <block>{
			<expr_stmt><expr><name>ans</name> <operator>+=</operator> <name>t3</name><operator>*</operator><literal type="number">3</literal></expr>;</expr_stmt> <expr_stmt><expr><name>b</name><operator>-=</operator><name>t3</name></expr>;</expr_stmt>
		}</block></then> <else>else <block>{
			<expr_stmt><expr><name>ans</name> <operator>+=</operator> <name>b</name><operator>*</operator><literal type="number">3</literal></expr>;</expr_stmt> <expr_stmt><expr><name>b</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
		}</block></else></if>
		<decl_stmt><decl><type><name>int</name></type> <name>t2</name> <init>= <expr><name>b</name><operator>/</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><name>a</name> <operator>&gt;</operator> <name>t2</name></expr>)</condition><then> <block>{
			<expr_stmt><expr><name>ans</name> <operator>+=</operator> <name>t2</name><operator>*</operator><literal type="number">3</literal></expr>;</expr_stmt>
		}</block></then> <else>else <block>{
			<expr_stmt><expr><name>ans</name> <operator>+=</operator> <name>a</name><operator>*</operator><literal type="number">3</literal></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>, <argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
