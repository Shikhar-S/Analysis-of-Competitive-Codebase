<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29078629_62792046.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstdio&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>,<decl><type ref="prev"/><name>A</name></decl>,<decl><type ref="prev"/><name>B</name></decl>,<decl><type ref="prev"/><name>C</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>Solve1</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>)</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>ret</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<while>while<condition>(<expr><name>b</name><operator>&gt;=</operator><literal type="number">1</literal><operator>&amp;&amp;</operator><name>c</name><operator>&gt;=</operator><literal type="number">2</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>b</name><operator>-=</operator><literal type="number">1</literal></expr><operator>,</operator><expr><name>c</name><operator>-=</operator><literal type="number">2</literal></expr><operator>,</operator><expr><name>ret</name><operator>+=</operator><literal type="number">3</literal></expr>;</expr_stmt></block></while>
	<while>while<condition>(<expr><name>a</name><operator>&gt;=</operator><literal type="number">1</literal><operator>&amp;&amp;</operator><name>b</name><operator>&gt;=</operator><literal type="number">2</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>a</name><operator>-=</operator><literal type="number">1</literal></expr><operator>,</operator><expr><name>b</name><operator>-=</operator><literal type="number">2</literal></expr><operator>,</operator><expr><name>ret</name><operator>+=</operator><literal type="number">3</literal></expr>;</expr_stmt></block></while>
	<return>return <expr><name>ret</name></expr>;</return>
}</block></function>
<function><type><name>int</name></type> <name>Solve2</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>)</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>ret</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<while>while<condition>(<expr><name>a</name><operator>&gt;=</operator><literal type="number">1</literal><operator>&amp;&amp;</operator><name>b</name><operator>&gt;=</operator><literal type="number">2</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>a</name><operator>-=</operator><literal type="number">1</literal></expr><operator>,</operator><expr><name>b</name><operator>-=</operator><literal type="number">2</literal></expr><operator>,</operator><expr><name>ret</name><operator>+=</operator><literal type="number">3</literal></expr>;</expr_stmt></block></while>
	<while>while<condition>(<expr><name>b</name><operator>&gt;=</operator><literal type="number">1</literal><operator>&amp;&amp;</operator><name>c</name><operator>&gt;=</operator><literal type="number">2</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>b</name><operator>-=</operator><literal type="number">1</literal></expr><operator>,</operator><expr><name>c</name><operator>-=</operator><literal type="number">2</literal></expr><operator>,</operator><expr><name>ret</name><operator>+=</operator><literal type="number">3</literal></expr>;</expr_stmt></block></while>
	<return>return <expr><name>ret</name></expr>;</return>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>T</name><operator>--</operator></expr>)</condition><block>{
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>A</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>B</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d\n"</literal></expr></argument>,<argument><expr><call><name>max</name><argument_list>(<argument><expr><call><name>Solve1</name><argument_list>(<argument><expr><name>A</name></expr></argument>,<argument><expr><name>B</name></expr></argument>,<argument><expr><name>C</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><call><name>Solve2</name><argument_list>(<argument><expr><name>A</name></expr></argument>,<argument><expr><name>B</name></expr></argument>,<argument><expr><name>C</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></while>
}</block></function></unit>
