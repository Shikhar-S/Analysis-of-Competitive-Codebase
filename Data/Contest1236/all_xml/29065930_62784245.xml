<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29065930_62784245.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>f</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>s</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name> <init>= <expr><literal type="number">1e5</literal><operator>+</operator><literal type="number">5</literal></expr></init></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition>
	<block>{
		<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name> <operator>&gt;&gt;</operator> <name>b</name> <operator>&gt;&gt;</operator> <name>c</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>x</name> <init>= <expr><name>a</name></expr></init></decl>, <decl><type ref="prev"/><name>y</name> <init>= <expr><name>b</name></expr></init></decl>, <decl><type ref="prev"/><name>z</name> <init>= <expr><name>c</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>ans1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>ans2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<while>while<condition>(<expr><name>x</name> <operator>&amp;&amp;</operator> <name>y</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block type="pseudo"><expr_stmt><expr><name>ans1</name> <operator>+=</operator> <literal type="number">3</literal></expr><operator>,</operator> <expr><name>x</name><operator>--</operator></expr><operator>,</operator> <expr><name>y</name> <operator>-=</operator><literal type="number">2</literal></expr>;</expr_stmt></block></while>
		<while>while<condition>(<expr><name>y</name> <operator>&amp;&amp;</operator> <name>z</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block type="pseudo"><expr_stmt><expr><name>ans1</name> <operator>+=</operator> <literal type="number">3</literal></expr><operator>,</operator> <expr><name>y</name><operator>--</operator></expr><operator>,</operator> <expr><name>z</name> <operator>-=</operator><literal type="number">2</literal></expr>;</expr_stmt></block></while>
		<while>while<condition>(<expr><name>b</name> <operator>&amp;&amp;</operator> <name>c</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block type="pseudo"><expr_stmt><expr><name>ans2</name> <operator>+=</operator> <literal type="number">3</literal></expr><operator>,</operator> <expr><name>b</name><operator>--</operator></expr><operator>,</operator> <expr><name>c</name> <operator>-=</operator><literal type="number">2</literal></expr>;</expr_stmt></block></while>
		<while>while<condition>(<expr><name>a</name> <operator>&amp;&amp;</operator> <name>b</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block type="pseudo"><expr_stmt><expr><name>ans2</name> <operator>+=</operator> <literal type="number">3</literal></expr><operator>,</operator> <expr><name>a</name><operator>--</operator></expr><operator>,</operator> <expr><name>b</name> <operator>-=</operator><literal type="number">2</literal></expr>;</expr_stmt></block></while>
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <call><name>max</name><argument_list>(<argument><expr><name>ans1</name></expr></argument>, <argument><expr><name>ans2</name></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt> 
	}</block></while>
}</block></function></unit>
