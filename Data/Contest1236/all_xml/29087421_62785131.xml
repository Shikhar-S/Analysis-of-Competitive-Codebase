<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29087421_62785131.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<using>using <name>ll</name> <init>= <type><name>long</name> <name>long</name></type></init>;</using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt> <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>T</name></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>t</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>t</name> <operator>&lt;</operator> <name>T</name></expr>;</condition> <incr><expr><operator>++</operator><name>t</name></expr></incr>)</control> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>;</decl_stmt> <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name> <operator>&gt;&gt;</operator> <name>b</name> <operator>&gt;&gt;</operator> <name>c</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>maxgot</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>a</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>thisgot</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>acpy</name> <init>= <expr><name>a</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>bcpy</name> <init>= <expr><name>b</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>ccpy</name> <init>= <expr><name>c</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>taken</name> <init>= <expr><call><name>min</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>min</name><argument_list>(<argument><expr><name>b</name> <operator>/</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>acpy</name> <operator>-=</operator> <name>taken</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>bcpy</name> <operator>-=</operator> <literal type="number">2</literal> <operator>*</operator> <name>taken</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>thisgot</name> <operator>+=</operator> <literal type="number">3</literal> <operator>*</operator> <name>taken</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>taken</name> <operator>=</operator> <call><name>min</name><argument_list>(<argument><expr><name>bcpy</name></expr></argument>, <argument><expr><name>ccpy</name> <operator>/</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>thisgot</name> <operator>+=</operator> <literal type="number">3</literal> <operator>*</operator> <name>taken</name></expr>;</expr_stmt>
            <expr_stmt><expr><name>maxgot</name> <operator>=</operator> <call><name>max</name><argument_list>(<argument><expr><name>maxgot</name></expr></argument>, <argument><expr><name>thisgot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>maxgot</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
    }</block></for>
}</block></function>
</unit>
