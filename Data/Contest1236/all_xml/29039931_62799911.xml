<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29039931_62799911.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name><name>f</name><index>[<expr><literal type="number">305</literal></expr>]</index><index>[<expr><literal type="number">305</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name>N</name></decl>,<decl><type ref="prev"/><name>ct</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>N</name></expr>;</expr_stmt><expr_stmt><expr><name>ct</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>N</name></expr>;</condition><incr><expr><operator>++</operator><name>j</name></expr></incr>)</control>
   <block>{
    <if>if <condition>(<expr><name>j</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ct</name><operator>+=</operator><name>N</name><operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then>
    <elseif>else <if>if <condition>(<expr><name>j</name><operator>!=</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ct</name><operator>+=</operator><name>N</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if></elseif></if>
     <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>N</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
    <block>{
      <expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><name>ct</name></expr>;</expr_stmt>
      <if>if <condition>(<expr><name>j</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ct</name><operator>--</operator></expr>;</expr_stmt></block></then><else>else <block type="pseudo"><expr_stmt><expr><name>ct</name><operator>++</operator></expr>;</expr_stmt></block></else></if>
    }</block></for>

   }</block></for>
   <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>N</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>
   <block>{
       <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>N</name></expr>;</condition><incr><expr><operator>++</operator><name>j</name></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>f</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>&lt;&lt;</operator><literal type="char">' '</literal></expr>;</expr_stmt></block></for><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="char">'\n'</literal></expr>;</expr_stmt>
   }</block></for>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
