<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29039931_62791583.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>,<decl><type ref="prev"/><name>mod</name></decl>,<decl><type ref="prev"/><name>kq</name></decl>;</decl_stmt>
<function><type><name>long</name> <name>long</name></type> <name>lt</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>x</name></decl></parameter>,<parameter><decl><type><name>long</name> <name>long</name></type> <name>y</name></decl></parameter>)</parameter_list>
<block>{
    <if>if <condition>(<expr><name>y</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="number">1</literal></expr>;</return></block></then></if>
    <if>if <condition>(<expr><name>y</name><operator>==</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><return>return <expr><name>x</name></expr>;</return></block></then></if>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>k</name><init>=<expr><call><name>lt</name><argument_list>(<argument><expr><name>x</name></expr></argument>,<argument><expr><name>y</name><operator>/</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if>if <condition>(<expr><name>y</name><operator>%</operator><literal type="number">2</literal></expr>)</condition><then> <block type="pseudo"><return>return <expr><name>k</name><operator>*</operator><name>k</name><operator>%</operator><name>mod</name><operator>*</operator><name>x</name><operator>%</operator><name>mod</name></expr>;</return></block></then></if>
             <return>return <expr><name>k</name><operator>*</operator><name>k</name><operator>%</operator><name>mod</name></expr>;</return>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>mod</name><operator>=</operator><literal type="number">1000000007</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name>kq</name><operator>=</operator><operator>(</operator><call><name>lt</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>m</name></expr></argument>)</argument_list></call><operator>-</operator><literal type="number">1</literal><operator>+</operator><name>mod</name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>kq</name><operator>=</operator><call><name>lt</name><argument_list>(<argument><expr><name>kq</name></expr></argument>,<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>kq</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
