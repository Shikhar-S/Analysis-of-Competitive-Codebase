<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29050438_62784519.cpp"><comment type="line">//  Copyright Â© 2019 Diego Garcia Rodriguez del Campo. All rights reserved.</comment>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX</name></cpp:macro> <cpp:value>200005</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>optimiza_io</name></cpp:macro> <cpp:value>cin.tie(0); ios_base::sync_with_stdio(0);</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>i64</name>;</typedef>

<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>, <decl><type ref="prev"/><name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>, <decl><type ref="prev"/><name>ans</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>optimiza_io</name></type>
    <name>cin</name> &gt;&gt; <name>T</name></decl>;</decl_stmt>
    <while>while<condition>( <expr><name>T</name> <operator>--</operator></expr> )</condition> <block>{
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name> <operator>&gt;&gt;</operator> <name>b</name> <operator>&gt;&gt;</operator> <name>c</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>ans</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
        <while>while<condition>( <expr><name>b</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>c</name> <operator>&gt;</operator> <literal type="number">1</literal></expr> )</condition> <block>{
            <expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>c</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>ans</name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
            
        }</block></while>
        <while>while<condition>( <expr><name>a</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>b</name> <operator>&gt;</operator> <literal type="number">1</literal></expr> )</condition> <block>{
            <expr_stmt><expr><name>a</name><operator>--</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>b</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>ans</name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
            
        }</block></while>
        <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name> <operator>&lt;&lt;</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>
    }</block></while>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
