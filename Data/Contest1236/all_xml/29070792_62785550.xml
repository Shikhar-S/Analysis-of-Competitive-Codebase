<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29070792_62785550.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>scan</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>scanf("%d",&amp;x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>scanl</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>scanf("%I64d",&amp;x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>For</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i=a;i&lt;=b;i++)</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name><init>=<expr><literal type="number">1e5</literal><operator>+</operator><literal type="number">5</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>mod</name><init>=<expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>,<decl><type ref="prev"/><name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
<comment type="line">//	freopen("in.txt","r",stdin);</comment>
	<expr_stmt><expr><call><name>scan</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<macro><name>For</name><argument_list>(<argument>i</argument>,<argument><literal type="number">1</literal></argument>,<argument>t</argument>)</argument_list></macro><block>{
		<expr_stmt><expr><call><name>scan</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name>scan</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><expr_stmt><expr><call><name>scan</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<while>while<condition>(<expr><name>c</name><operator>&gt;=</operator><literal type="number">2</literal><operator>&amp;&amp;</operator><name>b</name><operator>&gt;=</operator><literal type="number">1</literal></expr>)</condition><block>{
			<expr_stmt><expr><name>ans</name><operator>+=</operator><literal type="number">3</literal></expr>;</expr_stmt>
			<expr_stmt><expr><name>c</name><operator>-=</operator><literal type="number">2</literal></expr>;</expr_stmt><expr_stmt><expr><name>b</name><operator>-=</operator><literal type="number">1</literal></expr>;</expr_stmt>
		}</block></while>
		<while>while<condition>(<expr><name>b</name><operator>&gt;=</operator><literal type="number">2</literal><operator>&amp;&amp;</operator><name>a</name><operator>&gt;=</operator><literal type="number">1</literal></expr>)</condition><block>{
			<expr_stmt><expr><name>ans</name><operator>+=</operator><literal type="number">3</literal></expr>;</expr_stmt>
			<expr_stmt><expr><name>b</name><operator>-=</operator><literal type="number">2</literal></expr>;</expr_stmt><expr_stmt><expr><name>a</name><operator>-=</operator><literal type="number">1</literal></expr>;</expr_stmt>
		}</block></while>
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><literal type="string">"\n"</literal></expr>;</expr_stmt>
	}</block>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
