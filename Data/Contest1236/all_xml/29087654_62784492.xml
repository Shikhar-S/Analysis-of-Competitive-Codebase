<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29087654_62784492.cpp"> <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

 <using>using <namespace>namespace <name>std</name>;</namespace></using>

 <function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cout</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>,<decl><type ref="prev"/><name>A</name></decl>,<decl><type ref="prev"/><name>B</name></decl>,<decl><type ref="prev"/><name>C</name></decl>;</decl_stmt>

    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>T</name></expr>;</expr_stmt>

    <while>while<condition>(<expr><name>T</name><operator>--</operator></expr>)</condition><block>{
        <decl_stmt><decl><type><name>int</name></type> <name>R</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>A</name><operator>&gt;&gt;</operator><name>B</name><operator>&gt;&gt;</operator><name>C</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>R</name><operator>+=</operator><call><name>min</name><argument_list>(<argument><expr><name>B</name></expr></argument>,<argument><expr><name>C</name><operator>/</operator><literal type="number">2</literal></expr></argument>)</argument_list></call><operator>+</operator><literal type="number">2</literal><operator>*</operator><call><name>min</name><argument_list>(<argument><expr><name>B</name></expr></argument>,<argument><expr><name>C</name><operator>/</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>B</name><operator>-=</operator><call><name>min</name><argument_list>(<argument><expr><name>B</name></expr></argument>,<argument><expr><name>C</name><operator>/</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>R</name><operator>+=</operator><call><name>min</name><argument_list>(<argument><expr><name>A</name></expr></argument>,<argument><expr><name>B</name><operator>/</operator><literal type="number">2</literal></expr></argument>)</argument_list></call><operator>+</operator><literal type="number">2</literal><operator>*</operator><call><name>min</name><argument_list>(<argument><expr><name>A</name></expr></argument>,<argument><expr><name>B</name><operator>/</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>R</name><operator>&lt;&lt;</operator><literal type="char">'\n'</literal></expr>;</expr_stmt>
    }</block></while>


    <return>return <expr><literal type="number">0</literal></expr>;</return>
 }</block></function>
</unit>
