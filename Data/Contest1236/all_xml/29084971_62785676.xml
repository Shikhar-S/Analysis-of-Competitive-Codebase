<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29084971_62785676.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rep</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i=0;i&lt;n;++i)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rep1</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i=1;i&lt;=n;++i)</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
  <decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr>;</expr_stmt>
  <decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>a</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></decl>,<decl><type ref="prev"/><name>b</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></decl>,<decl><type ref="prev"/><name>c</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></decl>;</decl_stmt>
  <macro><name>rep</name><argument_list>(<argument>i</argument>,<argument>t</argument>)</argument_list></macro> <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;&gt;</operator> <name><name>b</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;&gt;</operator> <name><name>c</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
  
  <macro><name>rep</name><argument_list>(<argument>i</argument>,<argument>t</argument>)</argument_list></macro><block>{
    <decl_stmt><decl><type><name>int</name></type> <name>res</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;</operator><literal type="number">1</literal></expr>)</condition><block>{
      <expr_stmt><expr><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>-=</operator><literal type="number">2</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>res</name><operator>+=</operator><literal type="number">3</literal></expr>;</expr_stmt>
    }</block></while>
    <while>while<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;</operator><literal type="number">0</literal><operator>&amp;&amp;</operator><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;</operator><literal type="number">1</literal></expr>)</condition><block>{
      <expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name><operator>--</operator></expr>;</expr_stmt>
      <expr_stmt><expr><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name><operator>-=</operator><literal type="number">2</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>res</name><operator>+=</operator><literal type="number">3</literal></expr>;</expr_stmt>
    }</block></while>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>res</name> <operator>&lt;&lt;</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>
  }</block>
  
  <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
