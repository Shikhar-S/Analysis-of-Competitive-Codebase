<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29032572_62791962.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name><name>a</name><index>[<expr><literal type="number">333</literal></expr>]</index><index>[<expr><literal type="number">333</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<decl_stmt><decl><type><name>int</name></type> <name>st</name><init>=<expr><name>j</name></expr></init></decl>,<decl><type ref="prev"/><name>num</name><init>=<expr><operator>(</operator><name>j</name><operator>-</operator><literal type="number">1</literal><operator>)</operator><operator>*</operator><name>n</name><operator>+</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<comment type="line">//		for(int i=st;i&lt;=n;i++)</comment>
<comment type="line">//			a[i][j]=num++;</comment>
<comment type="line">//		for(int i=1;i&lt;st;i++)</comment>
<comment type="line">//			a[i][j]=num++;</comment>
		<if>if<condition>(<expr><name>j</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then><block type="pseudo"><for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
			<block type="pseudo"><expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><name>num</name><operator>++</operator></expr>;</expr_stmt></block></for></block></then>
		<else>else <block type="pseudo"><for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><name>n</name></expr></init></decl>;</init><condition><expr><name>i</name><operator>&gt;=</operator><literal type="number">1</literal></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>
			<block type="pseudo"><expr_stmt><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><name>num</name><operator>++</operator></expr>;</expr_stmt></block></for></block></else></if>
		
	}</block></for>
<comment type="line">//	for(int i=1;i&lt;=n;i++)</comment>
<comment type="line">//		for(int j=1;j&lt;=n;j++)</comment>
<comment type="line">//			if(i!=j)</comment>
<comment type="line">//			{</comment>
<comment type="line">//				int ans=0;</comment>
<comment type="line">//				for(int k=1;k&lt;=n;k++)</comment>
<comment type="line">//					for(int l=1;l&lt;=n;l++)</comment>
<comment type="line">//						ans+=a[i][k]&gt;a[j][l];</comment>
<comment type="line">//				printf("%d %d %d\n",i,j,ans);</comment>
<comment type="line">//			}</comment>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block type="pseudo"><for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
			<block type="pseudo"><expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%d%c"</literal></expr></argument>,<argument><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>,<argument><expr><literal type="string">" \n"</literal><index>[<expr><name>j</name><operator>==</operator><name>n</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for></block></for>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
