<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29050438_62791758.cpp"><comment type="line">//  Copyright Â© 2019 Diego Garcia Rodriguez del Campo. All rights reserved.</comment>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX</name></cpp:macro> <cpp:value>200005</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>optimiza_io</name></cpp:macro> <cpp:value>cin.tie(0); ios_base::sync_with_stdio(0);</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>i64</name>;</typedef>

<decl_stmt><decl><type><name>int</name></type> <name>N</name></decl>, <decl><type ref="prev"/><name>idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>f</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>vector</name> <argument_list type="generic">&lt; <argument><expr><name>int</name></expr></argument> &gt;</argument_list></name></type> <name><name>ans</name><index>[<expr><name>MAX</name></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>optimiza_io</name></type>
    <name>cin</name> &gt;&gt; <name>N</name></decl>;</decl_stmt>
    <for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>N</name></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{
        <if>if<condition>( <expr><operator>!</operator> <name>f</name></expr> )</condition><then> <block>{
            <for>for<control>( <init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;=</operator> <name>N</name></expr>;</condition> <incr><expr><name>j</name> <operator>++</operator></expr></incr> )</control> 
                <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><call><name>push_back</name><argument_list>( <argument><expr><operator>++</operator><name>idx</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block></for>
        }</block></then>
        <else>else <block>{
            <for>for<control>( <init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><name>N</name></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&gt;=</operator> <literal type="number">1</literal></expr>;</condition> <incr><expr><name>j</name> <operator>--</operator></expr></incr> )</control> 
                <block type="pseudo"><expr_stmt><expr><name><name>ans</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><call><name>push_back</name><argument_list>( <argument><expr><operator>++</operator><name>idx</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block></for>
        }</block></else></if>
        <expr_stmt><expr><name>f</name> <operator>=</operator> <operator>!</operator> <name>f</name></expr>;</expr_stmt>
    }</block></for>
    
    <for>for<control>( <init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>N</name></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr> )</control> <block>{
        <for>for<control>( <init><decl><type><name>auto</name></type> <name>v</name> <range>: <expr><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name></expr></range></decl></init> )</control>
            <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>v</name> <operator>&lt;&lt;</operator> <literal type="string">" "</literal></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>
    }</block></for>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
