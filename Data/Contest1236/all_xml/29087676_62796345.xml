<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29087676_62796345.cpp"><comment type="block" format="doxygen">/**
*    author:  a2954898606
*    created: 2019/10/17 21:25:20
**/</comment>
<comment type="block">/*
ÐÐÐÐ£Ð¡ÐÐÐÐ
âÐÐ£Ð¡Ð¯âââââââÐ ÐÐÐÐ¢Ð¯ÐÐ£ââ
ââââââââââââââââââ
ââââââââââââââââââ
ââââââââââââââââââ
ââââââââââââââââââ
ââââââââââââââââââ
ââââââââââââââââââââ
ââââââââââââââââââââââ
ââââââââââââââââââââââââ
ââââââââââââââââââââââââââ
âââââââââââââââââââââ
âââââââââââââââââââââ
âââââââââââââââââââââ
 */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP</name><parameter_list>(<parameter><type><name>A</name></type></parameter>,<parameter><type><name>B</name></type></parameter>,<parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int I=(A);I&lt;=(B);I++)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PER</name><parameter_list>(<parameter><type><name>A</name></type></parameter>,<parameter><type><name>B</name></type></parameter>,<parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int I=(A);I&gt;=(B);I--)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LL</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>N</name></cpp:macro> <cpp:value>1000010</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>M</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>long</name> <name>long</name></type> <name>mod</name><init>=<expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<comment type="line">//long long quickpow(long long a,long long b){long long ret=1;while(b){if(b&amp;1){ret=ret*a%mod;}}a=a*a%mod;b&gt;&gt;=1;return ret;}</comment>
<function><type><name>long</name> <name>long</name></type> <name>quickpow</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>a</name></decl></parameter>,<parameter><decl><type><name>long</name> <name>long</name></type> <name>b</name></decl></parameter>)</parameter_list><block>{
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>ret</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><name>b</name></expr>)</condition><block>{
        <if>if<condition>(<expr><name>b</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>ret</name><operator>=</operator><name>ret</name><operator>*</operator><name>a</name><operator>%</operator><name>mod</name></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name>a</name><operator>=</operator><name>a</name><operator>*</operator><name>a</name><operator>%</operator><name>mod</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>b</name><operator>&gt;&gt;=</operator><literal type="number">1</literal></expr>;</expr_stmt>
    }</block></while>
    <return>return <expr><name>ret</name></expr>;</return>
}</block></function>
<comment type="line">//using namespace std;</comment>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>,<decl><type ref="prev"/><name>ans</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{

    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>m</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>ans</name><operator>=</operator><call><name>quickpow</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>ans</name><operator>--</operator></expr>;</expr_stmt>
    <expr_stmt><expr><name>ans</name><operator>=</operator><call><name>quickpow</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
