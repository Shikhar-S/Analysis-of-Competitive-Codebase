<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29071926_62791866.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<using>using <name>ll</name> <init>= <type><name>long</name> <name>long</name></type></init>;</using>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>mod</name> <init>= <expr><literal type="number">1e9</literal> <operator>+</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<function><type><name>ll</name></type> <name>Pow</name><parameter_list>(<parameter><decl><type><name>ll</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>ll</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{
	<decl_stmt><decl><type><name>ll</name></type> <name>ret</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init>;</init> <condition><expr><name>x</name></expr>;</condition> <incr><expr><name>x</name> <operator>&gt;&gt;=</operator> <literal type="number">1</literal></expr><operator>,</operator> <expr><operator>(</operator><name>a</name> <operator>*=</operator> <name>a</name><operator>)</operator> <operator>%=</operator> <name>mod</name></expr></incr>)</control>
		<block type="pseudo"><if>if<condition>(<expr><name>x</name> <operator>&amp;</operator> <literal type="number">1</literal></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><operator>(</operator><name>ret</name> <operator>*=</operator> <name>a</name><operator>)</operator> <operator>%=</operator> <name>mod</name></expr>;</expr_stmt></block></then></if></block></for>
	<return>return <expr><name>ret</name></expr>;</return>
}</block></function>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>m</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>n</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%lld\n"</literal></expr></argument>, <argument><expr><call><name>Pow</name><argument_list>(<argument><expr><call><name>Pow</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>m</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>n</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>

</unit>
