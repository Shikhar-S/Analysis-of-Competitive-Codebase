<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29063964_62787547.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include> 
<using>using <namespace>namespace <name>std</name>;</namespace></using>
 
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>,<decl><type ref="prev"/><name>j</name></decl>,<decl><type ref="prev"/><name>n</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>t</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition>
    <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name><operator>&gt;&gt;</operator><name>c</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>max</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <if>if<condition>(<expr><name>c</name><operator>%</operator><literal type="number">2</literal><operator>!=</operator><literal type="number">0</literal></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>c</name><operator>-=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
        <expr_stmt><expr><name>c</name><operator>/=</operator><literal type="number">2</literal></expr>;</expr_stmt>
        <if>if<condition>(<expr><name>b</name><operator>&gt;</operator><name>c</name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name>max</name><operator>+=</operator><operator>(</operator><literal type="number">3</literal><operator>*</operator><name>c</name><operator>)</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>b</name><operator>-=</operator><name>c</name></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>b</name><operator>%</operator><literal type="number">2</literal><operator>!=</operator><literal type="number">0</literal></expr>)</condition><then>
                <block type="pseudo"><expr_stmt><expr><name>b</name><operator>-=</operator><literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
            <expr_stmt><expr><name>b</name><operator>/=</operator><literal type="number">2</literal></expr>;</expr_stmt>
            <if>if<condition>(<expr><name>a</name><operator>&gt;</operator><name>b</name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>max</name><operator>+=</operator><operator>(</operator><literal type="number">3</literal><operator>*</operator><name>b</name><operator>)</operator></expr>;</expr_stmt>
            }</block></then>
            <else>else
            <block>{
                <expr_stmt><expr><name>max</name><operator>+=</operator><operator>(</operator><literal type="number">3</literal><operator>*</operator><name>a</name><operator>)</operator></expr>;</expr_stmt>
            }</block></else></if>
        }</block></then>
        <else>else
        <block>{
            <expr_stmt><expr><name>max</name><operator>+=</operator><operator>(</operator><literal type="number">3</literal><operator>*</operator><name>b</name><operator>)</operator></expr>;</expr_stmt>
        }</block></else></if>
        

        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>max</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>

        <expr_stmt><expr><name>t</name><operator>--</operator></expr>;</expr_stmt>
    }</block></while>
    
}</block></function></unit>
