<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29041404_62785846.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>anss</name></decl> , <decl><type ref="prev"/><name>tt</name></decl> , <decl><type ref="prev"/><name>aa</name></decl> , <decl><type ref="prev"/><name>bb</name></decl> , <decl><type ref="prev"/><name>cc</name></decl> , <decl><type ref="prev"/><name>dd</name></decl> ;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>F</name><index>[<expr><literal type="number">1001</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
  <comment type="line">//  freopen("x.inp","r",stdin);</comment>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>tt</name></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">110</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>F</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">110</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>F</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">110</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>F</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt></block></for>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">110</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>F</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt></block></for>
    <while>while <condition>( <expr><name>tt</name><operator>--</operator></expr> )</condition>
    <block>{
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>aa</name><operator>&gt;&gt;</operator><name>bb</name><operator>&gt;&gt;</operator><name>cc</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>anss</name> <operator>=</operator> <literal type="number">0</literal></expr> ;</expr_stmt>
        <expr_stmt><expr><name>dd</name> <operator>=</operator>  <call><name>min</name><argument_list>( <argument><expr><name>bb</name></expr></argument> , <argument><expr><name>cc</name><operator>/</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>  ;</expr_stmt>
        <expr_stmt><expr><name>anss</name> <operator>+=</operator>  <literal type="number">3</literal> <operator>*</operator> <name>dd</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>bb</name> <operator>-=</operator> <name>dd</name></expr> ;</expr_stmt>
        <expr_stmt><expr><name>dd</name> <operator>=</operator>  <call><name>min</name><argument_list>( <argument><expr><name>aa</name></expr></argument> , <argument><expr><name>bb</name><operator>/</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>  ;</expr_stmt>
        <expr_stmt><expr><name>anss</name> <operator>+=</operator> <literal type="number">3</literal> <operator>*</operator> <name>dd</name></expr> ;</expr_stmt>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>anss</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    }</block></while>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
