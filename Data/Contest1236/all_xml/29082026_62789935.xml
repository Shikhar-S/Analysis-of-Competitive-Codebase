<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29082026_62789935.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ull</name></cpp:macro> <cpp:value>unsigned long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_INF</name></cpp:macro> <cpp:value>0x7f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_INF_VAL</name></cpp:macro> <cpp:value>0x7f7f7f7f</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pi</name></cpp:macro> <cpp:value>3.141592653589</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>eps</name></cpp:macro> <cpp:value>1e-10</cpp:value></cpp:define>
<comment type="line">//#define p 2173412051LL</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sz</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
 
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function_decl><type><name>ll</name></type> <name>pow_mod</name><parameter_list>( <parameter><decl><type><name>ll</name></type></decl></parameter>, <parameter><decl><type><name>ll</name></type></decl></parameter>, <parameter><decl><type><name>ll</name></type></decl></parameter> )</parameter_list>;</function_decl>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>m</name></decl>, <decl><type ref="prev"/><name>p</name> <init>= <expr><literal type="number">1000000007</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>x</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>scanf</name><argument_list>( <argument><expr><literal type="string">"%lld%lld"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>n</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>m</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name>x</name> <operator>=</operator> <call><name>pow_mod</name><argument_list>( <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>m</name></expr></argument>, <argument><expr><name>p</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><operator>--</operator><name>x</name></expr>;</expr_stmt>
	<if>if<condition>( <expr><name>x</name> <operator>&lt;</operator> <literal type="number">0</literal></expr> )</condition><then>
		<block type="pseudo"><expr_stmt><expr><name>x</name> <operator>+=</operator> <name>p</name></expr>;</expr_stmt></block></then></if>
	<expr_stmt><expr><call><name>printf</name><argument_list>( <argument><expr><literal type="string">"%lld"</literal></expr></argument>, <argument><expr><call><name>pow_mod</name><argument_list>( <argument><expr><name>x</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><name>p</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>

<function><type><name>ll</name></type> <name>pow_mod</name><parameter_list>( <parameter><decl><type><name>ll</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>ll</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>ll</name></type> <name>p</name></decl></parameter> )</parameter_list> <block>{
	<decl_stmt><decl><type><name>ll</name></type> <name>res</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<while>while<condition>( <expr><name>y</name></expr> )</condition> <block>{
		<if>if<condition>( <expr><name>y</name> <operator>&amp;</operator> <literal type="number">1</literal></expr> )</condition><then> <block>{
			<expr_stmt><expr><name>res</name> <operator>*=</operator> <name>x</name></expr>;</expr_stmt>
			<expr_stmt><expr><name>res</name> <operator>%=</operator> <name>p</name></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name>x</name> <operator>*=</operator> <name>x</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>x</name> <operator>%=</operator> <name>p</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>y</name> <operator>&gt;&gt;=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	}</block></while>
	<return>return <expr><name>res</name></expr>;</return>
}</block></function></unit>
