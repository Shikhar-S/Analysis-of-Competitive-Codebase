<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1236/all/29089875_62788863.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ff</name></cpp:macro> <cpp:value>first</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ss</name></cpp:macro> <cpp:value>second</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PB</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MP</name></cpp:macro> <cpp:value>make_pair</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pri</name></cpp:macro> <cpp:value>(ll)1e9+7</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>void</name></type> <name>masterstroke</name><parameter_list>()</parameter_list><block>{
	<decl_stmt><decl><type><name>ll</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name><operator>&gt;&gt;</operator><name>c</name></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name>ll</name></type> <name>f</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	
	<for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>a</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		
		<if>if<condition>(<expr><name>b</name><operator>&lt;</operator><literal type="number">2</literal><operator>*</operator><name>i</name></expr>)</condition><then><block type="pseudo"><break>break;</break></block></then></if>
		
		<decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">3</literal><operator>*</operator><name>i</name></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name>ll</name></type> <name>j</name><init>=<expr><name>b</name><operator>-</operator><literal type="number">2</literal><operator>*</operator><name>i</name></expr></init></decl>;</decl_stmt>
	
		<decl_stmt><decl><type><name>ll</name></type> <name>z</name><init>=<expr><operator>(</operator><operator>(</operator><call><name>min</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>*</operator><name>j</name></expr></argument>,<argument><expr><name>c</name></expr></argument>)</argument_list></call><operator>)</operator><operator>/</operator><literal type="number">2</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name>ans</name><operator>+=</operator><literal type="number">3</literal><operator>*</operator><name>z</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>f</name><operator>=</operator><call><name>max</name><argument_list>(<argument><expr><name>f</name></expr></argument>,<argument><expr><name>ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
		
	}</block></for>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>f</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<comment type="line">//cout&lt;&lt;pri+3;</comment>
	<decl_stmt><decl><type><name>ll</name></type> <name>t</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>t</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><call><name>masterstroke</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></for>

	<comment type="line">// your code goes here</comment>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
