include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value comment type line function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr call name argument_list argument expr name operator name argument expr name argument expr name argument expr name expr_stmt expr name operator name operator operator name operator name operator operator name expr_stmt expr name operator name return expr name comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line decl_stmt decl type name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name return expr name decl_stmt decl type name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name modifier name parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator operator literal type number expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr literal type number while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list operator name expr_stmt expr call name name operator name argument_list if condition expr name name index expr name then block continue expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name range expr name name index expr name block decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name if condition expr call name argument_list argument expr name name index expr name argument expr name name index expr name operator name then block expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr operator name name index expr name expr name return function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name init expr literal type number while condition expr name operator name operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator if condition expr name operator name operator name then block break for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name index expr name operator literal type string expr_stmt expr name operator literal type char return function type name name parameter_list block comment type line comment type line comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name comment type line comment type line comment type line expr_stmt expr call name argument_list comment type line return expr literal type number 
