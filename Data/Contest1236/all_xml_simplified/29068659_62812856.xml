include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block if condition expr name name operator name operator name name operator name then block type pseudo return expr name name operator name operator name name operator name return expr name name operator name operator name name operator name function type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block if condition expr name name operator name operator name name operator name then block type pseudo return expr name name operator name operator name name operator name return expr name name operator name operator name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr name operator literal type number while condition expr name name index expr name operator name operator name block if condition expr name name index expr name operator name operator name operator name name index expr name operator name operator name then block type pseudo expr_stmt expr operator name expr_stmt expr name operator if condition expr name operator name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr name operator literal type number while condition expr name name index expr name operator name operator name block if condition expr name name index expr name operator name operator name operator name name index expr name operator name operator name then block type pseudo expr_stmt expr operator name expr_stmt expr name operator if condition expr name operator name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr name operator literal type number while condition expr name name index expr name operator name operator name block if condition expr name name index expr name operator name operator name operator name name index expr name operator name operator name then block type pseudo expr_stmt expr operator name expr_stmt expr name operator if condition expr name operator name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr name operator literal type number while condition expr name name index expr name operator name operator name block if condition expr name name index expr name operator name operator name operator name name index expr name operator name operator name then block type pseudo expr_stmt expr operator name expr_stmt expr name operator if condition expr name operator name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number while condition expr name operator name operator name operator name block switch condition expr name block case expr literal type number while condition expr name name index expr name operator name operator name operator name name index expr name operator name operator name block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator name operator name then block if condition expr name name index expr name operator name operator name then block if condition expr operator call name argument_list argument expr name name index expr name operator name argument expr name then block type pseudo return expr literal type boolean expr_stmt expr name operator name name index expr name operator name operator literal type number while condition expr name name index expr name operator name operator name operator name operator name block type pseudo expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name break case expr literal type number while condition expr name name index expr name operator name operator name operator name name index expr name operator name operator name block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator name operator name then block if condition expr name name index expr name operator name operator name then block if condition expr operator call name argument_list argument expr name name index expr name operator name argument expr name then block type pseudo return expr literal type boolean expr_stmt expr name operator name name index expr name operator name operator literal type number while condition expr name name index expr name operator name operator name operator name operator literal type number block type pseudo expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name break case expr literal type number while condition expr name name index expr name operator name operator name operator name name index expr name operator name operator name block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator name operator name then block if condition expr name name index expr name operator name operator name then block if condition expr operator call name argument_list argument expr name argument expr name name index expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name name index expr name operator name operator literal type number while condition expr name name index expr name operator name operator name operator name operator literal type number block type pseudo expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name break case expr literal type number while condition expr name name index expr name operator name operator name operator name name index expr name operator name operator name block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator name operator name then block if condition expr name name index expr name operator name operator name then block if condition expr operator call name argument_list argument expr name argument expr name name index expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name name index expr name operator name operator literal type number while condition expr name name index expr name operator name operator name operator name operator name block type pseudo expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name break expr_stmt expr name operator name name index expr name return expr literal type boolean function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name argument expr operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr name if condition expr operator call name argument_list then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
