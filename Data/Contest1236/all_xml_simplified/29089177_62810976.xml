comment type line include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block type pseudo return expr literal type boolean expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr operator name return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block comment type line if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block type pseudo return expr literal type boolean expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr operator name return expr literal type boolean function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr name decl type ref prev name init expr literal type number while condition expr literal type boolean block if condition expr name name index expr name operator call name argument_list operator literal type number then block decl_stmt decl type name name init expr operator operator name name index expr name operator call name argument_list operator if condition expr call name argument_list argument expr name argument expr operator operator name name index expr name operator call name argument_list operator argument expr name argument expr name operator literal type boolean then block expr_stmt expr name operator literal type string return expr literal type number expr_stmt expr name operator name if condition expr name operator name then block type pseudo break expr_stmt expr name operator if condition expr name operator name then block type pseudo break if condition expr name name index expr name operator literal type number operator call name argument_list operator literal type number then block decl_stmt decl type name name init expr operator operator name name index expr name operator literal type number operator call name argument_list operator if condition expr call name argument_list argument expr operator operator name name index expr name operator literal type number operator call name argument_list operator argument expr name argument expr name argument expr name operator literal type boolean then block expr_stmt expr name operator literal type string return expr literal type number expr_stmt expr name operator name if condition expr name operator name then block type pseudo break comment type line expr_stmt expr name operator if condition expr name operator name then block type pseudo break if condition expr name name index expr name operator literal type number operator call name argument_list operator literal type number then block decl_stmt decl type name name init expr operator operator operator operator name name index expr name operator literal type number operator call name argument_list operator operator comment type line comment type line if condition expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator literal type number operator literal type boolean then block expr_stmt expr name operator literal type string return expr literal type number expr_stmt expr name operator name operator literal type number if condition expr name operator name then block type pseudo break expr_stmt expr name operator if condition expr name operator name then block type pseudo break comment type line if condition expr name name index expr name operator call name argument_list operator literal type number then block decl_stmt decl type name name init expr operator operator operator operator name name index expr name operator call name argument_list operator operator if condition expr call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr name operator literal type boolean then block expr_stmt expr name operator literal type string return expr literal type number expr_stmt expr name operator name operator literal type number if condition expr name operator name then block type pseudo break expr_stmt expr name operator if condition expr name operator name then block type pseudo break comment type line expr_stmt expr name operator literal type string return expr literal type number 
