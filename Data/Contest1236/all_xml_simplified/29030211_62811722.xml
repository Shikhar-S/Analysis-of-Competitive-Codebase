include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr operator literal type number operator literal type number operator decl_stmt decl type specifier name name init expr operator literal type number operator literal type number operator decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name function name parameter_list block expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number while condition expr literal type number block if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list if condition expr call name argument_list argument expr name operator literal type number argument expr name name index expr name index expr name operator literal type number operator name then block type pseudo break elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list if condition expr call name argument_list argument expr name operator literal type number argument expr name name index expr name index expr name operator literal type number operator literal type number operator name then block type pseudo break elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number argument expr name name index expr name index expr name operator literal type number operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator call name argument_list argument expr name name index expr name index expr name operator literal type number operator literal type number argument expr name operator literal type number if condition expr name operator name then block type pseudo break else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name index expr name operator literal type number operator literal type number argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name name index expr name index expr name operator literal type number if condition expr name operator name then block type pseudo break if condition expr name operator literal type number operator name operator name operator name then block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name 
