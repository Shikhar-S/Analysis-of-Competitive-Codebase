include directive file include directive file include directive file include directive file decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name using namespace name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name define directive macro name value define directive macro name decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block expr_stmt expr name name index expr name operator call name name argument_list type generic argument expr name argument_list if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block expr_stmt expr name name index expr name operator call name name argument_list type generic argument expr name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name function type name name parameter_list block for control init decl type specifier specifier modifier name range expr name block decl_stmt decl type name name init expr name name operator name expr_stmt expr name operator name operator name name index expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type specifier specifier modifier name range expr name block decl_stmt decl type name name init expr name name operator name expr_stmt expr name operator name operator name name index expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list if condition expr name then block for control init decl type specifier specifier modifier name range expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name for control init decl type name name range expr name name index expr name name operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string for control init decl type specifier specifier modifier name range expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name for control init decl type name name range expr name name index expr name name operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr operator literal type number function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name name operator name argument_list operator literal type number comment type line if condition expr name operator name name index expr name then block type pseudo return expr name if condition expr name name index expr literal type number operator name then block type pseudo return expr name name index expr literal type number while condition expr name operator name operator literal type number block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name return expr name name index expr name function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name name operator name argument_list operator literal type number comment type line if condition expr name operator name name index expr name then block type pseudo return expr name name index expr name if condition expr name name index expr literal type number operator name then block type pseudo return expr name while condition expr name operator name operator literal type number block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name return expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block return expr name return expr call name argument_list argument expr name name index expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block return expr name return expr call name argument_list argument expr name name index expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block return expr name if condition expr name then block for control init decl type name name range expr name name index expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string return expr call name argument_list argument expr name name index expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block return expr name return expr call name argument_list argument expr name name index expr name argument expr name function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name name operator name argument_list operator literal type number comment type line if condition expr name operator name name index expr name then block type pseudo return expr operator literal type number if condition expr name operator name name index expr name then block type pseudo return expr operator literal type number if condition expr name operator name name index expr name then block type pseudo return expr name while condition expr name operator name operator literal type number block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name if condition expr name operator name name index expr name then block type pseudo return expr name return expr operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name argument expr name for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block expr_stmt expr name operator operator literal type number return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name if condition expr name operator operator literal type number operator name operator operator literal type number then block expr_stmt expr name operator operator literal type number return expr literal type number if condition expr name operator name operator name operator name then block expr_stmt expr name operator operator literal type number return expr literal type number return expr literal type number function type name name parameter_list block expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list decl_stmt decl type name name init expr literal type number comment type line expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name while condition expr name operator name operator name operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name argument expr name argument expr name argument expr name if condition expr name operator literal type number then block comment type line decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name if condition expr name operator name then block if condition expr operator call name argument_list argument expr name argument expr name argument expr name argument expr name then block type pseudo break expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number elseif if condition expr name operator literal type number then block comment type line decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name if condition expr name operator name then block if condition expr operator call name argument_list argument expr name argument expr name argument expr name argument expr name then block type pseudo break expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number elseif if condition expr name operator literal type number then block comment type line decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name if condition expr name operator name then block if condition expr operator call name argument_list argument expr name argument expr name argument expr name argument expr name then block type pseudo break expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number elseif if condition expr name operator literal type number then block comment type line decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name if condition expr name operator name then block if condition expr operator call name argument_list argument expr name argument expr name argument expr name argument expr name then block type pseudo break expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number if condition expr name operator operator literal type number then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name return expr literal type number 
