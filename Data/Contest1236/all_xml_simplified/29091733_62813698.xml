include directive file using namespace name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list if condition expr name operator operator name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number elseif if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list if condition expr name operator operator name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number elseif if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr operator name operator name name index expr name operator call name argument_list if condition expr name operator operator name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name argument expr operator name name index expr name index expr name operator literal type number expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number else block if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr operator name operator name name index expr name operator call name argument_list if condition expr name operator operator name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name argument expr operator name name index expr name index expr name operator literal type number expr_stmt expr name operator operator name operator name operator if condition expr name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number return expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name argument expr operator name name index expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name name index expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr operator name name index expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name name index expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator literal type number if condition expr name operator literal type number operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
