comment type block format doxygen include directive file using namespace name function type name name parameter_list block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator literal type string operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name operator ifdef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier value endif directive define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean using name init type name name using name init type name name argument_list type generic argument expr name argument expr name decl_stmt decl specifier type name name init expr literal type number decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list include directive file decl_stmt decl specifier type name name init expr literal type number operator literal type number decl_stmt decl specifier type name name init expr literal type number operator literal type number decl_stmt decl specifier type name name init expr literal type number decl_stmt decl type name name init expr name comment type line decl_stmt decl type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name name index expr name if condition expr name operator literal type number then block type pseudo return expr name decl_stmt decl type name name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number while condition expr name block decl_stmt decl type name name init expr name operator name expr_stmt expr call name argument_list argument expr name operator name operator name argument expr name expr_stmt expr call name argument_list argument expr name operator name operator name argument expr name expr_stmt expr name operator operator name operator name operator name operator operator name expr_stmt expr name name index expr name operator name return expr name struct name block public type default decl_stmt decl type name name constructor name parameter_list member_init_list call name argument_list argument expr literal type number block constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr operator name operator name operator name operator operator name block function type name modifier name parameter_list block expr_stmt expr name operator operator name operator name operator name operator operator name return expr operator name function type operator type name name name parameter_list specifier block return expr call name argument_list argument expr literal type number operator operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block if condition expr operator name operator name name operator name operator operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block if condition expr operator name operator name operator name name operator name operator operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr operator name operator name name operator name operator operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr operator name operator call name argument_list argument expr name name operator name argument expr name operator operator name return expr operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name class name block private type default comment type line public decl_stmt decl type name name operator name name argument_list type generic argument expr name name public decl_stmt decl type name name operator name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number operator name name index expr name for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator operator name operator literal type number operator comment type line public function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name operator name operator literal type number operator name operator literal type number then block type pseudo return expr literal type number return expr name name index expr name operator name name index expr name operator name name index expr name operator name comment type line public function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name operator name operator literal type number then block type pseudo return expr literal type number return expr name name index expr name operator name name index expr name operator name class name block private type default public function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name operator literal type number argument expr name expr_stmt expr name operator name name operator name operator name function type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name operator name modifier name argument_list argument expr name name operator name decl_stmt decl type name name operator name modifier name argument_list argument expr name name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name return expr literal type number 
