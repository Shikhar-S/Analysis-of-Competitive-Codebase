include directive file using namespace name decl_stmt decl type name name name index expr literal type number index expr literal type number init expr block expr block expr literal type number expr literal type number expr block expr literal type number expr literal type number expr block expr literal type number expr operator literal type number expr block expr operator literal type number expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr literal type boolean while condition expr literal type boolean block decl_stmt decl type name name if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator call name argument_list argument expr name argument expr operator name expr_stmt expr name operator operator name operator literal type number operator operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator call name argument_list argument expr name argument expr operator name expr_stmt expr name operator operator name operator literal type number operator operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name expr_stmt expr name operator name operator operator name operator literal type number operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name expr_stmt expr name operator name operator operator name operator literal type number operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator operator name operator literal type number operator operator literal type number comment type line if condition expr name operator literal type number then block if condition expr name then block expr_stmt expr name operator literal type boolean continue break expr_stmt expr name operator name comment type line expr_stmt expr name operator literal type boolean comment type line decl_stmt decl type name name name init expr name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator operator ternary condition expr name operator name then expr literal type string else expr literal type string operator operator name return expr literal type number 
