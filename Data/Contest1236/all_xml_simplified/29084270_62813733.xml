include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name operator name operator literal type number for control init decl type name name init expr name condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name operator name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name operator name operator literal type number for control init decl type name name init expr name condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name operator name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type number expr_stmt expr name operator literal type number operator expr name operator literal type number decl_stmt decl type name name init expr literal type boolean while condition expr literal type boolean block if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator operator name operator operator name then block expr_stmt expr name operator name expr_stmt expr operator name expr_stmt expr name operator literal type number else block if condition expr call name argument_list argument expr operator name argument expr name argument expr name argument expr name then block expr_stmt expr name operator name operator operator name operator literal type number expr_stmt expr operator name expr_stmt expr name operator literal type number else block expr_stmt expr name operator literal type boolean goto name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator operator name operator operator name then block expr_stmt expr name operator name expr_stmt expr operator name expr_stmt expr name operator literal type number else block if condition expr call name argument_list argument expr name argument expr name argument expr operator name argument expr name then block expr_stmt expr name operator name operator operator name operator literal type number expr_stmt expr operator name expr_stmt expr name operator literal type number else block expr_stmt expr name operator literal type boolean goto name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator operator operator name operator operator name then block expr_stmt expr name operator name expr_stmt expr operator name expr_stmt expr name operator literal type number else block if condition expr call name argument_list argument expr name argument expr operator name argument expr name argument expr name then block expr_stmt expr name operator name operator operator name operator literal type number expr_stmt expr operator name expr_stmt expr name operator literal type number else block expr_stmt expr name operator literal type boolean goto name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator operator operator name operator operator name then block expr_stmt expr name operator name expr_stmt expr operator name expr_stmt expr name operator literal type number else block if condition expr call name argument_list argument expr name argument expr name argument expr name argument expr operator name then block expr_stmt expr name operator name operator operator name operator literal type number expr_stmt expr operator name expr_stmt expr name operator literal type number else block expr_stmt expr name operator literal type boolean goto name comment type line comment type line if condition expr operator name operator literal type number operator name operator literal type number operator operator name operator name then block type pseudo break if condition expr operator name operator literal type number operator name operator literal type number operator operator name operator name then block type pseudo break label name if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
