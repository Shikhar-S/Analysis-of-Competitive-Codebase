include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator literal type number expr_stmt expr name operator operator name operator name operator operator name return expr name decl_stmt decl type name name name index init expr block expr operator literal type number expr operator literal type number expr operator literal type number expr literal type number expr literal type number expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index init expr block expr operator literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number expr operator literal type number expr literal type number expr literal type number decl_stmt decl type name name name index init expr block expr operator literal type number expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number comment type line define directive macro name value decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init expr name operator name operator name block expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name operator name for control init expr name operator name operator name block expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator name operator name operator name block if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list operator literal type number then block decl_stmt decl type name name init expr operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list operator if condition expr name operator name name index expr name operator call name argument_list operator name name index expr name index expr name operator name then block decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name operator operator name operator name operator literal type number operator operator operator name operator name operator literal type number operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list operator literal type number then block decl_stmt decl type name name init expr operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list operator if condition expr name operator name name index expr name operator call name argument_list operator name name index expr name index expr name operator name then block decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name operator operator name operator name operator literal type number operator operator operator name operator name operator literal type number operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list operator literal type number then block decl_stmt decl type name name init expr operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list operator expr_stmt expr name operator if condition expr name operator literal type number operator name name index expr name index expr name operator name then block decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name operator operator name operator name operator literal type number operator operator operator name operator name operator literal type number operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list operator literal type number then block decl_stmt decl type name name init expr operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list operator expr_stmt expr name operator if condition expr name operator literal type number operator name name index expr name index expr name operator name then block decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name operator operator name operator name operator literal type number operator operator operator name operator name operator literal type number operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string return expr literal type number 
