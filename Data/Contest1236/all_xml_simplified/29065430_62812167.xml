include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value comment type line decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line if condition expr name operator name operator name operator name then block type pseudo return expr literal type boolean decl_stmt decl type name name init expr block expr operator literal type number expr operator literal type number expr_stmt expr name operator block expr operator literal type number expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block if condition expr name name index expr name index expr name operator name operator name name index expr name index expr name operator name then block expr_stmt expr name operator block expr name expr name name index expr name index expr name break comment type line if condition expr name name operator name operator name then block comment type line comment type line for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr name name operator name condition expr name operator name incr expr name operator block comment type line if condition expr name name index expr call name argument_list argument expr name argument expr name operator literal type boolean then block type pseudo return expr literal type boolean expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name operator block expr operator literal type number expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block if condition expr name name index expr name index expr name operator name operator name name index expr name index expr name operator name then block expr_stmt expr name operator block expr name expr name name index expr name index expr name break comment type line if condition expr name name operator name operator name then block comment type line comment type line for control init decl type name name init expr name name operator name condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block comment type line if condition expr name name index expr call name argument_list argument expr name argument expr name operator literal type boolean then block type pseudo return expr literal type boolean expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name operator block expr operator literal type number expr operator literal type number for control init decl type name name init expr name name index expr name operator call name argument_list operator literal type number condition expr name operator literal type number incr expr name operator block comment type line if condition expr name name index expr name index expr name operator name operator name name index expr name index expr name operator name then block expr_stmt expr name operator block expr name expr name name index expr name index expr name break comment type line if condition expr name name operator name operator name then block comment type line comment type line for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name name operator name incr expr name operator block comment type line if condition expr name name index expr call name argument_list argument expr name argument expr name operator literal type boolean then block type pseudo return expr literal type boolean expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name operator block expr operator literal type number expr operator literal type number for control init decl type name name init expr name name index expr name operator call name argument_list operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name index expr name operator name operator name name index expr name index expr name operator name then block expr_stmt expr name operator block expr name expr name name index expr name index expr name break comment type line if condition expr name name operator name operator name then block comment type line comment type line for control init decl type name name init expr name operator literal type number condition expr name operator name name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block comment type line if condition expr name name index expr call name argument_list argument expr name argument expr name operator literal type boolean then block type pseudo return expr literal type boolean expr_stmt expr name operator name name operator name operator literal type number else block type pseudo expr_stmt expr name operator return expr call name argument_list argument expr name argument expr name operator literal type number argument expr name operator literal type number argument expr name operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name operator literal type number then block expr_stmt expr name operator literal type string operator name return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list if condition expr call name argument_list argument expr literal type number argument expr name argument expr name argument expr literal type number then block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name 
