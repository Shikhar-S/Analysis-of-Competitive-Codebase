include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name function_decl type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line decl_stmt decl type name name init expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator operator operator operator operator name operator operator operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name for control init decl type name name init expr name condition expr name operator name operator literal type number incr expr operator name block type pseudo if condition expr operator name operator name name index expr name operator call name argument_list operator name operator name then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number if condition expr name operator name then block type pseudo return expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line decl_stmt decl type name name init expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator operator operator operator operator name operator operator operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name for control init decl type name name init expr name condition expr name operator name operator literal type number incr expr operator name block type pseudo if condition expr operator name operator name name index expr name operator call name argument_list operator name operator name then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number if condition expr name operator name then block type pseudo return expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name operator literal type number argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line decl_stmt decl type name name init expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator operator operator name operator operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name operator name name index expr name operator call name argument_list operator name operator name then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number if condition expr name operator name then block type pseudo return expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name operator literal type number argument expr name argument expr name argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line decl_stmt decl type name name init expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator operator operator name operator operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name operator name name index expr name operator call name argument_list operator name operator name then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number if condition expr name operator name then block type pseudo return expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr name operator literal type number argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list argument expr name expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name operator name expr_stmt expr name name index expr operator name operator call name argument_list argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list if condition expr operator operator name name index expr literal type number operator call name argument_list operator name name index expr literal type number index expr literal type number operator literal type number operator operator name operator literal type number then block decl_stmt decl type name name init expr name if condition expr operator name name index expr literal type number operator call name argument_list then block type pseudo expr_stmt expr name operator name name index expr literal type number index expr literal type number if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string return expr literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number argument expr name operator literal type number argument expr literal type number argument expr name operator literal type number argument expr literal type number expr_stmt expr name operator literal type string return expr literal type number 
