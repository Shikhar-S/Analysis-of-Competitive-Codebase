comment type line comment type line comment type line comment type line define directive macro name include directive file define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type modifier value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name ifndef directive name define directive macro name parameter_list parameter type modifier else directive function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name block expr_stmt expr operator name operator name operator literal type string operator name operator name operator operator call name argument_list function template parameter_list parameter type name name parameter type name modifier name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name parameter decl type name modifier modifier name block decl_stmt decl type specifier name modifier name init expr call name argument_list argument expr name argument expr literal type char expr_stmt expr operator call name name operator name argument_list argument expr name argument expr name operator name operator literal type string operator name operator literal type string operator operator call name argument_list expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator define directive macro name parameter_list parameter type modifier value endif directive struct name block public type default constructor name parameter_list block ifndef directive name expr_stmt expr name operator literal type string operator name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null operator expr call name name operator name argument_list argument expr literal type null expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl name ifdef directive name struct name block public type default destructor name name parameter_list block expr_stmt expr name operator literal type string operator call name argument_list operator literal type number operator name operator literal type string operator name decl name endif directive using name init type name name using name init type name name name using name init type name name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl specifier type name name argument_list type generic argument expr name name function specifier type name name parameter_list parameter decl type name block return expr call name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator operator name operator name operator literal type number operator operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr call name name operator name argument_list expr_stmt expr operator operator operator name operator call name argument_list function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name name block return expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name name block return expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name function specifier type name name parameter_list block function specifier type name name parameter_list block function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr call name argument_list argument expr name name operator name operator expr call name name operator name argument_list argument expr literal type char operator expr call name argument_list argument expr name name operator name function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr call name argument_list argument expr name name operator name operator expr call name argument_list argument expr name name operator name function template parameter_list parameter type name name parameter type name modifier name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier modifier name block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator function template parameter_list parameter type name name parameter type name modifier name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block expr_stmt expr call name argument_list argument expr name operator expr operator sizeof type pack argument_list argument expr name operator operator call name name operator name argument_list argument expr literal type char operator literal type number operator operator operator expr call name argument_list argument expr name operator define directive macro name parameter_list parameter type modifier value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type specifier name name init expr literal type number while condition expr name operator name block expr_stmt expr call name argument_list argument expr operator call name name operator name argument_list argument expr literal type char operator literal type number operator argument expr call name argument_list argument expr operator name operator argument expr name operator literal type number define directive macro name parameter_list parameter type modifier value decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr call name argument_list argument expr operator literal type number decl type ref prev name init expr call name argument_list argument expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number define directive macro name value define directive macro name value decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number macro name argument_list argument argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr operator name operator expr operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name operator literal type number operator name operator name then block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr name argument expr literal type number macro name argument_list argument argument expr_stmt expr name name index expr name name index expr name operator name index expr name name index expr name operator name operator literal type boolean decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block if condition expr operator name name index expr name index expr literal type number then block type pseudo expr_stmt expr operator name else block type pseudo break if condition expr name operator literal type number operator name operator name operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number macro name argument_list argument argument block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr literal type boolean block if condition expr name operator literal type number operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name index expr literal type number operator literal type boolean decl_stmt decl type name name decl type ref prev name if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator name operator expr name operator name operator literal type number else block type pseudo expr_stmt expr name operator name operator expr name operator operator name operator literal type number decl_stmt decl type name name init expr call name name operator name argument_list argument expr name operator literal type number if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator name operator expr name operator literal type number else block type pseudo expr_stmt expr name operator name operator expr name operator operator call name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr call name name operator name argument_list argument expr name operator literal type number if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name argument_list argument expr name operator literal type number if condition expr name operator name then block type pseudo break expr_stmt expr name operator call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name expr_stmt expr name operator name operator expr name operator name if condition expr name name index expr name index expr literal type number then block type pseudo break else block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name index expr literal type number operator literal type boolean decl_stmt decl type name name decl type ref prev name if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator name operator literal type number operator expr name operator name else block type pseudo expr_stmt expr name operator operator name operator literal type number operator expr name operator name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name operator literal type number if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator literal type number operator expr name operator name else block type pseudo expr_stmt expr name operator operator call name argument_list argument expr name operator literal type number operator expr name operator name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name operator literal type number if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name argument_list argument expr name operator literal type number if condition expr name operator name then block type pseudo break expr_stmt expr name operator call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name expr_stmt expr name operator name operator expr name operator name if condition expr name name index expr name index expr literal type number then block type pseudo break comment type line expr_stmt expr name operator operator name operator literal type number operator operator literal type number if condition expr name operator literal type number operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
