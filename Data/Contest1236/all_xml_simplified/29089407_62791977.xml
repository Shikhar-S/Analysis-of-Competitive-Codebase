include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name init expr literal type char block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr operator ternary condition expr name operator name operator literal type number then expr name else expr literal type char operator function type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name init expr literal type char block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr operator ternary condition expr name operator name operator literal type number then expr name else expr literal type char operator function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name init expr literal type char block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr operator ternary condition expr name operator call name name operator name argument_list operator literal type number then expr name else expr literal type char operator function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name init expr literal type char block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr operator ternary condition expr name operator call name name operator name argument_list operator literal type number then expr name else expr literal type char operator function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name operator literal type number else block type pseudo expr_stmt expr name operator name operator name operator name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr operator ternary condition expr name operator name operator literal type number then expr literal type char else expr literal type char operator 
