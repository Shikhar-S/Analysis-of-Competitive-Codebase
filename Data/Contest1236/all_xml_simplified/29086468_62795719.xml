define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name name init expr literal type number operator literal type number typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type string decl_stmt decl type name name init expr operator name operator name operator operator operator name operator literal type number operator if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean struct name block public type default comment type line decl_stmt decl type name name decl type ref prev name decl type ref prev name constructor name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr operator name operator name name index expr name operator call name argument_list if condition expr name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr operator name operator name name index expr name operator call name argument_list operator literal type number comment type line function type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name argument_list type generic argument expr name modifier name block if condition expr name operator name then block type pseudo return expr name expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr operator name block decl_stmt decl type name modifier name init expr name name index expr name index expr name if condition expr operator name name index expr name name operator name operator name name operator name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name operator name argument expr name argument expr call name argument_list argument expr name argument expr name name operator name argument expr name if condition expr name operator literal type number then block expr_stmt expr name name operator name operator name expr_stmt expr name name index expr name name operator name index expr name name operator name operator name operator name return expr name return expr literal type number comment type line function type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name comment type line block decl_stmt decl type name name init expr literal type number for control init condition incr block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr call name name operator name argument_list macro name argument_list argument argument expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name if condition expr name operator literal type number then block return expr name expr_stmt expr name operator name function type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block comment type line expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list macro name argument_list argument argument expr_stmt expr name name index expr name operator name macro name argument_list argument argument expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name operator literal type number macro name argument_list argument argument literal type number block macro name argument_list argument argument block macro name argument_list argument argument block if condition expr name name index expr name operator name operator name name index expr name name index expr name index expr name operator name operator name name index expr name operator name name index expr name index expr name operator name then block expr_stmt expr name name index expr name name index expr name index expr name operator name operator name name index expr name operator name name index expr name index expr name operator name macro name argument_list argument argument literal type number block macro name argument_list argument argument block macro name argument_list argument argument block if condition expr name name index expr name operator name operator name name index expr name name index expr name index expr name operator name operator name name index expr name operator name name index expr name index expr name operator name then block expr_stmt expr name name index expr name name index expr name index expr name operator name operator name name index expr name operator name name index expr name index expr name operator name expr_stmt expr name name index expr name name index expr name index expr name operator name operator literal type boolean if condition expr name name index expr name operator literal type boolean then block type pseudo expr_stmt expr name name index expr name name index expr name index expr name operator name operator literal type boolean function type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name modifier name block comment type line expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list macro name argument_list argument argument expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr literal type number argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr name name index expr name name operator name operator name name operator name then block type pseudo continue macro name argument_list argument argument block decl_stmt decl type name name init expr name name index expr name name operator name index expr name if condition expr name name index expr name name operator name operator name name index expr name name operator name operator name name operator name then block expr_stmt expr name name index expr name name operator name operator name name index expr name name operator name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name name operator name argument expr name name operator name function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block comment type line expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list macro name argument_list argument argument expr_stmt expr name name index expr name operator call name argument_list argument expr call name name operator name argument_list macro name argument_list argument argument block macro name argument_list argument argument block expr_stmt expr name name index expr name index expr name operator name macro name argument_list argument argument block macro name argument_list argument argument block expr_stmt expr name name index expr name index expr name name index expr name index expr name operator name operator name name index expr name index expr name operator name macro name argument_list argument argument block macro name argument_list argument argument block macro name argument_list argument argument block expr_stmt expr call name argument_list argument expr name name index expr name index expr name argument expr name name index expr name index expr name operator name name index expr name index expr name function type name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block comment type line decl_stmt decl type name name init expr call name name operator name argument_list decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list argument expr name for control init expr name operator name operator name block type pseudo for control init expr name operator name operator name block type pseudo expr_stmt expr name name index expr name name operator name operator decl_stmt decl type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name macro name argument_list argument argument if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name while condition expr call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name for control init expr name operator name operator name name index expr name block type pseudo if condition expr operator name name index expr name name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name if condition expr call name name operator name argument_list operator name then block type pseudo return expr literal type boolean else block type pseudo return expr literal type boolean class name block private type default public decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name name decl_stmt decl type name name operator name name argument_list type generic argument expr name name constructor name parameter_list block constructor name parameter_list parameter decl type specifier name modifier name parameter decl type name name member_init_list call name argument_list argument expr call name name operator name argument_list call name argument_list argument expr call name argument_list argument expr name operator literal type number call name argument_list argument expr name argument expr call name name operator name name argument_list type generic argument expr name argument_list argument expr name call name argument_list argument expr name block expr_stmt expr call name argument_list argument expr name argument expr name argument expr operator literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type number index expr name operator operator literal type number else block type pseudo expr_stmt expr name name index expr name operator literal type number index expr name operator name name index expr name index expr name name index expr name index expr name function type name name parameter_list parameter decl type specifier name modifier name parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr literal type number index expr name operator name expr_stmt expr name name index expr name operator name for control init expr name operator name operator name name index expr name block if condition expr name name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name name operator name argument expr name argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name operator name name index expr name operator operator name operator literal type number then block expr_stmt expr name operator name name index expr name index expr name if condition expr name operator name then block type pseudo return expr name for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name index expr name operator name name index expr name index expr name then block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name operator name name index expr name index expr name return expr name name index expr literal type number index expr name class name block private type default decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name public constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name argument expr operator literal type number call name argument_list argument expr name block function type name name parameter_list parameter decl type name name parameter decl type name name block comment type line expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator operator name operator name operator return expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block comment type line return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name block comment type line return expr ternary condition expr name name index expr name operator literal type number then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name block comment type line return expr operator name name index expr call name argument_list argument expr name function type name name parameter_list block comment type line return expr name class name block private type default private function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name operator name operator name then block type pseudo return expr literal type number comment type line if condition expr name operator name operator name operator name then block type pseudo return expr name name index expr name comment type line else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr literal type number operator name operator literal type number argument expr name argument expr operator name operator name operator operator literal type number comment type line decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr literal type number operator name operator literal type number argument expr operator name operator name operator operator literal type number argument expr name comment type line return expr name operator name public decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name comment type line constructor name parameter_list parameter decl type name name block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number while condition expr name operator name block expr_stmt expr name operator literal type number expr_stmt expr name operator expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list argument expr literal type number operator name operator literal type number argument expr literal type number comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name operator literal type number comment type line expr_stmt expr name name index expr name operator name while condition expr name operator literal type number block comment type line expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name name index expr name operator name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr literal type number argument expr name class name block private type default private function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name operator name operator name then block type pseudo return expr name comment type line if condition expr name operator name operator name operator name then block type pseudo return expr name name index expr name comment type line else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr literal type number operator name operator literal type number argument expr name argument expr operator name operator name operator operator literal type number comment type line decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr literal type number operator name operator literal type number argument expr operator name operator name operator operator literal type number argument expr name comment type line return expr call name argument_list argument expr name argument expr name public decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name comment type line constructor name parameter_list parameter decl type name name block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number while condition expr name operator name block expr_stmt expr name operator literal type number expr_stmt expr name operator expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list argument expr literal type number operator name operator literal type number argument expr name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name operator literal type number comment type line expr_stmt expr name name index expr name operator name while condition expr name operator literal type number block comment type line expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator literal type number operator literal type number argument expr name name index expr name operator literal type number operator literal type number comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr literal type number argument expr name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name if condition expr name operator name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list function type name name argument_list type generic argument expr name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name block comment type line decl_stmt decl type specifier name name init expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr call name name operator name argument_list argument expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr name name index expr name name index expr name operator name name index expr name decl_stmt decl type name name init expr operator call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator operator name name index expr name return expr name function type name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name block comment type line decl_stmt decl type specifier name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block expr_stmt expr name operator name operator name for control init condition expr name operator name operator name name index expr name operator name operator name name index expr name incr expr name operator block type pseudo empty_stmt expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator else block decl_stmt decl type name name init expr name operator name if condition expr name name index expr name operator name operator name operator literal type number then block expr_stmt expr name name index expr name operator name name index expr name else block expr_stmt expr name operator name for control init condition expr name operator name operator name name index expr name operator name operator name name index expr name incr expr name operator block type pseudo empty_stmt expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator if condition expr name name index expr name operator name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block comment type line decl_stmt decl type specifier name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block expr_stmt expr name operator name operator name for control init condition expr name operator name operator name name index expr name operator name operator name name index expr name incr expr name operator block type pseudo empty_stmt expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator else block decl_stmt decl type name name init expr name operator name if condition expr name name index expr name operator name operator name operator literal type number then block expr_stmt expr name name index expr name operator name name index expr name else block expr_stmt expr name operator name for control init condition expr name operator name operator name name index expr name operator name operator name name index expr name incr expr name operator block type pseudo empty_stmt expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator return expr literal type boolean comment type line comment type line struct name block public type default decl_stmt decl specifier type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl specifier type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name decl type ref prev name decl type ref prev name decl type ref prev name comment type line constructor name parameter_list parameter decl type specifier name modifier name block decl_stmt decl type name name init expr operator name operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator literal type number operator operator name name index expr name operator name operator name name index expr name operator operator name expr_stmt expr name name index expr name operator literal type number operator operator name name index expr name operator name operator name name index expr name operator operator name expr_stmt expr name name index expr name operator literal type number operator operator name name index expr name operator name operator operator name expr_stmt expr name name index expr name operator literal type number operator operator name name index expr name operator name operator operator name comment type line function specifier type name name argument_list type generic argument expr name name argument expr name name name parameter_list parameter decl type name name parameter decl type name name specifier block decl_stmt decl type name name name init expr name name index expr name operator name name index expr name operator name name index expr name operator name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name name init expr name name index expr name operator name name index expr name operator name name index expr name operator name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr block expr name expr name comment type line function specifier type name name parameter_list parameter decl type name name parameter decl type name name specifier block decl_stmt decl type name name init expr call name argument_list argument expr operator name operator call name name operator name argument_list operator name argument expr operator name operator call name name operator name argument_list operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name while condition expr name operator name operator literal type number block decl_stmt decl type name name init expr operator name operator name operator operator literal type number if condition expr call name argument_list argument expr name argument expr name operator name operator call name argument_list argument expr name argument expr name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator literal type number argument expr name comment type line class name block private type default public decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator operator name name index expr name operator name name index expr name operator name operator operator name name index expr name operator name operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name name index expr name operator name name index expr name operator name operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator name operator literal type number argument expr name constructor name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number macro name argument_list argument argument block expr_stmt expr name name index expr name operator literal type number operator operator name name index expr name operator operator name operator literal type number operator operator operator name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number macro name argument_list argument argument literal type number block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list argument expr name argument expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator literal type number return expr name function type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block decl_stmt decl type name name argument_list argument expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr literal type number operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr operator name block type pseudo expr_stmt expr operator name name index expr name index expr name operator operator name name index expr name index expr name operator name operator operator operator name name index expr name index expr name operator name operator operator operator name return expr name comment type line function type name name parameter_list parameter decl type specifier name modifier name parameter decl type name name block return expr ternary condition expr name operator literal type number then expr call name argument_list argument expr call name name operator name argument_list else expr ternary condition expr name operator literal type number operator literal type number then expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name operator literal type number else expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator literal type number class template parameter_list parameter type name name name block private type default public decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line decl_stmt decl type name name init expr name name index expr name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator literal type number index expr name if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator literal type number index expr name operator literal type number return expr name constructor name parameter_list parameter decl type specifier name name argument_list type generic argument expr name name argument_list type generic argument expr name modifier name parameter decl type name name parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name index expr name operator name name index expr name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name index expr name operator name name index expr name operator literal type number index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name index expr name operator name name index expr name index expr name operator literal type number if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name name index expr name index expr name operator name name index expr name operator literal type number index expr name operator literal type number comment type line function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name argument_list argument expr name argument expr literal type number decl type ref prev name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block decl_stmt decl type name name init expr name name index expr name comment type line decl_stmt decl type name name init expr operator name name index expr name operator name name index expr name operator name operator operator name expr_stmt expr name operator operator name operator call name argument_list argument expr name name index expr name argument expr name operator literal type number argument expr name operator operator name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator operator name name index expr name operator name name index expr name operator name operator operator name expr_stmt expr name name index expr name operator operator name name index expr name operator name operator operator name return expr call name name operator name argument_list function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block for control init decl type name name init expr name operator literal type number condition expr name operator operator name operator name operator incr expr name operator literal type number block type pseudo empty_stmt if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name class template parameter_list parameter type name name name parameter type name name name name block private type default public function type name name name parameter_list block return expr name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name modifier name parameter decl type name name block decl_stmt decl type specifier name name init expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr operator name operator operator name operator operator name operator operator operator literal type number comment type line decl_stmt decl type specifier name name name init expr name comment type line decl_stmt decl type name name name init expr operator name operator literal type number operator operator call name argument_list argument expr name argument expr name operator literal type number argument expr name operator name comment type line decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name argument expr name comment type line if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number argument expr name expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block decl_stmt decl type specifier name name init expr literal type number operator name decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name operator name argument expr name decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr name condition expr name operator name incr expr name operator name block decl_stmt decl type name name name init expr name name index expr name decl_stmt decl type name name name init expr operator name name index expr name operator name operator name operator operator name expr_stmt expr name name index expr name operator operator name operator name operator operator name expr_stmt expr name name index expr name operator name operator operator name operator name operator name operator operator name expr_stmt expr name operator operator name operator name operator operator name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name modifier name block expr_stmt expr call name argument_list argument expr name argument expr literal type number function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name modifier name block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number decl_stmt decl type specifier name name name init expr call name argument_list argument expr call name name operator name argument_list argument expr name operator literal type number argument expr name for control init expr name operator name operator name block type pseudo expr_stmt expr name operator operator name operator name operator operator name comment type line function type name name argument_list type generic argument expr name name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name name modifier name parameter decl type specifier name name argument_list type generic argument expr name name modifier name block decl_stmt decl type name name init expr call name name operator name argument_list operator call name name operator name argument_list operator literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator name block type pseudo expr_stmt expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name init expr name decl type ref prev name init expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator operator name name index expr name operator name name index expr name operator operator name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name return expr name function type name name argument_list type generic argument expr name name name parameter_list parameter decl type name name argument_list type generic argument expr name name modifier name parameter decl type name name argument_list type generic argument expr name name modifier name parameter decl type name name name init expr literal type number block for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list operator operator call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list operator operator call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list if condition expr name operator literal type number then block decl_stmt decl type name name argument_list type generic argument expr literal type number argument expr literal type number name return expr call name name operator name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr literal type number argument expr literal type number name decl_stmt decl type name name argument_list type generic argument expr literal type number argument expr literal type number name decl_stmt decl type name name argument_list type generic argument expr literal type number argument expr literal type number name decl_stmt decl type name name argument_list type generic argument expr name name name init expr call name name operator name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name name init expr call name name operator name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name name init expr call name name operator name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr literal type number argument expr literal type number argument expr literal type number argument expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name name index expr name argument expr name name index expr name argument expr name name index expr name argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name argument expr name return expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator literal type number operator expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator literal type number operator expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator literal type number operator expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator literal type number operator expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator literal type number operator return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list argument expr name argument expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name name index expr name index expr name operator name else block expr_stmt expr name name index expr name operator name operator literal type number index expr name operator name expr_stmt expr name operator macro name argument_list argument argument block macro name argument_list argument argument block expr_stmt expr name operator name name index expr name index expr name operator literal type char expr_stmt expr name operator name return expr literal type number 
