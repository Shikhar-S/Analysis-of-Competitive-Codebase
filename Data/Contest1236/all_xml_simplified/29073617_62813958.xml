include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value using namespace name typedef type name name name name typedef type name name name typedef type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name function specifier type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name decl_stmt decl type name name init expr call name argument_list argument expr name operator name operator name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name operator expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr name operator literal type number if condition expr name name index expr literal type number index expr literal type number operator literal type number then block return expr call name argument_list argument expr ternary condition expr name name index expr literal type number index expr literal type number operator literal type number operator name then expr literal type string else expr literal type string operator expr call name argument_list macro name argument_list argument argument literal type number argument block comment type line decl_stmt decl type name name decl type ref prev name init expr name decl type ref prev name init expr name if condition expr name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name elseif if condition expr name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name elseif if condition expr name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr operator name expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name elseif if condition expr name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr operator name expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator name operator name operator name then block type pseudo break expr_stmt expr operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr ternary condition expr name then expr literal type string else expr literal type string function type name name parameter_list parameter decl type name name parameter decl type name modifier modifier name block comment type line comment type line expr_stmt expr call name argument_list return expr literal type number 
