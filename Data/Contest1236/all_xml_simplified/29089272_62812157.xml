comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name value typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name typedef type name name name typedef type name name name typedef type name name name name struct name block public type default decl_stmt decl type name name decl type ref prev name function type operator type name name name parameter_list parameter decl type name name specifier block return expr name name operator name operator name name operator name struct name block public type default decl_stmt decl type name name decl type ref prev name function type operator type name name name parameter_list parameter decl type name name specifier block return expr name name operator name operator name name operator name decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator call name argument_list argument expr block expr name expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name decl_stmt decl type name name init expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr literal type boolean block if condition expr name name operator name operator literal type number then block if condition expr name name index expr name name operator name operator call name argument_list operator name name index expr name name operator name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr name name operator name operator call name argument_list for control init decl type name name init expr name name operator name condition expr name operator name incr expr operator name block if condition expr call name argument_list argument expr name name index expr name operator name operator name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr block expr name expr name expr_stmt expr operator name expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name name operator name operator literal type number expr_stmt expr name operator name operator name name operator name expr_stmt expr name name operator name operator name expr_stmt expr operator name elseif if condition expr name name operator name operator literal type number then block if condition expr name name index expr name name operator name operator call name argument_list operator name name index expr name name operator name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr name name operator name operator call name argument_list for control init decl type name name init expr name name operator name condition expr name operator name incr expr operator name block if condition expr call name argument_list argument expr name name index expr name operator name operator name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr block expr name expr name expr_stmt expr operator name expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name name operator name operator literal type number expr_stmt expr name operator name operator name name operator name expr_stmt expr name name operator name operator name expr_stmt expr operator name elseif if condition expr name name operator name operator literal type number then block if condition expr name name index expr name name operator name operator call name argument_list operator name name index expr name name operator name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr name name operator name operator call name argument_list for control init decl type name name init expr name name operator name condition expr name operator name incr expr operator name block if condition expr call name argument_list argument expr name name index expr name operator name operator name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr block expr name expr name expr_stmt expr operator name expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name name operator name operator literal type number expr_stmt expr name operator name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr operator name elseif if condition expr name name operator name operator literal type number then block if condition expr name name index expr name name operator name operator call name argument_list operator name name index expr name name operator name operator call name argument_list then block decl_stmt decl type name name init expr operator name name index expr name name operator name operator call name argument_list for control init decl type name name init expr name name operator name condition expr name operator name incr expr operator name block if condition expr call name argument_list argument expr name name index expr name operator name operator name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr block expr name expr name expr_stmt expr operator name expr_stmt expr name operator name name operator name operator literal type number expr_stmt expr name name operator name operator literal type number expr_stmt expr name operator name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr operator name if condition expr name operator name operator name operator name then block break expr_stmt expr name operator literal type string 
