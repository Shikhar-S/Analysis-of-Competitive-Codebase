include directive file define directive macro name value using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr name operator name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name name index expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr operator name operator name operator name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block decl_stmt decl type name name init expr name decl_stmt decl type name name decl_stmt decl type name name name argument_list type generic argument expr name operator name name if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator operator name operator operator literal type number expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number elseif if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator operator name operator operator literal type number expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number elseif if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name name index expr name operator call name argument_list operator name operator name name index expr name operator call name argument_list then block expr_stmt expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr operator operator name operator operator literal type number expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number else block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name name index expr name operator call name argument_list operator name operator name name index expr name operator call name argument_list then block expr_stmt expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr operator operator name operator operator literal type number expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number if condition expr name operator name operator name then block type pseudo break expr_stmt expr name operator expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string 
