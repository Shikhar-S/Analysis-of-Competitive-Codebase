include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name using name init type name name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name using template parameter_list parameter type name name parameter type name name name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block if condition expr operator name operator name operator operator literal type number operator literal type number then block expr_stmt expr name name index expr name operator name operator call name argument_list argument expr name operator literal type number else block expr_stmt expr name name index expr name operator name operator name operator literal type number operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr name operator operator ternary condition expr name operator name operator literal type number then expr literal type char else expr literal type char operator return expr literal type number 
