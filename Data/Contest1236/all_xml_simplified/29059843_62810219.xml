comment type block format doxygen include directive file using namespace name function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr literal type boolean block decl_stmt decl type name name init expr name decl type ref prev name init expr name if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr ternary condition expr name operator name name index expr name operator call name argument_list then expr operator name operator literal type number else expr call name name name argument_list type generic argument expr name operator name argument_list expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr ternary condition expr name operator name name index expr name operator call name argument_list then expr operator name operator literal type number else expr call name name name argument_list type generic argument expr name operator name argument_list expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr ternary condition expr name operator name name index expr name operator call name argument_list then expr operator operator name operator literal type number else expr call name name name argument_list type generic argument expr name operator name argument_list expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr ternary condition expr name operator name name index expr name operator call name argument_list then expr operator operator name operator literal type number else expr call name name name argument_list type generic argument expr name operator name argument_list expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator literal type number if condition expr name operator name operator name operator name then block break expr_stmt expr name operator call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name expr_stmt expr name operator operator name operator literal type number operator operator literal type number if condition expr literal type number operator name operator name operator operator name name operator name operator name then block expr_stmt expr name operator literal type string operator literal type char return expr_stmt expr name operator literal type string operator literal type char function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null decl_stmt decl type name name operator name modifier name argument_list argument expr name name operator name decl_stmt decl type name name operator name modifier name argument_list argument expr name name operator name expr_stmt expr call name argument_list argument expr name argument expr name 
