comment type line include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value include directive file define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr block expr name name index expr name expr name name index expr name operator literal type boolean expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name name index expr name expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type boolean while condition expr name operator name operator name operator name block if condition expr name then block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr block expr name expr name then block type pseudo continue expr_stmt expr name operator name break for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr block expr name expr name operator literal type boolean then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr block expr name expr name then block type pseudo continue expr_stmt expr name operator name break for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr block expr name expr name operator literal type boolean then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator name decl_stmt decl type name name init expr operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator if condition expr name operator literal type number then block return expr name operator literal type string operator expr literal type number expr_stmt expr name operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator if condition expr name operator literal type number then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator literal type number operator name expr_stmt expr name operator expr_stmt expr name operator if condition expr name name index expr block expr name expr name then block for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr operator name name index expr block expr name expr name then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator literal type string operator name return expr literal type number continue else block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr block expr name expr name then block type pseudo continue expr_stmt expr name operator name break for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr block expr name expr name operator literal type boolean then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name name index expr block expr name expr name then block type pseudo continue expr_stmt expr name operator name break for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr block expr name expr name operator literal type boolean then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator name decl_stmt decl type name name init expr operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator if condition expr name operator literal type number then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator if condition expr name operator literal type number then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator operator expr name operator if condition expr name name index expr block expr name expr name then block for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr operator name name index expr block expr name expr name then block type pseudo return expr name operator literal type string operator expr literal type number expr_stmt expr name operator literal type string operator name return expr literal type number expr_stmt expr name operator literal type number operator name expr_stmt expr name operator literal type string operator name return expr literal type number comment type block 
