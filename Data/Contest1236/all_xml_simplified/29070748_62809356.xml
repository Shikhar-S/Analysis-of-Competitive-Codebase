include directive file using namespace name typedef type name name name define directive macro name value define directive macro name value decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr operator name operator name operator operator operator name operator name operator block if condition expr name operator literal type number then block decl_stmt decl type name name init expr name if condition expr operator name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block if condition expr operator name operator name then block type pseudo expr_stmt expr name operator operator name if condition expr operator name operator name operator literal type number operator operator operator name operator literal type number operator then block expr_stmt expr name operator continue if condition expr name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then block decl_stmt decl type name name init expr name if condition expr operator name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block if condition expr operator name operator name then block type pseudo expr_stmt expr name operator operator name if condition expr name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then block decl_stmt decl type name name init expr name if condition expr operator name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator if condition expr operator name operator name then block type pseudo expr_stmt expr name operator operator name comment type line if condition expr name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then block decl_stmt decl type name name init expr name if condition expr operator name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator if condition expr operator name operator name then block type pseudo expr_stmt expr name operator operator name if condition expr name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name comment type line expr_stmt expr name operator expr_stmt expr name operator literal type number comment type line if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator literal type string operator literal type char else block type pseudo expr_stmt expr name operator literal type string operator literal type char 
