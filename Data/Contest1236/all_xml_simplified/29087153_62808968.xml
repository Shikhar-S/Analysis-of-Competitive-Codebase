include directive file define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator if condition expr name operator name operator name operator name then block return if condition expr name name index expr block expr name expr name then block return expr_stmt expr name operator expr_stmt expr name operator literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number if condition expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block return else block if condition expr name operator name then block expr_stmt expr name operator literal type number else block expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number if condition expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block return else block if condition expr name operator name then block expr_stmt expr name operator literal type number else block expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator name else block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator if condition expr name operator literal type number then block return else block if condition expr name operator name then block expr_stmt expr name operator literal type number else block expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator name operator literal type number else block expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name name index expr name index expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator if condition expr name operator literal type number then block return if condition expr name operator name then block expr_stmt expr name operator literal type number else block expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name operator literal type number argument expr name argument expr name operator literal type number argument expr name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type string expr_stmt expr name operator name operator name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr block expr name expr name operator literal type boolean for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type number argument expr name argument expr literal type number argument expr name argument expr literal type number if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string return expr literal type number 
