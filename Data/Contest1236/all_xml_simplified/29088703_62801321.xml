include directive file using namespace name typedef type name name name typedef type name name name name typedef type name name name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator operator name operator name operator operator name if condition expr name operator literal type number then block type pseudo return expr operator name operator name operator operator name return expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name function type name name parameter_list block expr_stmt expr name expr_stmt expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name macro name argument_list argument argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name index expr name operator literal type boolean macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr literal type boolean block comment type line if condition expr name operator name operator name operator name operator name operator name operator name operator name operator name name index expr name index expr name then block type pseudo break if condition expr name operator literal type number then block decl_stmt decl type name name init expr operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name index expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name index expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type string operator name return expr literal type number expr_stmt expr name operator literal type string operator name return expr literal type number 
