include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value comment type line using namespace name function_decl type name name parameter_list function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name argument_list typedef type name name name decl_stmt decl type specifier name name init expr name operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number comment type line struct template parameter_list parameter type name name name block public type default decl_stmt decl specifier type specifier name name init expr name decl_stmt decl type name name constructor name parameter_list member_init_list call name argument_list argument expr literal type number block constructor name parameter_list parameter decl type name name block expr_stmt expr name operator ternary condition expr name operator literal type number then expr name operator name operator name else expr name operator name constructor name parameter_list parameter decl type name name name name block expr_stmt expr name operator ternary condition expr name operator literal type number then expr name operator name operator name else expr name operator name function type name name parameter_list specifier block return expr operator name operator name function type operator type name modifier name name parameter_list parameter decl type name name block if condition expr operator name operator name name operator name operator operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type name name block if condition expr operator name operator name operator name name operator name operator operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type name name block expr_stmt expr name operator operator name name name operator name operator name name operator name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type name name block return expr operator name operator call name name operator name argument_list function type operator type name name name parameter_list parameter decl type name name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type name name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type name name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type name name specifier block return expr call name argument_list argument expr operator name operator name function type name name parameter_list specifier block decl_stmt decl type name name name init expr name decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number while condition expr name block decl_stmt decl type name name name init expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name return expr call name argument_list argument expr name function type operator type name name name parameter_list parameter decl type name name specifier block return expr name operator name name operator name function type operator type name name name parameter_list parameter decl type name name specifier block return expr name operator name name operator name function type operator type name name name parameter_list specifier block decl_stmt decl type name name expr_stmt expr name name operator name operator ternary condition expr name operator literal type number then expr literal type number else expr name operator name return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name name block expr_stmt expr name operator call name name operator name argument_list return expr name empty_stmt function type operator template parameter_list parameter type name name type name name argument_list type generic argument expr name name name parameter_list parameter decl type name name argument_list type generic argument expr name name parameter decl type name name name name block decl_stmt decl type name name argument_list type generic argument expr name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name typedef type name name argument_list type generic argument expr literal type number name comment type block decl_stmt decl type name name decl type ref prev name comment type line function type name name parameter_list block expr_stmt expr name operator name operator name decl_stmt decl type name name init expr operator operator call name argument_list argument expr literal type number operator name operator operator literal type number operator operator name expr_stmt expr name operator name operator name 
