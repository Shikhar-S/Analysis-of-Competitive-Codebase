define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file comment type line define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value typedef type name name name using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name return expr name function type name name parameter_list block ifdef directive name comment type line else directive expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl type ref prev name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl type ref prev name argument_list argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator name name index expr name operator literal type number operator name name index expr literal type number operator name name index expr name operator literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr name operator name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr literal type boolean block expr_stmt expr name operator if condition expr name operator literal type number then block decl_stmt decl type name name init expr operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name name operator name argument_list argument expr name expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator call name name operator name argument_list argument expr name operator literal type number then block type pseudo break if condition expr name operator literal type number operator name operator literal type number operator name operator literal type number then block type pseudo break continue if condition expr name operator literal type number then block decl_stmt decl type name name init expr operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name name operator name argument_list argument expr name expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name comment type line if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator call name name operator name argument_list argument expr name operator literal type number then block type pseudo break comment type line if condition expr name operator literal type number operator name operator literal type number then block type pseudo break continue if condition expr name operator literal type number then block decl_stmt decl type name name init expr operator operator operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator operator operator call name name operator name argument_list argument expr name operator expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name comment type line if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator call name name operator name argument_list argument expr name operator literal type number then block type pseudo break comment type line if condition expr name operator literal type number operator name operator literal type number then block type pseudo break continue if condition expr name operator literal type number then block decl_stmt decl type name name init expr operator operator operator call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator operator operator call name name operator name argument_list argument expr name operator expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator call name name operator name argument_list argument expr name operator literal type number then block type pseudo break if condition expr name operator literal type number operator name operator literal type number then block type pseudo break continue if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
