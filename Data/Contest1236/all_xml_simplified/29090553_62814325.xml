comment type block include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name define directive macro name value decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number comment type line while condition expr name operator block decl_stmt decl type name name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name name init expr literal type number condition expr name operator call name argument_list argument expr name argument expr name incr expr name operator block expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name decl_stmt decl type name name name init expr operator literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name name init expr operator literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name name init expr literal type number while condition expr literal type boolean block if condition expr operator operator name operator name operator name operator name operator name operator name operator name operator name operator then block type pseudo break if condition expr name operator literal type number then block decl_stmt decl type name name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name name init expr name name index expr name index expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name name init expr name name index expr name index expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator decl_stmt decl type name name name init expr name name index expr name index expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number else block decl_stmt decl type name name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator decl_stmt decl type name name name init expr name name index expr name index expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number decl_stmt decl type name name name init expr name operator name operator name operator name if condition expr operator name then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
