include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number typedef type name name name typedef type name name name argument_list type generic argument expr name operator name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name decl type ref prev name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number while condition expr name operator name operator name block comment type line if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator name expr_stmt expr name operator name if condition expr name operator literal type number operator operator name operator literal type number operator name operator literal type number operator then block type pseudo return expr literal type boolean elseif if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator name expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo return expr literal type boolean elseif if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator name expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo return expr literal type boolean elseif if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator name expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo return expr literal type boolean comment type line expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name return expr name operator name operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name expr_stmt expr name operator literal type number operator name operator name for control init decl type name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list if condition expr call name argument_list then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string 
