include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name name init expr literal type number operator literal type number typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean comment type line struct name block public type default comment type line decl_stmt decl type name name decl type ref prev name decl type ref prev name constructor name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr operator name operator name name index expr name operator call name argument_list if condition expr name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr operator name operator name name index expr name operator call name argument_list operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr name operator block comment type line if condition expr name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name operator literal type number then block expr_stmt expr name operator literal type boolean else block expr_stmt expr name operator else block expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name operator literal type number then block expr_stmt expr name operator literal type boolean else block expr_stmt expr name operator for control init decl type name name range expr name block for control init decl type name name range expr name block expr_stmt expr name operator name operator literal type string expr_stmt expr name operator name return expr literal type number 
