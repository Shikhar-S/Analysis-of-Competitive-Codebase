include directive file using namespace name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name comment type block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type number function type name name parameter_list block comment type line if condition expr name operator operator name operator name operator name operator name then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number comment type line expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name comment type line expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block comment type line if condition expr name operator literal type number then block comment type line decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name else block expr_stmt expr name operator operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name comment type line if condition expr name operator name operator literal type number then block expr_stmt expr call name argument_list return expr literal type number expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator operator name operator literal type number operator expr_stmt expr name operator name operator literal type number expr_stmt expr operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number elseif if condition expr name operator operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name else block expr_stmt expr name operator operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name operator literal type number then block expr_stmt expr call name argument_list return expr literal type number expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name operator name expr_stmt expr operator name expr_stmt expr name operator operator literal type number expr_stmt expr name operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name else block expr_stmt expr name operator operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name operator literal type number then block expr_stmt expr call name argument_list return expr literal type number expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator operator name operator literal type number operator expr_stmt expr name operator name operator literal type number expr_stmt expr operator name expr_stmt expr name operator literal type number expr_stmt expr name operator operator literal type number elseif if condition expr name operator operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name else block expr_stmt expr name operator operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name operator literal type number then block expr_stmt expr call name argument_list return expr literal type number expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name operator name expr_stmt expr operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type boolean return expr literal type number 
