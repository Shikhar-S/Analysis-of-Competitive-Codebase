include directive file using namespace name using name init type name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number function type name name parameter_list block expr_stmt expr name operator literal type string operator name expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list block expr_stmt expr name operator literal type string operator name expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr call name name operator name argument_list argument expr block expr name expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name argument_list function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl_stmt decl type name name init expr name while condition expr name operator literal type number block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr ternary condition expr name operator name name index expr name operator call name argument_list then expr name else expr operator operator name operator operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block decl_stmt decl type name name init expr literal type number operator operator name operator name operator literal type number operator operator operator name operator name operator if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr ternary condition expr name operator name name index expr name operator call name argument_list then expr name else expr operator operator name operator operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block decl_stmt decl type name name init expr literal type number operator operator name operator name operator literal type number operator operator operator name operator name operator if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator expr_stmt expr name operator ternary condition expr name operator literal type number then expr name else expr name name index expr name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block decl_stmt decl type name name init expr literal type number operator operator name operator name operator literal type number operator operator operator name operator name operator if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name operator literal type number incr expr name operator block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator expr_stmt expr name operator ternary condition expr name operator literal type number then expr name else expr name name index expr name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name then block decl_stmt decl type name name init expr literal type number operator operator name operator name operator literal type number operator operator operator name operator name operator if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list for control init decl type name name init expr name condition expr name operator name operator literal type number incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list expr_stmt expr call name argument_list function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list expr_stmt expr name operator name 
