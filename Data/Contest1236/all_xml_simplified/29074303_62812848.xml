include directive file define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name comment type line namespace name block function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number while condition expr name name argument_list type generic argument expr literal type number operator name literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type number operator name operator literal type number block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr name operator name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number while condition expr name name argument_list type generic argument expr literal type number operator name literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type number operator name operator literal type number block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr call name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr call name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name using namespace name comment type line decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block decl_stmt decl type name name init expr operator operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr call name argument_list argument expr name argument expr name operator if condition expr name name operator name operator name operator name name operator name operator name then block type pseudo return expr call name argument_list argument expr literal type number argument expr literal type number return expr name if condition expr name operator literal type number then block decl_stmt decl type name name init expr operator operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr call name argument_list argument expr name argument expr name operator if condition expr name name operator name operator name operator name name operator name operator name then block type pseudo return expr call name argument_list argument expr literal type number argument expr literal type number return expr call name argument_list argument expr name name operator name argument expr name name operator name if condition expr name operator literal type number then block decl_stmt decl type name name init expr operator operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr call name argument_list argument expr name argument expr operator name operator expr_stmt expr name name operator name operator operator literal type number comment type line if condition expr name name operator name operator name operator name name operator name operator name then block type pseudo return expr call name argument_list argument expr literal type number argument expr literal type number return expr name if condition expr name operator literal type number then block decl_stmt decl type name name init expr operator operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr call name argument_list argument expr name argument expr operator name operator expr_stmt expr name name operator name operator operator literal type number if condition expr name name operator name operator name operator name name operator name operator name then block type pseudo return expr call name argument_list argument expr literal type number argument expr literal type number return expr call name argument_list argument expr name name operator name argument expr name name operator name return expr call name argument_list argument expr literal type number argument expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block for control init decl type name name init expr name condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr operator name block type pseudo if condition expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr name argument expr name argument expr name argument expr name operator call name argument_list argument expr name argument expr name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line if condition expr name name argument_list type generic argument expr name operator name name operator name name argument_list type generic argument expr name operator name name then block type pseudo return expr literal type boolean if condition expr operator operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr call name argument_list argument expr name argument expr name operator operator call name argument_list argument expr name argument expr name then block type pseudo return expr call name argument_list argument expr name argument expr name argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name argument expr name argument expr name argument expr name comment type line if condition expr operator name name operator name then block if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name operator literal type number argument expr name argument expr literal type number argument expr name operator literal type number argument expr name argument expr name argument expr name if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr name operator literal type number argument expr literal type number argument expr name argument expr name argument expr name argument expr name operator literal type number if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name operator literal type number argument expr name argument expr literal type number argument expr name argument expr name operator literal type number argument expr name argument expr name if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr name operator literal type number argument expr literal type number argument expr name argument expr name argument expr name operator literal type number argument expr name else block if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr name argument expr name name operator name argument expr name operator call name argument_list argument expr name operator literal type number argument expr name name operator name operator literal type number argument expr literal type number argument expr name operator literal type number argument expr name argument expr name argument expr name name operator name operator literal type number if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name name operator name argument expr name argument expr name argument expr name operator call name argument_list argument expr name name operator name operator literal type number argument expr name operator literal type number argument expr literal type number argument expr name argument expr name name operator name operator literal type number argument expr name argument expr name operator literal type number if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr name argument expr name argument expr name name operator name operator call name argument_list argument expr name operator literal type number argument expr name name operator name operator literal type number argument expr literal type number argument expr name argument expr name operator literal type number argument expr name name operator name operator literal type number argument expr name if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr name name operator name argument expr name argument expr name operator call name argument_list argument expr name name operator name operator literal type number argument expr name operator literal type number argument expr literal type number argument expr name name operator name operator literal type number argument expr name argument expr name operator literal type number argument expr name return expr literal type boolean comment type line function type name name parameter_list block expr_stmt expr name operator call name argument_list operator expr name operator call name argument_list operator expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name argument expr name operator expr name name index expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name argument expr operator name operator expr name name index expr name operator call name argument_list argument expr name argument expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name operator name name index expr name operator call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name expr_stmt expr call name argument_list argument expr ternary condition expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr name argument expr literal type number argument expr name then expr literal type string else expr literal type string 
