comment type block include directive file using namespace name define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator name function type name name parameter_list block expr_stmt expr name operator name operator name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list operator expr name name index expr name operator name name index expr name operator expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list operator expr name name index expr name operator name name index expr name operator expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr name while condition expr literal type boolean block decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block type pseudo expr_stmt expr name operator name operator literal type number else block type pseudo expr_stmt expr name operator operator name for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name operator call name name operator name argument_list then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number else block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number comment type line expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block type pseudo expr_stmt expr name operator name operator literal type number else block type pseudo expr_stmt expr name operator operator name for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name operator call name name operator name argument_list then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number else block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number comment type line expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block type pseudo expr_stmt expr name operator name operator literal type number else block type pseudo expr_stmt expr name operator operator name for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name operator call name name operator name argument_list then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number else block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number comment type line expr_stmt expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block type pseudo expr_stmt expr name operator name operator literal type number else block type pseudo expr_stmt expr name operator operator name for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name operator call name name operator name argument_list then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number else block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number comment type line if condition expr name operator name operator name operator name then block type pseudo return expr call name argument_list argument expr literal type string operator expr literal type number comment type block 
