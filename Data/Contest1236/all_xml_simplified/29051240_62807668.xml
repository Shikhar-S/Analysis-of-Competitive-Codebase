include directive file using namespace name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name operator name operator name then block type pseudo return expr literal type boolean decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator operator name operator operator name then block for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr operator name condition expr name operator name incr expr name operator block if condition expr operator call name name operator name argument_list argument expr block expr name expr name then block type pseudo return expr literal type boolean expr_stmt expr name operator operator operator name operator operator literal type number expr_stmt expr name operator if condition expr name operator name operator name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator operator name operator operator name then block for control init decl type name name init expr operator name condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr operator call name name operator name argument_list argument expr block expr name expr name then block type pseudo return expr literal type boolean expr_stmt expr name operator operator operator name operator operator literal type number expr_stmt expr name operator if condition expr name operator name operator name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator operator operator name operator operator name then block for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator operator operator name operator incr expr name operator block if condition expr operator call name name operator name argument_list argument expr block expr name expr name then block type pseudo return expr literal type boolean expr_stmt expr name operator operator operator name operator operator literal type number expr_stmt expr name operator if condition expr name operator name operator name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator operator operator name operator operator name then block for control init decl type name name init expr name condition expr name operator operator operator name operator incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr operator call name name operator name argument_list argument expr block expr name expr name then block type pseudo return expr literal type boolean expr_stmt expr name operator operator operator name operator operator literal type number expr_stmt expr name operator return expr call name argument_list argument expr name argument expr name argument expr name argument expr name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number while condition expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr call name argument_list argument expr literal type number argument expr name argument expr literal type number argument expr name then block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name 
