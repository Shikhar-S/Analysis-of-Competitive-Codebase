include directive file comment type block using namespace name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value comment type line decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name comment type line decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name function type name name parameter_list block if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator literal type boolean return if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator expr_stmt expr name operator literal type number return decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number block while condition expr operator name name index expr name operator call name argument_list block expr_stmt expr name operator decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list if condition expr name operator operator name operator name operator literal type number operator operator operator name operator name operator literal type number operator then block expr_stmt expr name operator literal type boolean return expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator literal type number function type name name parameter_list block if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator literal type boolean return if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator expr_stmt expr name operator literal type number return decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number block while condition expr operator name name index expr name operator call name argument_list block expr_stmt expr name operator decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list if condition expr name operator operator name operator name operator literal type number operator operator operator name operator name operator literal type number operator then block expr_stmt expr name operator literal type boolean return expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator literal type number function type name name parameter_list block if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator literal type boolean return if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator expr_stmt expr name operator literal type number return decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number block while condition expr operator name name index expr name operator call name argument_list block expr_stmt expr name operator decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list if condition expr name operator operator name operator name operator literal type number operator operator operator name operator name operator literal type number operator then block expr_stmt expr name operator literal type boolean return expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator literal type number function type name name parameter_list block if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator literal type boolean return if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator expr_stmt expr name operator literal type number return decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number block while condition expr operator name name index expr name operator call name argument_list block expr_stmt expr name operator decl_stmt decl type name name init expr operator name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list if condition expr name operator operator name operator name operator literal type number operator operator operator name operator name operator literal type number operator then block expr_stmt expr name operator literal type boolean return expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator literal type number function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator literal type boolean expr_stmt expr name operator name operator name operator name if condition expr name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number operator expr name operator name operator expr name operator literal type number operator expr name operator name macro name argument_list argument literal type number argument expr_stmt expr name operator name operator name operator expr name name index expr name operator call name argument_list argument expr name operator expr name name index expr name operator call name argument_list argument expr name while condition expr name operator name operator operator name operator name operator operator name block comment type line comment type line if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list else block type pseudo expr_stmt expr call name argument_list comment type line comment type line if condition expr name operator operator name operator name operator operator name then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string ifndef directive name expr_stmt expr name operator literal type string operator literal type number operator call name argument_list operator name operator literal type string endif directive return expr literal type number 
