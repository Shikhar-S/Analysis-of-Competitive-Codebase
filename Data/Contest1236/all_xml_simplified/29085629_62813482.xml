include directive file using namespace name using name init type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name block comment type line comment type line comment type line comment type line decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr call name name operator name argument_list decl type ref prev name while condition expr name operator name operator literal type number block expr_stmt expr name operator operator name operator name operator operator literal type number if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name comment type line return expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr ternary condition expr name operator name operator literal type number operator name operator name then expr literal type string else expr literal type string comment type line expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number comment type line if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number comment type line if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name return expr literal type boolean function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number for control init decl type name name decl type ref prev name decl type ref prev name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr call name argument_list comment type line while condition expr literal type number block if condition expr operator call name argument_list then block type pseudo expr_stmt expr call name argument_list comment type line if condition expr operator call name argument_list then block type pseudo expr_stmt expr call name argument_list comment type line if condition expr operator call name argument_list then block type pseudo expr_stmt expr call name argument_list comment type line if condition expr operator call name argument_list then block type pseudo expr_stmt expr call name argument_list comment type line 
