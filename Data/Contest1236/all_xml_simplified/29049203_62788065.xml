pragma directive name name literal include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value ifndef directive name define directive macro name value endif directive using namespace name using namespace name using namespace name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name init expr operator literal type number operator literal type number operator operator literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number operator literal type number using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name using template parameter_list parameter type name name parameter type name name name init type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name using template parameter_list parameter type name name parameter type name name name init type name name argument_list type generic argument expr name argument expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name name block for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator operator name return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name name block for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator operator name return expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name name block for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator operator name return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name name block for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator operator name return expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name name block for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator operator name return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name name block for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator operator name return expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name name block for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator operator name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block return expr operator name operator literal type number operator operator operator name operator literal type number operator function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator name operator operator name operator literal type number operator operator name function specifier type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name operator name name operator name operator name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name operator name name operator name operator name name operator name decl_stmt decl type name name function type name name parameter_list block return expr call name name argument_list type generic argument expr name argument_list argument expr call name name operator name argument_list operator call name argument_list operator call name argument_list operator literal type number function type name name parameter_list block return expr call name argument_list operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator name argument expr name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr literal type number argument expr name decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator literal type number argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name init expr name parameter decl type name modifier name init expr name block expr_stmt expr name operator call name argument_list argument expr name operator expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr block expr literal type number expr literal type number decl type ref prev name init expr block expr literal type number expr literal type number decl type ref prev name init expr block expr name expr name while condition expr name name operator name operator literal type number block decl_stmt decl type name name init expr name name operator name operator name name operator name expr_stmt expr name operator block expr name name operator name expr name name operator name operator name operator name name operator name expr_stmt expr name operator block expr name name operator name expr name name operator name operator name operator name name operator name expr_stmt expr name operator block expr name name operator name expr name name operator name operator name operator name name operator name if condition expr name then block type pseudo expr_stmt expr operator name operator name name operator name if condition expr name then block type pseudo expr_stmt expr operator name operator name name operator name return expr name name operator name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name then block type pseudo for control init decl type name name init expr literal type number operator name condition expr name operator name incr expr name operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name if condition expr name operator literal type number operator name operator name operator literal type number then block type pseudo return expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator call name argument_list argument expr name argument expr name argument expr name if condition expr name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type boolean if condition expr name operator literal type number then block type pseudo return expr literal type boolean decl_stmt decl type name name init expr name operator literal type number decl type ref prev name init expr literal type number while condition expr name operator literal type number operator literal type number block expr_stmt expr name operator literal type number expr_stmt expr name operator decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list operator name name index expr name operator name operator literal type number incr expr name operator block type pseudo if condition expr operator call name argument_list argument expr name argument expr name argument expr name argument expr name name index expr name then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name block while condition expr literal type boolean block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name init expr lambda capture argument modifier parameter_list parameter decl type name name block return expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name operator name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name decl type ref prev name init expr name do block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name operator name argument expr name if condition expr name operator literal type number operator name operator name then block type pseudo return expr name condition expr name operator name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr call name name argument_list type generic argument expr name argument_list if condition expr name operator call name name operator name argument_list then block decl_stmt decl type name name argument_list type generic argument expr name name while condition expr name operator literal type number block if condition expr call name name operator name argument_list operator call name name operator name argument_list operator name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr literal type number else block type pseudo expr_stmt expr call name name operator name argument_list operator name operator expr_stmt expr name operator name name index expr name return expr name else block decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name expr_stmt expr call name name operator name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr call name argument_list argument expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo if condition expr call name name operator name argument_list operator call name name operator name argument_list operator name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr literal type number else block type pseudo expr_stmt expr call name name operator name argument_list operator name operator return expr name function type name name parameter_list block ifndef directive name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number endif directive expr_stmt expr call name argument_list argument expr call name argument_list argument expr literal type number expr_stmt expr name operator call name argument_list decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr call name argument_list argument expr literal type number argument expr name argument expr name operator literal type number argument expr name argument expr name operator name 
