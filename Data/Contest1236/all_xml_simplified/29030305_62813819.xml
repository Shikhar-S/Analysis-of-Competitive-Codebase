include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value using namespace name decl_stmt decl type name name init expr operator name operator literal type number decl_stmt decl type name name init expr literal type number operator literal type number decl_stmt decl type name specifier name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator literal type number return expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name index expr name operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name name operator name ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name while condition expr name operator name operator name operator name block if condition expr name name index expr name index expr name then block type pseudo break if condition expr name operator literal type number then block expr_stmt expr name operator decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block type pseudo expr_stmt expr name operator operator name operator literal type number expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator expr_stmt expr name operator name elseif if condition expr name operator literal type number then block expr_stmt expr name operator decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block type pseudo expr_stmt expr name operator operator name operator literal type number expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator expr_stmt expr name operator name elseif if condition expr name operator literal type number then block expr_stmt expr name operator decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator if condition expr operator name operator name then block type pseudo expr_stmt expr name operator operator name operator literal type number expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator expr_stmt expr name operator name elseif if condition expr name operator literal type number then block expr_stmt expr name operator decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator if condition expr operator name operator name then block type pseudo expr_stmt expr name operator operator name operator literal type number expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr ternary condition expr name operator name operator name operator name then expr literal type string else expr literal type string 
