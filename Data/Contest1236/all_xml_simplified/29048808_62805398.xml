include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name operator expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator literal type number operator expr name operator name operator literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block type pseudo if condition expr name name index expr name index expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator name operator name operator expr name operator name operator expr name operator name while condition expr literal type boolean block expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block type pseudo if condition expr name name index expr name index expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name operator expr name operator name operator name operator literal type number operator expr name operator name expr_stmt expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block type pseudo if condition expr name name index expr name index expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name operator expr name operator name operator name operator literal type number operator expr name operator name expr_stmt expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block type pseudo if condition expr name name index expr name index expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name operator expr name operator name operator expr name operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block type pseudo if condition expr name name index expr name index expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name operator expr name operator name operator expr name operator name if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
