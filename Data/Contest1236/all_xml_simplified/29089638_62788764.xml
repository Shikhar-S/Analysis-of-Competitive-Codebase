include directive file using namespace name struct name block public type default constructor name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl name using name init type name name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type number return expr literal type number decl_stmt decl specifier type name name name init expr literal type number comment type line comment type line decl_stmt decl specifier type name name init expr literal type number decl_stmt decl specifier type name name init expr literal type number using name init type name name struct template parameter_list parameter type name name name block public type default decl_stmt decl type name name constructor name parameter_list member_init_list call name argument_list argument expr literal type number block constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr ternary condition expr name operator literal type number then expr name operator name else expr operator name operator operator operator name operator operator name operator operator name block function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block if condition expr operator name operator name name operator name operator operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block if condition expr operator name operator name operator name name operator name operator operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator operator name operator name name operator name operator name operator return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr operator name operator call name name operator name argument_list return expr operator name function type operator type name name name parameter_list specifier block return expr call name argument_list argument expr operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function type name name parameter_list specifier block decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name while condition expr name operator literal type number block expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name operator name operator name argument expr name expr_stmt expr call name argument_list argument expr name operator name operator name argument expr name return expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name specifier block decl_stmt decl type name name argument_list argument expr literal type number decl type ref prev name argument_list argument expr name while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name friend function type operator type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block return expr name operator name name operator name friend function type operator type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name name expr_stmt expr operator name name expr_stmt expr operator call name name argument_list type generic argument expr name argument_list argument expr name return expr operator name operator function specifier type name name parameter_list block return expr name using name init type name name argument_list type generic argument expr name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr operator call name argument_list argument expr literal type number operator call name argument_list argument expr name operator call name argument_list argument expr literal type number operator operator call name argument_list argument expr name expr_stmt expr name operator name operator name 
