include directive file comment type line comment type line comment type line define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value comment type line decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number using namespace name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator name decl_stmt decl type name name init expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line if condition expr name operator name operator name operator name then block type pseudo return expr literal type boolean for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo if condition expr operator name name index expr call name argument_list argument expr name argument expr name then block expr_stmt expr name operator literal type boolean return expr literal type boolean return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line if condition expr name operator name operator name operator name then block type pseudo return if condition expr name then block type pseudo return for control init decl type name name range expr name name index expr literal type number index expr name block if condition expr name operator name then block expr_stmt expr name name index expr literal type number index expr name operator call name argument_list continue if condition expr name operator name then block type pseudo break comment type line if condition expr call name argument_list argument expr name argument expr name argument expr name argument expr name then block type pseudo return else block expr_stmt expr name operator name operator literal type number break if condition expr name operator name then block for control init decl type name name range expr name name index expr literal type number index expr name block comment type line if condition expr name operator name then block expr_stmt expr name name index expr literal type number index expr name operator call name argument_list continue if condition expr name operator name then block type pseudo break if condition expr call name argument_list argument expr name argument expr name argument expr name argument expr name then block type pseudo return else block expr_stmt expr name operator name operator literal type number break if condition expr name operator name then block for control init decl type name name range expr name name index expr literal type number index expr name block comment type line if condition expr name operator name then block expr_stmt expr name name index expr literal type number index expr name operator call name argument_list continue if condition expr name operator name then block type pseudo break if condition expr call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name then block type pseudo return else block expr_stmt expr name operator name operator literal type number break if condition expr name operator name then block for control init decl type name name range expr name name index expr literal type number index expr name block comment type line if condition expr name operator name then block expr_stmt expr name name index expr literal type number index expr name operator call name argument_list continue if condition expr name operator name then block type pseudo break if condition expr call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name operator literal type number then block type pseudo return else block expr_stmt expr name operator name break expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number argument expr name operator literal type number argument expr name operator literal type number function type name name parameter_list block decl_stmt decl type name name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block comment type line expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name operator call name argument_list argument expr name name index expr literal type number index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name operator call name argument_list argument expr name name index expr literal type number index expr name operator call name argument_list argument expr name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name operator call name argument_list argument expr name name index expr literal type number index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name name index expr literal type number index expr name operator call name argument_list argument expr name name index expr literal type number index expr name operator call name argument_list argument expr name comment type line expr_stmt expr call name argument_list argument expr literal type number argument expr name argument expr literal type number argument expr name comment type line if condition expr name then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
