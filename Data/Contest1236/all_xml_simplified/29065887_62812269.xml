include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list expr_stmt expr name operator name operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number operator expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number operator expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type number while condition expr literal type number block if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator name expr_stmt expr name operator literal type number elseif if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator name expr_stmt expr name operator literal type number elseif if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator literal type number operator decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr call name name operator name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator name expr_stmt expr name operator literal type number elseif if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator literal type number operator decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr call name name operator name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator expr_stmt expr name operator name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name name index expr call name argument_list argument expr name argument expr name operator literal type number then block type pseudo break expr_stmt expr name name index expr call name argument_list argument expr name argument expr name operator literal type number if condition expr name operator literal type number operator name operator name operator name then block type pseudo expr_stmt expr name operator literal type string operator name else block type pseudo expr_stmt expr name operator literal type string operator name return expr literal type number 
