include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value comment type line comment type line decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list block expr_stmt expr name operator literal type string operator name expr_stmt expr call name argument_list argument expr name function type name name parameter_list block expr_stmt expr name operator literal type string operator name expr_stmt expr call name argument_list argument expr name function type name name parameter_list block while condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list operator name name index expr name operator name operator name operator literal type number block for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator function type name name parameter_list block while condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list operator name name index expr name operator name operator name operator literal type number block for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator function type name name parameter_list block while condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list operator name name index expr name operator name operator name operator literal type number block for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator function type name name parameter_list block while condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list operator name name index expr name operator name operator name operator literal type number block for control init decl type name name init expr name condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr name operator name operator name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list expr_stmt expr name operator literal type number operator expr name operator name operator expr name operator literal type number operator expr name operator name while condition expr literal type boolean block while condition expr name operator name operator name operator name operator call name name operator name argument_list argument expr name operator call name name operator name argument_list operator call name name operator name argument_list argument expr name operator call name name operator name argument_list operator call name name operator name argument_list argument expr name operator call name name operator name argument_list operator call name name operator name argument_list argument expr name operator call name name operator name argument_list block type pseudo expr_stmt expr name operator operator expr name operator operator expr name operator operator expr name operator if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list comment type line expr_stmt expr call name argument_list if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr call name argument_list if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name argument_list expr_stmt expr name operator if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list comment type line expr_stmt expr call name argument_list if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr call name argument_list if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name argument_list expr_stmt expr name operator if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list comment type line expr_stmt expr call name argument_list if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr call name argument_list if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name argument_list expr_stmt expr name operator if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list comment type line expr_stmt expr call name argument_list if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr call name argument_list if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr call name argument_list expr_stmt expr name operator if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list return expr literal type number 
