include directive file using namespace name using name init type name name using name init type name name name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name using template parameter_list parameter type name name parameter type name name name init type name name argument_list type generic argument expr name argument expr name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name decl_stmt decl specifier type name name name init expr operator name name operator literal type number operator literal type number decl_stmt decl specifier type name name name init expr literal type number decl_stmt decl specifier type name name name init expr operator name name operator literal type number decl_stmt decl specifier type name name name init expr operator name name operator literal type number decl_stmt decl specifier type name name name init expr literal type number function template parameter_list parameter type name name type name name argument_list type generic argument expr name name parameter_list parameter decl type name name parameter decl type name name block return expr call name name argument_list type generic argument expr name argument_list argument expr name argument expr name function template parameter_list parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block return expr call name name argument_list type generic argument expr decltype argument_list argument expr call name argument_list argument expr name operator argument_list argument expr name argument expr call name argument_list argument expr name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name then block expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr literal type number function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator literal type string for control init expr name operator name operator name block type pseudo expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string operator literal type string expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr name operator operator ternary condition expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator operator operator name expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr name operator operator ternary condition expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator operator operator name expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr name operator operator ternary condition expr name operator literal type number then expr literal type string else expr literal type string operator operator name name index expr name expr_stmt expr name operator literal type string return expr name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name function type operator template parameter_list parameter type template parameter_list parameter type name name name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr name operator operator ternary condition expr name operator call name name operator name argument_list then expr literal type string else expr literal type string operator operator operator name expr_stmt expr name operator literal type string return expr name function type name name parameter_list parameter decl type name block expr_stmt expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator name expr_stmt expr call name argument_list function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name modifier name parameter decl type name modifier modifier name block expr_stmt expr name operator name operator literal type string expr_stmt expr call name argument_list argument expr call name name argument_list type generic argument expr name argument_list argument expr name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator operator ternary condition expr name then expr literal type string else expr literal type string operator operator name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator operator ternary condition expr name then expr literal type string else expr literal type string operator operator name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator operator ternary condition expr name then expr literal type string else expr literal type string operator operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator literal type number then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator else block type pseudo for control init decl type name name init expr name operator literal type number condition expr literal type number operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name index expr name operator literal type string expr_stmt expr name operator name return expr literal type number 
