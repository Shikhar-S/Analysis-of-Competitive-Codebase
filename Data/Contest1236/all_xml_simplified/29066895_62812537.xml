comment type line include directive file include directive file include directive file using namespace name typedef type name name name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator operator expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator expr name name index expr name operator call name argument_list argument expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator expr name name index expr name operator call name argument_list argument expr operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr operator name operator name operator name operator name decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr name decl type ref prev name init expr operator literal type number decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number while condition expr literal type boolean block if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number operator name comment type line expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number operator name comment type line expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator operator operator name name index expr name operator call name argument_list argument expr name operator expr_stmt expr name operator name operator call name argument_list argument expr name argument expr name operator literal type number comment type line expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator operator operator name name index expr name operator call name argument_list argument expr name operator expr_stmt expr name operator name operator call name argument_list argument expr name argument expr name operator literal type number comment type line expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator operator ternary condition expr name operator literal type number operator name then expr literal type string else expr literal type string operator operator name return expr literal type number 
