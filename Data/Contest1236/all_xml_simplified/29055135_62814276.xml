include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block return expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block expr_stmt expr name operator literal type string for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator operator name return expr name operator literal type string typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name argument_list argument expr call name argument_list argument expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block if condition expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name operator literal type number then block type pseudo return expr literal type boolean macro name argument_list argument argument expr_stmt expr name name index expr name operator call name argument_list macro name argument_list argument argument expr_stmt expr name name index expr name operator call name argument_list macro name argument_list argument argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr operator name operator expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name return expr literal type boolean function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr operator name then block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name if condition expr name operator call name name operator name argument_list then block type pseudo return expr name return expr operator name operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name if condition expr name operator call name name operator name argument_list then block type pseudo return expr name expr_stmt expr operator name return expr name operator operator name operator literal type number function type name name parameter_list block expr_stmt expr name operator name operator literal type number operator name operator name operator literal type number macro name argument_list argument argument expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number operator call name argument_list argument expr call name argument_list argument expr name name index expr literal type number argument expr literal type number operator name name index expr literal type number operator call name argument_list then block type pseudo expr_stmt expr name operator literal type number while condition expr name operator literal type number block decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block comment type line expr_stmt expr name operator call name argument_list argument expr block expr name expr call name argument_list argument expr name operator name macro name argument_list argument argument argument argument literal type number expr_stmt expr name operator name expr_stmt expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name elseif if condition expr name operator literal type number then block comment type line expr_stmt expr name operator call name argument_list argument expr block expr name expr call name argument_list argument expr name operator name macro name argument_list argument argument argument argument literal type number expr_stmt expr name operator name expr_stmt expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name elseif if condition expr name operator literal type number then block comment type line expr_stmt expr name operator call name argument_list argument expr block expr name expr call name argument_list argument expr name operator name macro name argument_list argument argument argument argument literal type number expr_stmt expr name operator name expr_stmt expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name else block comment type line expr_stmt expr name operator call name argument_list argument expr block expr name expr call name argument_list argument expr name operator name macro name argument_list argument argument argument argument literal type number expr_stmt expr name operator name expr_stmt expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr_stmt expr name operator name expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr call name argument_list argument expr literal type string function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line decl_stmt decl type name name init expr call name argument_list endif directive expr_stmt expr name operator name operator call name argument_list argument expr literal type number expr_stmt expr name operator name operator call name argument_list argument expr literal type number ifdef directive name while condition expr call name argument_list block else directive if condition expr call name argument_list then block endif directive expr_stmt expr call name argument_list ifdef directive name expr_stmt expr name operator literal type string operator call name argument_list operator name operator name expr_stmt expr name operator call name argument_list endif directive 
