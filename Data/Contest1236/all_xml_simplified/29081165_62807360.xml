include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value function type name name parameter_list block decl_stmt decl type name name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator literal type number then block if condition expr call name name operator name argument_list argument expr name then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name operator literal type number if condition expr name operator name name index expr name operator call name argument_list then block type pseudo goto name decl_stmt decl type name name init expr operator name expr_stmt expr name operator if condition expr name operator name then block type pseudo goto name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name else block label name expr_stmt expr name operator if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator elseif if condition expr name operator literal type number then block if condition expr call name name operator name argument_list argument expr name then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name operator literal type number if condition expr name operator name name index expr name operator call name argument_list then block type pseudo goto name decl_stmt decl type name name init expr operator name expr_stmt expr name operator if condition expr name operator name then block type pseudo goto name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name else block label name expr_stmt expr name operator if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator elseif if condition expr name operator literal type number then block if condition expr call name name operator name argument_list argument expr name then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo goto name expr_stmt expr name operator decl_stmt decl type name name init expr operator name expr_stmt expr name operator if condition expr name operator name then block type pseudo goto name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name else block label name expr_stmt expr name operator if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator else block if condition expr call name name operator name argument_list argument expr name then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo goto name expr_stmt expr name operator decl_stmt decl type name name init expr operator name expr_stmt expr name operator if condition expr name operator name then block type pseudo goto name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name else block label name expr_stmt expr name operator if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number comment type line if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type string operator name return expr literal type number expr_stmt expr name operator literal type number operator expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number if condition expr call name name operator name argument_list argument expr name then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name operator literal type number if condition expr name operator name name index expr name operator call name argument_list then block type pseudo goto name decl_stmt decl type name name init expr operator name expr_stmt expr name operator expr_stmt expr name operator name operator name expr_stmt expr name operator name else block label name expr_stmt expr name operator expr_stmt expr name operator name operator name expr_stmt expr name operator name if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type string operator name return expr literal type number expr_stmt expr name operator literal type string operator name return expr literal type number 
