include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value decl_stmt decl type name name init expr literal type boolean struct template parameter_list parameter type name parameter type name name name block public type default decl_stmt decl type name name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name block function template parameter_list parameter type name name type name name argument_list type generic argument expr literal type number argument expr name name parameter_list parameter decl type name name block return expr call name name argument_list type generic argument expr literal type number argument expr name argument_list argument expr name empty_stmt function template parameter_list parameter type name name type name name argument_list type generic argument expr literal type number argument expr name name parameter_list parameter decl type name name block return expr call name name argument_list type generic argument expr literal type number argument expr name argument_list argument expr name empty_stmt function type operator template parameter_list parameter type name name parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr literal type number argument expr name name block return expr name operator operator ternary condition expr name name operator name operator name then expr operator name operator literal type boolean operator name name operator name operator else expr operator name operator literal type boolean operator name operator operator function type operator template parameter_list parameter type name name parameter type name name specifier type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr literal type number argument expr name name block return expr name operator operator ternary condition expr name name operator name operator name then expr operator name operator literal type boolean operator name name operator name operator else expr operator name operator literal type boolean operator name operator operator function template parameter_list parameter type name name specifier type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name macro name argument_list argument argument expr_stmt expr name operator name name index expr name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr literal type number typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr literal type boolean block comment type line comment type line comment type line comment type line if condition expr name operator literal type number then block expr_stmt expr name operator operator name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator operator name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator name if condition expr name operator name operator name operator name then block type pseudo return expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name comment type line expr_stmt expr name operator name expr_stmt expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr name operator name operator name operator name comment type line macro name argument_list argument argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name macro name argument_list argument argument literal type number block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number macro name argument_list argument argument literal type number block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list expr_stmt expr name operator name operator literal type string operator literal type number operator name operator name operator name operator name expr_stmt expr name operator operator ternary condition expr name operator literal type number operator name operator name operator name then expr literal type string else expr literal type string operator operator name return expr literal type number 
