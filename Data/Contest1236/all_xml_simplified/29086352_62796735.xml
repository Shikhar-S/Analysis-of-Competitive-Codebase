include directive file finished using namespace name finished finished typedef type name name finished name finished typedef type name finished name finished function template parameter_list parameter type name finished name finished finished finished specifier type name finished name parameter_list parameter decl type name modifier finished name finished finished parameter decl type name finished name finished finished finished block if condition expr name operator name finished finished then block type pseudo expr_stmt expr name operator name finished finished finished finished finished finished finished function template parameter_list parameter type name finished name finished finished finished specifier type name finished name parameter_list parameter decl type name modifier finished name finished finished parameter decl type name finished name finished finished finished block if condition expr name operator name finished finished then block type pseudo expr_stmt expr name operator name finished finished finished finished finished finished finished function template parameter_list parameter type name finished name finished finished finished specifier type name finished name parameter_list parameter decl type name modifier finished name finished finished finished block expr_stmt expr name operator literal type number finished finished decl_stmt decl type name finished name finished decl type ref prev name init expr literal type number finished finished finished finished while condition expr name operator call name argument_list finished finished operator expr name operator literal type number finished finished block type pseudo if condition expr name operator literal type number finished finished then block type pseudo expr_stmt expr name operator operator name finished finished finished finished finished finished finished do block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator finished finished finished condition expr name operator call name argument_list finished finished operator expr name operator literal type number finished finished finished expr_stmt expr name operator name finished finished finished finished decl_stmt decl type specifier name finished name init expr literal type number finished finished finished finished decl_stmt decl type name finished name finished decl type ref prev name name index expr name finished finished index expr name finished finished finished finished finished function type name finished name parameter_list block ifndef directive name finished comment type line comment type line endif directive finished expr_stmt expr call name argument_list argument expr name finished finished finished finished finished finished decl_stmt decl type name finished name init expr literal type number finished finished finished decl type ref prev name init expr literal type number finished finished finished decl type ref prev name init expr literal type number finished finished finished decl type ref prev name init expr literal type number finished finished finished finished while condition expr literal type number finished finished block expr_stmt expr name name index expr name finished finished index expr name finished finished finished operator operator name finished finished if condition expr name operator name finished finished then block type pseudo break finished finished finished if condition expr name finished finished then block expr_stmt expr name operator finished finished if condition expr name operator literal type number finished finished then block type pseudo expr_stmt expr name operator literal type number finished operator expr name operator literal type number finished operator expr name operator finished finished finished finished finished finished finished else block expr_stmt expr name operator finished finished if condition expr name operator name operator literal type number finished finished then block type pseudo expr_stmt expr name operator literal type number finished operator expr name operator name finished operator expr name operator finished finished finished finished finished finished finished finished finished finished for control init decl type name finished name init expr literal type number finished finished finished finished condition expr name operator name finished finished incr expr name operator finished finished finished block type pseudo for control init decl type name finished name init expr literal type number finished finished finished finished condition expr name operator name finished finished incr expr name operator finished finished finished block type pseudo expr_stmt expr call name argument_list argument expr literal type string finished finished argument expr name name index expr name finished finished index expr name finished finished finished finished finished argument expr ternary condition expr name operator name finished finished then expr literal type char finished finished else expr literal type char finished finished finished finished finished finished finished finished finished finished finished finished finished return expr operator literal type number operator literal type number operator finished finished finished finished finished 
