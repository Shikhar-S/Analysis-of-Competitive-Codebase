include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name argument expr operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name name operator name operator literal type number expr_stmt expr name name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr literal type number block expr_stmt expr name operator name if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr name operator name decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name if condition expr name name operator name operator name name operator name then block expr_stmt expr name operator literal type number operator operator name name operator name operator name name operator name operator literal type number operator expr_stmt expr name name operator name operator name name operator name operator literal type number else block expr_stmt expr name operator literal type number operator operator name operator literal type number operator name name operator name operator expr_stmt expr name name operator name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name expr_stmt expr name operator operator name operator literal type number operator operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr name operator name expr_stmt expr name operator decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name if condition expr name operator literal type number operator name name operator name operator name name operator name then block expr_stmt expr name operator literal type number operator operator name name operator name operator name name operator name operator literal type number operator expr_stmt expr name name operator name operator name name operator name operator literal type number else block expr_stmt expr name operator literal type number operator operator name name operator name operator literal type number operator name operator expr_stmt expr name name operator name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name expr_stmt expr name operator operator name operator literal type number operator operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name expr_stmt expr name name operator name operator name name operator name operator expr name name operator name operator name name operator name decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr name operator name decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name if condition expr name name operator name operator name name operator name then block expr_stmt expr name operator literal type number operator operator name name operator name operator name name operator name operator literal type number operator expr_stmt expr name name operator name operator name name operator name operator literal type number else block expr_stmt expr name operator literal type number operator operator name operator literal type number operator name name operator name operator expr_stmt expr name name operator name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name expr_stmt expr name operator operator name operator literal type number operator operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name expr_stmt expr name name operator name operator name name operator name operator expr name name operator name operator name name operator name decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr name operator name expr_stmt expr name operator decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name if condition expr name operator literal type number operator name name operator name operator name name operator name then block expr_stmt expr name operator literal type number operator operator name name operator name operator name name operator name operator literal type number operator expr_stmt expr name name operator name operator name name operator name operator literal type number else block expr_stmt expr name operator literal type number operator operator name name operator name operator literal type number operator name operator expr_stmt expr name name operator name operator literal type number operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name expr_stmt expr name operator operator name operator literal type number operator operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator literal type number if condition expr name operator literal type number then block type pseudo break decl_stmt decl type name name init expr literal type number operator name operator name operator literal type number operator name if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
