include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name constructor name parameter_list parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number member_init_list call name argument_list argument expr name call name argument_list argument expr name block decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name operator name name operator name operator name name operator name operator name name operator name operator name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name operator name name operator name operator name name operator name operator name name operator name operator name name operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name argument expr operator name name index expr name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr operator name operator name operator name operator name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr literal type number block decl_stmt decl type name name init expr name decl type ref prev name init expr name if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name elseif if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name elseif if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator literal type number operator operator literal type number expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name elseif if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr operator operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator literal type number operator operator literal type number expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator literal type number operator literal type number expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr ternary condition expr name operator name then expr literal type string else expr literal type string function type name name parameter_list block expr_stmt expr call name argument_list return expr literal type number 
