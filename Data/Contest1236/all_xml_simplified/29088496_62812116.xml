include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value comment type line comment type line comment type line decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list argument expr name then block type pseudo return expr name decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name return expr operator name if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list argument expr name then block type pseudo return expr name decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name return expr operator name if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list argument expr name then block type pseudo return expr name decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator return expr operator name if condition expr name operator literal type number then block if condition expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list argument expr name then block type pseudo return expr name decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator return expr operator name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr literal type number block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr name if condition expr name operator literal type number then comment type line block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then comment type line block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then comment type line block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then comment type line block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name comment type line if condition expr name operator name operator name operator name then block type pseudo break expr_stmt expr name operator call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name if condition expr name operator name operator name then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string 
