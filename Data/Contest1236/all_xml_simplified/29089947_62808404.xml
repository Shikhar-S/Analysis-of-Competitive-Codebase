include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator name then block type pseudo return expr literal type number if condition expr name name literal type number then block type pseudo return expr call name argument_list argument expr name argument expr name operator literal type number operator name name name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number return expr name operator name name name function type name name parameter_list parameter decl type name name parameter decl type name modifier modifier name block expr_stmt expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name macro name argument_list argument argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator literal type number operator call name argument_list argument expr name operator literal type number expr_stmt expr name name index expr name operator literal type number operator call name argument_list argument expr name operator literal type number macro name argument_list argument argument expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr name decl type ref prev name init expr operator literal type number decl type ref prev name init expr name while condition expr literal type boolean block comment type line if condition expr name operator literal type number then block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator name if condition expr name operator name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator literal type number operator name operator expr name operator name operator literal type number operator expr name operator literal type number expr_stmt expr name operator name operator expr name operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator name if condition expr name operator name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator literal type number operator name operator expr name operator name operator literal type number operator expr name operator literal type number expr_stmt expr name operator name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator operator expr name operator call name argument_list argument expr name argument expr operator name if condition expr name operator name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator name operator literal type number operator expr name operator name operator literal type number operator expr name operator literal type number expr_stmt expr name operator name else block decl_stmt decl type name name init expr name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator operator expr name operator call name argument_list argument expr name argument expr operator name if condition expr name operator name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator name operator literal type number operator expr name operator name operator literal type number operator expr name operator literal type number expr_stmt expr name operator name if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator name return expr literal type number 
