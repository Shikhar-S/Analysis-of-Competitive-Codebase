include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number function type name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block type pseudo return expr block expr name expr name else block type pseudo return expr block expr name expr operator name operator literal type number function type name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator name name index expr name operator call name argument_list operator literal type number then block type pseudo return expr block expr name expr name else block expr_stmt expr name operator if condition expr operator name operator name then block type pseudo return expr block expr name expr name else block type pseudo return expr block expr name expr operator name operator literal type number function type name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block type pseudo return expr block expr name expr name else block type pseudo return expr block expr operator name operator literal type number expr name function type name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator name name index expr name operator call name argument_list operator literal type number then block type pseudo return expr block expr name expr name else block expr_stmt expr name operator if condition expr operator name operator name then block type pseudo return expr block expr name expr name else block type pseudo return expr block expr operator name operator literal type number expr name function type name name parameter_list block expr_stmt expr name ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr name operator name operator name operator name if condition expr name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name expr_stmt expr name name index expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name expr_stmt expr name name index expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name expr_stmt expr name name index expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name expr_stmt expr name name index expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name expr_stmt expr name name index expr block expr name name index expr name operator name expr name name index expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr literal type number block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name operator operator name name operator name operator name operator literal type number operator expr_stmt expr name operator name name operator name expr_stmt expr name operator name name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator comment type line if condition expr name operator name operator name name index expr block expr name expr name then block type pseudo expr_stmt expr call name argument_list expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator operator name name operator name operator name operator literal type number operator expr_stmt expr name operator name name operator name expr_stmt expr name operator name name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator if condition expr name operator name operator name name index expr block expr name expr name then block type pseudo expr_stmt expr call name argument_list comment type line expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator operator name operator name name operator name operator literal type number operator expr_stmt expr name operator name name operator name expr_stmt expr name operator name name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator comment type line if condition expr name operator name operator name name index expr block expr name expr name then block type pseudo expr_stmt expr call name argument_list expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator operator name operator name name operator name operator literal type number operator expr_stmt expr name operator name name operator name expr_stmt expr name operator name name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator comment type line if condition expr name operator name operator name name index expr block expr name expr name then block type pseudo expr_stmt expr call name argument_list return expr literal type number 
