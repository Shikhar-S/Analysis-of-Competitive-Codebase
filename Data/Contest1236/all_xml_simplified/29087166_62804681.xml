include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value using namespace name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name decl_stmt decl type specifier name name name index init expr block expr operator literal type number expr literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number expr literal type number expr operator literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number expr literal type number expr operator literal type number expr operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number for control init decl type name name decl type ref prev name decl type ref prev name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name operator name expr_stmt expr name name index expr operator name operator call name argument_list argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr call name argument_list argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr name decl type ref prev name init expr operator literal type number decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr literal type number block if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list if condition expr name operator call name argument_list argument expr name name index expr name then block expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name index expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list if condition expr name operator call name argument_list argument expr name name index expr name then block expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name index expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list if condition expr name operator literal type number then block expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name index expr operator name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name else block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name operator name name index expr name operator call name argument_list if condition expr name operator literal type number then block expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name index expr operator name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr operator name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name if condition expr operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator name operator operator name operator name operator name then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
