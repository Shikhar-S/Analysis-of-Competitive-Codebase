include directive file using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean operator expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr block expr name expr name operator literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type number decl_stmt decl type name name name init expr literal type number while condition expr literal type number block comment type line if condition expr name operator name then block break if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator name operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list if condition expr name operator operator name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name operator name operator literal type number else block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator name operator name operator literal type number if condition expr name operator literal type number operator name operator call name name operator name argument_list argument expr block expr name operator literal type number expr name operator call name name operator name argument_list then block break expr_stmt expr name operator literal type number comment type line if condition expr name operator name then block break if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator name operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list if condition expr name operator operator name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name operator name operator literal type number else block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator name operator name operator literal type number if condition expr name operator literal type number operator literal type number operator call name name operator name argument_list argument expr block expr name expr name operator literal type number operator call name name operator name argument_list then block break expr_stmt expr name operator literal type number comment type line if condition expr name operator name then block break if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator name operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator literal type number if condition expr name operator operator literal type number then block expr_stmt expr name operator name operator name operator literal type number else block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator name operator name operator literal type number if condition expr name operator literal type number operator literal type number operator call name name operator name argument_list argument expr block expr name operator literal type number expr name operator call name name operator name argument_list then block break expr_stmt expr name operator literal type number comment type line if condition expr name operator name then block break if condition expr name name index expr name operator call name argument_list then block expr_stmt expr name operator name operator name operator literal type number else block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator literal type number if condition expr name operator operator literal type number then block expr_stmt expr name operator name operator name operator literal type number else block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator name operator name operator literal type number if condition expr name operator literal type number operator name operator call name name operator name argument_list argument expr block expr name expr name operator literal type number operator call name name operator name argument_list then block break expr_stmt expr name operator literal type number expr_stmt expr name operator operator ternary condition expr name operator name operator literal type number operator name operator name then expr literal type string else expr literal type string operator operator literal type char return expr literal type number 
