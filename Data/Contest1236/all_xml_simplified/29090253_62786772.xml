comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line include directive file using namespace name define directive macro name value comment type line decl_stmt decl type specifier name name init expr literal type number define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value typedef type name name argument_list type generic argument expr name argument expr name name include directive file class template parameter_list parameter type name name operator name name name block private type default using name init type name name operator name decl_stmt decl type name name public constructor specifier name parameter_list parameter decl type specifier name name init expr literal type number noexcept macro name argument_list argument block function specifier type name name parameter_list specifier noexcept block return expr name function type operator specifier type name name name parameter_list parameter decl type specifier name name specifier noexcept block return expr call name argument_list argument expr operator name operator name function type operator specifier type name name name parameter_list parameter decl type specifier name name specifier noexcept block return expr call name argument_list argument expr operator name operator name function type operator specifier type name name name parameter_list parameter decl type specifier name name specifier noexcept block return expr call name argument_list argument expr operator name operator name function type operator specifier type name name name parameter_list parameter decl type specifier name name specifier noexcept block return expr call name argument_list argument expr operator name operator name function type operator specifier type name name name parameter_list parameter decl type specifier name name specifier noexcept block return expr call name argument_list argument expr operator name operator call name argument_list operator call name name operator name argument_list function type operator type name modifier name name parameter_list parameter decl type specifier name name noexcept block expr_stmt expr name operator name name operator name if condition expr name operator name then block expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name name noexcept block if condition expr name operator name name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name name noexcept block expr_stmt expr name operator name operator name name operator name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type name name noexcept block decl_stmt decl type name name init expr name operator literal type number while condition expr name block if condition expr name operator literal type number then block expr_stmt expr operator name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr operator name using name init type name name argument_list type generic argument expr name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator operator operator name operator name operator operator name operator name operator operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number if directive expr operator call name argument_list argument expr name operator call name argument_list argument expr name return expr call name argument_list argument expr operator name name operator name operator name operator name endif directive decl_stmt decl type name name name name init expr operator name name operator name operator name decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number decl type ref prev name init expr operator name operator name decl type ref prev name decl type ref prev name asm return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name name block decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number return expr name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name decl_stmt decl type name name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number while condition expr name block decl_stmt decl type name name init expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator call name argument_list argument expr literal type number argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name return expr literal type number 
