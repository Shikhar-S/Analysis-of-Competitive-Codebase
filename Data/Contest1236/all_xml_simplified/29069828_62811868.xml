include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr name operator name operator name operator name decl_stmt decl type name name decl type ref prev name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name name init expr literal type number operator name operator name operator name operator literal type number decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr name condition incr expr name operator operator ternary condition expr name operator literal type number then expr literal type number else expr name operator literal type number operator block if condition expr name then block if condition expr name operator name operator name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator literal type boolean expr_stmt expr name operator call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name if condition expr operator name then block type pseudo break expr_stmt expr name operator name operator expr name operator name if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name expr_stmt expr name operator continue decl_stmt decl type name name init expr operator operator name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator continue macro name argument_list argument argument argument macro name argument_list argument argument argument if condition expr operator call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name then block type pseudo return expr literal type boolean expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name expr_stmt expr name operator continue decl_stmt decl type name name init expr operator operator name operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator continue macro name argument_list argument argument argument macro name argument_list argument argument argument if condition expr operator call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name then block type pseudo return expr literal type boolean expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name expr_stmt expr name operator continue decl_stmt decl type name name init expr operator operator operator operator name operator operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator continue macro name argument_list argument argument argument macro name argument_list argument argument argument if condition expr operator call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name then block type pseudo return expr literal type boolean expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator name expr_stmt expr name operator continue decl_stmt decl type name name init expr operator operator operator operator name operator operator if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator continue macro name argument_list argument argument argument macro name argument_list argument argument argument if condition expr operator call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name then block type pseudo return expr literal type boolean expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator return expr literal type boolean function type name name parameter_list block macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list if condition expr call name argument_list argument expr literal type number then block type pseudo expr_stmt expr name operator literal type string elseif if condition expr call name argument_list argument expr literal type number then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string function name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list expr_stmt expr call name argument_list return expr literal type number 
