include directive file using namespace name ifdef directive name include directive file else directive define directive macro name parameter_list parameter type modifier endif directive define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr ternary condition expr sizeof argument_list argument expr name operator operator name name operator then expr literal type number else expr literal type number decl_stmt decl type specifier name name init expr literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block if condition expr name operator name then block expr_stmt expr name operator name return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name type name name argument_list type generic argument expr name name parameter_list parameter decl type name name block return expr call name name argument_list type generic argument expr name argument_list argument expr name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block return expr call name name argument_list type generic argument expr decltype argument_list argument expr call name name argument_list type generic argument expr name argument_list argument expr name operator argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr name operator function template parameter_list parameter type name name parameter type name name type name typename name name argument_list type generic argument expr name name name argument_list type generic argument expr name operator name operator literal type number operator name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name name type name typename name name argument_list type generic argument expr name name name argument_list type generic argument expr name operator name operator literal type number operator name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block for control init expr name operator name operator name block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name struct template parameter_list parameter type name name name block public type default decl_stmt decl specifier type specifier name name init expr name decl_stmt decl type name name constructor name parameter_list member_init_list call name argument_list argument expr literal type number block constructor name parameter_list parameter decl type name name block expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name constructor name parameter_list parameter decl type name name name name block expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name function type name name parameter_list specifier block return expr operator name operator name function type operator type name modifier name name parameter_list parameter decl type name name block if condition expr operator name operator name name operator name operator operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type name name block if condition expr operator name operator name operator name name operator name operator operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type name name block expr_stmt expr name operator operator name name name operator name operator name name operator name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type name name block return expr operator name operator call name name operator name argument_list function type operator type name name name parameter_list parameter decl type name name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type name name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type name name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type name name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list specifier block return expr call name argument_list argument expr name operator operator name operator name function type operator type name name name parameter_list parameter decl type name name specifier block return expr name operator name name operator name function type operator type name name name parameter_list parameter decl type name name specifier block return expr name operator name name operator name function type name name parameter_list specifier block decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number while condition expr name block decl_stmt decl type name name init expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr call name argument_list argument expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block return expr name operator name name operator name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name name name expr_stmt expr name operator name expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list argument expr name return expr name empty_stmt function template parameter_list parameter type name name type name name argument_list type generic argument expr name name parameter_list parameter decl type name name argument_list type generic argument expr name name parameter decl type name name name name block decl_stmt decl type name name argument_list type generic argument expr name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name using name init type name name argument_list type generic argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr literal type number argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name return expr literal type number 
