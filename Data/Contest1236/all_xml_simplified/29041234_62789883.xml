include directive file ifdef directive name define directive macro name value endif directive using namespace name typedef type name name name name name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator call name argument_list argument expr literal type number decl_stmt decl type specifier name name init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number decl_stmt decl type specifier name name init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function type name name parameter_list parameter decl type name name parameter decl type name name init expr literal type boolean block decl_stmt decl type name name if condition expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name comment type line expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name return expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name init expr literal type boolean block decl_stmt decl type name name if condition expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name comment type line expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name return expr call name argument_list argument expr name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name specifier modifier name parameter decl type name name init expr literal type number parameter decl type name name init expr operator literal type number block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block comment type line expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name specifier modifier name parameter decl type name name init expr literal type number parameter decl type name name init expr operator literal type number block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block comment type line expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init condition incr block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator literal type number if condition expr operator name then block type pseudo break expr_stmt expr name operator name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name operator name while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator name operator operator name return expr name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator call name argument_list argument expr operator call name argument_list argument expr literal type number argument expr name operator operator literal type number argument expr name comment type line function type name name parameter_list parameter decl type name block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number comment type line expr_stmt expr call name argument_list return expr literal type number 
