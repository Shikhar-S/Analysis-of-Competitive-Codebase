comment type line comment type line comment type line comment type line comment type line comment type line comment type line include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number index expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number decl type ref prev name name index expr literal type number init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list block comment type line expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr literal type number index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator name operator literal type number expr_stmt expr name name index expr literal type number operator name operator literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number comment type line decl_stmt decl type name name name init expr literal type number while condition expr literal type number block decl_stmt decl type name name init expr operator name operator literal type number operator operator literal type number if condition expr name operator literal type number then block comment type line decl_stmt decl type name name init expr call name argument_list argument expr operator name name index expr literal type number index expr name operator call name argument_list argument expr name argument expr name name index expr name operator literal type number comment type line if condition expr name operator name operator operator name operator literal type number operator name operator literal type number operator then block break expr_stmt expr name operator name operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name operator name if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr operator name name index expr literal type number index expr name operator call name argument_list argument expr name argument expr name name index expr name operator literal type number comment type line if condition expr name operator name then block break expr_stmt expr name operator name operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name operator name if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr operator operator operator name name index expr literal type number index expr name operator call name argument_list argument expr name operator argument expr name name index expr name operator literal type number comment type line if condition expr name operator name then block break expr_stmt expr name operator name operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name operator name if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr operator operator operator name name index expr literal type number index expr name operator call name argument_list argument expr name operator argument expr name name index expr name operator literal type number comment type line if condition expr name operator name then block break expr_stmt expr name operator name operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name operator name comment type line expr_stmt expr name operator name if condition expr name operator literal type number operator name operator name operator name then block expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
