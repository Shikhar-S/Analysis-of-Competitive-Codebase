define directive macro name value include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init condition incr block decl_stmt decl type name name init expr name decl type ref prev name init expr name decl_stmt decl type name name init expr name name index expr name index expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator name operator name if condition expr name operator name operator name operator literal type number then block break expr_stmt expr name operator literal type number expr_stmt expr name operator name decl_stmt decl type name name init expr name name index expr name index expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator name operator name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name expr_stmt expr name operator name name index expr name index expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator name operator name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name expr_stmt expr name operator name name index expr name index expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator name operator name if condition expr name operator name then block type pseudo break expr_stmt expr name operator name if condition expr name operator name operator name operator name then block type pseudo break expr_stmt expr call name argument_list argument expr ternary condition expr name operator name operator literal type number operator name operator name then expr literal type string else expr literal type string return expr literal type number 
