pragma directive name name name name literal name comment type line define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name name init expr literal type number comment type line decl_stmt decl type specifier name name name init expr literal type number operator literal type number comment type line function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator call name name operator name argument_list block while condition expr name operator call name name operator name argument_list operator name name index expr name operator name name index expr name block expr_stmt expr name operator expr_stmt expr name operator name expr_stmt expr name operator return expr name function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name name index expr name argument expr name name index expr name return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator call name argument_list argument expr name operator name operator literal type number operator name else block expr_stmt expr name name index expr name operator call name argument_list argument expr operator name operator literal type number operator operator operator name operator operator name for control init expr name operator name operator name block expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name index expr name operator literal type string expr_stmt expr name operator name return expr literal type number 
