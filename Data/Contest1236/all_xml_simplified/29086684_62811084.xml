include directive file define directive macro name value using namespace name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name while condition expr literal type number block if condition expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator literal type number comment type line comment type line expr_stmt expr name operator operator name operator name operator expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name name index expr name index expr name operator if condition expr name name index expr name index expr name operator literal type number then block type pseudo break elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator literal type number expr_stmt expr name operator operator name operator name operator expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name name index expr name index expr name operator if condition expr name name index expr name index expr name operator literal type number then block type pseudo break elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr operator name name index expr name operator call name argument_list then block if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator literal type number expr_stmt expr name operator operator name operator name operator expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name name index expr name index expr name operator if condition expr name name index expr name index expr name operator literal type number then block type pseudo break else block decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name if condition expr operator name name index expr name operator call name argument_list then block if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name operator literal type number expr_stmt expr name operator operator name operator name operator expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name name index expr name index expr name operator if condition expr name name index expr name index expr name operator literal type number then block type pseudo break comment type line if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string 
