include directive file using namespace name struct name block public type default function type operator type specifier name name name parameter_list parameter decl type name modifier name specifier block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr operator name decl name decl_stmt decl type specifier name name init expr literal type number operator literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name operator literal type number then expr name operator name operator name else expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name operator literal type number then expr name operator name operator name else expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr literal type number operator name operator name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name name index expr literal type number index expr literal type number function type name name parameter_list block decl_stmt decl type name name decl type ref prev name init expr literal type number expr_stmt expr name operator expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name while condition expr name operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator index expr name argument expr name name index expr name operator index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name operator expr call name argument_list argument expr literal type string block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name index expr name return expr literal type number 
