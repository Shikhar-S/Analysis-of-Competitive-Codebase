include directive file include directive file using namespace name typedef type name name typedef type name name name typedef type name name name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr operator name operator literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr literal type number expr literal type number expr operator literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name argument_list type generic argument expr name operator name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block comment type line comment type line comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr literal type boolean comment type line expr_stmt expr name operator name operator name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator literal type number operator name then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr literal type number operator call name argument_list argument expr name operator name name index expr literal type number operator name then block type pseudo break expr_stmt expr name operator expr_stmt expr name operator operator ternary condition expr name operator literal type number operator name operator name operator name then expr literal type string else expr literal type string operator return expr literal type number expr_stmt expr name operator literal type number decl_stmt decl type name name argument_list argument expr literal type number decl type ref prev name argument_list argument expr name decl type ref prev name argument_list argument expr literal type number decl type ref prev name argument_list argument expr name decl type ref prev name argument_list argument expr literal type number decl type ref prev name argument_list argument expr literal type number decl type ref prev name init expr literal type number while condition expr literal type number block comment type line if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator name operator operator operator name operator operator name then block if condition expr name operator operator operator name operator operator literal type number then block type pseudo break expr_stmt expr name operator operator operator name operator operator name operator literal type number expr_stmt expr name operator name operator operator operator name operator operator literal type number else block if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator name operator operator operator name operator operator name then block if condition expr name operator operator operator name operator operator literal type number then block type pseudo break expr_stmt expr name operator operator operator name operator operator name operator literal type number expr_stmt expr name operator name operator operator operator name operator operator literal type number else block if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator name operator operator operator name operator operator name then block decl_stmt decl type name name init expr operator literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name operator operator literal type number if condition expr name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator name operator name operator literal type number else block if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator else block expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator name operator operator operator name operator operator name then block decl_stmt decl type name name init expr operator literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name operator operator literal type number if condition expr name operator name operator literal type number then block type pseudo break expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator name operator name operator literal type number else block if condition expr name operator name then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator expr_stmt expr name operator operator name operator literal type number operator operator literal type number comment type line expr_stmt expr name operator operator ternary condition expr name operator literal type number operator name operator name operator name then expr literal type string else expr literal type string operator comment type line return expr literal type number 
