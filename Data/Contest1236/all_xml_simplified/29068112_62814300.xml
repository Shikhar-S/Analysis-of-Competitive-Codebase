comment type block include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value comment type line comment type line comment type line using namespace name using name init type name name using name init type name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr name operator name operator name operator name decl_stmt decl type name name init expr operator name operator name operator name operator name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr literal type number expr_stmt expr name operator decl_stmt decl type name name init expr literal type number while condition expr literal type number block comment type line if condition expr name operator literal type number then block decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr name name index expr name name operator name operator call name argument_list argument expr name name operator name decl_stmt decl type name name init expr name name operator name if condition expr name operator name name index expr name name operator name operator call name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator name decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr name operator name name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name name operator name operator name name operator name expr_stmt expr name operator call name argument_list argument expr name name operator name argument expr name operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr name name index expr name name operator name operator call name argument_list argument expr name name operator name decl_stmt decl type name name init expr name name operator name if condition expr name operator name name index expr name name operator name operator call name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator name decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr name operator name name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name name operator name operator name name operator name expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name name operator name elseif if condition expr name operator literal type number then block decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr name name index expr name name operator name operator call name argument_list argument expr name name operator name decl_stmt decl type name name init expr name name operator name if condition expr name operator name name index expr name name operator name operator call name argument_list then block if condition expr call name argument_list argument expr name name index expr name name operator name then block expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name elseif if condition expr name operator name name index expr name name operator name operator call name argument_list then block expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr name name operator name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name name operator name operator name name operator name expr_stmt expr name operator call name argument_list argument expr name name operator name argument expr name operator literal type number else block decl_stmt decl type name name name argument_list type generic argument expr name operator name name init expr name name index expr name name operator name operator call name argument_list argument expr name name operator name decl_stmt decl type name name init expr name name operator name if condition expr name operator name name index expr name name operator name operator call name argument_list then block if condition expr call name argument_list argument expr name name index expr name name operator name then block expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name elseif if condition expr name operator name name index expr name name operator name operator call name argument_list then block expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr name name operator name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name name operator name operator name name operator name expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name name operator name if condition expr call name name operator name argument_list argument expr name then block type pseudo break expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator operator name operator literal type number operator operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
