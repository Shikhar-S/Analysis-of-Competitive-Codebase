include directive file using namespace name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name parameter_list parameter type name parameter type name value comment type line define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name name block expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name name block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name operator name name index expr name return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name name argument_list type generic argument expr name name block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number block macro name argument_list argument argument literal type number block if condition expr name operator name operator literal type number operator name operator name operator name operator literal type number operator name operator name then block decl_stmt decl type name name init expr literal type number operator name operator literal type number operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name return expr literal type number 
