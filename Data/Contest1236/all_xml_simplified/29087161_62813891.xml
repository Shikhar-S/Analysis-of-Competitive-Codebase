include directive file using namespace name comment type line ifdef directive name define directive macro name parameter_list parameter type modifier value function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator name operator literal type char function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name modifier name parameter decl type name modifier modifier name block expr_stmt expr name operator name operator literal type string expr_stmt expr call name argument_list argument expr name operator define directive macro name else directive define directive macro name parameter_list parameter type modifier define directive macro name value endif directive typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr call name argument_list argument expr name operator literal type number decl type ref prev name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name comment type block function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name for control init decl type name name init expr name condition expr name incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name if condition expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name name index expr name else block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator operator name operator name operator argument expr name expr_stmt expr name name index expr name operator name operator name comment type line decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr name expr_stmt expr name operator name name index expr name operator name if condition expr name then block type pseudo expr_stmt expr name operator operator name name index expr name operator name operator literal type number operator else block type pseudo expr_stmt expr name operator operator call name argument_list argument expr name argument expr name operator operator name operator literal type number operator operator name operator literal type number operator expr_stmt expr call name argument_list argument expr name argument expr name return expr name function type name name parameter_list block expr_stmt expr name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name if condition expr name operator literal type number then block expr_stmt expr name operator literal type string return expr literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator name operator name name index expr name operator literal type number expr_stmt expr name operator call name argument_list expr_stmt expr name operator name operator name operator literal type char return expr literal type number 
