comment type line include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value comment type line define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value comment type line format doxygen comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line format doxygen decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block comment type line for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block return expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name return expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number comment type line while condition expr name operator name operator name operator name block comment type line if condition expr name operator literal type number then block decl_stmt decl type name name init expr name decl type ref prev name init expr name operator literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr name operator literal type number if condition expr operator name name index expr name operator call name argument_list then block expr_stmt expr name operator operator operator operator name name index expr name operator call name argument_list operator operator if condition expr name operator name operator name operator name operator call name argument_list argument expr name argument expr name argument expr name argument expr name operator literal type number then block comment type line return expr literal type number expr_stmt expr name operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator literal type number operator name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block return expr call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr name operator literal type number decl type ref prev name init expr name decl type ref prev name init expr name operator literal type number decl type ref prev name init expr name operator literal type number if condition expr operator name name index expr name operator call name argument_list then block expr_stmt expr name operator operator operator operator name name index expr name operator call name argument_list operator operator if condition expr name operator name operator name operator name operator call name argument_list argument expr name argument expr name argument expr name argument expr name operator literal type number then block comment type line return expr literal type number expr_stmt expr name operator expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator literal type number operator name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block return expr call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr name operator literal type number decl type ref prev name init expr name if condition expr operator name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list expr_stmt expr name operator expr_stmt expr name operator operator operator operator name operator operator operator literal type number if condition expr name operator name operator name operator name operator call name argument_list argument expr name argument expr name argument expr name argument expr name operator literal type number then block comment type line return expr literal type number expr_stmt expr name operator expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator literal type number operator name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block return expr call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr name decl type ref prev name init expr name operator literal type number if condition expr operator name name index expr name operator call name argument_list then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list expr_stmt expr name operator expr_stmt expr name operator operator operator operator name operator operator operator literal type number if condition expr name operator name operator name operator name operator call name argument_list argument expr name argument expr name argument expr name argument expr name operator literal type number then block comment type line return expr literal type number expr_stmt expr name operator expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator literal type number operator name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list then block return expr call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number return expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name comment type line expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name comment type line expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name comment type line if condition expr call name argument_list operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string comment type line else block type pseudo expr_stmt expr call name argument_list argument expr literal type string comment type line return expr literal type number 
