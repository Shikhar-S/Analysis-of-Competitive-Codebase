include directive file define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr literal type number while condition expr operator call name argument_list argument expr name block type pseudo expr_stmt expr name operator operator name operator literal type char operator operator expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list expr_stmt expr name operator ternary condition expr name then expr operator name else expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name argument_list type generic argument expr name operator name name decl_stmt decl type name name name index expr literal type number index expr literal type number comment type line function type name name parameter_list block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr call name argument_list argument expr name for control init decl type name name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr operator literal type number operator expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr operator literal type number operator expr name name index expr name operator call name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number operator expr name name index expr literal type number index expr literal type number operator name operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number operator expr name name index expr literal type number index expr literal type number operator name operator literal type number while condition expr literal type number block if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator name if condition expr name operator literal type number operator name then block type pseudo break expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr name elseif if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number if condition expr name operator name name index expr name operator call name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr operator name if condition expr name operator literal type number operator name then block type pseudo break expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr name elseif if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name if condition expr name operator literal type number operator name then block type pseudo break expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr name elseif if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr name name index expr literal type number index expr literal type number if condition expr name operator name name index expr name operator call name argument_list then block expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr operator name if condition expr name operator literal type number operator name then block type pseudo break expr_stmt expr name operator name operator name operator literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator call name argument_list argument expr name name index expr literal type number index expr literal type number argument expr name comment type line comment type line if condition expr name operator name operator name operator name then block expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
