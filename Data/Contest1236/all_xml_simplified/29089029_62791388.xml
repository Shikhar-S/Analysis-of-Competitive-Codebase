include directive file using namespace name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name init expr call name name argument_list type generic argument expr name name argument_list type generic argument expr name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name name index expr name index expr name argument expr name name index expr name index expr name operator name name index expr name index expr name class name block private type default public decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name block expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list argument expr name argument expr operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator literal type number then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name block return expr operator name name index expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block return expr literal type boolean if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name return expr name operator name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator operator operator name operator name operator operator operator name operator name operator operator operator name operator function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block return expr literal type number elseif if condition expr name operator literal type number operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number return expr call name argument_list argument expr name argument expr name else block return expr call name argument_list argument expr call name argument_list argument expr name argument expr name operator literal type number argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator literal type number operator operator name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name return expr literal type number 
