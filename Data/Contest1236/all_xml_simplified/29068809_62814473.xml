include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name operator name name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block for control init decl type name name init expr name condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr operator name block expr_stmt expr name operator call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name if condition expr name operator call name name operator name argument_list then block type pseudo return expr literal type number expr_stmt expr operator name name index expr name expr_stmt expr operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr name return expr literal type number function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr operator name name index expr name expr_stmt expr operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number while condition expr name operator name operator name operator name block expr_stmt expr name operator name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator literal type number then block if condition expr name name index expr name then block decl_stmt decl type name name init expr name decl type ref prev name init expr name for control init condition expr name operator name incr expr operator name block expr_stmt expr name operator call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name if condition expr name operator call name name operator name argument_list then block type pseudo break decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator name operator literal type number operator expr_stmt expr operator name if condition expr name operator literal type number then block if condition expr name name index expr name then block decl_stmt decl type name name init expr name decl type ref prev name init expr name for control init condition expr name operator name incr expr operator name block expr_stmt expr name operator call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name if condition expr name operator call name name operator name argument_list then block type pseudo break decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator name operator literal type number operator expr_stmt expr operator name if condition expr name operator literal type number then block if condition expr name name index expr name then block decl_stmt decl type name name init expr name decl type ref prev name init expr name for control init condition expr name operator name incr expr operator name block expr_stmt expr name operator call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name if condition expr name operator call name name operator name argument_list then block type pseudo break decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator name operator literal type number operator expr_stmt expr operator name if condition expr name operator literal type number then block if condition expr name name index expr name then block decl_stmt decl type name name init expr name decl type ref prev name init expr name for control init condition expr name operator name incr expr operator name block expr_stmt expr name operator call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name if condition expr name operator call name name operator name argument_list then block type pseudo break decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr operator name then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name operator name operator literal type number expr_stmt expr name operator operator name operator name operator literal type number operator expr_stmt expr operator name comment type line if condition expr name operator name operator literal type number operator name operator name operator call name name operator name argument_list then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr call name argument_list argument expr literal type string 
