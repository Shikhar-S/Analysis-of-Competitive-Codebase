include directive file define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value ifdef directive name include directive file else directive define directive macro name parameter_list parameter type modifier value endif directive define directive macro name value using namespace name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name parameter decl type name name parameter decl type name name init expr literal type string block for control init decl type name name init expr name condition expr name operator name incr expr operator name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator operator name expr_stmt expr name operator name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name return expr name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block return expr operator ternary condition expr name operator name then expr name operator name operator literal type boolean operator literal type boolean operator function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block return expr operator ternary condition expr name operator name then expr name operator name operator literal type boolean operator literal type boolean operator decl_stmt decl template parameter_list parameter type name name parameter type name name parameter type name name type name name argument_list argument expr call name argument_list argument expr operator name index expr name argument expr specifier name operator name argument_list argument expr call name argument_list argument expr operator name operator operator name argument expr operator name operator operator operator name operator name operator argument expr name name argument_list argument expr macro name argument_list block expr call name name operator name argument_list argument expr literal type number expr call name name operator name argument_list argument expr literal type boolean name function type name name parameter_list block decl_stmt decl type name name while condition expr name operator name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block if condition expr name operator literal type number operator literal type number then block macro name argument_list argument argument block expr_stmt expr name name index expr name index expr name operator name expr_stmt expr operator name else block macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name index expr name operator name expr_stmt expr operator name macro name argument_list argument argument block expr_stmt expr call name argument_list argument expr name argument expr call name argument_list argument expr name name index expr name return expr literal type number 
