include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number expr_stmt expr name operator if condition expr name operator literal type char then block expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name if condition expr name name operator name operator name then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name if condition expr name operator name then block if condition expr name then block return expr call name argument_list argument expr name argument expr name argument expr literal type char argument expr literal type number else block type pseudo return expr literal type number else block return expr call name argument_list argument expr name operator name operator call name argument_list argument expr name argument expr name argument expr literal type char argument expr literal type number elseif if condition expr name operator literal type char then block expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name operator literal type number if condition expr name name operator name operator name then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name if condition expr name operator name then block if condition expr name then block return expr call name argument_list argument expr name argument expr name argument expr literal type char argument expr literal type number else block type pseudo return expr literal type number else block return expr call name argument_list argument expr name operator name operator call name argument_list argument expr name argument expr name argument expr literal type char argument expr literal type number elseif if condition expr name operator literal type char then block if condition expr name name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name if condition expr name operator name then block if condition expr name then block type pseudo return expr call name argument_list argument expr name argument expr name argument expr literal type char argument expr literal type number else block type pseudo return expr literal type number else block return expr call name argument_list argument expr name operator name operator call name argument_list argument expr name argument expr name argument expr literal type char argument expr literal type number elseif if condition expr name operator literal type char then block if condition expr name name operator name operator name then block type pseudo return expr literal type number expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name operator literal type number expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list expr_stmt expr name operator decl_stmt decl type name name init expr name name index expr name index expr name expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name if condition expr name operator name then block if condition expr name then block type pseudo return expr call name argument_list argument expr name argument expr name argument expr literal type char argument expr literal type number else block type pseudo return expr literal type number else block return expr call name argument_list argument expr name operator name operator call name argument_list argument expr name argument expr name argument expr literal type char argument expr literal type number return expr literal type number function type name name parameter_list block expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number operator name operator name operator name expr_stmt expr name operator expr_stmt expr name operator operator call name argument_list argument expr literal type number argument expr name operator expr_stmt expr name operator operator call name argument_list argument expr literal type number argument expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type char argument expr literal type number if condition expr name operator name then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string 
