include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl type ref prev name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr literal type number while condition expr literal type number block comment type line if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name index expr name operator name operator literal type number comment type line if condition expr name operator literal type number then block expr_stmt expr name operator literal type number else block if condition expr name operator literal type number then block type pseudo break expr_stmt expr name operator name expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr name index expr name operator name operator literal type number comment type line if condition expr name operator literal type number then block break expr_stmt expr name operator name expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name elseif if condition expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator literal type number decl_stmt decl type name name init expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number if condition expr name operator literal type number then block break expr_stmt expr name operator name expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name else block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name operator name name index expr name operator call name argument_list operator literal type number decl_stmt decl type name name init expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number if condition expr name operator literal type number then block break expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string comment type line return expr literal type number 
