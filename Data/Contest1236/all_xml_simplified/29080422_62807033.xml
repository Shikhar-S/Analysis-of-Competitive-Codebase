define directive macro name define directive macro name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block expr_stmt expr name operator literal type string operator name expr_stmt expr call name argument_list argument expr literal type number class name block private type default public function type operator type name name name parameter_list parameter decl type specifier name name parameter decl type specifier name name specifier block return expr name name operator name operator name name operator name operator operator name name operator name operator name name operator name operator name name operator name operator name name operator name operator function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr operator name operator name operator operator name operator name expr_stmt expr name operator name expr_stmt expr name operator while condition expr name operator literal type number block if condition expr name operator literal type number then block while condition expr name operator name operator name name index expr name operator name operator name block expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name else block expr_stmt expr call name argument_list elseif if condition expr name operator literal type number then block while condition expr name operator name operator name name index expr name operator name operator name block expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name else block expr_stmt expr call name argument_list expr_stmt expr name operator elseif if condition expr name operator literal type number then block while condition expr name operator name operator name name index expr name operator name operator name block expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name else block expr_stmt expr call name argument_list else block while condition expr name operator name operator name name index expr name operator name operator name block expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name if condition expr name operator name name index expr name operator call name argument_list operator operator name operator name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name else block expr_stmt expr call name argument_list expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator literal type number expr_stmt expr name operator literal type string operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name elif directive expr name comment type line comment type line endif directive comment type line comment type line expr_stmt expr call name argument_list return expr literal type number 
