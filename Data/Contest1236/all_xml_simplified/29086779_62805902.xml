comment type line include directive file include directive file include directive file include directive file include directive file comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr name else expr operator name comment type line function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type number comment type line decl_stmt decl type name name operator name name argument_list type generic argument expr name argument expr name name operator name name argument_list type generic argument expr name name decl type ref prev name comment type block comment type line function type name name operator name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block comment type line return expr block expr name expr operator name name index expr name operator macro name argument_list argument elseif if condition expr name operator literal type number then block comment type line return expr block expr operator name name index expr name operator call name argument_list argument expr name expr name elseif if condition expr name operator literal type number then block comment type line decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator return expr block expr name expr operator name else block comment type line decl_stmt decl type name name init expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator return expr block expr operator name expr name comment type line function type name name parameter_list parameter decl type name name parameter decl type name modifier modifier name block ifdef directive name comment type line expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive comment type line decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name name name init expr literal type number decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr name while condition expr literal type boolean block decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name operator name name argument_list type generic argument expr name argument expr name name init expr call name argument_list argument expr name argument expr name argument expr name if condition expr name operator literal type number then block comment type line expr_stmt expr name operator name operator expr name operator call name argument_list argument expr name argument expr name name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator elseif if condition expr name operator literal type number then block comment type line expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name operator literal type number operator expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator elseif if condition expr name operator literal type number then block comment type line expr_stmt expr name operator name operator expr name operator call name argument_list argument expr name argument expr name name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator else block comment type line expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name operator literal type number operator expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator comment type line comment type line comment type line expr_stmt expr name operator call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name if condition expr name operator name operator name operator name then block if condition expr operator name then block type pseudo expr_stmt expr name operator literal type boolean else block type pseudo break expr_stmt expr name operator name operator expr name operator name expr_stmt expr name operator expr_stmt expr name operator literal type number expr_stmt expr name operator literal type boolean comment type line if condition expr name operator name operator operator name name name operator name operator operator name name name operator name then block type pseudo expr_stmt expr call name argument_list else block type pseudo expr_stmt expr call name argument_list return expr literal type number 
