include directive file using namespace name typedef type name name name typedef type name name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name decl type ref prev name init expr literal type number while condition expr name operator call name argument_list operator expr name operator literal type number block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name do block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator condition expr name operator call name argument_list operator expr name operator literal type number expr_stmt expr name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index init expr block expr operator literal type number expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name index expr name operator name then block type pseudo return expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name index expr name operator name then block type pseudo return expr call name argument_list argument expr name argument expr name name index expr name index expr name operator name operator literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name index expr name operator name then block type pseudo return expr call name argument_list argument expr name argument expr name name index expr name index expr name operator name operator literal type number if condition expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name operator call name argument_list for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block type pseudo if condition expr name name index expr name index expr name operator name then block type pseudo return expr name operator call name argument_list argument expr name argument expr name name index expr name index expr name operator literal type number return expr operator literal type number function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number operator expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number operator expr name name index expr name operator call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number operator expr name operator name operator literal type number operator expr name operator literal type number operator expr name operator name operator literal type number while condition expr literal type number block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator literal type number operator expr name operator call name argument_list argument expr name argument expr name argument expr name comment type line if condition expr name operator literal type number then block type pseudo break expr_stmt expr name operator name operator name operator name name index expr name expr_stmt expr name operator name operator name operator name name index expr name expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr ternary condition expr name operator name operator literal type number operator name operator name then expr literal type string else expr literal type string comment type line comment type line comment type line comment type line comment type line return expr operator literal type number operator literal type number operator 
