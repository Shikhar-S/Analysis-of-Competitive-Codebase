<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29612975_64000900.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>void</name></type> <name>solve</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>nbJeux</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>nbJeux</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>pierre</name></decl> , <decl><type ref="prev"/><name>papier</name></decl> , <decl><type ref="prev"/><name>ciseaux</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>pierre</name> <operator>&gt;&gt;</operator> <name>papier</name> <operator>&gt;&gt;</operator> <name>ciseaux</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>string</name></type> <name>jeu</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>jeu</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>string</name></type> <name>moi</name> <init>= <expr><name>jeu</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>nbVictoires</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>iJeu</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>iJeu</name> <operator>&lt;</operator> <name>nbJeux</name></expr> ;</condition> <incr><expr><name>iJeu</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<if>if <condition>(<expr><name><name>jeu</name><index>[<expr><name>iJeu</name></expr>]</index></name> <operator>==</operator> <literal type="char">'R'</literal></expr>)</condition><then>
		<block>{
			<if>if <condition>(<expr><name>papier</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name><name>jeu</name><index>[<expr><name>iJeu</name></expr>]</index></name> <operator>=</operator> <literal type="char">'P'</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>papier</name><operator>--</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name>nbVictoires</name><operator>++</operator></expr>;</expr_stmt>
			}</block></then>
			<else>else
			<block>{
				<expr_stmt><expr><name><name>jeu</name><index>[<expr><name>iJeu</name></expr>]</index></name> <operator>=</operator> <literal type="char">'N'</literal></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then>
		<elseif>else <if>if <condition>(<expr><name><name>jeu</name><index>[<expr><name>iJeu</name></expr>]</index></name> <operator>==</operator> <literal type="char">'P'</literal></expr>)</condition><then>
		<block>{
			<if>if <condition>(<expr><name>ciseaux</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>ciseaux</name><operator>--</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name>nbVictoires</name><operator>++</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>jeu</name><index>[<expr><name>iJeu</name></expr>]</index></name> <operator>=</operator> <literal type="char">'S'</literal></expr>;</expr_stmt>
			}</block></then>
			<else>else
			<block>{
				<expr_stmt><expr><name><name>jeu</name><index>[<expr><name>iJeu</name></expr>]</index></name> <operator>=</operator> <literal type="char">'N'</literal></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then></if></elseif>
		<else>else
		<block>{
			<if>if <condition>(<expr><name>pierre</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>pierre</name><operator>--</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name>nbVictoires</name><operator>++</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>jeu</name><index>[<expr><name>iJeu</name></expr>]</index></name> <operator>=</operator> <literal type="char">'R'</literal></expr>;</expr_stmt>
			}</block></then>
			<else>else
			<block>{
				<expr_stmt><expr><name><name>jeu</name><index>[<expr><name>iJeu</name></expr>]</index></name> <operator>=</operator> <literal type="char">'N'</literal></expr>;</expr_stmt>
			}</block></else></if>
		}</block></else></if>
	}</block></for>
	<if>if <condition>(<expr><name>nbVictoires</name> <operator>&lt;</operator> <operator>(</operator><operator>(</operator><name>nbJeux</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <literal type="number">2</literal><operator>)</operator></expr>)</condition><then>
	<block>{
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"NO"</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
		<return>return;</return>
	}</block></then></if>
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator><literal type="string">"YES"</literal> <operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>nbJeux</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<if>if <condition>(<expr><name><name>jeu</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'N'</literal></expr>)</condition><then>
		<block>{
			<if>if <condition>(<expr><name>pierre</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"R"</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>pierre</name><operator>--</operator></expr>;</expr_stmt>
			}</block></then>
			<elseif>else <if>if <condition>(<expr><name>ciseaux</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"S"</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>ciseaux</name><operator>--</operator></expr>;</expr_stmt>
			}</block></then></if></elseif>
			<else>else
			<block>{
				<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"P"</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>papier</name><operator>--</operator></expr>;</expr_stmt>
			}</block></else></if>

		}</block></then>
		<else>else
		<block>{
			<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>jeu</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>T</name></expr>;</expr_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>T</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><call><name>solve</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></function></unit>
