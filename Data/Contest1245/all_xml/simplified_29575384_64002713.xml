comment type block include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value comment type line comment type line comment type line using namespace name using name init type name name using name init type name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type null decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator operator literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr literal type number if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number else block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator operator name operator literal type number operator operator literal type number if condition expr name name index expr name then block expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator name expr_stmt expr name operator macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator operator literal type number then block type pseudo macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name then block expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator name break if condition expr name operator name operator literal type number operator name operator literal type number then block expr_stmt expr name operator literal type string macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char elseif if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char else block type pseudo expr_stmt expr name operator literal type char expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
