pragma directive name name name name name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value function type name name parameter_list block decl_stmt decl type name name for control init expr name operator call name argument_list condition expr name name argument_list type generic argument expr literal type number operator name literal type number incr expr name operator call name argument_list block type pseudo empty_stmt decl_stmt decl type name name init expr name operator literal type number for control init expr name operator call name argument_list condition expr name operator literal type number operator name operator literal type number incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type number return expr name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list decl type ref prev name init expr call name argument_list decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name operator literal type string else block type pseudo expr_stmt expr name operator name operator literal type string elseif if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name operator literal type string else block type pseudo expr_stmt expr name operator name operator literal type string else block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator name operator literal type string else block type pseudo expr_stmt expr name operator name operator literal type string if condition expr name operator literal type number operator name then block expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator name name index expr name elseif if condition expr name then block expr_stmt expr name operator literal type string expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name operator literal type string expr_stmt expr name operator else block expr_stmt expr name operator literal type string expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string 
