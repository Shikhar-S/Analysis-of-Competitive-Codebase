include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name expr_stmt expr name name index expr literal type char operator name expr_stmt expr name name index expr literal type char operator name expr_stmt expr name name index expr literal type char operator name expr_stmt expr name name index expr literal type char operator literal type char expr_stmt expr name name index expr literal type char operator literal type char expr_stmt expr name name index expr literal type char operator literal type char decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name name index expr name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name name index expr name expr_stmt expr name name index expr name name index expr name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name name index expr literal type char then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name name index expr literal type char operator elseif if condition expr name name index expr literal type char then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name name index expr literal type char operator elseif if condition expr name name index expr literal type char then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name name index expr literal type char operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator if condition expr name operator operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr name operator literal type string operator name operator name else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
