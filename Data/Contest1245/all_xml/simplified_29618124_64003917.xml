include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name else directive define directive macro name value endif directive decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name for control init decl type name name range expr name block if condition expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char operator expr name operator operator expr name operator else block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char if condition expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char operator expr name operator operator expr name operator else block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char if condition expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char operator expr name operator operator expr name operator else block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char for control init decl type name modifier name range expr name block if condition expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name operator literal type char operator expr name operator else block type pseudo expr_stmt expr name operator literal type char operator expr name operator if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator name operator name else block expr_stmt expr name operator literal type string operator name 
