include directive file include directive file decl_stmt decl type name name operator name name argument_list type generic argument expr name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr name operator name operator name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type char operator expr name operator name name index expr name operator literal type char operator expr name operator name name index expr name operator literal type char if condition expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator name operator literal type number operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char for control init decl type name name init expr name condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr literal type number if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr call name argument_list argument expr literal type string operator expr name operator literal type number if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr call name argument_list argument expr literal type string operator expr name operator literal type number if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr call name argument_list argument expr literal type string operator expr name operator literal type number if condition expr operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list operator expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string 
