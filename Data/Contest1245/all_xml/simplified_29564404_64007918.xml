include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value comment type line define directive macro name value comment type line using namespace name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator ternary condition expr name operator literal type number then expr name else expr call name argument_list argument expr name argument expr name operator name operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name operator literal type number argument expr name argument expr name if condition expr name operator literal type number then block return expr call name argument_list argument expr name operator call name argument_list argument expr name operator name argument expr name argument expr name else block type pseudo return expr call name argument_list argument expr name operator name argument expr name function type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator operator name operator call name argument_list argument expr name argument expr name operator literal type number argument expr name operator operator name function type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator name operator name operator name function type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name function name parameter_list block expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator literal type number operator name return expr literal type number if condition expr name name index expr name operator literal type char then block decl_stmt decl type name name init expr literal type number while condition expr name operator name operator name name index expr name operator literal type char block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator elseif if condition expr name name index expr name operator literal type char then block decl_stmt decl type name name init expr literal type number while condition expr name operator name operator name name index expr name operator literal type char block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name expr_stmt expr name operator name operator call name argument_list argument expr name name index expr name argument expr name name index expr name argument expr name operator name expr_stmt expr name operator name operator name 
