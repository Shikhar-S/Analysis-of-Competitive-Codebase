<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29618114_64006493.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;utility&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<using>using <name>ll</name> <init>= <type><name>long</name> <name>long</name></type></init>;</using>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>MN</name> <init>= <expr><literal type="number">100005</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>mod</name> <init>= <expr><literal type="number">1000000007</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ll</name></type> <name><name>fib</name><index>[<expr><name>MN</name></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name>fib</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><name><name>fib</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>MN</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name><name>fib</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>fib</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>fib</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt></block></for>
	<decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name>s</name><operator>.</operator><name>push_back</name></name><argument_list>(<argument><expr><literal type="char">'o'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>bool</name></type> <name>imp</name> <init>= <expr><operator>(</operator><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>==</operator><literal type="char">'w'</literal><operator>||</operator><name><name>s</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>==</operator><literal type="char">'m'</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>res</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>hm</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><call><name><name>s</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block>{
		<expr_stmt><expr><name>imp</name><operator>|=</operator><operator>(</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'w'</literal><operator>||</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'m'</literal><operator>)</operator></expr>;</expr_stmt>
		<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>hm</name><operator>++</operator></expr>;</expr_stmt></block></then>
		<else>else <block>{
			<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="char">'u'</literal><operator>||</operator><name><name>s</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>==</operator><literal type="char">'n'</literal></expr>)</condition><then><block>{
				<expr_stmt><expr><name>res</name><operator>=</operator><operator>(</operator><name>res</name><operator>*</operator><name><name>fib</name><index>[<expr><name>hm</name></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name>hm</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
	<if>if<condition>(<expr><name>imp</name></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>res</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt></block></then></if>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>res</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
