include directive file using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name range expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator name else block expr_stmt expr name operator name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator name else block expr_stmt expr name operator name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name operator name else block expr_stmt expr name operator name if condition expr literal type number operator name operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string for control init decl type name name range expr name block if condition expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator literal type number then block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator comment type line format doxygen elseif if condition expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator literal type number then block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator comment type line format doxygen elseif if condition expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator literal type number then block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator literal type char return expr literal type number 
