pragma directive name name name literal name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr name operator name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list comment type block block decl_stmt decl type name name expr_stmt expr name name operator name operator name while condition expr name operator operator literal type number block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name name operator name operator name operator name operator name operator name decl_stmt decl type name name operator name name expr_stmt expr name name operator name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name range expr name block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator comment type line decl_stmt decl type name name init expr call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name argument expr name decl_stmt decl type name name operator name name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name operator literal type number operator name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name operator literal type number operator name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name operator literal type number operator name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator else block type pseudo expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator if condition expr name operator operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr name name operator name operator literal type string else block type pseudo expr_stmt expr name name operator name operator literal type string operator name operator literal type char return expr literal type number 
