pragma directive name name name literal name include directive file using namespace name struct name block public type default function specifier type name name parameter_list parameter decl type name name block comment type line expr_stmt expr name operator literal type number expr_stmt expr name operator operator name operator operator name operator literal type number operator operator operator literal type number expr_stmt expr name operator operator name operator operator name operator literal type number operator operator operator literal type number return expr name operator operator name operator literal type number operator function type operator type name name name parameter_list parameter decl type name name specifier block decl_stmt decl specifier type specifier name name init expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list return expr call name argument_list argument expr name operator name define directive macro name value define directive macro name parameter_list parameter type modifier value decl_stmt decl template parameter_list parameter type name name parameter type name name type name name argument_list argument expr specifier call name argument_list argument expr operator name index expr name argument_list argument expr name name name typename name name name argument_list argument expr specifier name operator name argument_list argument expr call name name operator name argument_list name name argument_list argument expr specifier name name argument expr name name operator literal type number argument expr name name operator literal type number argument_list argument expr literal type char operator operator ternary condition expr operator name operator call name name operator name argument_list operator then expr call name name operator name argument_list argument expr name argument expr name operator name operator literal type number else expr literal type string operator operator literal type char name name argument_list argument expr specifier name operator name argument_list argument expr call name argument_list argument expr operator name operator name name name argument_list argument expr specifier name name argument_list argument expr operator ternary condition expr name then expr literal type string else expr literal type string operator name name argument_list argument expr specifier name name argument_list argument expr call name argument_list argument expr block expr name name name name name name argument_list argument expr specifier name name argument_list type generic argument expr name operator name argument expr name name operator literal type number argument expr name name operator literal type number argument_list argument expr name name operator literal type string argument expr operator name name operator call name argument_list argument expr name argument expr call name argument_list argument expr name operator name operator call name argument_list argument expr name argument expr call name argument_list argument expr name operator literal type number name operator name operator name operator block expr name operator name name index expr name operator literal type char return expr literal type char operator name operator literal type char expr_stmt expr operator name typename name operator expr name typename operator name operator name macro name argument_list argument argument literal type number argument literal type number argument decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator decl_stmt decl type name name init expr literal type string operator call name argument_list argument expr name name operator name operator literal type string operator call name argument_list argument expr name name operator name operator literal type string expr_stmt expr name operator return expr name decl_stmt decl template parameter_list parameter type name name parameter type name modifier name type name name argument_list argument expr specifier call name argument_list argument expr operator name argument expr name name argument expr name name argument expr name operator name argument_list argument expr name name operator name name name argument_list type generic argument expr name operator name argument expr name call name argument_list argument expr name argument expr literal type char argument expr name name operator literal type string argument expr name name operator literal type boolean argument expr operator name operator literal type number operator name operator name argument expr name operator name operator literal type string argument expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name argument expr name name operator name argument expr call name argument_list argument expr name argument expr operator name operator name operator operator operator name operator call name argument_list argument expr name operator argument expr operator name name operator name name operator name name operator call name argument_list argument expr name operator block if condition expr operator name then expr_stmt expr block expr name operator literal type string name operator literal type boolean name operator argument expr operator name operator name operator block if condition expr name operator literal type number then expr_stmt expr block expr name operator name name operator name argument_list argument expr name operator literal type number name name argument_list argument expr operator name argument expr name operator expr_stmt expr name operator expr_stmt expr operator literal type string if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name macro name argument_list block empty_stmt function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator call name argument_list argument expr name operator literal type string expr_stmt expr call name argument_list argument expr name operator define directive macro name parameter_list parameter type modifier value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number struct name block public type default comment type block function type operator type name name name parameter_list parameter decl type name name specifier block expr_stmt expr name operator operator name operator operator name operator literal type number operator operator operator call name argument_list argument expr literal type number expr_stmt expr name operator operator name operator operator name operator literal type number operator operator operator call name argument_list argument expr literal type number expr_stmt expr name operator name operator operator name operator literal type number operator return expr name function type name name name parameter_list parameter decl type name name name parameter decl type name name name block return expr ternary condition expr literal type number operator name then expr name operator call name argument_list argument expr name operator name argument expr name operator name operator name else expr literal type number comment type line comment type line function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr call name argument_list argument expr name operator name argument expr name argument expr name argument expr name expr_stmt expr name operator name operator operator name operator name operator operator name expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator operator name operator name operator operator operator name operator name operator operator operator name operator name operator decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name function type name name parameter_list block comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name operator name operator name operator name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name range expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name operator name if condition expr name operator literal type number operator name then block expr_stmt expr name operator literal type string for control init decl type name name range expr name block decl_stmt decl type name name init expr literal type boolean if condition expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name operator literal type char expr_stmt expr name operator literal type boolean elseif if condition expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name operator literal type char expr_stmt expr name operator literal type boolean else block if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name operator literal type char expr_stmt expr name operator literal type boolean if condition expr operator name then block if condition expr name operator name then block expr_stmt expr name operator literal type char expr_stmt expr operator name elseif if condition expr name operator name then block expr_stmt expr name operator literal type char expr_stmt expr operator name else block expr_stmt expr name operator literal type char expr_stmt expr operator name expr_stmt expr name operator literal type char else block expr_stmt expr name operator literal type string return expr literal type number 
