<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29578795_64004294.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>


<function><type><name>long</name> <name>long</name></type> <name>gcd</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>b</name></decl></parameter>)</parameter_list><block>{
    <if>if<condition>(<expr><name>b</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then> <block type="pseudo"><return>return <expr><name>a</name></expr>;</return></block></then></if>
    <return>return <expr><call><name>gcd</name><argument_list>(<argument><expr><name>b</name></expr></argument>,<argument><expr><name>a</name><operator>%</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name>signed</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>fixed</name> <operator>&lt;&lt;</operator> <call><name>setprecision</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    
    <decl_stmt><decl><type><name>int</name></type> <name>q</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>q</name></expr>;</expr_stmt>
    <while>while<condition>(<expr><name>q</name><operator>--</operator></expr>)</condition><block>{
        <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name><operator>&gt;&gt;</operator><name>c</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>string</name></type> <name>ans</name><init>=<expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>win</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name><name>cnt</name><index>[<expr><name>n</name></expr>]</index></name><init>=<expr><block>{}</block></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>r</name><init>=<expr><literal type="number">1</literal></expr></init></decl>,<decl><type ref="prev"/><name>p</name><init>=<expr><literal type="number">2</literal></expr></init></decl>,<decl><type ref="prev"/><name>ss</name><init>=<expr><literal type="number">3</literal></expr></init></decl>;</decl_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
            <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'R'</literal> <operator>&amp;&amp;</operator> <name>b</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>b</name><operator>--</operator></expr><operator>,</operator><expr><name><name>cnt</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>p</name></expr><operator>,</operator><expr><name>win</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
            <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'P'</literal> <operator>&amp;&amp;</operator> <name>c</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>c</name><operator>--</operator></expr><operator>,</operator><expr><name><name>cnt</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>ss</name></expr><operator>,</operator><expr><name>win</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
            <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'S'</literal> <operator>&amp;&amp;</operator> <name>a</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>a</name><operator>--</operator></expr><operator>,</operator><expr><name><name>cnt</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>r</name></expr><operator>,</operator><expr><name>win</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
        }</block></for>
        <if>if<condition>(<expr><name>win</name><operator>&gt;=</operator><operator>(</operator><name>n</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"YES\n"</literal></expr>;</expr_stmt>
            <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
                <if>if<condition>(<expr><name><name>cnt</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name>p</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>+=</operator><literal type="char">'P'</literal></expr>;</expr_stmt></block></then>
                <elseif>else <if>if<condition>(<expr><name><name>cnt</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name>r</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>+=</operator><literal type="char">'R'</literal></expr>;</expr_stmt></block></then></if></elseif>
                <elseif>else <if>if<condition>(<expr><name><name>cnt</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><name>ss</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>+=</operator><literal type="char">'S'</literal></expr>;</expr_stmt></block></then></if></elseif>
                <else>else<block>{
                    <if>if<condition>(<expr><name>a</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>+=</operator> <literal type="char">'R'</literal></expr><operator>,</operator><expr><name>a</name><operator>--</operator></expr>;</expr_stmt></block></then>
                    <elseif>else <if>if<condition>(<expr><name>b</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>+=</operator> <literal type="char">'P'</literal></expr><operator>,</operator><expr><name>b</name><operator>--</operator></expr>;</expr_stmt></block></then></if></elseif>
                    <elseif>else <if>if<condition>(<expr><name>c</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>ans</name> <operator>+=</operator> <literal type="char">'S'</literal></expr><operator>,</operator><expr><name>c</name><operator>--</operator></expr>;</expr_stmt></block></then></if></elseif></if>
                }</block></else></if>
            }</block></for>
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name> <operator>&lt;&lt;</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>
        }</block></then>
        <else>else <block type="pseudo"><expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"NO\n"</literal></expr>;</expr_stmt></block></else></if>

    }</block></while>
}</block></function></unit>
