include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr literal type number decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name init expr literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number function specifier type name name parameter_list block decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name expr_stmt expr name name index expr literal type number operator literal type number while condition expr call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block if condition expr operator name name index expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name name index expr name return expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name name index expr name condition expr name operator name incr expr name operator name name index expr name block if condition expr name name index expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr call name argument_list argument expr name name index expr name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number operator name expr_stmt expr name operator name expr_stmt expr name operator name if condition expr operator name then block type pseudo expr_stmt expr name name index expr name operator operator literal type number return expr name function type name name parameter_list block decl_stmt decl type name name init expr literal type number while condition expr call name argument_list block type pseudo expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number return expr name function type name name parameter_list block expr_stmt expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator literal type number operator name return expr literal type number if condition expr name name index expr name operator literal type char then block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name while condition expr name name index expr name operator literal type char block type pseudo expr_stmt expr name operator operator expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name name index expr name operator name operator name operator operator name expr_stmt expr name operator name operator literal type number elseif if condition expr name name index expr name operator literal type char then block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name while condition expr name name index expr name operator literal type char block type pseudo expr_stmt expr name operator operator expr name operator if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name name index expr name operator name operator name operator operator name expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name operator name return expr literal type number 
