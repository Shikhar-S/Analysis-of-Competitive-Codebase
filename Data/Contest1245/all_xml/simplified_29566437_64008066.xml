include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name for control init condition expr name incr expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name if condition expr name operator literal type char then block expr_stmt expr name name index expr name operator name expr_stmt expr name operator elseif if condition expr name operator literal type char then block expr_stmt expr name name index expr name operator name expr_stmt expr name operator else block expr_stmt expr name name index expr name operator name expr_stmt expr name operator if condition expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char else block expr_stmt expr name name index expr name operator literal type char elseif if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name operator literal type char elseif if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name operator literal type char else block expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator else block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type string 
