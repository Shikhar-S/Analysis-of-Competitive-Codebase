include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value function type name name parameter_list parameter decl type name name modifier name parameter decl type modifier block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name modifier name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator macro name argument_list argument argument while condition expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr name operator macro name argument_list argument argument expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name modifier name parameter decl type modifier block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name modifier name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator while condition expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator expr_stmt expr call name argument_list argument expr name define directive macro name parameter_list parameter type modifier value typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name parameter decl type name modifier name block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr name argument expr name expr_stmt expr name operator name operator name operator name return function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name name index expr name operator name name index expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name name index expr name return expr name operator name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number while condition expr name operator literal type number block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator name argument expr name expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator operator name operator literal type number operator operator name function type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name init expr literal type number while condition expr call name argument_list argument expr literal type string argument expr operator name operator operator literal type number block expr_stmt expr name name index expr operator name operator name if condition expr name operator literal type char operator name operator literal type char then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name name index expr name operator literal type number operator literal type char macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator literal type char operator operator name then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator operator name then block type pseudo expr_stmt expr name operator else block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name return expr literal type number 
