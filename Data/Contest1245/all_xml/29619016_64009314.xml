<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29619016_64009314.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mod</name></cpp:macro> <cpp:value>1000000007</cpp:value></cpp:define>


<function><type><name>ll</name></type> <name>ispal</name><parameter_list>(<parameter><decl><type><name>string</name></type> <name>s</name></decl></parameter>)</parameter_list><block>{
    <decl_stmt><decl><type><name>ll</name></type> <name>n</name><init>=<expr><call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if>if<condition>(<expr><name>n</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then>
       <block type="pseudo"><return>return <expr><literal type="number">2</literal></expr>;</return></block></then></if>
    <decl_stmt><decl><type><name>int</name></type> <name>e</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>o</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>   
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'0'</literal></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>o</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
    }</block></for>
   <comment type="line">// cout&lt;&lt;"o= "&lt;&lt;o&lt;&lt;endl;</comment>
    <if>if<condition>(<expr><name>o</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then>
       <block type="pseudo"><return>return <expr><literal type="number">0</literal></expr>;</return></block></then></if>
    
    <return>return <expr><literal type="number">1</literal></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>ll</name></type> <name>t</name></decl>,<decl><type ref="prev"/><name>n</name></decl>,<decl><type ref="prev"/><name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>
    <comment type="line">//t=1;</comment>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>t</name></expr>;</expr_stmt>
	
	<while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition><block>{
	    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name><operator>&gt;&gt;</operator><name>a</name><operator>&gt;&gt;</operator><name>b</name><operator>&gt;&gt;</operator><name>c</name></expr>;</expr_stmt>
	    <decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt>
	    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name></expr>;</expr_stmt>
	    <decl_stmt><decl><type><name>ll</name></type> <name>x</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>y</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>z</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	        <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'R'</literal></expr>)</condition><then><block>{
	            <expr_stmt><expr><name>x</name><operator>++</operator></expr>;</expr_stmt>
	        }</block></then>
	        <elseif>else <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'P'</literal></expr>)</condition><then><block>{
	            <expr_stmt><expr><name>y</name><operator>++</operator></expr>;</expr_stmt>
	        }</block></then></if></elseif>
	        <else>else<block>{
	            <expr_stmt><expr><name>z</name><operator>++</operator></expr>;</expr_stmt>
	        }</block></else></if>
	    }</block></for>
	    
	    <decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	    <if>if<condition>(<expr><name>b</name><operator>&gt;=</operator><name>x</name></expr>)</condition><then><block>{
	        <expr_stmt><expr><name>ans</name><operator>+=</operator><name>x</name></expr>;</expr_stmt>
	    }</block></then>
	    <else>else<block>{
	        <expr_stmt><expr><name>ans</name><operator>+=</operator><name>b</name></expr>;</expr_stmt>
	    }</block></else></if>
	    
	    <if>if<condition>(<expr><name>c</name><operator>&gt;=</operator><name>y</name></expr>)</condition><then><block>{
	        <expr_stmt><expr><name>ans</name><operator>+=</operator><name>y</name></expr>;</expr_stmt>
	    }</block></then>
	    <else>else<block>{
	        <expr_stmt><expr><name>ans</name><operator>+=</operator><name>c</name></expr>;</expr_stmt>
	    }</block></else></if>
	    
	    
	    <if>if<condition>(<expr><name>a</name><operator>&gt;=</operator><name>z</name></expr>)</condition><then><block>{
	        <expr_stmt><expr><name>ans</name><operator>+=</operator><name>z</name></expr>;</expr_stmt>
	    }</block></then>
	    <else>else<block>{
	        <expr_stmt><expr><name>ans</name><operator>+=</operator><name>a</name></expr>;</expr_stmt>
	    }</block></else></if>
	    <decl_stmt><decl><type><name>char</name></type> <name><name>arr</name><index>[<expr><literal type="number">1000</literal></expr>]</index></name><init>=<expr><block>{}</block></expr></init></decl>;</decl_stmt>
	    <if>if<condition>(<expr><name>ans</name><operator>&gt;=</operator><operator>(</operator><call><name>ceil</name><argument_list>(<argument><expr><name>n</name><operator>/</operator><literal type="number">2.0</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><then><block>{
	        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	        <expr_stmt><expr><name>x</name><operator>=</operator><name>a</name></expr>;</expr_stmt>
	        <expr_stmt><expr><name>y</name><operator>=</operator><name>b</name></expr>;</expr_stmt>
	        <expr_stmt><expr><name>z</name><operator>=</operator><name>c</name></expr>;</expr_stmt>
	        <comment type="line">// x=r, y=p , z=s</comment>
	        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	          <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'R'</literal> <operator>&amp;&amp;</operator> <name>y</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
	            <expr_stmt><expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'P'</literal></expr>;</expr_stmt>
	            <expr_stmt><expr><name>y</name><operator>--</operator></expr>;</expr_stmt>
	          }</block></then>
	          <elseif>else <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'P'</literal> <operator>&amp;&amp;</operator> <name>z</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
	            <expr_stmt><expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'S'</literal></expr>;</expr_stmt>
	            <expr_stmt><expr><name>z</name><operator>--</operator></expr>;</expr_stmt>
	          }</block></then></if></elseif>
	          <elseif>else <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'S'</literal> <operator>&amp;&amp;</operator> <name>x</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
	            <expr_stmt><expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'R'</literal></expr>;</expr_stmt>
	            <expr_stmt><expr><name>x</name><operator>--</operator></expr>;</expr_stmt>
	          }</block></then></if></elseif></if>   
	        }</block></for>
	        
	        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	            <if>if<condition>(<expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'\0'</literal></expr>)</condition><then><block>{
	                <if>if<condition>(<expr><name>x</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
	                    <expr_stmt><expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'R'</literal></expr>;</expr_stmt>
	                    <expr_stmt><expr><name>x</name><operator>--</operator></expr>;</expr_stmt>
	                }</block></then>
	                <elseif>else <if>if<condition>(<expr><name>y</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
	                    <expr_stmt><expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'P'</literal></expr>;</expr_stmt>
	                    <expr_stmt><expr><name>y</name><operator>--</operator></expr>;</expr_stmt>
	                }</block></then></if></elseif>
	                <elseif>else <if>if<condition>(<expr><name>z</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
	                    <expr_stmt><expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'S'</literal></expr>;</expr_stmt>
	                    <expr_stmt><expr><name>z</name><operator>--</operator></expr>;</expr_stmt>
	                }</block></then></if></elseif></if>
	            }</block></then></if>
	        }</block></for>
	        
	        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	            <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	        }</block></for>
	        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	      }</block></then>
	    <else>else<block>{
	        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	    }</block></else></if>
	    
	    
	}</block></while>
	    
	
}</block></function></unit>
