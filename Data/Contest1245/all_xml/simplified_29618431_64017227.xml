include directive file using namespace name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type char decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr operator name operator literal type number operator operator literal type number if condition expr name operator name then block expr_stmt expr name operator literal type string operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char decl_stmt decl type name name init expr name operator name decl type ref prev name init expr name operator name decl type ref prev name init expr name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator continue if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator continue if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator continue for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type string operator name return expr literal type number 
