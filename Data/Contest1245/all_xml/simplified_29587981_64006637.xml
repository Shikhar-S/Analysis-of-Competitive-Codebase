include directive file using namespace name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator expr_stmt expr name name index expr name operator operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator operator name operator literal type number operator operator operator name operator literal type number operator literal type number operator then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type number if condition expr name name index expr name operator literal type char then block type pseudo if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type number if condition expr name name index expr name operator literal type char then block type pseudo if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator operator literal type number then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr operator name elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr operator name elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator name else block type pseudo expr_stmt expr call name argument_list argument expr literal type string 
