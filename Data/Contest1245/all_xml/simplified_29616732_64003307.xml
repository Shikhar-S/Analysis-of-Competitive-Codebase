include directive file using namespace name using name init type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name operator name return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number while condition expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator literal type number operator name then block expr_stmt expr call name argument_list argument expr literal type string for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char continue if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char continue if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char continue expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char elseif if condition expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char else block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
