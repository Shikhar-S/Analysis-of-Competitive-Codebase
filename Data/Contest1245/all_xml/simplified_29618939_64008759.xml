comment type block include directive file include directive file include directive file pragma directive name name name literal name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value using namespace name using namespace name typedef type name name name typedef type name name name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr literal type number operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name else block type pseudo expr_stmt expr call name argument_list argument expr literal type string function type name name parameter_list parameter decl type name block comment type line comment type line decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list return expr literal type number 
