include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name expr_stmt expr name operator if condition expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char operator expr name operator elseif if condition expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char operator expr name operator elseif if condition expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char operator expr name operator else block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char operator expr name operator for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo continue if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator else block type pseudo expr_stmt expr name name index expr name operator literal type char if condition expr name operator name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type string operator name operator literal type char else block type pseudo expr_stmt expr name operator literal type string function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name argument_list return expr literal type number 
