include directive file using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char decl_stmt decl type name name init expr name operator name operator name if condition expr name operator literal type number operator name then block expr_stmt expr name operator literal type string operator name decl_stmt decl type name name init expr literal type string decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type char expr_stmt expr operator name else block expr_stmt expr name operator name name index expr name operator if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type char expr_stmt expr operator name else block expr_stmt expr name operator name name index expr name operator if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type char expr_stmt expr operator name else block expr_stmt expr name operator name name index expr name operator expr_stmt expr name operator name operator name else block expr_stmt expr name operator literal type string operator name return expr literal type number 
