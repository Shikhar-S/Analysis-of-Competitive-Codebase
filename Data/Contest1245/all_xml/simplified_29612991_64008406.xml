include directive file using namespace name define directive macro name value function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr name operator name operator literal type number return expr name operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr literal type char decl_stmt decl type name name init expr name name index expr name if condition expr name operator literal type char operator name operator name then block type pseudo expr_stmt expr operator name operator expr name name index expr name operator literal type char if condition expr name operator literal type char operator name operator name then block type pseudo expr_stmt expr operator name operator expr name name index expr name operator literal type char if condition expr name operator literal type char operator name operator name then block type pseudo expr_stmt expr operator name operator expr name name index expr name operator literal type char if condition expr name operator name operator name operator call name argument_list argument expr name argument expr literal type number then block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr name name index expr name if condition expr name operator literal type char then block if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name expr_stmt expr name operator name operator literal type string else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
