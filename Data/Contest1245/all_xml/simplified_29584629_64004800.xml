include directive file using namespace name pragma directive name name name literal name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name for control init condition expr name incr expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name range expr name block if condition expr name operator literal type char then block expr_stmt expr name operator if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator if condition expr name operator operator operator name operator literal type number operator operator literal type number operator then block expr_stmt expr name operator literal type string decl_stmt decl type name name for control init decl type name name range expr name block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator name operator name else block expr_stmt expr name operator literal type string 
