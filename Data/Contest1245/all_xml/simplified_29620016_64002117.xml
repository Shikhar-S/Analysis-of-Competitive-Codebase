include directive file define directive macro name value define directive macro name value using namespace name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name name index expr name operator literal type number function_decl type name name parameter_list function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name operator name operator name operator name expr_stmt expr call name argument_list function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator name operator name then block type pseudo expr_stmt expr name operator literal type string else block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char elseif if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char elseif if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo if condition expr operator name name index expr name then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char elseif if condition expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char else block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator literal type string operator name operator name operator name 
