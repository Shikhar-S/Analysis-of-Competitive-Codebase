include directive file using namespace name define directive macro name value define directive macro name value function specifier type name name parameter_list block decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr call name argument_list while condition expr operator call name argument_list argument expr name block type pseudo expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator decl_stmt decl type name name name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type char decl_stmt decl type name name init expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator operator operator name operator literal type number operator operator literal type number operator then block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char comment type line comment type line comment type line comment type line comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator continue if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator continue if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string return expr literal type number comment type block 
