<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29605934_64004042.cpp"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_CRT_SECURE_NO_WARNINGS</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;set&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>q</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%i"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while>while <condition>(<expr><name>q</name><operator>--</operator></expr>)</condition>
    <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%i"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%i%i%i"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>a</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>b</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><specifier>static</specifier> <type><name>char</name></type> <name><name>t</name><index>[<expr><literal type="number">111</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>a2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>b2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>c2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <switch>switch <condition>(<expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition>
            <block>{
            <case>case <expr><literal type="char">'R'</literal></expr>:</case>
                <expr_stmt><expr><name>a2</name><operator>++</operator></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><literal type="char">'P'</literal></expr>:</case>
                <expr_stmt><expr><name>b2</name><operator>++</operator></expr>;</expr_stmt>
                <break>break;</break>
            <case>case <expr><literal type="char">'S'</literal></expr>:</case>
                <expr_stmt><expr><name>c2</name><operator>++</operator></expr>;</expr_stmt>
                <break>break;</break>
            }</block></switch>
        }</block></for>
        <decl_stmt><decl><type><name>int</name></type> <name>nice</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name><name>ans</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>a2</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block>{
            <if>if <condition>(<expr><name>i</name> <operator>&gt;</operator> <name>b</name></expr>)</condition><then>
                <block type="pseudo"><continue>continue;</continue></block></then></if>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;=</operator> <name>b2</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control>
            <block>{
                <if>if <condition>(<expr><name>j</name> <operator>&gt;</operator> <name>c</name></expr>)</condition><then>
                    <block type="pseudo"><continue>continue;</continue></block></then></if>
                <for>for <control>(<init><decl><type><name>int</name></type> <name>k</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>k</name> <operator>&lt;=</operator> <name>c2</name></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control>
                <block>{
                    <if>if <condition>(<expr><name>k</name> <operator>&gt;</operator> <name>a</name></expr>)</condition><then>
                        <block type="pseudo"><continue>continue;</continue></block></then></if>
                    <if>if <condition>(<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <name>k</name> <operator>&gt;=</operator> <operator>(</operator><name>n</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr>)</condition><then>
                    <block>{
                        <expr_stmt><expr><name>nice</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name>ans</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name>ans</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>j</name></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name>ans</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>k</name></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></for>
            }</block></for>
        }</block></for>
        <if>if <condition>(<expr><name>nice</name></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"YES\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>a</name> <operator>-=</operator> <name><name>ans</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>b</name> <operator>-=</operator> <name><name>ans</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>c</name> <operator>-=</operator> <name><name>ans</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>a2</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>b2</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
            <expr_stmt><expr><name>c2</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
            <block>{
                <switch>switch <condition>(<expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition>
                <block>{
                <case>case <expr><literal type="char">'R'</literal></expr>:</case>
                    <if>if <condition>(<expr><name>a2</name> <operator>&lt;</operator> <name><name>ans</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><then>
                    <block>{
                        <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'P'</literal></expr>;</expr_stmt>
                        <expr_stmt><expr><name>a2</name><operator>++</operator></expr>;</expr_stmt>
                    }</block></then>
                    <else>else
                    <block>{
                        <if>if <condition>(<expr><name>a</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
                        <block>{
                            <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'R'</literal></expr>;</expr_stmt>
                            <expr_stmt><expr><name>a</name><operator>--</operator></expr>;</expr_stmt>
                        }</block></then>
                        <elseif>else
                            <if>if <condition>(<expr><name>b</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
                            <block>{
                                <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'P'</literal></expr>;</expr_stmt>
                                <expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
                            }</block></then></if></elseif>
                            <elseif>else
                                <if>if <condition>(<expr><name>c</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
                                <block>{
                                    <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'S'</literal></expr>;</expr_stmt>
                                    <expr_stmt><expr><name>c</name><operator>--</operator></expr>;</expr_stmt>
                                }</block></then></if></elseif></if>
                    }</block></else></if>
                    <break>break;</break>
                <case>case <expr><literal type="char">'P'</literal></expr>:</case>
                    <if>if <condition>(<expr><name>b2</name> <operator>&lt;</operator> <name><name>ans</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then>
                    <block>{
                        <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'S'</literal></expr>;</expr_stmt>
                        <expr_stmt><expr><name>b2</name><operator>++</operator></expr>;</expr_stmt>
                    }</block></then>
                    <else>else
                    <block>{
                        <if>if <condition>(<expr><name>a</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
                        <block>{
                            <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'R'</literal></expr>;</expr_stmt>
                            <expr_stmt><expr><name>a</name><operator>--</operator></expr>;</expr_stmt>
                        }</block></then>
                        <elseif>else
                            <if>if <condition>(<expr><name>b</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
                            <block>{
                                <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'P'</literal></expr>;</expr_stmt>
                                <expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
                            }</block></then></if></elseif>
                            <elseif>else
                                <if>if <condition>(<expr><name>c</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
                                <block>{
                                    <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'S'</literal></expr>;</expr_stmt>
                                    <expr_stmt><expr><name>c</name><operator>--</operator></expr>;</expr_stmt>
                                }</block></then></if></elseif></if>
                    }</block></else></if>
                    <break>break;</break>
                <case>case <expr><literal type="char">'S'</literal></expr>:</case>
                    <if>if <condition>(<expr><name>c2</name> <operator>&lt;</operator> <name><name>ans</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>)</condition><then>
                    <block>{
                        <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'R'</literal></expr>;</expr_stmt>
                        <expr_stmt><expr><name>c2</name><operator>++</operator></expr>;</expr_stmt>
                    }</block></then>
                    <else>else
                    <block>{
                        <if>if <condition>(<expr><name>a</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
                        <block>{
                            <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'R'</literal></expr>;</expr_stmt>
                            <expr_stmt><expr><name>a</name><operator>--</operator></expr>;</expr_stmt>
                        }</block></then>
                        <elseif>else
                            <if>if <condition>(<expr><name>b</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
                            <block>{
                                <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'P'</literal></expr>;</expr_stmt>
                                <expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
                            }</block></then></if></elseif>
                            <elseif>else
                                <if>if <condition>(<expr><name>c</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then>
                                <block>{
                                    <expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'S'</literal></expr>;</expr_stmt>
                                    <expr_stmt><expr><name>c</name><operator>--</operator></expr>;</expr_stmt>
                                }</block></then></if></elseif></if>
                    }</block></else></if>
                    <break>break;</break>
                }</block></switch>
            }</block></for>
            <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%s\n"</literal></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then>
        <else>else
        <block>{
            <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"NO\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
    }</block></while>
}</block></function>
</unit>
