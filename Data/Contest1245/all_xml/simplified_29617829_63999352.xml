include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name function type name name parameter_list block comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name expr_stmt expr name operator name operator name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name operator literal type number operator name then block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
