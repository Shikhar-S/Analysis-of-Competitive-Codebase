include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name value pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name define directive macro name value using name init type name name argument_list type generic argument expr name argument expr name decl_stmt decl type name name name index expr literal type number init expr literal type string decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char operator operator name operator literal type number operator then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator operator name operator literal type number operator then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator operator name operator literal type number operator then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator literal type number operator name then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string return for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator operator literal type number then block if condition expr name then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator literal type char function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list 
