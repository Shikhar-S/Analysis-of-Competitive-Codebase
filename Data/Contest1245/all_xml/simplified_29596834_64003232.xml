include directive file typedef type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name value function type name name parameter_list block decl_stmt decl type name name argument_list argument expr literal type number decl type ref prev name argument_list argument expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type name name decl_stmt decl type name name operator name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list while condition expr name operator block decl_stmt decl type name name init expr call name argument_list decl type ref prev name argument_list argument expr call name argument_list decl type ref prev name argument_list argument expr call name argument_list decl type ref prev name argument_list argument expr call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name argument_list argument expr literal type char decl type ref prev name argument_list argument expr literal type char decl type ref prev name argument_list argument expr literal type char expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name name index expr name operator call name argument_list argument expr name decl_stmt decl type name name argument_list argument expr name name index expr name operator call name argument_list decl type ref prev name argument_list argument expr name name index expr name operator call name argument_list decl type ref prev name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name argument_list argument expr call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name argument expr name if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number decl type ref prev name init expr call name name operator name argument_list argument expr name argument expr name condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name name index expr name index expr name operator name expr_stmt expr name operator call name name operator name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number decl type ref prev name init expr call name name operator name argument_list argument expr name argument expr name condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name name index expr name index expr name operator name expr_stmt expr name operator call name name operator name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number decl type ref prev name init expr call name name operator name argument_list argument expr name argument expr name condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name name index expr name index expr name operator name expr_stmt expr name operator call name name operator name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name else block if condition expr name then block type pseudo expr_stmt expr operator name operator expr call name argument_list argument expr literal type string elseif if condition expr name then block type pseudo expr_stmt expr operator name operator expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string 
