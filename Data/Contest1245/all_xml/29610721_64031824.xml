<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29610721_64031824.cpp"><comment type="block">/*
 * (c) fushar (Ashar Fuadi)
*/</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP</name><parameter_list>(<parameter><type><name>i</name></type></parameter>, <parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for (int i = 0, _n = n; i &lt; _n; i++)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FOR</name><parameter_list>(<parameter><type><name>i</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for (int i = a, _b = b; i &lt;= _b; i++)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FORD</name><parameter_list>(<parameter><type><name>i</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for (int i = b, _a = a; i &gt;= _a; i--)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RESET</name><parameter_list>(<parameter><type><name>c</name></type></parameter>, <parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>memset(c, v, sizeof c)</cpp:value></cpp:define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<using>using <name>ll</name> <init>= <type><name>long</name> <name>long</name></type></init>;</using>

<comment type="block" format="doxygen">/***********************************************************/</comment>

<decl_stmt><decl><type><name>int</name></type> <name><name>G</name><index>[<expr><literal type="number">15</literal></expr>]</index><index>[<expr><literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>X</name><index>[<expr><literal type="number">105</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>Y</name><index>[<expr><literal type="number">105</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>D</name><index>[<expr><literal type="number">15</literal></expr>]</index><index>[<expr><literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name><name>dp</name><index>[<expr><literal type="number">105</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <macro><name>REP</name><argument_list>(<argument>i</argument>, <argument><literal type="number">10</literal></argument>)</argument_list></macro> <macro><name>REP</name><argument_list>(<argument>j</argument>, <argument><literal type="number">10</literal></argument>)</argument_list></macro> <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name><name>G</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>dir</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>, <decl><type ref="prev"/><name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <macro><name>REP</name><argument_list>(<argument>n</argument>, <argument><literal type="number">100</literal></argument>)</argument_list></macro> <block>{
        <expr_stmt><expr><name><name>X</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>Y</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <name>j</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>D</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <name>n</name></expr>;</expr_stmt>

        <expr_stmt><expr><name>j</name> <operator>+=</operator> <name>dir</name></expr>;</expr_stmt>
        <if>if <condition>(<expr><name>j</name> <operator>==</operator> <literal type="number">10</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>j</name><operator>--</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>i</name><operator>--</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>dir</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
        }</block></then> <elseif>else <if>if <condition>(<expr><name>j</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>j</name><operator>++</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>i</name><operator>--</operator></expr>;</expr_stmt>
            <expr_stmt><expr><name>dir</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
        }</block></then></if></elseif></if>
    }</block>

    <expr_stmt><expr><name><name>dp</name><index>[<expr><literal type="number">99</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">98</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>same</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>double</name></type> <name>diff</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>d</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>d</name> <operator>&lt;=</operator> <literal type="number">6</literal></expr>;</condition> <incr><expr><name>d</name><operator>++</operator></expr></incr>)</control> <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>j</name> <init>= <expr><name>i</name><operator>+</operator><name>d</name></expr></init></decl>;</decl_stmt>

            <if>if <condition>(<expr><name>j</name> <operator>&gt;</operator> <literal type="number">99</literal></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>same</name><operator>++</operator></expr>;</expr_stmt>
                <continue>continue;</continue>
            }</block></then></if>

            <decl_stmt><decl><type><name>double</name></type> <name>next</name> <init>= <expr><name><name>dp</name><index>[<expr><name>j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>x</name> <init>= <expr><name><name>X</name><index>[<expr><name>j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>y</name> <init>= <expr><name><name>Y</name><index>[<expr><name>j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr><name><name>G</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><name>y</name></expr>]</index></name></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>next</name> <operator>=</operator> <call><name>min</name><argument_list>(<argument><expr><name>next</name></expr></argument>, <argument><expr><name><name>dp</name><index>[<expr><name><name>D</name><index>[<expr><name>x</name><operator>-</operator><name><name>G</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><name>y</name></expr>]</index></name></expr>]</index><index>[<expr><name>y</name></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <expr_stmt><expr><name>diff</name> <operator>+=</operator> <name>next</name></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><name><name>dp</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><literal type="number">6</literal> <operator>+</operator> <name>diff</name><operator>)</operator> <operator>/</operator> <operator>(</operator><literal type="number">6</literal> <operator>-</operator> <name>same</name><operator>)</operator></expr>;</expr_stmt>
    }</block></for>

    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%.10lf\n"</literal></expr></argument>, <argument><expr><name><name>dp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
