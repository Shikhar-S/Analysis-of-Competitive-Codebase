<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29619008_64001010.cpp">
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name> <init>= <expr><literal type="number">1e5</literal> <operator>+</operator> <literal type="number">5</literal></expr></init></decl>, <decl><type ref="prev"/><name>M</name> <init>= <expr><literal type="number">1</literal><literal type="char">'000'</literal><literal type="number">000</literal><literal type="char">'007;
string s;
int n;
ll dp[N];

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin &gt;&gt; s;
    n = s.length();
    for(char c : s) {
        if(c == '</literal><name>m</name><literal type="char">' || c == '</literal><name>w</name><literal type="char">') {
            cout &lt;&lt; 0 &lt;&lt; endl;
            return 0;
        }
    }
    dp[0] = 1;
    dp[1] = 1;
    for(int i = 2; i &lt;= n; i++) {
        dp[i] = dp[i - 1];
        if((s[i - 1] == '</literal><name>n</name><literal type="char">' || s[i - 1] == '</literal><literal type="string">u'</literal></expr></init></decl></decl_stmt>) &amp;&amp; s[i - 1] == s[i - 2]) {
            dp[i] = (dp[i] + dp[i - 2]) % M;
        }
    }
    cout &lt;&lt; dp[n] &lt;&lt; endl;
}</unit>
