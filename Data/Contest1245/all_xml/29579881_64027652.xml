<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29579881_64027652.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>taskname</name></cpp:macro> <cpp:value>"cf1245"</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>mod</name> <init>= <expr><literal type="number">1e9</literal> <operator>+</operator> <literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name><name>f</name><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>duyenn</name></cpp:ifdef>
        <expr_stmt><expr><call><name>freopen</name> <argument_list>(<argument><expr><name>taskname</name><literal type="string">".inp"</literal></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>, <argument><expr><name>stdin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>freopen</name> <argument_list>(<argument><expr><name>taskname</name><literal type="string">".out"</literal></expr></argument>, <argument><expr><literal type="string">"w"</literal></expr></argument>, <argument><expr><name>stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// duyenn</comment>
    <expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><call><name><name>cout</name><operator>.</operator><name>tie</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>s</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>n</name> <operator>=</operator> <call><name><name>s</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>s</name> <operator>=</operator> <literal type="char">' '</literal> <operator>+</operator> <name>s</name></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block type="pseudo"><if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'w'</literal> <operator>||</operator> <name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'m'</literal></expr>)</condition><then>
            <block type="pseudo"><return>return <expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr><operator>,</operator> <expr><literal type="number">0</literal></expr>;</return></block></then></if></block></for>
    <decl_stmt><decl><type><name>int64_t</name></type> <name>res</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>f</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block type="pseudo"><expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>f</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name><name>f</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name><operator>)</operator> <operator>%</operator> <name>mod</name></expr>;</expr_stmt></block></for>
    <decl_stmt><decl><type><name>int</name></type> <name>pos</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name>s</name> <operator>+=</operator> <literal type="char">'1'</literal></expr>;</expr_stmt>
    <while>while <condition>(<expr><literal type="number">2</literal></expr>)</condition>
    <block>{
        <if>if <condition>(<expr><name>pos</name> <operator>&gt;</operator> <name>n</name></expr>)</condition><then>
            <block type="pseudo"><break>break;</break></block></then></if>
        <if>if <condition>(<expr><name><name>s</name><index>[<expr><name>pos</name></expr>]</index></name> <operator>==</operator> <literal type="char">'n'</literal> <operator>&amp;&amp;</operator> <name><name>s</name><index>[<expr><name>pos</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'n'</literal></expr>)</condition><then>
        <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>cnt</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>pos</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
            <while>while <condition>(<expr><name>pos</name> <operator>&lt;=</operator> <name>n</name> <operator>&amp;&amp;</operator> <name><name>s</name><index>[<expr><name>pos</name></expr>]</index></name> <operator>==</operator> <literal type="char">'n'</literal></expr>)</condition>
            <block>{
                <expr_stmt><expr><name>cnt</name><operator>++</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name>pos</name><operator>++</operator></expr>;</expr_stmt>
            }</block></while>
            <expr_stmt><expr><name>res</name> <operator>=</operator> <name>res</name> <operator>*</operator> <name><name>f</name><index>[<expr><name>cnt</name></expr>]</index></name> <operator>%</operator> <name>mod</name></expr>;</expr_stmt>
            <continue>continue;</continue>
        }</block></then></if>
        <if>if <condition>(<expr><name><name>s</name><index>[<expr><name>pos</name></expr>]</index></name> <operator>==</operator> <literal type="char">'u'</literal> <operator>&amp;&amp;</operator> <name><name>s</name><index>[<expr><name>pos</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'u'</literal></expr>)</condition><then>
        <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>cnt</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>pos</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
            <while>while <condition>(<expr><name>pos</name> <operator>&lt;=</operator> <name>n</name> <operator>&amp;&amp;</operator> <name><name>s</name><index>[<expr><name>pos</name></expr>]</index></name> <operator>==</operator> <literal type="char">'u'</literal></expr>)</condition>
            <block>{
                <expr_stmt><expr><name>cnt</name><operator>++</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name>pos</name><operator>++</operator></expr>;</expr_stmt>
            }</block></while>
            <expr_stmt><expr><name>res</name> <operator>=</operator> <name>res</name> <operator>*</operator> <name><name>f</name><index>[<expr><name>cnt</name></expr>]</index></name> <operator>%</operator> <name>mod</name></expr>;</expr_stmt>
            <continue>continue;</continue>
        }</block></then></if>
        <expr_stmt><expr><name>pos</name><operator>++</operator></expr>;</expr_stmt>
    }</block></while>
    <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>res</name></expr>;</expr_stmt>
}</block></function>
</unit>
