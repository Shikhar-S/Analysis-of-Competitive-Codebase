include directive file using namespace name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator operator name operator literal type char operator expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type number operator literal type char then block type pseudo return expr literal type boolean if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type number operator literal type char then block type pseudo return expr literal type boolean return expr literal type boolean function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr name operator call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name name index expr name incr expr operator name block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator operator ternary condition expr call name argument_list argument expr literal type number then expr literal type number else expr literal type number operator for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name if condition expr call name argument_list argument expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator literal type number return expr literal type number 
