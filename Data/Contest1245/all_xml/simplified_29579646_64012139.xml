include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name comment type line if condition expr name operator literal type number operator name then block expr_stmt expr name operator literal type string operator name continue decl_stmt decl type name name init expr name operator name decl type ref prev name init expr name operator name decl type ref prev name init expr name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char operator expr operator name expr_stmt expr name operator literal type string operator name operator name operator name return expr literal type number 
