include directive file include directive file decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name name index expr literal type number if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name name index expr literal type number if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name name index expr literal type number if condition expr call name argument_list argument expr name argument expr name name index expr literal type number operator call name argument_list argument expr name argument expr name name index expr literal type number operator call name argument_list argument expr name argument expr name name index expr literal type number operator operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator name operator literal type number operator literal type number if condition expr name operator literal type number operator name name index expr literal type number operator name operator name operator literal type number operator name name index expr literal type number operator name operator name operator literal type number operator name name index expr literal type number operator name then block type pseudo continue expr_stmt expr name name index expr name operator ternary condition expr name operator literal type number then expr literal type char else expr operator ternary condition expr name operator literal type number then expr literal type char else expr literal type char operator expr_stmt expr operator name name index expr name expr_stmt expr name name index expr name operator literal type number operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr literal type number operator name operator operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name name index expr literal type number elseif if condition expr name name index expr literal type number operator name operator operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name name index expr literal type number elseif if condition expr name name index expr literal type number operator name operator operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name name index expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number return expr literal type number 
