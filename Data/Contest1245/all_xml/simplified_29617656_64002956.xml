comment type block include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name function type name name parameter_list block expr_stmt expr name operator name operator name operator name operator name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name for control init decl type name name range expr name block type pseudo expr_stmt expr name name index expr name operator decl_stmt decl type name name init expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr literal type char expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr literal type char expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr literal type char if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string operator name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char else block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char elseif if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator name operator name else block expr_stmt expr name operator literal type string operator name function type name name parameter_list parameter decl type name block expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list return expr literal type number 
