<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29605643_64027227.cpp"><comment type="line">//</comment>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;cstring&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mod</name></cpp:macro> <cpp:value>1000000007</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>maxnn</name></cpp:macro> <cpp:value>200010</cpp:value></cpp:define>
<decl_stmt><decl><type><name>string</name></type> <name>s1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>f1</name><index>[<expr><name>maxnn</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>f2</name><index>[<expr><name>maxnn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>feb</name><index>[<expr><name>maxnn</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <expr_stmt><expr><name><name>feb</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>feb</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">1e5</literal><operator>+</operator><literal type="number">10</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <expr_stmt><expr><name><name>feb</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>feb</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>feb</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s1</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>ans1</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>ll</name></type> <name>ans2</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
    
    <decl_stmt><decl><type><name>ll</name></type> <name>d</name><init>=<expr><call><name><name>s1</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>d</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'m'</literal><operator>||</operator><name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'w'</literal></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><literal type="string">"0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><literal type="number">0</literal></expr>;</return>
        }</block></then></if>
    }</block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>d</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'u'</literal></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name><name>f1</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>f1</name><index>[<expr><call><name>max</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>]</index></name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
            <if>if<condition>(<expr><name><name>f1</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;=</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><continue>continue;</continue></block></then></if>
            <if>if<condition>(<expr><name>i</name><operator>==</operator><operator>(</operator><name>d</name><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>ans1</name><operator>=</operator><operator>(</operator><name>ans1</name><operator>*</operator><name><name>feb</name><index>[<expr><name><name>f1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
                <continue>continue;</continue>
            }</block></then></if>
            <if>if<condition>(<expr><name><name>s1</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>!=</operator><literal type="char">'u'</literal></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>ans1</name><operator>=</operator><operator>(</operator><name>ans1</name><operator>*</operator><name><name>feb</name><index>[<expr><name><name>f1</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
                <continue>continue;</continue>
            }</block></then></if>
            
        }</block></then>
        <else>else<block>{
            <expr_stmt><expr><name><name>f1</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        }</block></else></if>
    }</block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>d</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
    <block>{
        <if>if<condition>(<expr><name><name>s1</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'n'</literal></expr>)</condition><then>
        <block>{
            <expr_stmt><expr><name><name>f2</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>f2</name><index>[<expr><call><name>max</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>]</index></name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
            <if>if<condition>(<expr><name><name>f2</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;=</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><continue>continue;</continue></block></then></if>
            <if>if<condition>(<expr><name>i</name><operator>==</operator><operator>(</operator><name>d</name><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>ans1</name><operator>=</operator><operator>(</operator><name>ans1</name><operator>*</operator><name><name>feb</name><index>[<expr><name><name>f2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
                <continue>continue;</continue>
            }</block></then></if>
            <if>if<condition>(<expr><name><name>s1</name><index>[<expr><name>i</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>!=</operator><literal type="char">'n'</literal></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><name>ans1</name><operator>=</operator><operator>(</operator><name>ans1</name><operator>*</operator><name><name>feb</name><index>[<expr><name><name>f2</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
                <continue>continue;</continue>
            }</block></then></if>
        }</block></then>
        <else>else<block>{
            <expr_stmt><expr><name><name>f2</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        }</block></else></if>
    }</block></for>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><operator>(</operator><name>ans1</name><operator>*</operator><name>ans2</name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
}</block></function>
</unit>
