<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29620004_64015314.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FAST</name></cpp:macro> <cpp:value>ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);</cpp:value></cpp:define>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<typedef>typedef <type><name>long</name> <name>double</name></type> <name>ld</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mp</name></cpp:macro> <cpp:value>make_pair</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOD</name></cpp:macro> <cpp:value>1000000007</cpp:value></cpp:define> 

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
   <decl_stmt><decl><type><name>FAST</name><comment type="block">/**/</comment>
   
   <name>ll</name></type> <name><name>fib</name><index>[<expr><literal type="number">100005</literal></expr>]</index></name></decl>;</decl_stmt>
   <expr_stmt><expr><name><name>fib</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
   <expr_stmt><expr><name><name>fib</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
   <expr_stmt><expr><name><name>fib</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
   <for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name><init>=<expr><literal type="number">3</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><literal type="number">100005</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
        <block type="pseudo"><expr_stmt><expr><name><name>fib</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>fib</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name><name>fib</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name></expr><operator>,</operator> <expr><name><name>fib</name><index>[<expr><name>i</name></expr>]</index></name><operator>%=</operator><name>MOD</name></expr>;</expr_stmt></block></for>
    
   <decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt>
   <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name></expr>;</expr_stmt>
   
   <decl_stmt><decl><type><name>ll</name></type> <name>cnt</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>curr</name> <init>= <expr><literal type="char">'a'</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><name>ll</name></type> <name>ans</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
   <for>for<control>(<init><decl><type><name>ll</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
   <block>{
       <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><name>curr</name></expr>)</condition><then>
       <block>{
           <if>if<condition>(<expr><name>curr</name> <operator>==</operator> <literal type="char">'m'</literal> <operator>||</operator> <name>curr</name> <operator>==</operator> <literal type="char">'w'</literal></expr>)</condition><then>
           <block>{
               <if>if<condition>(<expr><name>cnt</name><operator>&lt;</operator><literal type="number">2</literal></expr>)</condition><then>
               <block>{
                   <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">0</literal></expr>;</expr_stmt>
                   <return>return <expr><literal type="number">0</literal></expr>;</return>
               }</block></then></if>
           }</block></then></if>
           <if>if<condition>(<expr><name>curr</name> <operator>==</operator> <literal type="char">'u'</literal><operator>||</operator><name>curr</name> <operator>==</operator> <literal type="char">'n'</literal></expr>)</condition><then>
           <block>{
               <expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>fib</name><index>[<expr><name>cnt</name></expr>]</index></name></expr><operator>,</operator> <expr><name>ans</name><operator>%=</operator><name>MOD</name></expr>;</expr_stmt>
           }</block></then></if>
           <expr_stmt><expr><name>curr</name> <operator>=</operator> <name><name>s</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
           <expr_stmt><expr><name>cnt</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
       }</block></then>
       
       <else>else <block type="pseudo"><expr_stmt><expr><name>cnt</name><operator>++</operator></expr>;</expr_stmt></block></else></if>
   }</block></for>
   <if>if<condition>(<expr><name>curr</name> <operator>==</operator> <literal type="char">'u'</literal><operator>||</operator><name>curr</name> <operator>==</operator> <literal type="char">'n'</literal></expr>)</condition><then>
                <block type="pseudo"><expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>fib</name><index>[<expr><name>cnt</name></expr>]</index></name></expr><operator>,</operator> <expr><name>ans</name><operator>%=</operator><name>MOD</name></expr>;</expr_stmt></block></then></if>
   
   <if>if<condition>(<expr><name>curr</name> <operator>==</operator> <literal type="char">'m'</literal> <operator>||</operator> <name>curr</name> <operator>==</operator> <literal type="char">'w'</literal></expr>)</condition><then>
           <block>{
               <if>if<condition>(<expr><name>cnt</name><operator>&lt;</operator><literal type="number">2</literal></expr>)</condition><then>
               <block>{
                   <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">0</literal></expr>;</expr_stmt>
                   <return>return <expr><literal type="number">0</literal></expr>;</return>
               }</block></then></if>
           }</block></then></if>
   
   <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name></expr>;</expr_stmt>                
   
   
   <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
