pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name include directive file define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr operator literal type number operator literal type number operator decl_stmt decl type specifier name name init expr operator literal type number operator literal type number operator decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number using namespace name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name name index expr literal type number function type name name parameter_list block comment type line comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name operator name operator name operator name expr_stmt expr name operator literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type char for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name if condition expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr name name index expr name operator literal type char elseif if condition expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr name name index expr name operator literal type char elseif if condition expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr name name index expr name operator literal type char for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo continue if condition expr name then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char elseif if condition expr name then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char elseif if condition expr name then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type char else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
