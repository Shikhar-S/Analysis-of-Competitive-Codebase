include directive file using namespace name define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number undef directive name function type name name parameter_list block define directive macro name value expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name expr_stmt expr name operator name operator name name index expr literal type char operator name name index expr literal type char operator name name index expr literal type char operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type char decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name name index expr literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name name index expr literal type char operator operator expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name name index expr literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name name index expr literal type char operator operator expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name name index expr literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name name index expr literal type char operator operator expr name operator if condition expr name operator name operator literal type number operator name operator literal type number then block expr_stmt expr name operator literal type string operator name continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name name index expr literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name name index expr literal type char operator elseif if condition expr name name index expr literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name name index expr literal type char operator elseif if condition expr name name index expr literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name name index expr literal type char operator expr_stmt expr name operator literal type string operator name operator name operator name return expr literal type number 
