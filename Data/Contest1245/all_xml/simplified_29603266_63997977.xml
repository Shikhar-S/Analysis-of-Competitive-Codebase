include directive file include directive file include directive file using namespace name using namespace name define directive macro name value typedef type name name name name typedef type name name name define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number define directive macro name value decl_stmt decl type name name name index expr name init expr block expr literal type number decl type ref prev name name index expr name init expr block expr literal type number decl type ref prev name name index expr name init expr block expr literal type number decl type ref prev name name index expr name init expr block expr literal type number decl type ref prev name name index expr name init expr block expr literal type number decl type ref prev name name index expr name init expr block expr literal type number function type name name parameter_list parameter decl type specifier name name parameter decl type specifier name name block decl_stmt decl type name name init expr call name name operator name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl type name name operator name name argument_list argument expr name decl_stmt decl type name name init expr call call name name operator name name argument_list type generic argument expr name argument_list argument expr name operator literal type number argument expr name argument_list argument expr name return expr ternary condition expr name operator literal type number operator literal type number then expr name operator literal type number else expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator name then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number if condition expr name operator literal type number then block type pseudo return expr operator name operator operator operator name operator name operator operator name operator operator operator name else block type pseudo return expr operator name operator name operator operator name function type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name name index expr name operator call name argument_list argument expr operator name name index expr name operator name name index expr name operator name operator operator name operator operator name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name comment type line if condition expr name operator name then block type pseudo return expr literal type number if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator else block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator return expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name block expr_stmt expr name operator decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name if condition expr call name argument_list argument expr name argument expr name operator literal type number then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name 
