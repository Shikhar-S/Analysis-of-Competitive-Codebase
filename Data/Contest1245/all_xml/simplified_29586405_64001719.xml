include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value pragma directive name name name literal name using namespace name typedef type name name name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number operator literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number operator literal type number comment type line function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name for control init condition expr name incr expr operator name block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name expr_stmt expr name operator name if condition expr name operator literal type char then block expr_stmt expr name name index expr name operator operator ternary condition expr name then expr literal type char else expr literal type char operator expr_stmt expr name operator operator name operator literal type number operator expr_stmt expr name operator call name argument_list argument expr literal type number argument expr name operator literal type number elseif if condition expr name operator literal type char then block expr_stmt expr name name index expr name operator operator ternary condition expr name then expr literal type char else expr literal type char operator expr_stmt expr name operator operator name operator literal type number operator expr_stmt expr name operator call name argument_list argument expr literal type number argument expr name operator literal type number else block expr_stmt expr name name index expr name operator operator ternary condition expr name then expr literal type char else expr literal type char operator expr_stmt expr name operator operator name operator literal type number operator expr_stmt expr name operator call name argument_list argument expr literal type number argument expr name operator literal type number expr_stmt expr name operator operator ternary condition expr name operator literal type number operator name then expr literal type string else expr literal type string operator if condition expr name operator literal type number operator name then block for control init decl type name name range expr name block if condition expr name operator literal type char then block expr_stmt expr name operator name elseif if condition expr name then block expr_stmt expr operator name expr_stmt expr name operator literal type char elseif if condition expr name then block expr_stmt expr operator name expr_stmt expr name operator literal type char else block expr_stmt expr operator name expr_stmt expr name operator literal type char expr_stmt expr name operator literal type char return expr literal type number 
