include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name name operator name argument_list decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr literal type char else block expr_stmt expr call name name operator name argument_list argument expr literal type char elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr literal type char else block expr_stmt expr call name name operator name argument_list argument expr literal type char elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr literal type char else block expr_stmt expr call name name operator name argument_list argument expr literal type char if condition expr name operator name operator literal type number operator name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name elseif if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string elseif if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string elseif if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string 
