include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr literal type number operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator operator literal type number then block return expr name name index expr name if condition expr name operator literal type number then block return expr literal type number elseif if condition expr name operator literal type number then block return expr literal type number else block return expr name name index expr name operator operator call name argument_list argument expr name operator literal type number operator call name argument_list argument expr name operator literal type number operator operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name operator expr_stmt expr name operator literal type number elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name operator expr_stmt expr name operator literal type number elseif if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator literal type number operator name return expr literal type number elseif if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator literal type number operator name return expr literal type number else block if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name elseif if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name elseif if condition expr name operator literal type number then block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name operator name operator name return expr literal type number 
