<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29603144_64002681.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LL</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAXN</name></cpp:macro> <cpp:value>300005</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INF</name></cpp:macro> <cpp:value>(1&lt;&lt;25)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>P</name></cpp:macro> <cpp:value>int(998244353)</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>int</name></type> <name>N</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>r</name></decl>,<decl><type ref="prev"/><name>p</name></decl>,<decl><type ref="prev"/><name>s</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>r1</name></decl>,<decl><type ref="prev"/><name>p1</name></decl>,<decl><type ref="prev"/><name>s1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>string</name></type> <name>ss</name></decl>,<decl><type ref="prev"/><name>t</name></decl>;</decl_stmt>


<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>T</name></expr>;</expr_stmt>
	
	<while>while<condition>(<expr><name>T</name><operator>--</operator></expr>)</condition><block>{
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>N</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>r</name><operator>&gt;&gt;</operator><name>p</name><operator>&gt;&gt;</operator><name>s</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>ss</name></expr>;</expr_stmt>
		
		<expr_stmt><expr><name>t</name> <operator>=</operator> <literal type="string">""</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>r1</name> <operator>=</operator> <name>p1</name> <operator>=</operator> <name>s1</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>cnt</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>N</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
			<decl_stmt><decl><type><name>char</name></type> <name>c</name> <init>= <expr><name><name>ss</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<if>if<condition>(<expr><name>c</name><operator>==</operator><literal type="char">'S'</literal> <operator>&amp;&amp;</operator> <name>r</name></expr>)</condition><then><block>{
				<expr_stmt><expr><operator>--</operator><name>r</name></expr>;</expr_stmt>
				<expr_stmt><expr><name>t</name> <operator>+=</operator> <literal type="char">'R'</literal></expr>;</expr_stmt>
				<expr_stmt><expr><operator>++</operator><name>cnt</name></expr>;</expr_stmt>
				<continue>continue;</continue>
			}</block></then></if>
			<if>if<condition>(<expr><name>c</name><operator>==</operator><literal type="char">'R'</literal> <operator>&amp;&amp;</operator> <name>p</name></expr>)</condition><then><block>{
				<expr_stmt><expr><operator>--</operator><name>p</name></expr>;</expr_stmt>
				<expr_stmt><expr><name>t</name> <operator>+=</operator> <literal type="char">'P'</literal></expr>;</expr_stmt>
				<expr_stmt><expr><operator>++</operator><name>cnt</name></expr>;</expr_stmt>
				<continue>continue;</continue>
			}</block></then></if>
			<if>if<condition>(<expr><name>c</name><operator>==</operator><literal type="char">'P'</literal> <operator>&amp;&amp;</operator> <name>s</name></expr>)</condition><then><block>{
				<expr_stmt><expr><operator>--</operator><name>s</name></expr>;</expr_stmt>
				<expr_stmt><expr><name>t</name> <operator>+=</operator> <literal type="char">'S'</literal></expr>;</expr_stmt>
				<expr_stmt><expr><operator>++</operator><name>cnt</name></expr>;</expr_stmt>
				<continue>continue;</continue>
			}</block></then></if>
			
			<expr_stmt><expr><name>t</name> <operator>+=</operator> <literal type="char">' '</literal></expr>;</expr_stmt>
		}</block></for>
		
		<if>if<condition>(<expr><name>cnt</name><operator>*</operator><literal type="number">2</literal> <operator>&lt;</operator> <name>N</name></expr>)</condition><then><block>{
			<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
			<continue>continue;</continue>
		}</block></then></if>
		
		
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>N</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
			<if>if<condition>(<expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">' '</literal></expr>)</condition><then><block>{
				<if>if<condition>(<expr><name>r</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'R'</literal></expr><operator>,</operator> <expr><name>r</name><operator>--</operator></expr>;</expr_stmt></block></then>
				<elseif>else <if>if<condition>(<expr><name>p</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'P'</literal></expr><operator>,</operator> <expr><name>p</name><operator>--</operator></expr>;</expr_stmt></block></then></if></elseif>
				<else>else <block type="pseudo"><expr_stmt><expr><name><name>t</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'S'</literal></expr><operator>,</operator> <expr><name>s</name><operator>--</operator></expr>;</expr_stmt></block></else></if>
			}</block></then></if>
		}</block></for>
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>t</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	}</block></while>
	
	
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
