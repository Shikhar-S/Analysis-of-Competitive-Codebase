include directive file using namespace name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name function type name name parameter_list block return function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name expr_stmt expr name name index expr name operator operator literal type number if condition expr name operator literal type char operator name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type char operator name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type char operator name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name elseif if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator literal type char elseif if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator literal type char else block expr_stmt expr name operator expr_stmt expr name operator literal type char expr_stmt expr name operator name else block expr_stmt expr name operator literal type string operator name 
