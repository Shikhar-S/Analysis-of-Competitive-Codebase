<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29619016_64034043.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mod</name></cpp:macro> <cpp:value>1000000007</cpp:value></cpp:define>


<function><type><name>ll</name></type> <name>ispal</name><parameter_list>(<parameter><decl><type><name>string</name></type> <name>s</name></decl></parameter>)</parameter_list><block>{
    <decl_stmt><decl><type><name>ll</name></type> <name>n</name><init>=<expr><call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if>if<condition>(<expr><name>n</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then>
       <block type="pseudo"><return>return <expr><literal type="number">2</literal></expr>;</return></block></then></if>
    <decl_stmt><decl><type><name>int</name></type> <name>e</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>o</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>   
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'0'</literal></expr>)</condition><then>
            <block type="pseudo"><expr_stmt><expr><name>o</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
    }</block></for>
   <comment type="line">// cout&lt;&lt;"o= "&lt;&lt;o&lt;&lt;endl;</comment>
    <if>if<condition>(<expr><name>o</name><operator>%</operator><literal type="number">2</literal><operator>==</operator><literal type="number">1</literal></expr>)</condition><then>
       <block type="pseudo"><return>return <expr><literal type="number">0</literal></expr>;</return></block></then></if>
    
    <return>return <expr><literal type="number">1</literal></expr>;</return>
}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
    <decl_stmt><decl><type><name>ll</name></type> <name>t</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>t</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
    

	<decl_stmt><decl><type><name>ll</name></type> <name><name>vis</name><index>[<expr><literal type="number">3000</literal></expr>]</index></name><init>=<expr><block>{}</block></expr></init></decl>;</decl_stmt>
	<while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition><block>{
	    <decl_stmt><decl><type><name>ll</name></type> <name>n</name></decl>;</decl_stmt>
	    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
	    <decl_stmt><decl><type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>ll</name></expr></argument>,<argument><expr><name>ll</name></expr></argument>&gt;</argument_list></name></type> <name><name>arr</name><index>[<expr><name>n</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>ll</name></expr></argument>,<argument><expr><name>ll</name></expr></argument>&gt;</argument_list></name></type> <name><name>fans</name><index>[<expr><name>n</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
	    
	    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name><operator>&gt;&gt;</operator><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name></expr>;</expr_stmt>
	        <expr_stmt><expr><name><name>fans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	        <expr_stmt><expr><name><name>fans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	    }</block></for>
	    
	    <decl_stmt><decl><type><name>ll</name></type> <name><name>c</name><index>[<expr><name>n</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>k</name><index>[<expr><name>n</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>ans</name><index>[<expr><name>n</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name>ll</name></type> <name>mn</name><init>=<expr><literal type="number">1000000001</literal></expr></init></decl>,<decl><type ref="prev"/><name>mid</name><init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	        <expr_stmt><expr><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	        <if>if<condition>(<expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;</operator><name>mn</name></expr>)</condition><then><block>{
	            <expr_stmt><expr><name>mn</name><operator>=</operator><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	            <expr_stmt><expr><name>mid</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
	        }</block></then></if>
	    }</block></for>
	    
	    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>k</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	    }</block></for>
	    <decl_stmt><decl><type><name>ll</name></type> <name>x</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	    
	    <while>while<condition>(<expr><name>x</name><operator>&lt;=</operator><name>n</name></expr>)</condition><block>{
	        <decl_stmt><decl><type><name>ll</name></type> <name>z</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	        <expr_stmt><expr><name><name>vis</name><index>[<expr><name>mid</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
	        <decl_stmt><decl><type><name>ll</name></type> <name>a</name><init>=<expr><name><name>arr</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>first</name></expr></init></decl>,<decl><type ref="prev"/><name>b</name><init>=<expr><name><name>arr</name><index>[<expr><name>mid</name></expr>]</index></name><operator>.</operator><name>second</name></expr></init></decl>;</decl_stmt>
	        <decl_stmt><decl><type><name>ll</name></type> <name>as</name><init>=<expr><literal type="number">1000000007</literal></expr></init></decl>;</decl_stmt>
	        
	        <decl_stmt><decl><type><name>ll</name></type> <name>tmp</name><init>=<expr><name>mid</name></expr></init></decl>;</decl_stmt>
	        <decl_stmt><decl><type><name>ll</name></type> <name>mn</name><init>=<expr><literal type="number">1000000007</literal></expr></init></decl>;</decl_stmt>
	        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	            <decl_stmt><decl><type><name>ll</name></type> <name>c</name><init>=<expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name></expr></init></decl>,<decl><type ref="prev"/><name>d</name><init>=<expr><name><name>arr</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name></expr></init></decl>;</decl_stmt>
	            <if>if<condition>(<expr><name>mid</name><operator>!=</operator><name>i</name> <operator>&amp;&amp;</operator> <name><name>vis</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
	               <decl_stmt><decl><type><name>ll</name></type> <name>sum</name><init>=<expr><call><name>abs</name><argument_list>(<argument><expr><name>a</name><operator>-</operator><name>c</name></expr></argument>)</argument_list></call><operator>+</operator><call><name>abs</name><argument_list>(<argument><expr><name>b</name><operator>-</operator><name>d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	               <expr_stmt><expr><name>sum</name><operator>*=</operator><name><name>k</name><index>[<expr><name>i</name></expr>]</index></name><operator>+</operator><name><name>k</name><index>[<expr><name>tmp</name></expr>]</index></name></expr>;</expr_stmt>
	               
	               <if>if<condition>(<expr><name>sum</name><operator>&lt;</operator><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then><block>{
	                   <expr_stmt><expr><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>sum</name></expr>;</expr_stmt>
	                   <expr_stmt><expr><name><name>fans</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><block>{<expr><name>tmp</name></expr>,<expr><name>i</name></expr>}</block></expr>;</expr_stmt>
	                   <expr_stmt><expr><name>z</name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
	               }</block></then></if>
	               
	               <if>if<condition>(<expr><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;</operator><name>mn</name></expr>)</condition><then><block>{
	                   <expr_stmt><expr><name>mn</name><operator>=</operator><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	                   <expr_stmt><expr><name>mid</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
	               }</block></then></if>
	               
	            }</block></then></if>
	        }</block></for>
	        
	       
	        
	        <expr_stmt><expr><name>x</name><operator>++</operator></expr>;</expr_stmt>
	    }</block></while>
	    
	    <decl_stmt><decl><type><name>ll</name></type> <name>sum</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name>ll</name></type> <name>pc</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	        <if>if<condition>(<expr><name><name>fans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
	           <block type="pseudo"><expr_stmt><expr><name>pc</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
	        <expr_stmt><expr><name>sum</name><operator>+=</operator><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
	    }</block></for>
	    
	    
	   <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>sum</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	   <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>pc</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	   <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	        <if>if<condition>(<expr><name><name>fans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
	           <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>i</name><operator>&lt;&lt;</operator><literal type="string">" "</literal></expr>;</expr_stmt></block></then></if>
	        
	    }</block></for>
	    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>n</name><operator>-</operator><name>pc</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	    
	    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
	        <if>if<condition>(<expr><name><name>fans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name><operator>!=</operator><literal type="number">0</literal></expr>)</condition><then>
	           <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>fans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>first</name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name><name>fans</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>second</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then></if>
	        
	    }</block></for>
	    
	    
	}</block></while>
	    
	
}</block></function></unit>
