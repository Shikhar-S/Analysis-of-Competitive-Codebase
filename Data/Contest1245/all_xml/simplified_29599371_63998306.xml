include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator continue if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type string operator name 
