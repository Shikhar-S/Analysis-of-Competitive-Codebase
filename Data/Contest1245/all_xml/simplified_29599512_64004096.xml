include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator literal type number else block type pseudo expr_stmt expr name operator name operator literal type number expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator literal type string operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator name name index expr name else block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator literal type char elseif if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator literal type char elseif if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator literal type char expr_stmt expr name operator name else block expr_stmt expr name operator literal type string operator name return expr literal type number 
