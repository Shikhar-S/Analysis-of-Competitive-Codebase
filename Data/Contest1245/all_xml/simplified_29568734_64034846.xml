comment type line format doxygen include directive file using namespace name define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number decl type ref prev name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number decl type ref prev name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr_stmt expr name operator name operator name name index expr literal type number operator name name index expr literal type number operator name name index expr literal type number decl_stmt decl type name name init expr literal type string expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator decl_stmt decl type name name init expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number decl type ref prev name init expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number decl type ref prev name init expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name decl_stmt decl type name name init expr literal type string decl_stmt decl type name name init expr name operator name operator name decl type ref prev name init expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number decl type ref prev name init expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number decl type ref prev name init expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr name name index expr literal type number operator if condition expr name name index expr literal type number operator name then block type pseudo expr_stmt expr name operator literal type char elseif if condition expr name name index expr literal type number operator name operator name then block type pseudo expr_stmt expr name operator literal type char else block type pseudo expr_stmt expr name operator literal type char if condition expr name name index expr name operator literal type char then block expr_stmt expr name name index expr literal type number operator if condition expr name name index expr literal type number operator name then block type pseudo expr_stmt expr name operator literal type char elseif if condition expr name name index expr literal type number operator name operator name then block type pseudo expr_stmt expr name operator literal type char else block type pseudo expr_stmt expr name operator literal type char if condition expr name name index expr name operator literal type char then block expr_stmt expr name name index expr literal type number operator if condition expr name name index expr literal type number operator name then block type pseudo expr_stmt expr name operator literal type char elseif if condition expr name name index expr literal type number operator name operator name then block type pseudo expr_stmt expr name operator literal type char else block type pseudo expr_stmt expr name operator literal type char if condition expr name operator operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr name operator literal type string operator literal type char operator name operator literal type char else block type pseudo expr_stmt expr name operator literal type string operator literal type char return expr literal type boolean 
