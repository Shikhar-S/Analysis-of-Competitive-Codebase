<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29605865_64021706.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;algorithm&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<struct>struct <name>Q</name><block>{<public type="default">
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>x</name></decl>,<decl><type ref="prev"/><name>y</name></decl>,<decl><type ref="prev"/><name>c</name></decl>,<decl><type ref="prev"/><name>k</name></decl>;</decl_stmt>
</public>}</block><decl><name><name>A</name><index>[<expr><literal type="number">4010</literal></expr>]</index></name></decl>;</struct>
<struct>struct <name>P</name><block>{<public type="default">
    <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>c</name></decl>;</decl_stmt>
</public>}</block><decl><name><name>B</name><index>[<expr><literal type="number">4000010</literal></expr>]</index></name></decl>;</struct>
<function><type><name>int</name></type> <name>cmp</name><parameter_list>(<parameter><decl><type><name>P</name></type> <name>a</name></decl></parameter>,<parameter><decl><type><name>P</name></type> <name>b</name></decl></parameter>)</parameter_list><block>{
    <return>return <expr><name><name>a</name><operator>.</operator><name>c</name></name><operator>&lt;</operator><name><name>b</name><operator>.</operator><name>c</name></name></expr>;</return>
}</block></function>


<decl_stmt><decl><type><name>int</name></type> <name>cnt</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name><name>p</name><index>[<expr><literal type="number">4010</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>vis</name><index>[<expr><literal type="number">4010</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>f</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>)</parameter_list><block>{
    <if>if<condition>(<expr><name><name>p</name><index>[<expr><name>a</name></expr>]</index></name><operator>==</operator><name>a</name></expr>)</condition><then> <block type="pseudo"><return>return <expr><name>a</name></expr>;</return></block></then></if>
    <expr_stmt><expr><name><name>p</name><index>[<expr><name>a</name></expr>]</index></name><operator>=</operator><call><name>f</name><argument_list>(<argument><expr><name><name>p</name><index>[<expr><name>a</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><name><name>p</name><index>[<expr><name>a</name></expr>]</index></name></expr>;</return>
}</block></function>


<decl_stmt><decl><type><name>int</name></type> <name><name>l</name><index>[<expr><literal type="number">4000010</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>r</name><index>[<expr><literal type="number">4000010</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>ans</name><index>[<expr><literal type="number">4010</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>,<decl><type ref="prev"/><name>j</name></decl>,<decl><type ref="prev"/><name>n</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>A</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name><operator>&gt;&gt;</operator><name><name>A</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name></expr>;</expr_stmt></block></for>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>A</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt></block></for>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>A</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>k</name></expr>;</expr_stmt></block></for>

    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <for>for<control>(<init><expr><name>j</name><operator>=</operator><name>i</name><operator>+</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block>{
           <expr_stmt><expr><name><name>B</name><index>[<expr><operator>++</operator><name>cnt</name></expr>]</index></name><operator>.</operator><name>a</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name>B</name><index>[<expr><name>cnt</name></expr>]</index></name><operator>.</operator><name>b</name><operator>=</operator><name>j</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name>B</name><index>[<expr><name>cnt</name></expr>]</index></name><operator>.</operator><name>c</name><operator>=</operator><call><name>abs</name><argument_list>(<argument><expr><name><name>A</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name><operator>-</operator><name><name>A</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>x</name></expr></argument>)</argument_list></call><operator>+</operator><call><name>abs</name><argument_list>(<argument><expr><name><name>A</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name><operator>-</operator><name><name>A</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><name><name>B</name><index>[<expr><name>cnt</name></expr>]</index></name><operator>.</operator><name>c</name><operator>*=</operator><name><name>A</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>k</name><operator>+</operator><name><name>A</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>k</name></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><name><name>B</name><index>[<expr><operator>++</operator><name>cnt</name></expr>]</index></name><operator>.</operator><name>a</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>B</name><index>[<expr><name>cnt</name></expr>]</index></name><operator>.</operator><name>b</name><operator>=</operator><name>i</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>B</name><index>[<expr><name>cnt</name></expr>]</index></name><operator>.</operator><name>c</name><operator>=</operator><name><name>A</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><call><name>sort</name><argument_list>(<argument><expr><name>B</name><operator>+</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>B</name><operator>+</operator><literal type="number">1</literal><operator>+</operator><name>cnt</name></expr></argument>,<argument><expr><name>cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name><name>p</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>i</name></expr>;</expr_stmt></block></for>

    <decl_stmt><decl><type><name>int</name></type> <name>c</name></decl>,<decl><type ref="prev"/><name>d</name></decl>,<decl><type ref="prev"/><name>x</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>y</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>sum</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>cnt</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>a</name><operator>==</operator><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>b</name></expr>)</condition><then><block>{
             <expr_stmt><expr><name>c</name><operator>=</operator><call><name>f</name><argument_list>(<argument><expr><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <if>if<condition>(<expr><name><name>vis</name><index>[<expr><name>c</name></expr>]</index></name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                  <expr_stmt><expr><name><name>ans</name><index>[<expr><operator>++</operator><name>x</name></expr>]</index></name><operator>=</operator><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>a</name></expr>;</expr_stmt>
                  <expr_stmt><expr><name>sum</name><operator>+=</operator><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt>
                  <expr_stmt><expr><name><name>vis</name><index>[<expr><name>c</name></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
             }</block></then></if>
        }</block></then>
        <else>else<block>{
            <expr_stmt><expr><name>c</name><operator>=</operator><call><name>f</name><argument_list>(<argument><expr><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>d</name><operator>=</operator><call><name>f</name><argument_list>(<argument><expr><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if>if<condition>(<expr><name><name>vis</name><index>[<expr><name>c</name></expr>]</index></name><operator>&amp;&amp;</operator><name><name>vis</name><index>[<expr><name>d</name></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><continue>continue;</continue></block></then></if>

            <if>if<condition>(<expr><name>c</name><operator>!=</operator><name>d</name></expr>)</condition><then><block>{
                 <expr_stmt><expr><name><name>p</name><index>[<expr><name>c</name></expr>]</index></name><operator>=</operator><name>d</name></expr>;</expr_stmt>
                 <expr_stmt><expr><name><name>vis</name><index>[<expr><name>d</name></expr>]</index></name><operator>|=</operator><name><name>vis</name><index>[<expr><name>c</name></expr>]</index></name></expr>;</expr_stmt>
                 <expr_stmt><expr><name>sum</name><operator>+=</operator><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>c</name></expr>;</expr_stmt>
                 <expr_stmt><expr><name><name>l</name><index>[<expr><operator>++</operator><name>y</name></expr>]</index></name><operator>=</operator><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>a</name></expr>;</expr_stmt>
                 <expr_stmt><expr><name><name>r</name><index>[<expr><name>y</name></expr>]</index></name><operator>=</operator><name><name>B</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>b</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block></else></if>
    }</block></for>

    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>sum</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>x</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>x</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;&lt;</operator><literal type="string">" "</literal></expr>;</expr_stmt></block></for>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>y</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
    <for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">1</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>y</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>l</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;&lt;</operator><literal type="string">" "</literal><operator>&lt;&lt;</operator><name><name>r</name><index>[<expr><name>i</name></expr>]</index></name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></for>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>


</unit>
