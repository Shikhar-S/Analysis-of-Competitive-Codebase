include directive file define directive macro name parameter_list parameter type name modifier value ifdef directive name include directive file endif directive using namespace name using name init type name name using name init type name name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name modifier name range expr name block expr_stmt expr name operator name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name else block expr_stmt expr name operator literal type string operator name return expr literal type number 
