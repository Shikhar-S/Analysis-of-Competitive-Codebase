<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29619931_64035346.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name>l</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>r</name><init>=<expr><literal type="number">0</literal></expr></init></decl>,<decl><type ref="prev"/><name>i</name></decl>,<decl><type ref="prev"/><name>j</name></decl>,<decl><type ref="prev"/><name>q</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name><name>d</name><index>[<expr><literal type="number">10</literal></expr>]</index><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>v</name><index>[<expr><literal type="number">1000</literal></expr>]</index></name></decl>;</decl_stmt> 
<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><literal type="number">10</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><for>for<control>(<init><expr><name>j</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>j</name><operator>&lt;</operator><literal type="number">10</literal></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt></block></for></block></for>
<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><literal type="number">10</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
<if>if<condition>(<expr><name>i</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then><block>{
<for>for<control>(<init><expr><name>j</name><operator>=</operator><literal type="number">9</literal></expr>;</init><condition><expr><name>j</name><operator>&gt;=</operator><literal type="number">0</literal></expr>;</condition><incr><expr><name>j</name><operator>--</operator></expr></incr>)</control><block>{
<while>while<condition>(<expr><name>r</name><operator>-</operator><name>l</name><operator>&gt;</operator><literal type="number">6</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>l</name><operator>++</operator></expr>;</expr_stmt></block></while>
<for>for<control>(<init><expr><name>q</name><operator>=</operator><name>l</name></expr>;</init><condition><expr><name>q</name><operator>&lt;</operator><name>r</name></expr>;</condition><incr><expr><name>q</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>+=</operator><name><name>v</name><index>[<expr><name>q</name></expr>]</index></name></expr>;</expr_stmt></block></for>
<expr_stmt><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>+=</operator><literal type="number">6</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>/=</operator><name>r</name><operator>-</operator><name>l</name></expr>;</expr_stmt>
<if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name><name>v</name><index>[<expr><name>r</name><operator>++</operator></expr>]</index></name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name><name>d</name><index>[<expr><name>i</name><operator>-</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>
<else>else <block type="pseudo"><expr_stmt><expr><name><name>v</name><index>[<expr><name>r</name><operator>++</operator></expr>]</index></name><operator>=</operator><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt></block></else></if>
}</block></for>
}</block></then><else>else<block>{
<for>for<control>(<init><expr><name>j</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>j</name><operator>&lt;</operator><literal type="number">10</literal></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block>{
<if>if<condition>(<expr><operator>!</operator><name>i</name><operator>&amp;&amp;</operator><operator>!</operator><name>j</name></expr>)</condition><then><block>{
<expr_stmt><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>v</name><index>[<expr><name>r</name><operator>++</operator></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
<continue>continue;</continue>
}</block></then></if>
<while>while<condition>(<expr><name>r</name><operator>-</operator><name>l</name><operator>&gt;</operator><literal type="number">6</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>l</name><operator>++</operator></expr>;</expr_stmt></block></while>
<for>for<control>(<init><expr><name>q</name><operator>=</operator><name>l</name></expr>;</init><condition><expr><name>q</name><operator>&lt;</operator><name>r</name></expr>;</condition><incr><expr><name>q</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>+=</operator><name><name>v</name><index>[<expr><name>q</name></expr>]</index></name></expr>;</expr_stmt></block></for>
<expr_stmt><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>+=</operator><literal type="number">6</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>/=</operator><name>r</name><operator>-</operator><name>l</name></expr>;</expr_stmt>
<if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name><name>v</name><index>[<expr><name>r</name><operator>++</operator></expr>]</index></name><operator>=</operator><call><name>min</name><argument_list>(<argument><expr><name><name>d</name><index>[<expr><name>i</name><operator>-</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then>
<else>else <block type="pseudo"><expr_stmt><expr><name><name>v</name><index>[<expr><name>r</name><operator>++</operator></expr>]</index></name><operator>=</operator><name><name>d</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt></block></else></if>
}</block></for>
}</block></else></if>
}</block></for>
<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>fixed</name><operator>&lt;&lt;</operator><call><name>setprecision</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call><operator>&lt;&lt;</operator><name><name>d</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
}</block></function></unit>
