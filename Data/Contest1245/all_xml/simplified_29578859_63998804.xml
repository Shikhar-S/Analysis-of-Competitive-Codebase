include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name define directive macro name value define directive macro name value define directive macro name value function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator literal type char operator name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo continue if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string ifdef directive name expr_stmt expr name operator literal type string operator literal type number operator call name argument_list operator name operator literal type string endif directive comment type line return expr literal type number 
