include directive file using namespace name decl_stmt decl type specifier name name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name name index expr name decl_stmt decl type name name name init expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr operator name operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator literal type string return expr literal type number decl_stmt decl type name name init expr literal type number for control init condition expr literal type boolean incr block while condition expr name name index expr name operator literal type char block expr_stmt expr operator name expr_stmt expr operator name if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator literal type number while condition expr name name index expr name operator literal type char block expr_stmt expr operator name expr_stmt expr operator name if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char operator name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name if condition expr name name index expr name operator literal type char then block type pseudo break decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr name operator operator name operator name name index expr name operator operator name expr_stmt expr name operator name operator literal type char return expr literal type number 
