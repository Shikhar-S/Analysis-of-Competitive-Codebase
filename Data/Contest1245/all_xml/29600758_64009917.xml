<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29600758_64009917.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name><init>=<expr><literal type="number">2e5</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<typedef>typedef <type><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>,<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>pii</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>mod</name><init>=<expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>set</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>se</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>vec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>queue</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>q</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>f</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>void</name></type> <name>init</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt><expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">1e5</literal><operator>+</operator><literal type="number">1</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name><operator>%=</operator><name>mod</name></expr>;</expr_stmt>
	}</block></for>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt><expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name></expr>;</expr_stmt><expr_stmt><expr><call><name>init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>int</name></type> <name>len</name><init>=<expr><call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>int</name></type> <name>ok</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>len</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
	<block>{
		<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'m'</literal><operator>||</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'w'</literal></expr>)</condition><then>
		<block>{
			<expr_stmt><expr><name>ok</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt><break>break;</break>
		}</block></then></if>
	}</block></for>
	<if>if<condition>(<expr><name>ok</name><operator>==</operator><literal type="number">0</literal></expr>)</condition><then>
	<block>{
		<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="number">0</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
		<return>return <expr><literal type="number">0</literal></expr>;</return>
	}</block></then></if>
	<decl_stmt><decl><type><name>int</name></type> <name>id</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>int</name></type> <name>lst</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<while>while<condition>(<expr><name>id</name><operator>&lt;</operator><name>len</name></expr>)</condition>
	<block>{
		<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>id</name></expr>]</index></name><operator>!=</operator><literal type="char">'u'</literal></expr>)</condition><then> 
		<block>{
			<expr_stmt><expr><name>id</name><operator>++</operator></expr>;</expr_stmt><expr_stmt><expr><name>lst</name><operator>=</operator><name>id</name></expr>;</expr_stmt><continue>continue;</continue>
		}</block></then></if>
		<while>while<condition>(<expr><name>id</name><operator>&lt;</operator><name>len</name><operator>&amp;&amp;</operator><name><name>s</name><index>[<expr><name>id</name></expr>]</index></name><operator>==</operator><literal type="char">'u'</literal></expr>)</condition> <block type="pseudo"><expr_stmt><expr><name>id</name><operator>++</operator></expr>;</expr_stmt></block></while>
		<expr_stmt><expr><name>id</name><operator>--</operator></expr>;</expr_stmt>
		<comment type="line">//cout&lt;&lt;id&lt;&lt;endl;</comment>
		<expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>f</name><index>[<expr><name>id</name><operator>+</operator><literal type="number">1</literal><operator>-</operator><name>lst</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>ans</name><operator>%=</operator><name>mod</name></expr>;</expr_stmt><expr_stmt><expr><name>id</name><operator>++</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>lst</name><operator>=</operator><name>id</name></expr>;</expr_stmt>
	}</block></while>
	<expr_stmt><expr><name>id</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt><expr_stmt><expr><name>lst</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>id</name><operator>&lt;</operator><name>len</name></expr>)</condition>
	<block>{
		<if>if<condition>(<expr><name><name>s</name><index>[<expr><name>id</name></expr>]</index></name><operator>!=</operator><literal type="char">'n'</literal></expr>)</condition><then> 
		<block>{
			<expr_stmt><expr><name>id</name><operator>++</operator></expr>;</expr_stmt><expr_stmt><expr><name>lst</name><operator>=</operator><name>id</name></expr>;</expr_stmt><continue>continue;</continue>
		}</block></then></if>
		<while>while<condition>(<expr><name>id</name><operator>&lt;</operator><name>len</name><operator>&amp;&amp;</operator><name><name>s</name><index>[<expr><name>id</name></expr>]</index></name><operator>==</operator><literal type="char">'n'</literal></expr>)</condition> <block type="pseudo"><expr_stmt><expr><name>id</name><operator>++</operator></expr>;</expr_stmt></block></while>
		<expr_stmt><expr><name>id</name><operator>--</operator></expr>;</expr_stmt>
		<comment type="line">//cout&lt;&lt;id&lt;&lt;endl;</comment>
		<expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>f</name><index>[<expr><name>id</name><operator>+</operator><literal type="number">1</literal><operator>-</operator><name>lst</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name>ans</name><operator>%=</operator><name>mod</name></expr>;</expr_stmt><expr_stmt><expr><name>id</name><operator>++</operator></expr>;</expr_stmt>
		<expr_stmt><expr><name>lst</name><operator>=</operator><name>id</name></expr>;</expr_stmt>
	}</block></while>
	<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
 }</block></function> </unit>
