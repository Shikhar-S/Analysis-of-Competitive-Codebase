include directive file define directive macro name value using namespace name typedef type name name name typedef type name name name name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char expr_stmt expr name operator call name argument_list return expr ternary condition expr name then expr operator name else expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list decl type ref prev name init expr call name argument_list decl type ref prev name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator if condition expr name operator operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name name index expr name else block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type char else block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type char else block expr_stmt expr name operator expr_stmt expr name operator literal type char expr_stmt expr call name argument_list argument expr literal type string 
