include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type modifier value using namespace name decl_stmt decl type specifier name name init expr literal type string function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name if condition expr name operator literal type char then block expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char elseif if condition expr name operator literal type char then block expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char else block expr_stmt expr name operator if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block type pseudo continue decl_stmt decl type name name init expr name name index expr name if condition expr name operator literal type char then block expr_stmt expr call name argument_list argument expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char elseif if condition expr name operator literal type char then block expr_stmt expr call name argument_list argument expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char else block expr_stmt expr call name argument_list argument expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block type pseudo continue if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char elseif if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char elseif if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr call name argument_list argument expr name operator literal type number operator name operator literal type number operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string return expr literal type number 
