comment type line include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr operator call name argument_list argument expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr operator call name argument_list argument expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name operator name operator name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name name index expr name operator if condition expr call name argument_list argument expr name argument expr name name index expr literal type char operator call name argument_list argument expr name argument expr name name index expr literal type char operator call name argument_list argument expr name argument expr name name index expr literal type char operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char operator name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name operator expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char operator name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name operator expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char operator name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name operator expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name then block type pseudo continue if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name else block type pseudo expr_stmt expr call name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
