include directive file using namespace name namespace name block decl_stmt decl type name name name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator name function type name name name parameter_list block decl_stmt decl type name name name init expr operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator return expr operator name operator operator operator name operator name operator literal type number operator operator name operator operator literal type number operator decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name name index expr literal type number function type name name name parameter_list parameter decl type name name block return expr name name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name if condition expr call name name operator name argument_list argument expr literal type char operator name name operator name operator call name name operator name argument_list argument expr literal type char operator name name operator name then block expr_stmt expr name operator literal type number operator name return expr literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name elseif if condition expr name then block type pseudo expr_stmt expr name operator operator name operator call name argument_list argument expr name operator name operator operator name operator expr name operator literal type number if condition expr name then block type pseudo expr_stmt expr name operator operator name operator call name argument_list argument expr name operator name operator operator name operator expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name elseif if condition expr name then block type pseudo expr_stmt expr name operator operator name operator call name argument_list argument expr name operator name operator operator name operator expr name operator literal type number if condition expr name then block type pseudo expr_stmt expr name operator operator name operator call name argument_list argument expr name operator name operator operator name operator expr name operator literal type number expr_stmt expr name operator name operator name return expr literal type number 
