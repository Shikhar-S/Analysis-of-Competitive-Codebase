include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr name operator name operator name operator name operator name expr_stmt expr name operator name comment type line decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number else block type pseudo expr_stmt expr name operator literal type number comment type line decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl type ref prev name init expr call name argument_list argument expr name argument expr name decl type ref prev name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr name operator name operator name comment type line decl_stmt decl type name name init expr name operator literal type number operator operator name operator literal type number operator if condition expr name operator name then block expr_stmt expr name operator literal type string operator name return while condition expr name operator name block if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name else block type pseudo expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name operator name operator expr name operator name operator expr name operator name comment type line macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator literal type char decl_stmt decl type name name init expr name name index expr name operator literal type number if condition expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name elseif if condition expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name elseif if condition expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char then block type pseudo continue if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name expr_stmt expr name operator literal type string operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name expr_stmt expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list comment type line expr_stmt expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list return expr literal type number 
