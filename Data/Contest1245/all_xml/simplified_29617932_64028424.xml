include directive file include directive file define directive macro name value decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number comment type line function type name name parameter_list block for control init expr call name argument_list argument expr literal type string argument expr operator name condition expr name operator incr block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name argument expr name decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name decl_stmt decl type name name name expr_stmt expr name operator call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name argument expr name if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name if condition expr name name index expr name operator literal type char then block type pseudo if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name if condition expr name name index expr name operator literal type char then block type pseudo if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name for control init decl type name name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name else block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name for control init decl type name name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
