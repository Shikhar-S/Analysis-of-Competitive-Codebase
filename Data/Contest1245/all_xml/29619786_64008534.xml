<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29619786_64008534.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstring&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>mod</name> <init>= <expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>string</name></type> <name>a</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ll</name></type> <name><name>f</name><index>[<expr><literal type="number">100011</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ll</name></type> <name>ans</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
		<if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'w'</literal> <operator>||</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'m'</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">0</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><name><name>f</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>f</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <literal type="number">100000</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
		<expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name><name>f</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>%=</operator> <name>mod</name></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><name>ans</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt> <expr_stmt><expr><name>num</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
	<if>if<condition>(<expr><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'u'</literal> <operator>||</operator> <name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'n'</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>num</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></then></if>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>a</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
		<if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'u'</literal> <operator>||</operator> <name><name>a</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'n'</literal></expr>)</condition><then> <block>{
			<if>if<condition>(<expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name><name>a</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>num</name><operator>++</operator></expr>;</expr_stmt></block></then>
			<else>else <block>{
				<expr_stmt><expr><name>ans</name> <operator>*=</operator> <name><name>f</name><index>[<expr><name>num</name></expr>]</index></name></expr>;</expr_stmt>
				<expr_stmt><expr><name>ans</name> <operator>%=</operator> <name>mod</name></expr>;</expr_stmt>
				<expr_stmt><expr><name>num</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then>
		<else>else <block>{
			<expr_stmt><expr><name>ans</name> <operator>*=</operator> <name><name>f</name><index>[<expr><name>num</name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name>ans</name> <operator>%=</operator> <name>mod</name></expr>;</expr_stmt>
			<expr_stmt><expr><name>num</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
	<expr_stmt><expr><name>ans</name> <operator>*=</operator> <name><name>f</name><index>[<expr><name>num</name></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name>ans</name> <operator>%=</operator> <name>mod</name></expr>;</expr_stmt>
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function> 
<comment type="block">/*
nnnn
1.nnnn
2.mnn
3.nmn
4.nnm
5.mm

nnnnn
1.nnnnn
2.mnnn
3.nmnn
4.nnmn
5.nnnm
6.mmn
7.mnm
8.nmm

2:2
3:3
4:5
5:8

nnnnnn

1.mmm
2.mmnn
3.mnmn
4.mnnm
5.nmmn
6.nmnm
7.nnmm
8.nnnnnn
9.mnnnn
10.nmnnn
11.nnmnn
12.nnnmn
13.nnnnm

*/</comment></unit>
