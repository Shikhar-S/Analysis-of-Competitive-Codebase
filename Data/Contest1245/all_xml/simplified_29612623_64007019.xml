comment type line include directive file using namespace name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name typedef type name name name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name ifdef directive name define directive macro name parameter_list parameter type name value else directive define directive macro name parameter_list parameter type name endif directive function template parameter_list parameter type name name init expr name type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name init expr name block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name name argument_list type generic argument expr name typename name name argument_list type generic argument expr decltype argument_list argument expr operator name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name modifier name init expr name block while condition expr name operator name block expr_stmt expr name operator operator operator name operator operator operator literal type char expr_stmt expr name operator name define directive macro name value decl_stmt decl specifier type name name init expr literal type number operator literal type number function type name name parameter_list block ifdef directive name comment type line comment type line endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null decl_stmt decl type name name init expr call name name argument_list type generic argument expr name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator literal type number operator name name index expr name if condition expr name operator name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator literal type char then block expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator literal type number if condition expr name operator name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator literal type char then block expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator literal type number if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name name index expr name operator literal type number operator literal type number expr_stmt expr name name index expr name operator literal type number operator name expr_stmt expr name operator name name index expr name operator name 
