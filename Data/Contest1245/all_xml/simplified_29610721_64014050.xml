comment type block include directive file define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value using namespace name using name init type name name comment type block format doxygen decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator literal type string operator name macro name argument_list argument argument expr_stmt expr name name index expr name operator literal type number macro name argument_list argument argument block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator macro name argument_list argument argument block if condition expr name name index expr name then block type pseudo continue if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr operator name operator literal type number operator operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator macro name argument_list argument argument literal type number macro name argument_list argument argument literal type number block decl_stmt decl type name name init expr name operator name operator name if condition expr name operator name operator name operator name operator name operator name then block type pseudo continue if condition expr name operator name operator name operator name operator name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator literal type boolean break if condition expr operator name then block expr_stmt expr name operator literal type string operator name function type name name parameter_list block expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list 
