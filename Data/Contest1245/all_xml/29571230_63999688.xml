<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29571230_63999688.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name><init>=<expr><literal type="number">1007</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>s</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name><name>ans</name><index>[<expr><name>maxn</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>u</name></decl>,<decl><type ref="prev"/><name>v</name></decl>,<decl><type ref="prev"/><name>w</name></decl>,<decl><type ref="prev"/><name>test</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<while>while <condition>(<expr><name>t</name><operator>--</operator></expr>)</condition><block>{
		<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d%d%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>u</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>v</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>test</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>ans</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ans</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block>{
			<expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
		}</block></for>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block>{
			<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'R'</literal></expr>)</condition><then><block>{
				<if>if <condition>(<expr><name>v</name></expr>)</condition><then><block>{
					<expr_stmt><expr><name>v</name><operator>--</operator></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'P'</literal></expr>;</expr_stmt>
					<expr_stmt><expr><name>test</name><operator>++</operator></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
			<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'P'</literal></expr>)</condition><then><block>{
				<if>if <condition>(<expr><name>w</name></expr>)</condition><then><block>{
					<expr_stmt><expr><name>w</name><operator>--</operator></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'S'</literal></expr>;</expr_stmt>
					<expr_stmt><expr><name>test</name><operator>++</operator></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
			<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'S'</literal></expr>)</condition><then><block>{
				<if>if <condition>(<expr><name>u</name></expr>)</condition><then><block>{
					<expr_stmt><expr><name>u</name><operator>--</operator></expr>;</expr_stmt>
					<expr_stmt><expr><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'R'</literal></expr>;</expr_stmt>
					<expr_stmt><expr><name>test</name><operator>++</operator></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
		}</block></for>
		<if>if <condition>(<expr><name>test</name><operator>&gt;=</operator><operator>(</operator><name>n</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>)</condition><then><block>{
			<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
			<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block>{
				<if>if <condition>(<expr><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then><block>{
					<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name><name>ans</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
					<continue>continue;</continue>
				}</block></then></if> 
				<if>if <condition>(<expr><name>u</name></expr>)</condition><then><block>{
					<expr_stmt><expr><name>u</name><operator>--</operator></expr>;</expr_stmt>
					<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"R"</literal></expr>;</expr_stmt>
					<continue>continue;</continue>
				}</block></then></if>
				<if>if <condition>(<expr><name>v</name></expr>)</condition><then><block>{
					<expr_stmt><expr><name>v</name><operator>--</operator></expr>;</expr_stmt>
					<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"P"</literal></expr>;</expr_stmt>
					<continue>continue;</continue>
				}</block></then></if>
				<expr_stmt><expr><name>w</name><operator>--</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"S"</literal></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
		}</block></then>
		<else>else<block>{
			<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
		}</block></else></if>
	}</block></while>
}</block></function></unit>
