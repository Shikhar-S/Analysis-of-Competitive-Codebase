include directive file using name init type name name using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr name operator name operator name decl_stmt decl type name name init expr name operator operator name operator literal type number operator operator literal type number expr_stmt expr name operator operator ternary condition expr name then expr literal type string else expr literal type string operator operator literal type char if condition expr name then block for control init expr name operator name operator name block if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name operator name then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name operator name then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator else block if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name operator name then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator name operator literal type char 
