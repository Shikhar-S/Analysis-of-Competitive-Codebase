<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29614569_64022034.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<using>using <name>ll</name> <init>= <type><name>long</name> <name>long</name></type></init>;</using>



<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
  
  
	
  <decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>s</name></expr>;</expr_stmt>
  
  
  <decl_stmt><decl><type><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>ll</name></expr></argument>&gt;</argument_list></name></type> <name>asd</name><argument_list>(<argument><expr><literal type="number">100001</literal></expr></argument>)</argument_list></decl>;</decl_stmt>
  <expr_stmt><expr><name><name>asd</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>asd</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>asd</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>asd</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>=</operator><literal type="number">3</literal></expr>;</expr_stmt>
  <expr_stmt><expr><name><name>asd</name><index>[<expr><literal type="number">4</literal></expr>]</index></name><operator>=</operator><literal type="number">5</literal></expr>;</expr_stmt>
  <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">100001</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
    <expr_stmt><expr><name><name>asd</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>asd</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>asd</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name>asd</name><index>[<expr><name>i</name></expr>]</index></name><operator>%=</operator><literal type="number">1000000007</literal></expr>;</expr_stmt>
  }</block></for>
  
  
  <decl_stmt><decl><type><name>int</name></type> <name>n</name> <init>= <expr><call><name><name>s</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  
  <decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
  
  <decl_stmt><decl><type><name>int</name></type> <name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>int</name></type> <name>b</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    
  <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
    <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'m'</literal> <operator>||</operator> <name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'w'</literal></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr>;</expr_stmt><return>return <expr><literal type="number">0</literal></expr>;</return>}</block></then></if>
    
    <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><literal type="char">'u'</literal> <operator>&amp;&amp;</operator> <name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><literal type="char">'n'</literal></expr>)</condition><then><block>{
      <expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>asd</name><index>[<expr><name>b</name></expr>]</index></name></expr>;</expr_stmt>
      <expr_stmt><expr><name>ans</name><operator>%=</operator><literal type="number">1000000007</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>ans</name> <operator>*=</operator> <name><name>asd</name><index>[<expr><name>a</name></expr>]</index></name></expr>;</expr_stmt>
      
      <expr_stmt><expr><name>a</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>b</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    }</block></then>
    <elseif>else <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'u'</literal></expr>)</condition><then><block>{
      <expr_stmt><expr><name>a</name><operator>++</operator></expr>;</expr_stmt>
      
      
      <expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>asd</name><index>[<expr><name>b</name></expr>]</index></name></expr>;</expr_stmt>
      
      <expr_stmt><expr><name>b</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    }</block></then></if></elseif>
    <elseif>else <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'n'</literal></expr>)</condition><then><block>{
      <expr_stmt><expr><name>b</name><operator>++</operator></expr>;</expr_stmt>
      
      <expr_stmt><expr><name>ans</name> <operator>*=</operator> <name><name>asd</name><index>[<expr><name>a</name></expr>]</index></name></expr>;</expr_stmt>
      <expr_stmt><expr><name>a</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    }</block></then></if></elseif></if>
    <comment type="line">//cout&lt;&lt;s[i] &lt;&lt; ": " &lt;&lt; a &lt;&lt;" " &lt;&lt;b &lt;&lt; " " &lt;&lt;ans &lt;&lt;endl;</comment>
    <expr_stmt><expr><name>ans</name><operator>%=</operator><literal type="number">1000000007</literal></expr>;</expr_stmt>
  }</block></for>
  <expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>asd</name><index>[<expr><name>a</name></expr>]</index></name></expr>;</expr_stmt>
  <expr_stmt><expr><name>ans</name><operator>%=</operator><literal type="number">1000000007</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>ans</name> <operator>*=</operator> <name><name>asd</name><index>[<expr><name>b</name></expr>]</index></name></expr>;</expr_stmt>
  <expr_stmt><expr><name>ans</name><operator>%=</operator><literal type="number">1000000007</literal></expr>;</expr_stmt>
  
  <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator><name>ans</name></expr>;</expr_stmt>
  
}</block></function>
</unit>
