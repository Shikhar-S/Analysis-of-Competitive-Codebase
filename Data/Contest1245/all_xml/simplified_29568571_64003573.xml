include directive file include directive file include directive file include directive file include directive file define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number decl type ref prev name name index init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number struct name block public type default constructor name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator call name argument_list argument expr literal type number expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl name comment type block decl_stmt decl type name name init expr name struct name block public type default decl_stmt decl type name name constructor name parameter_list member_init_list call name argument_list argument expr literal type number block constructor name parameter_list parameter decl type name name name member_init_list call name argument_list argument expr ternary condition expr name operator literal type number then expr name operator name else expr name operator name operator name block function type name name parameter_list parameter decl type name name name block decl_stmt decl type name name init expr operator name decl type ref prev name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block if condition expr operator name operator name name operator name operator operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block if condition expr operator name operator name operator name name operator name operator operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator cast type static argument_list type generic argument expr name name name argument_list argument expr name operator name name operator name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block return expr operator name operator call name name operator name argument_list function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function type operator type name name name parameter_list specifier block return expr call name argument_list argument expr ternary condition expr name then expr name operator name else expr literal type number function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name friend function type operator type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block return expr name operator name name operator name friend function type operator type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name name name expr_stmt expr operator name name expr_stmt expr operator call name argument_list argument expr name return expr name private function type name name parameter_list specifier block comment type line decl_stmt decl type name name init expr name decl type ref prev name init expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name block decl_stmt decl type name name init expr name operator name expr_stmt expr call name argument_list argument expr name operator name operator name argument expr name expr_stmt expr call name argument_list argument expr name operator name operator name argument expr name return expr call name argument_list argument expr name function type name name parameter_list parameter decl type specifier name modifier name block return expr name name operator name struct name block public type default decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl type ref prev name constructor name parameter_list parameter decl type name name init expr literal type number member_init_list call name argument_list argument expr name call name argument_list argument expr name operator literal type number call name argument_list argument expr name operator literal type number call name argument_list argument expr name operator literal type number block expr_stmt expr name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number operator name name index expr name for control init decl type name name init expr name condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number operator name operator name operator name operator literal type number then block type pseudo return expr call name argument_list argument expr literal type number comment type line return expr name name index expr name operator name name index expr name operator name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number operator name operator name operator name operator literal type number then block type pseudo return expr call name argument_list argument expr literal type number comment type line return expr name name index expr name operator name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr call name argument_list argument expr literal type number return expr operator ternary condition expr name operator literal type number then expr call name argument_list argument expr literal type number else expr call name argument_list argument expr name operator name operator literal type number argument expr name operator function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name range expr name block if condition expr name operator literal type char operator name operator literal type char then block expr_stmt expr name operator literal type number operator literal type char return expr literal type number decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr operator name continue decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name operator literal type number while condition expr name operator name operator name name index expr name operator name block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type char return expr literal type number 
