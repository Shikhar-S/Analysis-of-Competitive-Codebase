include directive file include directive file include directive file include directive file include directive file define directive macro name value using namespace name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name name index expr literal type number decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block type pseudo expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr call name argument_list argument expr name argument expr name operator name else expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list while condition expr name operator block expr_stmt expr name operator call name argument_list expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator name name index expr literal type number operator literal type number expr_stmt expr name operator call name argument_list operator expr name operator call name argument_list operator expr name operator call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name name index expr literal type number operator call name argument_list argument expr name argument expr name name index expr literal type number operator call name argument_list argument expr name argument expr name name index expr literal type number if condition expr name operator operator operator name operator literal type number operator operator literal type number operator then block expr_stmt expr call name argument_list argument expr literal type string continue expr_stmt expr call name argument_list argument expr literal type string for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type char for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo continue if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator else block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type char return expr literal type number 
