include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name operator name operator literal type number elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name else block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name operator name operator name else block type pseudo expr_stmt expr name operator name operator name operator name return expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr operator literal type number for control init decl type name name init expr name condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type number operator name name index expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name operator literal type number operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name index expr name operator name name index expr name operator name operator name name index expr name operator name operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator literal type char decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator name name index expr name operator literal type char then block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block type pseudo expr_stmt expr operator name operator call name argument_list argument expr name operator name argument expr name operator operator name expr_stmt expr operator name operator name operator operator name expr_stmt expr name operator literal type number if condition expr name operator name name index expr name operator literal type char then block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr operator name block type pseudo expr_stmt expr operator name operator call name argument_list argument expr name operator name argument expr name operator operator name expr_stmt expr operator name operator name operator operator name expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator name operator name 
