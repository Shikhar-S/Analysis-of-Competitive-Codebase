include directive file using namespace name decl_stmt decl type name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name name index expr name operator decl_stmt decl type name name init expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr call name name operator name argument_list then block type pseudo continue if condition expr name operator name operator name operator operator name operator literal type number operator operator literal type number then block type pseudo continue if condition expr name operator name name index expr literal type char operator name operator name name index expr literal type char operator name operator name name index expr literal type char then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator literal type char decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator operator expr name operator if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator operator expr name operator if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator operator expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo continue if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator else block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator expr_stmt expr call name argument_list argument expr name operator literal type number operator name operator literal type number operator name operator literal type number if condition expr call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string operator name operator name else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
