include directive file using namespace name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive comment type line decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator name name index expr name operator literal type char then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name if condition expr name operator name name index expr name operator literal type char then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name if condition expr name operator name name index expr name operator literal type char then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo continue if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name else block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name if condition expr name operator literal type number operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name name index expr name operator literal type char expr_stmt expr call name argument_list argument expr literal type string argument expr name return expr literal type number 
