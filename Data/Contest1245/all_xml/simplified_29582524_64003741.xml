include directive file define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value using namespace name if directive expr operator call name argument_list argument expr name include directive file endif directive function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type char decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator call name argument_list argument expr name elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator call name argument_list argument expr name else block type pseudo expr_stmt expr name name index expr literal type number operator call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator name operator name name index expr literal type number operator call name argument_list operator call name argument_list argument expr name argument expr operator name operator name name index expr literal type number operator call name argument_list operator call name argument_list argument expr name argument expr operator name operator name name index expr literal type number operator call name argument_list decl_stmt decl type name name init expr name operator literal type number operator name operator literal type number if condition expr name operator name then block expr_stmt expr name operator literal type string decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator literal type number then block while condition expr name operator name name index expr name operator call name argument_list block expr_stmt expr name operator expr_stmt expr name name index expr name name index expr name operator call name argument_list operator literal type char expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char elseif if condition expr name operator literal type number then block while condition expr name operator name name index expr name operator call name argument_list block expr_stmt expr name operator expr_stmt expr name name index expr name name index expr name operator call name argument_list operator literal type char expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char else block while condition expr name operator name name index expr name operator call name argument_list block expr_stmt expr name operator expr_stmt expr name name index expr name name index expr name operator call name argument_list operator literal type char expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list else block type pseudo expr_stmt expr name operator name name index expr name else block expr_stmt expr name operator literal type string expr_stmt expr name operator name return expr literal type number 
