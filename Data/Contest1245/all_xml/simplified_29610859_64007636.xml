include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value typedef type name name name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number typedef type struct name block public type default decl_stmt decl type name name decl_stmt decl type name name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name name index expr name operator name name index expr name operator literal type number else block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type number operator literal type char then block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name elseif if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type number operator literal type char then block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name name index expr name operator literal type number if condition expr operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
