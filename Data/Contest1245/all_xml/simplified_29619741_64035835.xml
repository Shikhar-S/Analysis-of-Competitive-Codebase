include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator name expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator block expr_stmt expr name operator call name argument_list operator expr name operator call name argument_list operator expr name operator call name argument_list operator expr name operator call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator operator expr operator name if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator operator expr operator name if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator operator expr operator name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name then block type pseudo continue if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator if condition expr name operator operator operator name operator literal type number operator operator literal type number operator then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number else block type pseudo expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name return expr literal type number comment type block 
