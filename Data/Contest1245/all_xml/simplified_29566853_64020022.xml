define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value typedef type name name name using namespace name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr literal type number elseif if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name modifier name init expr name name index expr name if condition expr name operator literal type number then block type pseudo return expr name name index expr name return expr operator name operator operator call name argument_list argument expr name operator literal type number operator call name argument_list argument expr name operator literal type number operator operator name operator decl_stmt decl type name name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number while condition expr name operator call name name operator name argument_list block expr_stmt expr name operator call name name operator name argument_list index expr name operator if condition expr name operator literal type char operator name operator literal type char then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name operator literal type char then block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name operator literal type char then block expr_stmt expr name operator operator name operator call name argument_list argument expr name operator operator name expr_stmt expr name operator literal type number else block expr_stmt expr name operator literal type number elseif if condition expr name operator literal type char then block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name operator literal type char then block expr_stmt expr name operator operator name operator call name argument_list argument expr name operator operator name expr_stmt expr name operator literal type number else block expr_stmt expr name operator literal type number else block if condition expr name operator literal type char then block expr_stmt expr name operator operator name operator call name argument_list argument expr name operator operator name expr_stmt expr name operator literal type number elseif if condition expr name operator literal type char then block expr_stmt expr name operator operator name operator call name argument_list argument expr name operator operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator operator name operator call name argument_list argument expr name operator operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name 
