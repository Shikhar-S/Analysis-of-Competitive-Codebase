<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29581018_64005945.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>

<decl_stmt><decl><type><name>int</name></type> <name>ntest</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>string</name></type> <name>st</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ns</name></decl>,<decl><type ref="prev"/><name>np</name></decl>,<decl><type ref="prev"/><name>nr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>string</name></type> <name>res</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>s</name></decl>,<decl><type ref="prev"/><name>p</name></decl>,<decl><type ref="prev"/><name>r</name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
<comment type="line">//    freopen("input.txt","r",stdin);</comment>
    <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>ntest</name></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>nt</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>nt</name><operator>&lt;=</operator><name>ntest</name></expr>;</condition><incr><expr><name>nt</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>n</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>nr</name><operator>&gt;&gt;</operator><name>np</name><operator>&gt;&gt;</operator><name>ns</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>st</name></expr>;</expr_stmt>
        <expr_stmt><expr><name>res</name><operator>=</operator><literal type="string">""</literal></expr>;</expr_stmt><for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block type="pseudo"><expr_stmt><expr><name>res</name><operator>=</operator><name>res</name><operator>+</operator><literal type="char">' '</literal></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><name>s</name><operator>=</operator><name>p</name><operator>=</operator><name>r</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt><decl_stmt><decl><type><name>int</name></type> <name>kq</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
            <if>if <condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'S'</literal> <operator>&amp;&amp;</operator> <name>nr</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>kq</name><operator>++</operator></expr>;</expr_stmt><expr_stmt><expr><name><name>res</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'R'</literal></expr>;</expr_stmt><expr_stmt><expr><name>nr</name><operator>--</operator></expr>;</expr_stmt>
            }</block></then></if>
            <if>if <condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'P'</literal> <operator>&amp;&amp;</operator> <name>ns</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>kq</name><operator>++</operator></expr>;</expr_stmt><expr_stmt><expr><name><name>res</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'S'</literal></expr>;</expr_stmt><expr_stmt><expr><name>ns</name><operator>--</operator></expr>;</expr_stmt>
            }</block></then></if>
            <if>if <condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'R'</literal> <operator>&amp;&amp;</operator> <name>np</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>kq</name><operator>++</operator></expr>;</expr_stmt><expr_stmt><expr><name><name>res</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'P'</literal></expr>;</expr_stmt><expr_stmt><expr><name>np</name><operator>--</operator></expr>;</expr_stmt>
            }</block></then></if>
        }</block></for>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
            <if>if <condition>(<expr><name><name>res</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">' '</literal></expr>)</condition><then><block>{
                <if>if <condition>(<expr><name>nr</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                    <expr_stmt><expr><name>nr</name><operator>--</operator></expr>;</expr_stmt><expr_stmt><expr><name><name>res</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'R'</literal></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if>if <condition>(<expr><name><name>res</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">' '</literal></expr>)</condition><then><block>{
                <if>if <condition>(<expr><name>ns</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                    <expr_stmt><expr><name>ns</name><operator>--</operator></expr>;</expr_stmt><expr_stmt><expr><name><name>res</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'S'</literal></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if>if <condition>(<expr><name><name>res</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">' '</literal></expr>)</condition><then><block>{
                <if>if <condition>(<expr><name>np</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><then><block>{
                    <expr_stmt><expr><name>np</name><operator>--</operator></expr>;</expr_stmt><expr_stmt><expr><name><name>res</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><literal type="char">'P'</literal></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></for>
        <decl_stmt><decl><type><name>int</name></type> <name>nz</name><init>=<expr><operator>(</operator><name>n</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>kq</name><operator>&gt;=</operator><name>nz</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES\n"</literal><operator>&lt;&lt;</operator><name>res</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt></block></then>
        <else>else <block type="pseudo"><expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO\n"</literal></expr>;</expr_stmt></block></else></if>
    }</block></for>
}</block></function>
</unit>
