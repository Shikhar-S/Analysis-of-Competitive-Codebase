include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block type pseudo expr_stmt expr name operator operator name operator literal type char operator operator expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type char operator operator expr name operator call name argument_list if condition expr name then block type pseudo expr_stmt expr name operator operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number function type name name parameter_list block comment type line comment type line expr_stmt expr call name argument_list argument expr name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number comment type line for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator name if condition expr literal type number operator name operator name then block expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name incr expr name operator block if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name incr expr name operator block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char operator name name index expr name operator literal type char then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name operator literal type char expr_stmt expr call name argument_list argument expr literal type string argument expr name else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
