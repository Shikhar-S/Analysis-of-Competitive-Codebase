include directive file using namespace name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name name index expr literal type char operator literal type number expr_stmt expr name name index expr literal type char operator literal type number expr_stmt expr name name index expr literal type char operator literal type number expr_stmt expr name name index expr literal type number operator literal type char expr_stmt expr name name index expr literal type number operator literal type char expr_stmt expr name name index expr literal type number operator literal type char expr_stmt expr call name name operator name argument_list argument expr literal type char expr_stmt expr call name name operator name argument_list argument expr literal type char expr_stmt expr call name name operator name argument_list argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name operator name name index expr literal type number operator name name index expr literal type number operator name name index expr literal type number expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr operator name name index expr name name index expr name operator literal type number operator operator literal type number operator literal type number then block expr_stmt expr name operator expr_stmt expr operator name name index expr operator name name index expr name name index expr name operator literal type number operator operator literal type number expr_stmt expr name operator name name index expr operator name name index expr name name index expr name operator literal type number operator operator literal type number else block expr_stmt expr name operator literal type string if condition expr name operator literal type number operator literal type number then block if condition expr name operator name operator literal type number then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name continue else block if condition expr name operator name operator literal type number then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator name name index expr name break expr_stmt expr name operator name operator name return expr literal type number 
