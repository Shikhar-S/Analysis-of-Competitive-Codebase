include directive file using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block switch condition expr name name index expr name block case expr literal type char expr_stmt expr operator name break case expr literal type char expr_stmt expr operator name break case expr literal type char expr_stmt expr operator name break decl_stmt decl type name name init expr name operator name decl type ref prev name init expr name operator name decl type ref prev name init expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string operator literal type char else block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block switch condition expr name name index expr name block case expr literal type char if condition expr name then block type pseudo expr_stmt expr operator name operator expr name operator literal type string else block if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name operator expr name operator literal type string else block type pseudo expr_stmt expr operator name operator expr name operator literal type string break case expr literal type char if condition expr name then block type pseudo expr_stmt expr operator name operator expr name operator literal type string else block if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name operator expr name operator literal type string else block type pseudo expr_stmt expr operator name operator expr name operator literal type string break case expr literal type char if condition expr name then block type pseudo expr_stmt expr operator name operator expr name operator literal type string else block if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name operator expr name operator literal type string else block type pseudo expr_stmt expr operator name operator expr name operator literal type string break expr_stmt expr name operator literal type char return expr literal type number 
