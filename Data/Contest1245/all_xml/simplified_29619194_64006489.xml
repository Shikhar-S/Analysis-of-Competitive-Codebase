include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number typedef type name name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name name index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr literal type number decl_stmt decl type name modifier name init expr name name index expr name index expr name index expr name if condition expr operator name then block type pseudo return expr name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr name name index expr name operator literal type char decl type ref prev name init expr name name index expr name operator literal type char decl type ref prev name init expr name name index expr name operator literal type char if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name operator literal type number if condition expr name operator name operator name operator name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return decl_stmt decl type name name init expr name name index expr name operator literal type char decl type ref prev name init expr name name index expr name operator literal type char decl type ref prev name init expr name name index expr name operator literal type char decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr operator literal type number decl type ref prev name init expr operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name operator literal type number if condition expr name operator name operator name operator name operator literal type number then block type pseudo expr_stmt expr name operator name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number argument expr name elseif if condition expr name operator name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name argument expr name operator literal type number else block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name argument expr name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr call name argument_list argument expr literal type number argument expr name argument expr name if condition expr name operator literal type number operator name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type number argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string 
