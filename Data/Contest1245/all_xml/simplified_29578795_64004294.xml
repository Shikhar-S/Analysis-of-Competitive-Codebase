include directive file using namespace name typedef type name name name function type name name name parameter_list parameter decl type name name name parameter decl type name name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type string decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr name init expr block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator name operator expr name operator if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator name operator expr name operator if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator name operator expr name operator if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator literal type char elseif if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator literal type char elseif if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator literal type char else block if condition expr name then block type pseudo expr_stmt expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name operator literal type char operator expr name operator expr_stmt expr name operator name operator literal type string else block type pseudo expr_stmt expr name operator literal type string 
