include directive file include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block switch condition expr name name index expr name block case expr literal type char block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char break case expr literal type char block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char break case expr literal type char block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char break for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block continue switch condition expr name name index expr name block case expr literal type char block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char break case expr literal type char block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char break case expr literal type char block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char break for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block continue switch condition expr name name index expr name block case expr literal type char block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char break case expr literal type char block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char break case expr literal type char block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char break if condition expr call name argument_list argument expr operator name operator name operator literal type number operator literal type number operator name then block expr_stmt expr name operator literal type string for control init decl type name name range expr name block expr_stmt expr name operator name expr_stmt expr name operator literal type char else block expr_stmt expr name operator literal type string 
