<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29612723_64000498.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>ll</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>ll</name></type> <name>mod</name><init>=<expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>dp</name><index>[<expr><literal type="number">100001</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><call><name><name>ios</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt><expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>s</name></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>auto</name></type> <name>cur</name><range>:<expr><name>s</name></expr></range></decl></init>)</control><block>{
		<if>if<condition>(<expr><name>cur</name><operator>==</operator><literal type="char">'m'</literal> <operator>||</operator> <name>cur</name><operator>==</operator><literal type="char">'w'</literal></expr>)</condition><then> <block type="pseudo"><return>return <expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"0\n"</literal></expr><operator>,</operator><expr><literal type="number">0</literal></expr>;</return></block></then></if>
	}</block></for>
	<expr_stmt><expr><name><name>dp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><name><name>dp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><call><name><name>s</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr> ;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
		<expr_stmt><expr><name><name>dp</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name><name>dp</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>dp</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>%</operator><name>mod</name></expr>;</expr_stmt>
	}</block></for>
	<decl_stmt><decl><type><name>char</name></type> <name>prv</name><init>=<expr><literal type="char">'0'</literal></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>int</name></type> <name>cnt</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
	<for>for<control>(<init><decl><type><name>auto</name></type> <name>cur</name><range>:<expr><name>s</name></expr></range></decl></init>)</control><block>{
		<if>if<condition>(<expr><name>cur</name><operator>!=</operator><name>prv</name></expr>)</condition><then><block>{
			<if>if<condition>(<expr><name>prv</name><operator>!=</operator><literal type="char">'u'</literal> <operator>&amp;&amp;</operator> <name>prv</name><operator>!=</operator><literal type="char">'n'</literal></expr>)</condition><then><block type="pseudo"><empty_stmt>;</empty_stmt></block></then>
			<else>else<block>{
				<expr_stmt><expr><name>ans</name><operator>=</operator><name>ans</name><operator>*</operator><name><name>dp</name><index>[<expr><name>cnt</name></expr>]</index></name><operator>%</operator><name>mod</name></expr>;</expr_stmt>
			}</block></else></if>
			<expr_stmt><expr><name>prv</name><operator>=</operator><name>cur</name></expr>;</expr_stmt><expr_stmt><expr><name>cnt</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name>cnt</name><operator>++</operator></expr>;</expr_stmt>
	}</block></for>
	<if>if<condition>(<expr><literal type="boolean">true</literal></expr>)</condition><then><block>{
		<if>if<condition>(<expr><name>prv</name><operator>!=</operator><literal type="char">'u'</literal> <operator>&amp;&amp;</operator> <name>prv</name><operator>!=</operator><literal type="char">'n'</literal></expr>)</condition><then><block type="pseudo"><empty_stmt>;</empty_stmt></block></then>
		<else>else<block>{
			<expr_stmt><expr><name>ans</name><operator>=</operator><name>ans</name><operator>*</operator><name><name>dp</name><index>[<expr><name>cnt</name></expr>]</index></name><operator>%</operator><name>mod</name></expr>;</expr_stmt>
		}</block></else></if>
		<comment type="line">//prv=cur;cnt=0;</comment>
	}</block></then></if>
	<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ans</name> <operator>&lt;&lt;</operator> <literal type="char">'\n'</literal></expr>;</expr_stmt>
}</block></function></unit>
