<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29609825_64034854.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>N</name><init>=<expr><literal type="number">20</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>a</name><index>[<expr><name>N</name></expr>]</index><index>[<expr><name>N</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name>n</name><init>=<expr><literal type="number">10</literal></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>double</name></type> <name><name>dp</name><index>[<expr><name>N</name></expr>]</index><index>[<expr><name>N</name></expr>]</index></name></decl>,<decl><type ref="prev"/><name>sum</name></decl>;</decl_stmt>
<function><type><name>void</name></type> <name>mov</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>k</name></decl></parameter>,<parameter><decl><type><name>int</name> <modifier>&amp;</modifier></type><name>xx</name></decl></parameter>,<parameter><decl><type><name>int</name> <modifier>&amp;</modifier></type><name>yy</name></decl></parameter>)</parameter_list><block>{
    <if>if<condition>(<expr><name>x</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then><block>{
        <decl_stmt><decl><type><name>int</name></type> <name>dat</name><init>=<expr><call><name>min</name><argument_list>(<argument><expr><name>y</name><operator>-</operator><literal type="number">1</literal></expr></argument>,<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>y</name><operator>-=</operator><name>dat</name></expr>;</expr_stmt><expr_stmt><expr><name>k</name><operator>-=</operator><name>dat</name></expr>;</expr_stmt><if>if<condition>(<expr><operator>!</operator><name>k</name></expr>)</condition><then><block>{<expr_stmt><expr><name>xx</name><operator>=</operator><name>x</name></expr>;</expr_stmt><expr_stmt><expr><name>yy</name><operator>=</operator><name>y</name></expr>;</expr_stmt><return>return;</return>}</block></then></if>
        <expr_stmt><expr><name>k</name><operator>--</operator></expr>;</expr_stmt><expr_stmt><expr><name>x</name><operator>--</operator></expr>;</expr_stmt>
        <expr_stmt><expr><name>y</name><operator>+=</operator><name>k</name></expr>;</expr_stmt><expr_stmt><expr><name>xx</name><operator>=</operator><name>x</name></expr>;</expr_stmt><expr_stmt><expr><name>yy</name><operator>=</operator><name>y</name></expr>;</expr_stmt>
    }</block></then>
    <else>else<block>{
        <decl_stmt><decl><type><name>int</name></type> <name>dat</name><init>=<expr><call><name>min</name><argument_list>(<argument><expr><name>n</name><operator>-</operator><name>y</name></expr></argument>,<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>y</name><operator>+=</operator><name>dat</name></expr>;</expr_stmt><expr_stmt><expr><name>k</name><operator>-=</operator><name>dat</name></expr>;</expr_stmt><if>if<condition>(<expr><operator>!</operator><name>k</name></expr>)</condition><then><block>{<expr_stmt><expr><name>xx</name><operator>=</operator><name>x</name></expr>;</expr_stmt><expr_stmt><expr><name>yy</name><operator>=</operator><name>y</name></expr>;</expr_stmt><return>return;</return>}</block></then></if>
        <expr_stmt><expr><name>k</name><operator>--</operator></expr>;</expr_stmt><expr_stmt><expr><name>x</name><operator>--</operator></expr>;</expr_stmt>
        <expr_stmt><expr><name>y</name><operator>-=</operator><name>k</name></expr>;</expr_stmt><expr_stmt><expr><name>xx</name><operator>=</operator><name>x</name></expr>;</expr_stmt><expr_stmt><expr><name>yy</name><operator>=</operator><name>y</name></expr>;</expr_stmt>
    }</block></else></if>
}</block></function>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><name><name>dp</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name><name>a</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></for></block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><literal type="number">6</literal></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name><name>dp</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><operator>(</operator><name>sum</name><operator>+</operator><literal type="number">6</literal><operator>)</operator><operator>/</operator><operator>(</operator><name>i</name><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr><operator>,</operator><expr><name>sum</name><operator>+=</operator><name><name>dp</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">7</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <expr_stmt><expr><name>sum</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>i</name><operator>-</operator><literal type="number">6</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;</operator><name>i</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><expr_stmt><expr><name>sum</name><operator>+=</operator><name><name>dp</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt></block></for>
        <expr_stmt><expr><name><name>dp</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name>sum</name><operator>/</operator><literal type="number">6</literal><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
    }</block></for>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">2</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
        <if>if<condition>(<expr><operator>!</operator><operator>(</operator><name>i</name><operator>&amp;</operator><literal type="number">1</literal><operator>)</operator></expr>)</condition><then><block>{
            <for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><name>n</name></expr></init></decl>;</init><condition><expr><name>j</name></expr>;</condition><incr><expr><name>j</name><operator>--</operator></expr></incr>)</control><block>{
                <expr_stmt><expr><name>sum</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
                <for>for<control>(<init><decl><type><name>int</name></type> <name>k</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>k</name><operator>&lt;=</operator><literal type="number">6</literal></expr>;</condition><incr><expr><name>k</name><operator>++</operator></expr></incr>)</control><block>{
                    <decl_stmt><decl><type><name>int</name></type> <name>xx</name></decl>,<decl><type ref="prev"/><name>yy</name></decl>;</decl_stmt><expr_stmt><expr><call><name>mov</name><argument_list>(<argument><expr><name>i</name></expr></argument>,<argument><expr><name>j</name></expr></argument>,<argument><expr><name>k</name></expr></argument>,<argument><expr><name>xx</name></expr></argument>,<argument><expr><name>yy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name>sum</name><operator>+=</operator><call><name>min</name><argument_list>(<argument><expr><name><name>dp</name><index>[<expr><name>xx</name></expr>]</index><index>[<expr><name>yy</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>dp</name><index>[<expr><name>xx</name><operator>-</operator><name><name>a</name><index>[<expr><name>xx</name></expr>]</index><index>[<expr><name>yy</name></expr>]</index></name></expr>]</index><index>[<expr><name>yy</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></for>
                <expr_stmt><expr><name><name>dp</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><name>sum</name><operator>/</operator><literal type="number">6</literal><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
            }</block></for>
        }</block></then>
        <else>else<block>{
            <for>for<control>(<init><decl><type><name>int</name></type> <name>j</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>j</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block>{
                <expr_stmt><expr><name>sum</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
                <for>for<control>(<init><decl><type><name>int</name></type> <name>k</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>k</name><operator>&lt;=</operator><literal type="number">6</literal></expr>;</condition><incr><expr><name>k</name><operator>++</operator></expr></incr>)</control><block>{
                    <decl_stmt><decl><type><name>int</name></type> <name>xx</name></decl>,<decl><type ref="prev"/><name>yy</name></decl>;</decl_stmt><expr_stmt><expr><call><name>mov</name><argument_list>(<argument><expr><name>i</name></expr></argument>,<argument><expr><name>j</name></expr></argument>,<argument><expr><name>k</name></expr></argument>,<argument><expr><name>xx</name></expr></argument>,<argument><expr><name>yy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name>sum</name><operator>+=</operator><call><name>min</name><argument_list>(<argument><expr><name><name>dp</name><index>[<expr><name>xx</name></expr>]</index><index>[<expr><name>yy</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>dp</name><index>[<expr><name>xx</name><operator>-</operator><name><name>a</name><index>[<expr><name>xx</name></expr>]</index><index>[<expr><name>yy</name></expr>]</index></name></expr>]</index><index>[<expr><name>yy</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></for>
                <expr_stmt><expr><name><name>dp</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>=</operator><name>sum</name><operator>/</operator><literal type="number">6</literal><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
            }</block></for>
        }</block></else></if>
    }</block></for>
    <expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%.10f"</literal></expr></argument>,<argument><expr><name><name>dp</name><index>[<expr><name>n</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
