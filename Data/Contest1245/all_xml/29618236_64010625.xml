<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29618236_64010625.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>

<using>using <namespace>namespace <name>std</name>;</namespace></using>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
    <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>t</name></expr>;</expr_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>cas</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>cas</name><operator>&lt;</operator> <name>t</name></expr>;</condition><incr><expr><name>cas</name><operator>++</operator></expr></incr>)</control><block>{
        <decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt> <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name> <operator>&gt;&gt;</operator> <name>b</name> <operator>&gt;&gt;</operator> <name>c</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>string</name></type> <name>sol</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>string</name></type> <name>inp</name></decl>;</decl_stmt>
        <expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>inp</name></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>int</name></type> <name>wins</name><init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
            <expr_stmt><expr><name>sol</name> <operator>+=</operator> <literal type="string">"X"</literal></expr>;</expr_stmt>
            <if>if<condition>(<expr><name><name>inp</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'R'</literal> <operator>&amp;&amp;</operator> <name>b</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name>wins</name><operator>++</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>sol</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'P'</literal></expr>;</expr_stmt>
            }</block></then>
            <elseif>else <if>if<condition>(<expr><name><name>inp</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'P'</literal> <operator>&amp;&amp;</operator> <name>c</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>c</name><operator>--</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name>wins</name><operator>++</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>sol</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'S'</literal></expr>;</expr_stmt>
            }</block></then></if></elseif>
            <elseif>else <if>if<condition>(<expr><name><name>inp</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'S'</literal> <operator>&amp;&amp;</operator> <name>a</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
                <expr_stmt><expr><name>a</name><operator>--</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name>wins</name><operator>++</operator></expr>;</expr_stmt>
                <expr_stmt><expr><name><name>sol</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'R'</literal></expr>;</expr_stmt>
            }</block></then></if></elseif></if>
        }</block></for>

        <if>if<condition>(<expr><name>wins</name> <operator>&lt;</operator> <operator>(</operator><operator>(</operator><name>n</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal><operator>)</operator></expr>)</condition><then><block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"NO"</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
        }</block></then>
        <else>else<block>{
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"YES"</literal> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
            <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>n</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
                <if>if<condition>(<expr><name><name>sol</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'X'</literal></expr>)</condition><then><block>{
                    <if>if<condition>(<expr><name>a</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
                        <expr_stmt><expr><name>a</name><operator>--</operator></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name>sol</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'R'</literal></expr>;</expr_stmt>
                    }</block></then>
                    <elseif>else <if>if<condition>(<expr><name>b</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then><block>{
                        <expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name>sol</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'P'</literal></expr>;</expr_stmt>
                    }</block></then></if></elseif>
                    <else>else<block>{
                        <expr_stmt><expr><name>c</name><operator>--</operator></expr>;</expr_stmt>
                        <expr_stmt><expr><name><name>sol</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'S'</literal></expr>;</expr_stmt>
                    }</block></else></if>
                }</block></then></if>
            }</block></for>
            <expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>sol</name> <operator>&lt;&lt;</operator> <name>endl</name></expr>;</expr_stmt>
        }</block></else></if>
    }</block></for>


    <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
