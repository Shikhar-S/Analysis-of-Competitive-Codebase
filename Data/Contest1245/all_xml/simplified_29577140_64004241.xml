include directive file define directive macro name value define directive macro name value using namespace name typedef type name name name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name expr_stmt expr name operator name operator name operator name operator name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr name decl type ref prev name init expr name decl type ref prev name init expr name decl_stmt decl type name name for control init decl type name name range expr name block if condition expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr call name name operator name argument_list argument expr literal type char elseif if condition expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr call name name operator name argument_list argument expr literal type char elseif if condition expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr call name name operator name argument_list argument expr literal type char else block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char decl_stmt decl type name name init expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name operator literal type string operator name continue macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator else block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator expr_stmt expr name operator literal type string operator name operator name 
