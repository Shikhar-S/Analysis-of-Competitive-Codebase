comment type line include directive file ifdef directive name define directive macro name parameter_list parameter type name parameter type name parameter type name define directive macro name parameter_list parameter type modifier define directive macro name value define directive macro name value define directive macro name value else directive include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type modifier value define directive macro name define directive macro name endif directive define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name typedef type name name typedef type name name typedef type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl specifier type name name expr_stmt expr name operator name decl_stmt decl specifier type name name expr_stmt expr name operator literal type string decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name operator expr_stmt expr name operator else block type pseudo expr_stmt expr name operator literal type string else block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name operator expr_stmt expr name operator else block type pseudo expr_stmt expr name operator literal type string else block if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name operator expr_stmt expr name operator else block type pseudo expr_stmt expr name operator literal type string if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator name operator literal type string else block type pseudo expr_stmt expr name operator literal type string function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list return expr literal type number 
