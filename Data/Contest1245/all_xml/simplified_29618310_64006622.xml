include directive file define directive macro name value using namespace name comment type line comment type line function specifier type name name parameter_list parameter decl type name name block decl_stmt decl type name name decl_stmt decl type name name argument_list argument expr name expr_stmt expr name operator name return expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block decl_stmt decl type name name expr_stmt expr name operator name return expr call name name operator name argument_list function specifier type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name return expr name comment type line comment type line typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name comment type line comment type line define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value comment type line comment type line define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name constructor name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block class name block private type default public decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name call name argument_list argument expr name argument expr literal type number block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block while condition expr name name index expr name operator name block expr_stmt expr name operator name name index expr name operator name name index expr name name index expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name block return expr name name index expr call name argument_list argument expr name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type boolean while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name if condition expr name operator name then block expr_stmt expr name operator literal type boolean expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number if condition expr name then block type pseudo return expr name return expr name define directive macro name value decl_stmt decl type name name name index expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block type pseudo if condition expr name name index expr name then block type pseudo for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name operator literal type boolean function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block type pseudo if condition expr name operator name operator literal type number then block type pseudo return expr literal type boolean return expr literal type boolean function template parameter_list parameter type name name type name name argument_list type generic argument expr name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name name argument_list type generic argument expr name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name index expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr name for control init decl type name name init expr name condition expr name operator name incr expr operator name block if condition expr call name argument_list argument expr name name index expr name index expr name operator call name argument_list argument expr name name index expr name index expr name then block type pseudo expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr call name argument_list argument expr name name index expr name index expr name operator name then block type pseudo return expr call name name argument_list type generic argument expr name argument_list comment type line for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator name then block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator name name index expr name index expr name operator name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name index expr name return expr name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name argument_list argument expr call name name operator name argument_list argument expr call name argument_list argument expr operator name operator name name index expr literal type number operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name name index expr literal type number operator call name argument_list incr expr operator name block expr_stmt expr name name index expr name index expr name operator operator name name index expr name index expr name operator name name index expr name index expr name operator name name index expr name index expr name operator name operator operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name argument_list argument expr call name name operator name argument_list argument expr call name argument_list argument expr operator name operator call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name name index expr name index expr name operator literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator literal type number return expr name function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block if condition expr name name operator name operator name name operator name then block type pseudo return expr name name operator name operator name name operator name return expr name name operator name operator name name operator name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name comment type line function type name name parameter_list block expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name operator operator name operator name operator operator name expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator name comment type line function type name name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr literal type number if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr literal type number return expr name name index expr name operator operator name name index expr name operator name name index expr name operator name operator name operator operator name decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block expr_stmt expr name operator decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator while condition expr name operator literal type number block expr_stmt expr name name index expr name operator name expr_stmt expr name operator name operator operator name function type name name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name modifier name parameter decl type name name modifier name block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name operator name argument expr name argument expr name expr_stmt expr name operator name operator name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type string decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator if condition expr operator name operator literal type number operator operator literal type number operator name then block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator name operator name else block expr_stmt expr name operator literal type string operator name 
