<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29581541_64011792.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ll</name></cpp:macro> <cpp:value>long long</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mp</name></cpp:macro> <cpp:value>make_pair</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pb</name></cpp:macro> <cpp:value>push_back</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>N</name></cpp:macro> <cpp:value>100050</cpp:value></cpp:define>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>ll</name></type> <name>mod</name><init>= <expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ll</name></type> <name><name>dp</name><index>[<expr><name>N</name></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
    <expr_stmt><expr><call><name><name>ios_base</name><operator>::</operator><name>sync_with_stdio</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cin</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>cout</name><operator>.</operator><name>tie</name></name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <decl_stmt><decl><type><name>string</name></type> <name>s</name></decl>;</decl_stmt> <expr_stmt><expr><name>cin</name><operator>&gt;&gt;</operator><name>s</name></expr>;</expr_stmt>
   <decl_stmt><decl><type><name>ll</name></type> <name>ans</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><name>int</name></type> <name>n</name><init>= <expr><call><name><name>s</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
   <decl_stmt><decl><type><name>int</name></type> <name>cu</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
   <expr_stmt><expr><name><name>dp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt>
   <expr_stmt><expr><name><name>dp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>=</operator><literal type="number">1</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>dp</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
   <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">3</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
    <expr_stmt><expr><name><name>dp</name><index>[<expr><name>i</name></expr>]</index></name><operator>=</operator><name><name>dp</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>+</operator><name><name>dp</name><index>[<expr><name>i</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name><name>dp</name><index>[<expr><name>i</name></expr>]</index></name><operator>&gt;=</operator><name>mod</name></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name><name>dp</name><index>[<expr><name>i</name></expr>]</index></name><operator>-=</operator><name>mod</name></expr>;</expr_stmt></block></then></if>
   }</block></for>
   <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
    <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'w'</literal><operator>||</operator><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'m'</literal></expr>)</condition><then><block>{
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"0"</literal></expr>;</expr_stmt>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></then></if>
   }</block></for>
   <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
    <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><literal type="char">'u'</literal></expr>)</condition><then><block>{
        <expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>dp</name><index>[<expr><name>cu</name></expr>]</index></name></expr>;</expr_stmt>
        <if>if<condition>(<expr><name>ans</name><operator>&gt;=</operator><name>mod</name></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>ans</name><operator>%=</operator><name>mod</name></expr>;</expr_stmt></block></then></if>
        <expr_stmt><expr><name>cu</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt> <continue>continue;</continue>
    }</block></then></if>
    <expr_stmt><expr><name>cu</name><operator>++</operator></expr>;</expr_stmt>
   }</block></for>
   <expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>dp</name><index>[<expr><name>cu</name></expr>]</index></name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>ans</name><operator>&gt;=</operator><name>mod</name></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>ans</name><operator>%=</operator><name>mod</name></expr>;</expr_stmt></block></then></if>
   <expr_stmt><expr><name>cu</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
   <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{
    <if>if<condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name><operator>!=</operator><literal type="char">'n'</literal></expr>)</condition><then><block>{
        <expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>dp</name><index>[<expr><name>cu</name></expr>]</index></name></expr>;</expr_stmt>
        <if>if<condition>(<expr><name>ans</name><operator>&gt;=</operator><name>mod</name></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>ans</name><operator>%=</operator><name>mod</name></expr>;</expr_stmt></block></then></if>
        <expr_stmt><expr><name>cu</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt> <continue>continue;</continue>
    }</block></then></if>
    <expr_stmt><expr><name>cu</name><operator>++</operator></expr>;</expr_stmt>
   }</block></for>
   <expr_stmt><expr><name>ans</name><operator>*=</operator><name><name>dp</name><index>[<expr><name>cu</name></expr>]</index></name></expr>;</expr_stmt>
    <if>if<condition>(<expr><name>ans</name><operator>&gt;=</operator><name>mod</name></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>ans</name><operator>%=</operator><name>mod</name></expr>;</expr_stmt></block></then></if>
   <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>ans</name></expr>;</expr_stmt>
   <return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function>
</unit>
