include directive file include directive file include directive file include directive file include directive file include directive file typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number using namespace name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name operator literal type number comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator operator name operator block expr name name index expr name expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name else block type pseudo return expr call name argument_list argument expr name argument expr name operator name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name operator expr operator name operator expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name operator literal type char elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name operator expr operator name operator expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name operator literal type char else block if condition expr name operator literal type number then block type pseudo expr_stmt expr operator name operator expr operator name operator expr name name index expr name operator literal type char else block type pseudo expr_stmt expr name name index expr name operator literal type char if condition expr name operator operator name operator call name argument_list argument expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string operator expr operator name elseif if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string operator expr operator name elseif if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string operator expr operator name else block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
