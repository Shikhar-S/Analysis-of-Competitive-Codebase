include directive file using namespace name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name expr_stmt expr name operator name operator name operator name operator name operator name decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type char decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type char decl_stmt decl type name name init expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type char decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number operator literal type number decl_stmt decl type name name init expr operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type string operator name else block decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr name expr_stmt expr name operator literal type string operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type number elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type number elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string elseif if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string elseif if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string operator expr name operator elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string operator expr name operator elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string operator expr name operator expr_stmt expr name operator name return expr literal type number 
