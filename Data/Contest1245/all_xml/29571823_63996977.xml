<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29571823_63996977.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>LL</name>;</typedef>
<typedef>typedef <type><name>double</name></type> <name>db</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(register int i=s;i&lt;=t;++i)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PER</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(register int i=s;i&gt;=t;--i)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FOREDGE</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>x</name></type></parameter>,<parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>for(int i=fir[x],v=to[i];i;i=nex[i],v=to[i])</cpp:value></cpp:define>
<function><template>template<parameter_list>&lt;<parameter><type><name>typename</name></type> <name>T</name></parameter>&gt;</parameter_list></template><specifier>inline</specifier> <type><name>T</name></type> <name>in</name><parameter_list>()</parameter_list><block>{
    <decl_stmt><decl><type><name>T</name></type> <name>ans</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>bool</name></type> <name>b</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt><decl_stmt><decl><type><name>char</name></type> <name>ch</name><init>=<expr><call><name>getchar</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <while>while<condition>(<expr><name><name>ch</name><argument_list type="generic">&lt;<argument><expr><literal type="char">'0'</literal><operator>||</operator><name>ch</name></expr></argument>&gt;</argument_list></name><literal type="char">'9'</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>b</name><operator>=</operator><operator>(</operator><name>ch</name><operator>==</operator><literal type="char">'-'</literal><operator>)</operator></expr><operator>,</operator><expr><name>ch</name><operator>=</operator><call><name>getchar</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></while>
    <while>while<condition>(<expr><name>ch</name><operator>&gt;=</operator><literal type="char">'0'</literal><operator>&amp;&amp;</operator><name>ch</name><operator>&lt;=</operator><literal type="char">'9'</literal></expr>)</condition><block type="pseudo"><expr_stmt><expr><name>ans</name><operator>=</operator><name>ans</name><operator>*</operator><literal type="number">10</literal><operator>+</operator><name>ch</name><operator>-</operator><literal type="number">48</literal></expr><operator>,</operator><expr><name>ch</name><operator>=</operator><call><name>getchar</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block></while>
    <return>return <expr><ternary><condition><expr><name>b</name></expr>?</condition><then><expr><operator>-</operator><name>ans</name></expr></then><else>:<expr><name>ans</name></expr></else></ternary></expr>;</return>
}</block></function>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>II</name></cpp:macro> <cpp:value>in&lt;int&gt;()</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IL</name></cpp:macro> <cpp:value>in&lt;LL&gt;()</cpp:value></cpp:define>
<comment type="line">//&lt;-----QAQ-----&gt;</comment>

<decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list><block>{
	<expr_stmt><expr><name>t</name><operator>=</operator><name>II</name></expr>;</expr_stmt>
	<while>while<condition>(<expr><name>t</name><operator>--</operator></expr>)</condition><block type="pseudo"><expr_stmt><expr><call><name>puts</name><argument_list>(<argument><expr><ternary><condition><expr><call><name><name>std</name><operator>::</operator><name>__gcd</name></name><argument_list>(<argument><expr><name>II</name></expr></argument>,<argument><expr><name>II</name></expr></argument>)</argument_list></call><operator>==</operator><literal type="number">1</literal></expr>?</condition><then><expr><literal type="string">"Finite"</literal></expr></then><else>:<expr><literal type="string">"Infinite"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></while>
}</block></function></unit>
