include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name while condition expr name operator call name argument_list operator expr name operator name operator literal type char operator expr operator call name argument_list argument expr name block type pseudo empty_stmt while condition expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list operator expr call name argument_list argument expr name block type pseudo empty_stmt expr_stmt expr name operator ternary condition expr name then expr operator literal type number else expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr literal type number comment type line function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name while condition expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name while condition expr name operator call name argument_list operator expr operator call name argument_list argument expr name block type pseudo empty_stmt if condition expr name operator literal type char then block type pseudo expr_stmt expr operator name name index expr literal type number operator expr name name index expr name operator literal type number elseif if condition expr name operator literal type char then block type pseudo expr_stmt expr operator name name index expr literal type number operator expr name name index expr name operator literal type number else block type pseudo expr_stmt expr operator name name index expr literal type number operator expr name name index expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number operator call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number operator call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number if condition expr name operator operator name operator operator name operator literal type number operator operator then block decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr name name index expr name name index expr name if condition expr name name index expr name operator literal type number operator name name index expr name then block type pseudo expr_stmt expr operator name name index expr name operator expr name name index expr name operator name else block type pseudo expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo if condition expr name name index expr name operator name name index expr name then block expr_stmt expr operator name name index expr name operator expr name name index expr name operator name break expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string elseif if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
