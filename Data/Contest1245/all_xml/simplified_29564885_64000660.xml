include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name decl_stmt decl type name name init expr operator name operator literal type number operator operator literal type number operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block expr_stmt expr call name argument_list argument expr literal type string macro name argument_list argument argument literal type number argument block if condition expr name name index expr name then block type pseudo continue if condition expr name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char elseif if condition expr name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char elseif if condition expr name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number return expr literal type number 
