comment type block include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator block decl_stmt decl type name name init expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list operator expr name name index expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator else block type pseudo expr_stmt expr name name index expr literal type number operator expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number operator call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number operator call name argument_list argument expr name name index expr literal type number argument expr name name index expr literal type number if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char operator name name index expr literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr literal type number operator if condition expr name name index expr name operator literal type char operator name name index expr literal type number then block expr_stmt expr name name index expr literal type number operator expr_stmt expr name name index expr name operator literal type number if condition expr name name index expr name operator literal type char operator name name index expr literal type number then block expr_stmt expr name name index expr literal type number operator expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block if condition expr name name index expr literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr literal type number operator elseif if condition expr name name index expr literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr literal type number operator else block type pseudo expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr literal type number operator if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
