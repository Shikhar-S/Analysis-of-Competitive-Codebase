<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29619356_64011659.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<typedef>typedef <type><name>long</name> <name>long</name></type> <name>LL</name>;</typedef>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>maxn</name> <init>= <expr><literal type="number">3e6</literal><operator>+</operator><literal type="number">10</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>LL</name></type> <name>mod</name> <init>= <expr><literal type="number">1e9</literal><operator>+</operator><literal type="number">7</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>T</name></decl> , <decl><type ref="prev"/><name>n</name></decl> , <decl><type ref="prev"/><name>a</name></decl> , <decl><type ref="prev"/><name>b</name></decl> , <decl><type ref="prev"/><name>c</name></decl> , <decl><type ref="prev"/><name>g</name></decl> , <decl><type ref="prev"/><name><name>f</name><index>[<expr><literal type="number">110</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>s</name><index>[<expr><literal type="number">110</literal></expr>]</index></name></decl> , <decl><type ref="prev"/><name><name>ss</name><index>[<expr><literal type="number">110</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl> , <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>
	<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>T</name></expr>;</expr_stmt>
	<while>while <condition>(<expr><name>T</name><operator>--</operator></expr>)</condition>
	<block>{
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>n</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>a</name> <operator>&gt;&gt;</operator> <name>b</name> <operator>&gt;&gt;</operator> <name>c</name></expr>;</expr_stmt>
		<expr_stmt><expr><name>cin</name> <operator>&gt;&gt;</operator> <name>s</name><operator>+</operator><literal type="number">1</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>g</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr> ;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
			<block type="pseudo"><expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block></for>
		<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr> ;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{
			<if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'S'</literal> <operator>&amp;&amp;</operator> <name>a</name></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>a</name><operator>--</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>ss</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'R'</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>g</name><operator>++</operator></expr>;</expr_stmt>
			}</block></then>
			<elseif>else <if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'R'</literal> <operator>&amp;&amp;</operator> <name>b</name></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>ss</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'P'</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>g</name><operator>++</operator></expr>;</expr_stmt>
			}</block></then></if></elseif>
			<elseif>else <if>if <condition>(<expr><name><name>s</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">'P'</literal> <operator>&amp;&amp;</operator> <name>c</name></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>c</name><operator>--</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>ss</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'S'</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
				<expr_stmt><expr><name>g</name><operator>++</operator></expr>;</expr_stmt>
			}</block></then></if></elseif></if>
		}</block></for>
		<if>if <condition>(<expr><name>g</name> <operator>&lt;</operator> <operator>(</operator><name>n</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>)</condition><then>
		<block>{
			<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"NO\n"</literal></expr>;</expr_stmt>
			<continue>continue;</continue>
		}</block></then></if>
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <literal type="string">"YES\n"</literal></expr>;</expr_stmt>
		<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr> ;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>n</name></expr> ;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
		<block>{
			<if>if <condition>(<expr><operator>!</operator><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&amp;&amp;</operator> <name>a</name></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>a</name><operator>--</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>ss</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'R'</literal></expr>;</expr_stmt>
			}</block></then>
			<elseif>else <if>if <condition>(<expr><operator>!</operator><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&amp;&amp;</operator> <name>b</name></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>b</name><operator>--</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>ss</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'P'</literal></expr>;</expr_stmt>
			}</block></then></if></elseif>
			<elseif>else <if>if <condition>(<expr><operator>!</operator><name><name>f</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&amp;&amp;</operator> <name>c</name></expr>)</condition><then>
			<block>{
				<expr_stmt><expr><name>c</name><operator>--</operator></expr>;</expr_stmt>
				<expr_stmt><expr><name><name>ss</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'S'</literal></expr>;</expr_stmt>
			}</block></then></if></elseif></if>
		}</block></for>
		<expr_stmt><expr><name><name>ss</name><index>[<expr><name>n</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name>cout</name> <operator>&lt;&lt;</operator> <name>ss</name><operator>+</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>
	}</block></while>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
