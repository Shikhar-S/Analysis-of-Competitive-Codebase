include directive file comment type line define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name name typedef type name name name decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list argument expr operator name operator call name name operator name operator name argument_list operator call name argument_list operator call name argument_list namespace name block decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name function type name name parameter_list block expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type char for control init decl type name name range expr name block if condition expr name operator literal type char operator name operator literal type char then block expr_stmt expr name operator literal type number operator literal type char return expr literal type number if condition expr name operator literal type char operator name operator literal type char then block if condition expr name operator name then block expr_stmt expr operator name else block if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator literal type number else block if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator literal type number expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator literal type number for control init decl type name name range expr name block expr_stmt expr name operator operator name operator operator name name index expr name operator name name index expr name operator literal type number operator operator operator name expr_stmt expr name operator name operator literal type char return expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name name operator name ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name elif directive expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr name literal type string argument expr literal type string argument expr name endif directive return expr call name name operator name argument_list 
