include directive file include directive file include directive file include directive file pragma directive name name name name name name pragma directive name name name name literal name using namespace name using namespace name typedef type name name name define directive macro name value typedef type name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr call name argument_list argument expr name operator name argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number argument expr name expr_stmt expr name operator operator name operator name operator operator name if condition expr name operator literal type number then block type pseudo return expr operator name operator name operator operator name else block type pseudo return expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number typedef type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name decl_stmt decl type name name name index expr literal type number function type name name parameter_list block comment type line decl_stmt decl type name name expr_stmt expr name operator name comment type line decl_stmt decl type name name init expr call name name operator name argument_list comment type line comment type line expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number operator name operator operator name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator literal type number operator name return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator literal type char then block expr_stmt expr name operator else block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type number operator literal type char then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block if condition expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator literal type char then block expr_stmt expr name operator else block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type number operator literal type char then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block comment type line expr_stmt expr name operator operator name operator name name index expr name name index expr name operator operator name expr_stmt expr name operator name operator name return expr literal type number 
