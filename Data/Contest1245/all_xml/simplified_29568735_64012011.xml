include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number return expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type char macro name argument_list argument argument literal type number argument literal type number block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator else block expr_stmt expr name operator name operator name name index expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator else block expr_stmt expr name operator name operator name name index expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name else block expr_stmt expr name operator name operator name name index expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name return expr literal type number 
