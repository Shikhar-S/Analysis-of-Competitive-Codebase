comment type block format doxygen include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl_stmt decl type name name decl type ref prev name init expr literal type string expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name for control init decl type name name range expr name block if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr literal type char expr_stmt expr name operator operator expr name operator else block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char elseif if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr literal type char expr_stmt expr name operator operator expr name operator else block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char else block if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr literal type char expr_stmt expr name operator operator expr name operator else block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block type pseudo expr_stmt expr name name index expr name operator literal type char if condition expr name operator operator name operator literal type number operator operator operator name operator literal type number operator then block type pseudo expr_stmt expr name operator literal type string operator name operator literal type char else block type pseudo expr_stmt expr name operator literal type string return expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator call name argument_list endif directive expr_stmt expr call name argument_list ifndef directive name expr_stmt expr name operator call name argument_list expr_stmt expr name operator literal type string operator name operator call name argument_list argument expr name operator name operator call name argument_list argument expr name operator call name argument_list argument expr literal type number operator literal type string operator name endif directive return expr literal type number 
