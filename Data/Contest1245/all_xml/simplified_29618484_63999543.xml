include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file function type name name parameter_list parameter decl type specifier name name parameter decl type specifier name name block return expr ternary condition expr operator name operator literal type number operator then expr name else expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name name operator name operator name operator name operator name operator name decl_stmt decl type name name operator name name argument_list argument expr name argument expr literal type char decl_stmt decl type name name operator name name expr_stmt expr name name operator name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block switch condition expr name name index expr name block case expr literal type char if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char break case expr literal type char if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char break case expr literal type char if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char break default throw expr literal type number if condition expr operator name operator literal type number operator operator literal type number operator name then block expr_stmt expr name name operator name operator literal type string else block expr_stmt expr name name operator name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char elseif if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char else block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char expr_stmt expr name name operator name operator name operator literal type char 
