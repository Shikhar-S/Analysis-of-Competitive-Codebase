include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator name operator name operator operator name operator name operator name operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr literal type number operator name operator name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block return expr literal type number return expr call name argument_list argument expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr operator ternary condition expr name operator literal type number then expr name else expr literal type number operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator name operator name operator operator name operator name operator decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name name index expr name operator name then block expr_stmt expr operator name else block expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name expr_stmt expr name operator literal type number return expr call name argument_list argument expr name argument expr name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator literal type number argument expr name name index expr name operator literal type number for control init decl type name name range expr name block if condition expr name operator literal type char operator name operator literal type char then block expr_stmt expr name operator literal type number return expr literal type number expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr literal type char argument expr call name argument_list argument expr name argument expr literal type char return expr literal type number 
