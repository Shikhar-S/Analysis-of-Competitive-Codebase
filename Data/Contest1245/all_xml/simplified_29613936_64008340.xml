include directive file define directive macro name value define directive macro name value using namespace name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr call name argument_list for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char return expr name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function specifier type name name parameter_list block while condition expr name operator block decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator operator operator name operator literal type number operator operator literal type number operator then block expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name else block if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator else block type pseudo expr_stmt expr call name argument_list argument expr literal type string operator expr name operator expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string function specifier type name name parameter_list block expr_stmt expr name operator call name name argument_list type generic argument expr name argument_list function type name name parameter_list block expr_stmt expr call name argument_list expr_stmt expr call name argument_list return expr literal type number 
