include directive file typedef type name name name name using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name decl_stmt decl type name name name index expr literal type number if condition expr name operator operator name operator literal type number operator operator name operator literal type number operator operator then block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator else block type pseudo expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator name name index expr name else block if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator 
