<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="Data/Contest1245/all/29610697_64007916.cpp"><cpp:include>#<cpp:directive>include</cpp:directive><cpp:file>&lt;bits/stdc++.h&gt;</cpp:file></cpp:include>
<using>using <namespace>namespace <name>std</name>;</namespace></using>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>,<decl><type ref="prev"/><name>m</name></decl>,<decl><type ref="prev"/><name>t</name></decl>,<decl><type ref="prev"/><name><name>s</name><index>[<expr><literal type="number">1005</literal></expr>]</index></name></decl>,<decl><type ref="prev"/><name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>,<decl><type ref="prev"/><name>aa</name></decl>,<decl><type ref="prev"/><name>bb</name></decl>,<decl><type ref="prev"/><name>cc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>st</name><index>[<expr><literal type="number">1005</literal></expr>]</index></name></decl>;</decl_stmt>
<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>
<block>{
	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for>for<control>(<init><decl><type><name>int</name></type> <name>i0</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i0</name><operator>&lt;=</operator><name>t</name></expr>;</condition><incr><expr><name>i0</name><operator>++</operator></expr></incr>)</control>
     <block>{
     	<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>s</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
     	<expr_stmt><expr><name>aa</name><operator>=</operator><name>bb</name><operator>=</operator><name>cc</name><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
     	<expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%d%d%d%d"</literal></expr></argument>,<argument><expr><operator>&amp;</operator><name>n</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>c</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>a</name></expr></argument>,<argument><expr><operator>&amp;</operator><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>scanf</name><argument_list>(<argument><expr><literal type="string">"%s"</literal></expr></argument>,<argument><expr><name>st</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
         <block>{
         <if>if<condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'R'</literal></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>aa</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
         <if>if<condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'P'</literal></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>bb</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
         <if>if<condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'S'</literal></expr>)</condition><then><block type="pseudo"><expr_stmt><expr><name>cc</name><operator>++</operator></expr>;</expr_stmt></block></then></if>
         }</block></for>
        <comment type="line">//cout&lt;&lt;min(a,aa)+min(b,bb)+min(c,cc)&lt;&lt;endl;</comment>
        <if>if<condition>(<expr><call><name>min</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>aa</name></expr></argument>)</argument_list></call><operator>+</operator><call><name>min</name><argument_list>(<argument><expr><name>b</name></expr></argument>,<argument><expr><name>bb</name></expr></argument>)</argument_list></call><operator>+</operator><call><name>min</name><argument_list>(<argument><expr><name>c</name></expr></argument>,<argument><expr><name>cc</name></expr></argument>)</argument_list></call><operator>&lt;=</operator><operator>(</operator><name>n</name><operator>-</operator><literal type="number">1</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr>)</condition><then><block>{<expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"NO"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt><continue>continue;</continue>}</block></then></if>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="string">"YES"</literal><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
        <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">1</literal></expr></init></decl>;</init><condition><expr><name>i</name><operator>&lt;=</operator><name>n</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
         <block>{
         <if>if<condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'R'</literal><operator>&amp;&amp;</operator><name>a</name></expr>)</condition><then><block>{<expr_stmt><expr><name>a</name><operator>--</operator></expr><operator>,</operator><expr><name>aa</name><operator>--</operator></expr><operator>,</operator><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="char">'P'</literal></expr>;</expr_stmt><continue>continue;</continue>}</block></then></if>
         <if>if<condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'P'</literal><operator>&amp;&amp;</operator><name>b</name></expr>)</condition><then><block>{<expr_stmt><expr><name>b</name><operator>--</operator></expr><operator>,</operator><expr><name>bb</name><operator>--</operator></expr><operator>,</operator><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="char">'S'</literal></expr>;</expr_stmt><continue>continue;</continue>}</block></then></if>
         <if>if<condition>(<expr><name><name>st</name><index>[<expr><name>i</name></expr>]</index></name><operator>==</operator><literal type="char">'S'</literal><operator>&amp;&amp;</operator><name>c</name></expr>)</condition><then><block>{<expr_stmt><expr><name>c</name><operator>--</operator></expr><operator>,</operator><expr><name>cc</name><operator>--</operator></expr><operator>,</operator><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="char">'R'</literal></expr>;</expr_stmt><continue>continue;</continue>}</block></then></if>
         <if>if<condition>(<expr><name>a</name><operator>&gt;</operator><name>aa</name></expr>)</condition><then><block>{<expr_stmt><expr><name>a</name><operator>--</operator></expr><operator>,</operator><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="char">'P'</literal></expr>;</expr_stmt><continue>continue;</continue>}</block></then></if>
         <if>if<condition>(<expr><name>b</name><operator>&gt;</operator><name>bb</name></expr>)</condition><then><block>{<expr_stmt><expr><name>b</name><operator>--</operator></expr><operator>,</operator><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="char">'S'</literal></expr>;</expr_stmt><continue>continue;</continue>}</block></then></if>
		 <if>if<condition>(<expr><name>c</name><operator>&gt;</operator><name>cc</name></expr>)</condition><then><block>{<expr_stmt><expr><name>c</name><operator>--</operator></expr><operator>,</operator><expr><name>cout</name><operator>&lt;&lt;</operator><literal type="char">'R'</literal></expr>;</expr_stmt><continue>continue;</continue>}</block></then></if>
         }</block></for>
        <expr_stmt><expr><name>cout</name><operator>&lt;&lt;</operator><name>endl</name></expr>;</expr_stmt>
     }</block></for>
	<return>return <expr><literal type="number">0</literal></expr>;</return>
}</block></function></unit>
