include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr operator name name index expr name operator name operator then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr operator call name argument_list argument expr name operator call name argument_list argument expr name operator then expr literal type number else expr literal type number function type name name parameter_list parameter decl type name name block return expr name name index expr call name argument_list argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr call name argument_list argument expr name argument expr name macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr operator name name index expr name operator name name index expr name operator operator name argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name operator literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name operator name name operator name decl_stmt decl type name name init expr name name index expr name operator name name operator name decl_stmt decl type name name init expr name name index expr name operator name if condition expr call name argument_list argument expr name argument expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number else block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number if condition expr name operator literal type number then block type pseudo break expr_stmt expr name operator name operator name expr_stmt expr name operator name name operator name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name if condition expr name operator name name operator name operator literal type number then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator name expr_stmt expr name operator name name operator name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator name return expr literal type number 
