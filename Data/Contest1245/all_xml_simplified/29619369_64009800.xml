include directive file define directive macro name value define directive macro name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list argument expr literal type number operator literal type number argument expr operator literal type number decl_stmt decl type name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr literal type number if condition expr name name index expr name operator operator literal type number then block type pseudo return expr name name index expr name return expr name name index expr name operator operator call name argument_list argument expr name operator literal type number operator call name argument_list argument expr name operator literal type number operator operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number if condition expr name operator name then block expr_stmt expr name operator literal type string return expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name then block if condition expr name operator literal type char operator name operator literal type char then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name expr_stmt expr name operator if condition expr name operator literal type char operator name operator literal type char then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator operator name operator call name argument_list argument expr name name index expr name operator operator name expr_stmt expr name operator name operator literal type string return expr literal type number 
