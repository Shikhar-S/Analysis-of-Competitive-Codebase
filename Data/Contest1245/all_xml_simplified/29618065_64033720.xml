include directive file comment type line define directive macro name value using namespace name typedef type name name name typedef type name name name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr operator literal type number operator literal type number operator struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name struct name block public type default function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr name expr name name index expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr name name index expr name name operator name operator name name operator name operator name name index expr name name operator name then block type pseudo continue expr_stmt expr name operator name name operator name expr_stmt expr name name index expr name name operator name operator literal type number if condition expr name name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr name expr operator name name index expr name operator name name index expr name name operator name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name name operator name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name name operator name operator name operator expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr name expr name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name name index expr name operator name then block expr_stmt expr call name argument_list argument expr name name index expr name operator name expr_stmt expr name operator name operator name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator name return expr literal type number 
