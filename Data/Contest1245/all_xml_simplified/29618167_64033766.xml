include directive file using namespace name using name init type name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name constructor name parameter_list parameter decl type name name block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type number if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name name index expr name operator expr name operator name name index expr name operator expr name operator name name index expr name else block type pseudo expr_stmt expr name operator name name index expr name operator expr name operator name name index expr name operator expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name argument expr operator name name index expr name operator name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr literal type number operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name expr block expr name expr name decl_stmt decl type name name name init expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr call name name operator name argument_list argument expr name name index expr name operator name name operator name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name name index expr name operator name name operator name if condition expr name operator name then block type pseudo continue if condition expr name name index expr name operator name operator name name operator name index expr name operator name name index expr name operator name operator name name operator name index expr name then block type pseudo continue expr_stmt expr name operator call name name operator name argument_list argument expr name argument expr name expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name name operator name operator literal type number expr name name index expr name operator name name operator name operator literal type number if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name operator name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name index expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name return expr literal type number 
