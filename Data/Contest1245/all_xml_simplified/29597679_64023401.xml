include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name ifdef directive name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name else directive define directive macro name parameter_list parameter type name define directive macro name parameter_list parameter type name value endif directive namespace name block function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block decl_stmt decl specifier type name name name index expr literal type number modifier decl type ref prev name init expr name operator literal type number decl_stmt decl specifier type specifier name name name index expr literal type number init expr literal type string literal type string literal type string literal type string literal type string literal type string literal type string literal type string literal type string literal type string decl_stmt decl specifier type specifier name name init expr literal type number define directive macro name parameter_list value decl_stmt decl type name modifier name init expr name decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name decl type ref prev name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr name operator literal type boolean while condition expr name operator name block expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list expr_stmt expr call name argument_list expr_stmt expr call name argument_list expr_stmt expr call name argument_list expr_stmt expr name operator operator name operator name while condition expr name operator literal type number block type pseudo expr_stmt expr call name argument_list if condition expr name operator literal type number then block type pseudo expr_stmt expr operator operator name operator literal type char operator name else block type pseudo expr_stmt expr call name argument_list if condition expr operator name then block type pseudo expr_stmt expr operator operator name operator literal type char expr_stmt expr call name argument_list argument expr name undef directive name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type boolean while condition expr operator call name argument_list argument expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type boolean expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type number operator operator expr name operator call name argument_list if condition expr operator name then block type pseudo expr_stmt expr name operator operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name parameter decl type name modifier name block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr call name argument_list argument expr name using namespace name decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type specifier name modifier name block return expr call name argument_list argument expr name operator name name operator name operator call name argument_list argument expr name operator name name operator name decl name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type operator type specifier name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name decl name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name init expr literal type number namespace name block decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block for control init decl type name name init expr name name index expr name operator call name argument_list condition expr name operator name name index expr name operator call name argument_list incr expr operator name block if condition expr operator name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr operator name argument expr name argument expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr operator name operator name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number decl type ref prev name init expr name condition expr name operator name operator name incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list argument expr name then block type pseudo continue expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator name name index expr name operator name expr_stmt expr name name operator name index expr name name operator name index expr name operator name name operator name index expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name index expr name operator call name argument_list for control init decl type name name init expr name name index expr name operator call name argument_list condition expr name operator name name index expr name operator call name argument_list incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr name operator name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr literal type number return expr literal type number 
