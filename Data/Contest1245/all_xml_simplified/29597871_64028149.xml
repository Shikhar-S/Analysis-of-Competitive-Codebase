include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name operator name decl_stmt decl type name name name index expr name comment type line struct name block public type default decl_stmt decl type name name comment type line decl_stmt decl type name name comment type line decl_stmt decl type name name comment type line decl name name index expr name comment type line decl_stmt decl type name name comment type line function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator operator name operator name return function type name name parameter_list parameter decl type name name parameter decl type name name block comment type line return expr name name operator name operator name name operator name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator operator literal type number then block return expr name else block return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name comment type line block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr name decl_stmt decl type name name init expr literal type number comment type line decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name operator if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr operator name operator ternary condition expr name operator name then expr name else expr name else block expr_stmt expr name operator expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name if condition expr name operator name operator literal type number then block break if condition expr name operator name operator literal type number then block return expr operator literal type number comment type line else block return expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name function type name name parameter_list block expr_stmt expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name operator call name argument_list operator expr name name index expr name operator name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name argument expr name name index expr name expr_stmt expr name operator expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator name return expr literal type number 
