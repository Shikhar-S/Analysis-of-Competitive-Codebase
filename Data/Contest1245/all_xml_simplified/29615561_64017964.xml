include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name namespace block using name init type name name comment type line function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block return expr name operator name name operator name operator name name operator name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator name return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block return expr name operator name function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block return expr name operator name name operator name operator literal type string operator name name operator name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator operator ternary condition expr name operator call name name operator name argument_list operator literal type number then expr literal type string else expr literal type string operator return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block return expr name operator literal type string operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block expr_stmt expr name operator name operator literal type string expr_stmt expr call name argument_list argument expr name operator function template parameter_list parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier modifier name block expr_stmt expr call name argument_list argument expr name operator expr_stmt expr name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block expr_stmt expr name operator name operator literal type string expr_stmt expr call name argument_list argument expr name operator function template parameter_list parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier modifier name block expr_stmt expr call name argument_list argument expr name operator expr_stmt expr name operator name class name block private type default decl_stmt decl type name name decl type ref prev name decl type ref prev name public struct name block public type default decl_stmt decl type name name decl type ref prev name constructor name parameter_list parameter decl type name name parameter decl type name name member_init_list call name argument_list argument expr name call name argument_list argument expr name block function type operator type name name name parameter_list block return expr name function type operator type name name name parameter_list block expr_stmt expr name operator name function type operator type name name name parameter_list parameter decl type name modifier name block return expr ternary condition expr name operator literal type number then expr name operator name name operator name else expr name operator name name operator name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr literal type number call name argument_list argument expr name call name argument_list argument expr literal type number block constructor name parameter_list parameter decl type name name parameter decl type name name member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr literal type number block constructor name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block function type name name parameter_list block return expr call name argument_list argument expr name argument expr name function type name name parameter_list block return expr call name argument_list argument expr name argument expr name function type operator specifier type name name name parameter_list parameter decl type specifier name modifier name parameter decl type name name block return expr call name argument_list argument expr call name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr literal type number block return expr ternary condition expr name operator literal type number then expr name else expr ternary condition expr name operator literal type number then expr name operator name else expr ternary condition expr operator name operator literal type number operator then expr call name argument_list argument expr name operator name argument expr name operator literal type number argument expr name operator name else expr call name argument_list argument expr name operator name argument expr name operator literal type number argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name init expr literal type number block return expr ternary condition expr name operator literal type number then expr name operator name else expr ternary condition expr name operator literal type number then expr name operator name operator name else expr ternary condition expr operator name operator literal type number operator then expr call name argument_list argument expr name operator name operator name argument expr name operator literal type number argument expr name argument expr name operator name operator name else expr call name argument_list argument expr name operator name operator name argument expr name operator literal type number argument expr name argument expr name function type operator specifier type name name name name name parameter_list parameter decl type name name name name block return expr call name argument_list argument expr literal type number argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator literal type number comment type line decl_stmt decl type name name argument_list argument expr call name name operator name name argument_list type generic argument expr name name operator name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type specifier name modifier name block decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name name index expr name return expr call name name operator name argument_list function type operator specifier type name name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number return expr name decl_stmt decl specifier type name name name init expr literal type number operator literal type number class name block private type default struct name block public type default decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name public constructor name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name operator name operator literal type number function type name name parameter_list parameter decl type name name block comment type line if condition expr name name index expr name operator name operator name then block type pseudo return expr name else block return expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name block return expr name name index expr call name argument_list argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator name expr_stmt expr name operator call name argument_list argument expr name name index expr name operator name if condition expr name operator name then block type pseudo return if condition expr name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name elseif if condition expr name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name else block expr_stmt expr name name index expr name operator name operator expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name decl type ref prev name argument_list argument expr name expr_stmt expr name operator name operator expr name operator expr name decl_stmt decl type name name name init expr literal type number operator literal type number decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name argument expr name operator name name index expr name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name argument expr name operator name name index expr name decl_stmt decl type name name name init expr name name index expr name operator name name index expr name decl_stmt decl type name name name init expr call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name expr_stmt expr call name name operator name argument_list argument expr name operator name argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name name init expr name decl_stmt decl type name name name init expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name operator name name index expr name operator name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name if condition expr name operator name then block type pseudo continue decl_stmt decl type name name name init expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name name init expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator literal type number decl_stmt decl type name name init expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name name operator name argument_list argument expr name if condition expr call name name operator name argument_list argument expr name operator literal type number then block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name else block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr call name argument_list argument expr name name index expr name argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name block expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr literal type string expr_stmt expr call name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr literal type string return expr literal type number 
