include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value typedef type name name name ifdef directive name include directive file else directive define directive macro name parameter_list parameter type modifier value endif directive decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl specifier type name name name index expr literal type number index expr literal type number index expr literal type number if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name name index expr name index expr name index expr name then block type pseudo return expr name name index expr name index expr name index expr name expr_stmt expr name name index expr name index expr name index expr name operator literal type boolean decl_stmt decl type name name init expr call name argument_list argument expr operator literal type number operator name operator operator name decl_stmt decl type name name init expr call name argument_list argument expr operator literal type number operator name operator operator name expr_stmt expr name name index expr name index expr name index expr name operator literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number if condition expr name operator literal type number operator name operator literal type number then block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator call name argument_list argument expr name argument expr name argument expr name operator literal type number argument expr name operator name operator name argument expr name operator name operator name return expr name name index expr name index expr name index expr name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name define directive macro name value endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl specifier type name name init expr literal type char decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr operator name name index expr literal type number index expr literal type number index expr literal type number argument expr operator name name index expr literal type number index expr literal type number index expr literal type number operator literal type number argument expr literal type boolean decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr literal type number argument expr literal type boolean argument expr literal type boolean expr_stmt expr call name argument_list argument expr operator name name index expr literal type number index expr literal type number index expr literal type number argument expr operator name name index expr literal type number index expr literal type number index expr literal type number operator literal type number argument expr literal type boolean decl_stmt decl type name name init expr ternary condition expr name operator literal type number then expr literal type number else expr call name argument_list argument expr name operator literal type number argument expr name argument expr literal type number argument expr literal type boolean argument expr literal type boolean expr_stmt expr call name argument_list argument expr operator name name index expr literal type number index expr literal type number index expr literal type number argument expr operator name name index expr literal type number index expr literal type number index expr literal type number operator literal type number argument expr literal type boolean decl_stmt decl type name name init expr ternary condition expr name operator literal type number then expr literal type number else expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number argument expr literal type number argument expr literal type boolean argument expr literal type boolean expr_stmt expr call name argument_list argument expr operator name name index expr literal type number index expr literal type number index expr literal type number argument expr operator name name index expr literal type number index expr literal type number index expr literal type number operator literal type number argument expr literal type boolean expr_stmt expr name operator name operator literal type number operator name operator name operator name 
