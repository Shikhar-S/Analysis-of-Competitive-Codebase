include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number typedef type name name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr name operator literal type number decl_stmt decl type name modifier name init expr name name index expr name index expr name index expr name index expr name index expr name if condition expr operator name then block type pseudo return expr name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr operator ternary condition expr name then expr literal type number else expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr operator ternary condition expr name then expr literal type number else expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr operator ternary condition expr name then expr literal type number else expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr operator ternary condition expr name then expr literal type number else expr name name index expr name operator literal type char operator for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator name operator literal type number then block comment type line comment type line comment type line comment type line expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator name operator operator name name index expr name operator literal type char operator argument expr name operator call name name argument_list type generic argument expr operator name name index expr name operator literal type char operator argument expr name operator name argument_list argument expr name name index expr name operator literal type char argument expr name operator name operator operator name name index expr name operator literal type char operator return expr name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name argument expr operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr block expr name expr operator literal type number while condition expr operator name operator call name name operator name argument_list operator call name argument_list argument expr call name name operator name argument_list operator name block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name init expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name operator name decl type ref prev name init expr name name operator name operator name decl_stmt decl type name name init expr name name operator name expr_stmt expr call name name operator name argument_list if condition expr name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator name if condition expr name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo continue expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name index expr name expr block expr name expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name argument_list argument expr call name name operator name argument_list for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr call name argument_list argument expr call name name operator name argument_list for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name operator literal type number argument expr name name operator name operator literal type number 
