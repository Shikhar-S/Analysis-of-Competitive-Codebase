include directive file using namespace name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name decl_stmt decl type name name init expr lambda capture argument modifier parameter_list parameter decl type name name parameter decl type name name type name name block return expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr operator literal type number operator name name index expr name operator name name index expr name operator operator call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name argument expr name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr literal type number argument expr literal type number operator name argument expr name operator name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number operator name operator literal type number incr expr operator name block expr_stmt expr name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name operator name operator name init expr lambda capture argument modifier parameter_list parameter decl type name name block if condition expr name operator name name index expr name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name decl_stmt decl type name name init expr lambda capture argument modifier parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name range expr name block if condition expr call name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name operator call name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name then block expr_stmt expr call name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name expr_stmt expr name operator call name name argument_list type generic argument expr literal type number argument_list argument expr name if condition expr call name name argument_list type generic argument expr literal type number argument_list argument expr name operator name then block if condition expr call name name argument_list type generic argument expr literal type number argument_list argument expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name operator name elseif if condition expr call name name argument_list type generic argument expr literal type number argument_list argument expr name operator name operator call name name argument_list type generic argument expr literal type number argument_list argument expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name expr_stmt expr name operator name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type char expr_stmt expr name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name argument_list type generic argument expr name argument expr name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type char return expr literal type number 
