include directive file using namespace name using name init type name name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr call name name operator name argument_list incr expr operator name block expr_stmt expr name operator name name index expr name if condition expr name operator call name argument_list argument expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type string function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr block expr operator name name index expr name expr block expr name expr block expr operator literal type number expr operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type boolean while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr operator name name operator name decl type ref prev name init expr name name operator name operator name decl type ref prev name init expr name name operator name operator name operator name decl type ref prev name init expr name name operator name operator name operator name if condition expr operator name operator literal type number operator name name index expr name operator operator operator name operator literal type number operator name name index expr name operator then block type pseudo continue if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name name index expr name operator literal type boolean elseif if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator name expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name then block type pseudo continue if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr operator name name index expr name index expr name operator operator name name index expr name operator name name index expr name operator expr block expr operator literal type number expr block expr name expr name elseif if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr operator name name index expr name index expr name operator operator name name index expr name operator name name index expr name operator expr block expr operator literal type number expr block expr name expr name expr_stmt expr name operator name operator name expr_stmt expr name operator call name argument_list argument expr call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr call name name operator name argument_list incr expr operator name block expr_stmt expr name operator name name index expr name operator literal type number if condition expr name operator call name argument_list argument expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator call name argument_list argument expr call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr call name name operator name argument_list incr expr operator name block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator name 
