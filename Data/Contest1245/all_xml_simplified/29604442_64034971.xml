include directive file include directive file include directive file using namespace name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name index expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator literal type number operator literal type number then block expr_stmt expr name name index expr name index expr name operator name operator name operator literal type number operator name else block expr_stmt expr name name index expr name index expr name operator name operator literal type number operator name operator literal type number operator name expr_stmt expr name name index expr name name index expr name index expr name operator call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type boolean expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr literal type boolean block decl_stmt decl type name name init expr literal type number if condition expr name name index expr name index expr name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name name index expr name index expr name incr expr operator name block decl_stmt decl type name name init expr name name index expr name name index expr name index expr name operator name operator name decl_stmt decl type name name init expr name name index expr name name index expr name index expr name operator name operator name expr_stmt expr name operator operator literal type number operator literal type number operator operator operator name name index expr name index expr name operator literal type number operator expr_stmt expr name operator operator literal type number operator name name index expr name index expr name operator operator literal type number expr_stmt expr name operator operator name name index expr name index expr name operator literal type number operator expr_stmt expr name name index expr name index expr name operator name else block for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr literal type number argument expr name name index expr name index expr name incr expr operator name block decl_stmt decl type name name init expr name name index expr name name index expr name index expr name operator name operator name decl_stmt decl type name name init expr name name index expr name name index expr name index expr name operator name operator name decl_stmt decl type name name if condition expr name name index expr name index expr name operator literal type number then block expr_stmt expr name operator name name index expr name index expr name else block decl_stmt decl type name name init expr name operator name name index expr name index expr name decl_stmt decl type name name init expr name expr_stmt expr name operator call name argument_list argument expr name name index expr name index expr name argument expr name name index expr name index expr name expr_stmt expr name operator name operator operator literal type number operator literal type number operator operator name expr_stmt expr name operator literal type number expr_stmt expr name name index expr name index expr name operator name if condition expr name operator literal type number operator name operator literal type number then block type pseudo break decl_stmt decl type name name init expr name name index expr name name index expr name index expr name operator literal type number expr_stmt expr name operator name name operator name expr_stmt expr name operator name name operator name expr_stmt expr name operator name operator call name argument_list argument expr literal type number operator name name index expr literal type number index expr literal type number operator name return expr literal type number 
