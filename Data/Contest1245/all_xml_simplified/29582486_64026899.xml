include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value typedef type name name name using namespace name comment type line comment type line comment type line comment type line decl_stmt decl type specifier name name init expr operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name init expr name expr_stmt expr name operator name expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr operator name else expr name function specifier type name name parameter_list block decl_stmt decl type name name while condition expr operator name operator call name argument_list operator operator literal type char operator name operator literal type char operator name operator literal type char block type pseudo empty_stmt return expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block return expr name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name index expr name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name constructor name parameter_list parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block if condition expr name operator name name index expr name then block type pseudo return expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name operator operator operator name name index expr name operator operator name name index expr name operator then block expr_stmt expr name name index expr name operator name if condition expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type boolean return expr literal type boolean return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name argument expr operator name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name index expr name operator operator operator name operator call name name operator name argument_list argument expr name name index expr name operator name name index expr name operator operator name operator call name name operator name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name name index expr name operator name name index expr name operator macro name argument_list argument argument literal type number argument block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr operator literal type number argument expr name name index expr name macro name argument_list argument argument literal type number argument block if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name name index expr name index expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name operator operator literal type number then block if condition expr operator name name index expr call name argument_list argument expr name name index expr name operator name then block type pseudo expr_stmt expr name operator name name index expr name operator name operator expr name name index expr call name argument_list argument expr name name index expr name operator name operator literal type boolean operator expr call name name operator name argument_list argument expr name name index expr name operator name operator literal type number else block if condition expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name operator name operator expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name operator name operator literal type number argument expr name name index expr name operator name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list macro name argument_list argument argument literal type number argument block if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name return expr literal type number 
