include directive file include directive file include directive file using namespace name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator literal type number then block type pseudo return expr name else block type pseudo return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name elseif if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name operator literal type number decl type ref prev name argument_list argument expr name operator literal type number decl type ref prev name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name argument expr operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name name init expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr name operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr lambda capture parameter_list parameter decl type name modifier name parameter decl type name modifier name block return expr name name operator name operator name name operator name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr call name name operator name argument_list argument expr name name index expr name operator name operator call name name operator name argument_list argument expr name name index expr name operator name then block continue expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr name operator name name index expr name operator name if condition expr name name index expr name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name else block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name if condition expr name operator call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name return expr literal type number 
