include directive file using namespace name typedef type name name name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator literal type char operator name operator literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name index expr name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list operator expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr literal type number index expr name operator name name index expr name index expr literal type number operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator literal type number operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name name index expr literal type number index expr name operator expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name operator operator name operator operator literal type number operator name name index expr name operator name name index expr name operator then block type pseudo expr_stmt expr name operator name if condition expr operator name name index expr name then block type pseudo expr_stmt expr name name index expr operator name operator name else block type pseudo expr_stmt expr name name index expr operator name operator name operator expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator literal type number operator expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr operator name name index expr name operator name name index expr name operator name name index expr name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name index expr name operator expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr name name index expr name return expr literal type number 
