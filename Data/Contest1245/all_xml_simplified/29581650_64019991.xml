include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file pragma directive name name name name name name using namespace name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value typedef type name name name typedef type name name name name typedef type name name decl_stmt decl type specifier name name init expr call name name name argument_list type generic argument expr name operator name argument_list decl_stmt decl type specifier name name init expr call name name name argument_list type generic argument expr name operator name argument_list decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type name name decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr literal type boolean struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type specifier name modifier name block return expr name operator name name operator name function type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr call name argument_list argument expr name name operator name operator name name operator name operator call name argument_list argument expr name name operator name operator name name operator name function type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block if condition expr name name operator name then block return expr name name operator name if condition expr name name operator name then block return expr name name operator name return expr call name argument_list argument expr name argument expr name operator literal type number operator operator name name operator name operator name name operator name operator struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr literal type number function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name operator name if condition expr call name argument_list operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name function specifier type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init expr name operator name operator name block expr_stmt expr name operator name name operator name operator name name operator name for control init expr name operator name operator name block expr_stmt expr name operator name name operator name for control init expr name operator name operator name block expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr literal type number expr literal type number expr literal type number expr literal type boolean expr literal type boolean decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name for control init expr name operator name operator name block if condition expr call name name operator name argument_list argument expr name name operator name operator call name name operator name argument_list argument expr name name operator name then block type pseudo continue if condition expr name name index expr name name operator name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name operator name elseif if condition expr name name index expr name name operator name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name operator name else block expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr name name operator name expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init expr name operator name operator name block expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator name operator call name name operator name argument_list operator name for control init expr name operator name operator name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name function specifier type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null function type name name parameter_list block expr_stmt expr call name argument_list comment type line comment type line comment type line expr_stmt expr call name argument_list return expr literal type number 
