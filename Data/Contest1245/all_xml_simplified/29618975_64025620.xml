comment type block include directive file using namespace name typedef type name name name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr operator call name argument_list argument expr name operator name operator literal type char block type pseudo expr_stmt expr name operator call name argument_list if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number operator expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name operator name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name decl name name index expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list macro name argument_list argument argument expr_stmt expr name name index expr name operator call name argument_list operator expr name name index expr name operator call name argument_list macro name argument_list argument argument expr_stmt expr name operator operator name name index expr name operator name name index expr name operator call name argument_list operator operator expr name name index expr name operator name macro name argument_list argument argument expr_stmt expr name name index expr name operator call name argument_list macro name argument_list argument argument macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator operator block expr name expr name expr literal type number operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list argument expr name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name decl type ref prev name init expr call name argument_list argument expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name operator name operator name name index expr name operator name operator operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator operator literal type number then block expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name operator name operator operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name operator name operator literal type char macro name argument_list argument argument block expr_stmt expr name name index expr call name argument_list argument expr name operator literal type number if condition expr name name index expr name operator name name index expr name name index expr name then block type pseudo expr_stmt expr name name index expr name name index expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr literal type number operator literal type char macro name argument_list argument argument if condition expr name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init expr name operator name operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name argument expr name name operator name return expr literal type number 
