include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number operator literal type number decl_stmt decl type specifier name name name init expr literal type number operator literal type number decl_stmt decl type name name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name name index expr name decl type ref prev name name index expr name index expr literal type number decl type ref prev name decl type ref prev name decl type ref prev name struct name block public type default decl_stmt decl type name name name decl type ref prev name decl type ref prev name decl name function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block if condition expr name name operator name operator name name operator name then block type pseudo return expr name name operator name operator name name operator name if condition expr name name operator name operator name name operator name then block type pseudo return expr name name operator name operator name name operator name return expr name name operator name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name function type name name name parameter_list parameter decl type name name name block if condition expr name name index expr name operator name then block type pseudo return expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name operator name operator literal type number expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number while condition expr operator call name name operator name argument_list operator name operator name block expr_stmt expr name operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr call name argument_list argument expr name name operator name operator call name argument_list argument expr name name operator name then block expr_stmt expr name operator expr_stmt expr name operator name name operator name if condition expr name name operator name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator name name operator name else block expr_stmt expr name operator expr_stmt expr name name index expr name index expr literal type number operator name name operator name expr_stmt expr name name index expr name index expr literal type number operator name name operator name expr_stmt expr name name index expr call name argument_list argument expr name name operator name operator call name argument_list argument expr name name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number operator literal type string operator name name index expr name index expr literal type number operator name return expr literal type number 
