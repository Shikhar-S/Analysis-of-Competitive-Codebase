include directive file using namespace name ifdef directive name define directive macro name parameter_list parameter type name value else directive define directive macro name parameter_list parameter type name define directive macro name value endif directive define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name decl_stmt decl type specifier name name init expr literal type string decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name name index expr literal type number macro name argument_list argument argument literal type number expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list argument expr name macro name argument_list argument argument block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name name index expr name operator call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list argument expr name argument expr operator literal type number decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block decl_stmt decl type name name init expr name name index expr name if condition expr name name index expr name name index expr name operator literal type number then block decl_stmt decl type name name init expr name name index expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator name expr_stmt expr name operator macro name argument_list argument argument if condition expr name name index expr name operator operator literal type number then block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr ternary condition expr name name index expr name operator literal type number then expr name else expr name name index expr name expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator name if condition expr literal type number operator name operator name then block expr_stmt expr name operator literal type string operator name macro name argument_list argument argument expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type string operator name return expr literal type number 
