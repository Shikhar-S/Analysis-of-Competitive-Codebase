comment type block include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name ifdef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier endif directive define directive macro name parameter_list parameter type name value function type name name parameter_list parameter decl type name name block return expr literal type string operator name operator literal type string function_decl template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr literal type string operator call name argument_list argument expr name name operator name operator literal type string operator call name argument_list argument expr name name operator name operator literal type string function template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name name block decl_stmt decl type name name init expr literal type string for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list operator literal type number incr expr name operator block type pseudo expr_stmt expr name operator call name argument_list argument expr name name index expr name operator literal type string if condition expr operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator call name argument_list argument expr call name name operator name argument_list return expr name operator literal type string decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name constructor name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr operator name operator name name index expr name operator then expr name else expr operator name name index expr name operator call name argument_list argument expr name name index expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo return if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator function type name name parameter_list block ifdef directive name comment type line comment type line endif directive expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr literal type number index expr name operator name name index expr name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name index expr name expr block expr name expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name operator name operator name decl type ref prev name init expr name name operator name operator name decl_stmt decl type name name init expr name name operator name if condition expr call name name operator name argument_list argument expr name argument expr name then block type pseudo continue expr_stmt expr call name name operator name argument_list argument expr name argument expr name if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name else block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator name expr_stmt expr name operator if condition expr name operator name then block type pseudo break expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name 
