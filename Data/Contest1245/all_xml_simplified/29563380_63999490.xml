include directive file using namespace name using name init type name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type char decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator decl_stmt decl type name name init expr ternary condition expr name operator literal type number operator literal type number then expr name operator literal type number else expr name operator literal type number operator literal type number if condition expr name operator name then block expr_stmt expr name operator literal type string for control init decl type name name range expr name block expr_stmt expr name operator name expr_stmt expr name operator literal type char else block expr_stmt expr name operator literal type string 
