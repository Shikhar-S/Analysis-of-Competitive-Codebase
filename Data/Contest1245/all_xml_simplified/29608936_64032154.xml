comment type block include directive file comment type line comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list value define directive macro name parameter_list parameter type name value comment type line comment type line typedef type name name name typedef type name name name name using namespace name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name expr_stmt expr name operator call name argument_list while condition expr operator call name argument_list argument expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list while condition expr call name argument_list argument expr name block expr_stmt expr name operator name operator literal type number operator name operator literal type number expr_stmt expr name operator call name argument_list if condition expr name then block type pseudo return expr operator name return expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name constructor name parameter_list block constructor name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator name operator expr name operator name operator expr name operator name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name name operator name operator name decl_stmt decl type name name name index expr name decl type ref prev name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr operator operator name name index expr name operator name operator name name index expr name operator name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name name operator name decl type ref prev name init expr call name argument_list argument expr name name operator name if condition expr name operator name then block expr_stmt expr name operator name name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name name operator name index expr name name operator name operator name name index expr name name operator name index expr name name operator name operator literal type number return expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr literal type number argument expr name argument expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name operator expr name name index expr name operator name expr_stmt expr name operator call name argument_list operator name decl_stmt decl type name name init expr literal type number decl type ref prev name name index expr name decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr literal type number index expr name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr literal type number index expr name then block if condition expr name operator name then block type pseudo expr_stmt expr name operator name operator name else block type pseudo expr_stmt expr name operator name operator literal type string expr_stmt expr name operator expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name index expr name then block type pseudo expr_stmt expr name operator name operator literal type string operator name operator name return expr literal type number 
