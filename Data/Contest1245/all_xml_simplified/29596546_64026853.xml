comment type block include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr name index expr name function type name name parameter_list parameter decl type name name block return expr name name index expr name operator ternary condition expr operator name name index expr name operator name operator then expr name else expr call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list block ifdef directive name comment type line expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive comment type line expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr literal type number index expr name expr_stmt expr name name index expr name index expr literal type number operator name name index expr literal type number index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr literal type number index expr name argument expr call name argument_list argument expr literal type number argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name index expr name operator name name index expr name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name index expr name argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr call name name operator name argument_list operator name then block type pseudo break comment type line decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name name operator name decl type ref prev name init expr name name index expr name operator name name operator name if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name expr_stmt expr name operator name name index expr name index expr name if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr ternary condition expr operator name operator literal type number operator then expr name else expr name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name expr_stmt expr name operator name operator call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr name operator name operator literal type char operator name operator name 
