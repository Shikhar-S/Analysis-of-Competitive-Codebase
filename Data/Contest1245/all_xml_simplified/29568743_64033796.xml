include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value function type name name parameter_list block decl_stmt decl type name name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name index expr literal type number index expr name index expr literal type number decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name name index expr name index expr name index expr name index expr name then block type pseudo return expr name name index expr name index expr name index expr name index expr name decl_stmt decl type name name init expr ternary condition expr operator name then expr literal type number else expr name name index expr name decl_stmt decl type name name init expr ternary condition expr operator name then expr literal type number else expr name name index expr name decl_stmt decl type name name init expr literal type number if condition expr name operator name then block for control init decl type name name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator name operator name argument expr name argument expr name return expr name name index expr name index expr name index expr name index expr name operator name for control init decl type name name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator name operator name argument expr name operator literal type number argument expr name operator name operator name return expr name name index expr name index expr name index expr name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name argument expr name if condition expr name operator operator literal type number then block type pseudo return expr literal type number expr_stmt expr name operator literal type number decl_stmt decl type name name init expr name while condition expr name block expr_stmt expr name name index expr operator name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name while condition expr name block expr_stmt expr name name index expr operator name operator name operator literal type number expr_stmt expr name operator literal type number return expr call name argument_list argument expr name argument expr literal type boolean argument expr name argument expr literal type boolean function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator block decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list if condition expr operator name operator operator name then block if condition expr operator name operator operator name then block expr_stmt expr call name argument_list argument expr literal type string continue decl_stmt decl type name name init expr ternary condition expr name operator name then expr name else expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name argument_list argument expr name argument expr name continue expr_stmt expr call name argument_list argument expr literal type string argument expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator literal type number operator literal type number operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number return expr literal type number 
