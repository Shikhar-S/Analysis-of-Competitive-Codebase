include directive file using name init type name name class name block private type default decl_stmt decl type name modifier name decl_stmt decl type name modifier name public constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr operator name name index expr name call name argument_list argument expr operator name name index expr name operator operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name destructor name name parameter_list block expr_stmt expr operator index name expr_stmt expr operator index name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name operator name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name argument expr name name for control init expr name operator name operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init expr name operator name operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name argument expr name decl_stmt decl type name name init expr lambda capture parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr name else expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr operator name name index expr name operator name name index expr name operator operator name argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name operator name name argument_list type generic argument expr name name for control init expr name index expr name operator name operator name operator name block if condition expr call name name operator name argument_list argument expr name argument expr name then block type pseudo continue expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init expr name index expr name operator name operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number argument expr name operator literal type number return expr literal type number 
