include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name using namespace name name operator name using name init type name name using name init type name name using name init type name name argument_list type generic argument expr name argument expr literal type number using name init type name name argument_list type generic argument expr name argument expr literal type number using name init type name name argument_list type generic argument expr name argument expr literal type number using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr literal type number ifdef directive name include directive file else directive define directive macro name parameter_list parameter type name define directive macro name value endif directive decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name modifier name name argument_list argument expr name operator name argument expr name operator name argument_list argument expr operator name operator name operator name operator block expr name operator name return expr name expr_stmt expr name function type name name parameter_list parameter decl type name name block comment type line return expr ternary condition expr name name index expr name operator name then expr name else expr operator name name index expr name operator call name argument_list argument expr name name index expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name name operator name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator name decl_stmt decl type name name argument_list argument expr name decl type ref prev name argument_list argument expr name decl type ref prev name argument_list argument expr name decl type ref prev name argument_list argument expr name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr block expr name expr name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr block expr name expr name macro name argument_list argument argument literal type number argument block if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr block expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr block expr name expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init expr name index expr name operator name operator name block expr_stmt expr name index expr name operator name operator name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name comment type line if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name comment type block comment type line expr_stmt expr call name name operator name argument_list argument expr block expr name expr name if condition expr name operator name operator name operator name then block expr_stmt expr operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block expr_stmt expr name index expr name operator name operator name if condition expr name operator name then block expr_stmt expr name name index expr name operator literal type number if condition expr name operator name then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr operator name expr_stmt expr name operator name operator literal type string expr_stmt expr name operator name operator literal type string macro name argument_list argument argument literal type number argument block if condition expr name name index expr name then block expr_stmt expr name operator literal type number operator name operator literal type string expr_stmt expr name operator literal type string expr_stmt expr name operator name operator literal type string for control init decl type name name range expr name block expr_stmt expr name index expr name operator name operator name if condition expr name operator name operator name operator name then block expr_stmt expr name operator literal type number operator name operator literal type string operator literal type number operator name operator literal type string 
