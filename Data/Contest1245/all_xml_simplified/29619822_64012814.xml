include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value typedef type name name name ifdef directive name include directive file else directive define directive macro name parameter_list parameter type modifier value endif directive struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name struct name block public type default decl_stmt decl type name name name index expr literal type number decl_stmt decl type name modifier name constructor name parameter_list parameter decl type name name parameter decl type name name name index member_init_list call name argument_list argument expr name block expr_stmt expr call name argument_list argument expr operator name name index expr literal type number argument expr operator name name index expr name operator literal type number argument expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name else block type pseudo return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block return expr name name index expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name define directive macro name value endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl specifier type name name init expr literal type char decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator name name index expr name decl_stmt decl type name name name index expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name decl_stmt decl type name name name index expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument macro name argument_list argument argument literal type number argument if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr call name argument_list argument expr name name index expr name operator name name index expr name operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr lambda capture parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl_stmt decl type name name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block type pseudo if condition expr operator call name name operator name argument_list argument expr name name operator name argument expr name name operator name operator call name name operator name argument_list argument expr name name operator name operator call name name operator name argument_list argument expr name name operator name operator call name argument_list argument expr call name name operator name argument_list argument expr name name operator name argument expr call name name operator name argument_list argument expr name name operator name operator name name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr literal type number argument_list macro name argument_list argument argument literal type number argument if condition expr operator name name index expr call name name operator name argument_list argument expr name then block expr_stmt expr name name index expr call name name operator name argument_list argument expr name operator literal type boolean expr_stmt expr name operator call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name expr_stmt expr name operator name operator name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator name 
