pragma directive name name name literal name include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name expr_stmt expr name operator name if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr literal type char expr_stmt expr name operator expr_stmt expr name operator else block expr_stmt expr call name name operator name argument_list argument expr literal type char elseif if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr literal type char expr_stmt expr name operator expr_stmt expr name operator else block expr_stmt expr call name name operator name argument_list argument expr literal type char elseif if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr literal type char expr_stmt expr name operator expr_stmt expr name operator else block expr_stmt expr call name name operator name argument_list argument expr literal type char comment type block if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string for control init decl type name name range expr name block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator name else block if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name operator literal type string expr_stmt expr name operator literal type string function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator operator literal type number block type pseudo expr_stmt expr call name argument_list return expr literal type number 
