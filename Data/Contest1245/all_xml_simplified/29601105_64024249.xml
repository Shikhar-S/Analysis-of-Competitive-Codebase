include directive file include directive file include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name operator literal type number index expr name operator literal type number comment type line decl_stmt decl type name name init expr block expr literal type number expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name operator name operator literal type number operator literal type number then block if condition expr name name operator name operator name operator literal type number then block type pseudo return expr block expr name name operator name expr name name operator name operator literal type number else block type pseudo return expr block expr name name operator name operator literal type number expr name name operator name else block if condition expr name name operator name operator literal type number then block type pseudo return expr block expr name name operator name expr name name operator name operator literal type number else block type pseudo return expr block expr name name operator name operator literal type number expr name name operator name function type name name parameter_list parameter decl type name name block if condition expr name name operator name operator literal type number operator literal type number then block if condition expr name name operator name operator literal type number then block type pseudo return expr block expr name name operator name expr name name operator name operator literal type number else block type pseudo return expr block expr name name operator name operator literal type number expr name name operator name else block if condition expr name name operator name operator name operator literal type number then block type pseudo return expr block expr name name operator name expr name name operator name operator literal type number else block type pseudo return expr block expr name name operator name operator literal type number expr name name operator name decl_stmt decl type name name name name index expr name operator literal type number index expr name operator literal type number function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name operator literal type number index expr name expr_stmt expr name name index expr name operator literal type number index expr literal type number operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name while condition expr literal type boolean block if condition expr name name operator name operator name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name name operator name operator name then block expr_stmt expr name operator literal type number operator literal type number else block expr_stmt expr name operator name name index expr name name operator name index expr name name operator name operator literal type number expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name operator name index expr name name operator name operator operator literal type number operator name operator operator operator literal type number operator name operator else block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block decl_stmt decl type name name init expr name name index expr name name operator name index expr name name operator name decl_stmt decl type name name init expr name name index expr name name operator name operator name name index expr name name operator name index expr name name operator name index expr name name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name name operator name index expr name name operator name operator literal type number operator name operator literal type number comment type line if condition expr name name operator name operator literal type number operator name name operator name operator literal type number then block break else block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr literal type number index expr literal type number return expr literal type number 
