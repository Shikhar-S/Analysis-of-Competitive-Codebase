include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value using namespace name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr operator name operator name operator literal type boolean operator else expr literal type boolean function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr operator name operator name operator literal type boolean operator else expr literal type boolean decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr name operator operator name operator literal type number operator expr_stmt expr name operator call name argument_list argument expr name operator literal type number macro name argument_list argument argument block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator literal type number return expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name name index expr literal type number argument expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator call name name operator name argument_list operator name then block expr_stmt expr operator call name name operator name argument_list operator name else block expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr literal type number for control init expr name operator name operator name block if condition expr name name operator name operator literal type char operator name name operator name operator literal type char then block expr_stmt expr name operator name name index expr name name operator name expr_stmt expr name operator name expr_stmt expr name operator name return expr literal type number 
