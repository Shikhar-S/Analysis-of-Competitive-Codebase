include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr operator name operator literal type number operator operator literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator expr_stmt expr name operator ternary condition expr operator name operator name operator then expr operator name operator else expr name expr_stmt expr name operator ternary condition expr operator name operator name operator then expr operator name operator else expr name expr_stmt expr name operator ternary condition expr operator name operator name operator then expr operator name operator else expr name if condition expr name operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string decl_stmt decl type name name init expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator name operator name return expr literal type number 
