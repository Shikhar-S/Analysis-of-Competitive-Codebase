include directive file define directive macro name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr name else expr operator name decl_stmt decl type name name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name init expr literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number index expr name operator literal type number function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator expr name name index expr name operator name operator literal type number for control init decl type name name init expr literal type number decl type ref prev name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr operator name name index expr name then block if condition expr name name index expr name operator name name index expr name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name index expr name operator expr name name index expr name operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr operator name name index expr name operator name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name if condition expr name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr name name index expr operator name operator name name index expr name operator expr name name index expr name operator name expr_stmt expr name operator name name index expr name operator expr name name index expr name operator literal type number operator expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name specifier modifier name name index block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name operator operator name name index expr name operator name name index expr name operator operator literal type number operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number index expr name operator name name index expr name expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr name name index expr name return expr literal type number 
