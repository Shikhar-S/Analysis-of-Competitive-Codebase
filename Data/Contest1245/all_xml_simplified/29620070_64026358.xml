comment type line include directive file using namespace name comment type line typedef type name name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value ifndef directive name pragma directive name name name name name define directive macro name value endif directive decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list block decl_stmt decl type name name while condition expr name operator name block expr_stmt expr call name argument_list argument expr name argument expr literal type boolean argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list operator name decl_stmt decl type name name init expr call name name operator name argument_list operator name expr_stmt expr call name name operator name argument_list if condition expr name operator name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name init expr name operator name decl_stmt decl type name name init expr name name index expr name operator name name index expr name if condition expr operator name name index expr name operator name operator name operator name name index expr name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator name argument expr literal type number expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator literal type string index expr name operator literal type number operator call name argument_list argument expr name expr_stmt expr name operator operator name operator call name name operator name argument_list operator operator name macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name operator literal type number operator literal type char operator name operator literal type number operator name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line else directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number endif directive ifdef directive name decl_stmt decl type name name init expr call name argument_list endif directive decl_stmt decl type name name init expr literal type number comment type line while condition expr name operator block type pseudo expr_stmt expr call name argument_list ifdef directive name decl_stmt decl type name name init expr call name argument_list expr_stmt expr name operator literal type string operator call name argument_list argument expr name operator name operator name operator literal type string operator name endif directive return expr literal type number 
