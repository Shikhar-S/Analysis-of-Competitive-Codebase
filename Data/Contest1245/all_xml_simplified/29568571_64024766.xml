include directive file include directive file include directive file include directive file include directive file define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr operator literal type number expr literal type number decl type ref prev name name index init expr block expr literal type number expr operator literal type number expr literal type number expr literal type number struct name block public type default constructor name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name operator call name argument_list argument expr literal type number expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl name comment type block struct name block public type default constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name argument expr operator literal type number block function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator literal type number then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name block return expr operator name name index expr call name argument_list argument expr name private decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name decl type ref prev name argument_list argument expr name macro name argument_list argument argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument expr_stmt expr name operator name name index expr name struct name block public type default decl_stmt decl type name name name decl_stmt decl type name name decl type ref prev name constructor name parameter_list parameter decl type name name name parameter decl type name name parameter decl type name name init expr operator literal type number member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block function type operator specifier type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr ternary condition expr name operator name name operator name then expr name operator name name operator name else expr ternary condition expr name operator name name operator name then expr name operator name name operator name else expr name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name macro name argument_list argument argument expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name macro name argument_list argument argument macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr operator name name index expr name operator name name index expr name operator operator name argument expr name argument expr name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type boolean while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr name name operator name operator operator literal type number then block if condition expr operator name name index expr call name name operator name argument_list argument expr name name operator name then block expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr name name index expr call name name operator name argument_list argument expr name name operator name operator literal type boolean else block if condition expr name name index expr call name name operator name argument_list argument expr name name operator name operator name name index expr call name name operator name argument_list argument expr name name operator name then block type pseudo continue if condition expr operator call name name operator name argument_list argument expr name name operator name argument expr name name operator name then block expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name name operator name decl type ref prev name init expr call name name operator name argument_list argument expr name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator literal type boolean if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type boolean if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator name operator literal type char decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr name operator name operator literal type char expr_stmt expr call name argument_list argument expr call name argument_list argument expr name macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number operator operator ternary condition expr name operator literal type number operator name then expr literal type char else expr literal type char operator expr_stmt expr name operator call name name operator name argument_list expr_stmt expr name operator name operator literal type char macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number operator literal type char operator name name index expr name operator literal type number operator literal type char return expr literal type number 
