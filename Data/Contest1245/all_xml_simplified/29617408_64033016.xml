include directive file using namespace name define directive macro name value decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator operator literal type number then block type pseudo return expr literal type number if condition expr name name index expr name index expr name index expr name index expr name index expr name operator operator literal type number then block type pseudo return expr name name index expr name index expr name index expr name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name if condition expr name then block if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number else block expr_stmt expr call name name operator name argument_list argument expr literal type number if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number else block if condition expr name then block if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number else block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number else block decl_stmt decl type name name init expr operator name operator name operator literal type number operator decl_stmt decl type name name init expr operator name operator name operator literal type number operator for control init decl type name name init expr name condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name if condition expr name then block if condition expr name then block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number else block expr_stmt expr call name name operator name argument_list argument expr literal type number if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number else block if condition expr name then block if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number else block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number else block decl_stmt decl type name name init expr operator name operator name operator literal type number operator decl_stmt decl type name name init expr operator name operator name operator literal type number operator for control init decl type name name init expr name condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name modifier name init expr name name index expr name index expr name index expr name index expr name index expr name expr_stmt expr name operator literal type number for control init decl type name name range expr name block for control init decl type name name range expr name block if condition expr name operator name operator name then block type pseudo continue decl_stmt decl type name name init expr name operator operator name operator operator name operator name operator literal type number operator operator decl_stmt decl type name name init expr name operator operator name operator operator name operator name operator literal type number operator operator decl_stmt decl type name name init expr name operator operator name operator operator name operator name operator literal type number operator operator decl_stmt decl type name name init expr name operator operator name operator operator name operator name operator literal type number operator operator expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name return expr name function type name name parameter_list block expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list 
