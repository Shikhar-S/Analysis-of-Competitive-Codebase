include directive file using namespace name typedef type name name name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name decl_stmt decl type name name function type name name parameter_list block comment type line comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number operator literal type number if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number operator literal type number if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number operator literal type number comment type line decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block comment type line if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator literal type string if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type string if condition expr name name index expr name operator literal type number then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type string continue if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type string continue if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type string expr_stmt expr name operator literal type char return expr literal type number 
