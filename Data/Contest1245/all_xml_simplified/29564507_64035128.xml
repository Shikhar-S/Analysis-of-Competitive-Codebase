include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name modifier name parameter decl type name modifier modifier name block expr_stmt expr name operator name operator expr call name argument_list argument expr name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator name operator literal type string operator expr call name argument_list argument expr name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block expr_stmt expr name operator name operator literal type string function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator name operator literal type string operator expr call name argument_list argument expr name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name block return expr operator name operator call name name operator name argument_list define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name name index expr name operator name operator name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name expr_stmt expr name name index expr literal type number operator block expr literal type number expr literal type number macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name operator block expr name expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name decl_stmt decl type name name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr block expr literal type number expr name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr call name argument_list argument expr name name index expr name macro name argument_list argument argument literal type number argument literal type number block macro name argument_list argument argument literal type number argument block expr_stmt expr call name name operator name argument_list argument expr block expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator expr block expr name expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name while condition expr call name argument_list argument expr name block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr call name argument_list argument expr name name operator name operator name operator call name argument_list argument expr name name operator name operator name then block type pseudo continue expr_stmt expr call name argument_list argument expr name name operator name operator name argument expr name name operator name operator name expr_stmt expr name operator name name operator name if condition expr name name operator name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr name argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr call name argument_list argument expr name for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr name name operator name argument expr name name operator name return expr literal type number 
