include directive file using namespace name define directive macro name value define directive macro name value using name init type name name using name init type name name argument_list type generic argument expr name argument expr name decl_stmt decl type specifier name name init expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type number expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type number return expr call name argument_list argument expr name name index expr name argument expr name name index expr name decl_stmt decl type name name init expr literal type number operator name operator name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr literal type number operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name expr block expr name expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list expr_stmt expr name operator name expr_stmt expr name operator operator literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr call name argument_list argument expr name name operator name operator name argument expr name name operator name operator name if condition expr name operator name name operator name then block expr_stmt expr name operator name name operator name operator expr name operator name expr_stmt expr call name argument_list argument expr name name operator name operator name argument expr name name operator name operator name if condition expr name operator name operator name then block expr_stmt expr name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr call name argument_list argument expr name name operator name operator name argument expr name name operator name operator name if condition expr name operator name name operator name then block expr_stmt expr call name argument_list argument expr name name operator name operator name argument expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type char expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list expr_stmt expr call name argument_list 
