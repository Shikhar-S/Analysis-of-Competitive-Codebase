include directive file define directive macro name value using namespace name comment type line comment type line typedef type name name name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type specifier name name argument_list type generic argument expr literal type number modifier name parameter decl type specifier name name argument_list type generic argument expr literal type number modifier name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name expr_stmt expr name operator name operator literal type number operator name expr_stmt expr name operator name operator literal type number operator name expr_stmt expr name operator name operator literal type number operator name expr_stmt expr name operator name operator literal type number operator name while condition expr name name index expr name operator literal type number block expr_stmt expr name name index expr name operator literal type number if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number break decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name decl_stmt decl type name name init expr name decl type ref prev name init expr name if condition expr name operator name name index expr name operator literal type number then block expr_stmt expr name operator literal type number elseif if condition expr name operator name name index expr name operator literal type number operator operator name then block expr_stmt expr name operator literal type number if condition expr name operator name name index expr name operator literal type number then block expr_stmt expr name operator literal type number elseif if condition expr name operator name name index expr name operator literal type number operator operator name then block expr_stmt expr name operator literal type number if condition expr name operator name name index expr name operator literal type number then block expr_stmt expr name operator literal type number elseif if condition expr name operator name name index expr name operator literal type number operator operator name then block expr_stmt expr name operator literal type number if condition expr name operator name name index expr name operator literal type number then block expr_stmt expr name operator literal type number elseif if condition expr name operator name name index expr name operator literal type number operator operator name then block expr_stmt expr name operator literal type number if condition expr name then block decl_stmt decl type name name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name argument expr name argument expr name argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name macro name block expr_stmt expr name operator name operator literal type string operator name operator name operator name operator name operator literal type string operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator literal type string operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator name return expr name name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr literal type number name argument_list argument expr name decl type ref prev name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number operator literal type number argument expr operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name argument expr name argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number expr_stmt expr name operator name operator name return expr literal type number 
