include directive file using namespace name define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type specifier name name init expr literal type number operator literal type number comment type line decl_stmt decl type specifier name name init expr literal type number comment type line struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name constructor name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name return expr name operator operator name name index expr name operator name name index expr name operator decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block while condition expr name name index expr name operator name block expr_stmt expr name name index expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number operator name operator literal type number expr_stmt expr name name index expr name operator literal type number operator literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo for control init expr name operator name operator literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name else block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr lambda capture parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name block if condition expr call name argument_list argument expr name name operator name argument expr name name operator name then block expr_stmt expr name operator name name operator name if condition expr name name operator name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name operator literal type char expr_stmt expr name operator operator name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string expr_stmt expr name operator literal type char expr_stmt expr name operator operator name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator literal type char function type name name parameter_list block expr_stmt expr name decl_stmt decl type name name init expr literal type number comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list return expr literal type number 
