include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value using namespace name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr operator name operator name operator literal type boolean operator else expr literal type boolean function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr operator name operator name operator literal type boolean operator else expr literal type boolean decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name block return expr operator name operator name name operator name operator operator operator call name argument_list argument expr name operator name name operator name operator call name argument_list argument expr name operator name name operator name operator decl name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block if condition expr name operator name name index expr name then block return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr name operator name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name operator name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator name macro name argument_list argument argument block macro name argument_list argument argument literal type number block expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr lambda capture parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr name name index expr name name operator name operator call name argument_list argument expr name name index expr name name operator name operator name name index expr name name operator name operator call name argument_list argument expr name name index expr name name operator name for control init expr name operator name operator name block decl_stmt decl type name name init expr name name operator name decl type ref prev name init expr name name operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name expr_stmt expr name name index expr name operator literal type number if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name expr_stmt expr name operator operator name name index expr name operator literal type number operator expr_stmt expr name operator name operator literal type char operator name operator literal type char macro name argument_list argument argument block if condition expr name name index expr name then block expr_stmt expr name operator name name index expr name operator literal type char expr_stmt expr name operator literal type char operator name operator literal type char for control init expr name operator name operator name block expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator literal type char return expr literal type number 
