comment type line include directive file define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name operator name operator name decl type ref prev name name index expr name operator name operator name decl type ref prev name name index expr name operator name operator name decl type ref prev name name index expr name operator name operator name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name function type name name parameter_list parameter decl type name name block return expr name name index expr name operator operator ternary condition expr name name index expr name operator name then expr name else expr call name argument_list argument expr name name index expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name name index expr name operator name return expr literal type boolean function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator literal type number operator expr name name index expr name operator name operator expr name name index expr name operator name name index expr name decl_stmt decl type name name init expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator expr name name index expr name operator name operator expr name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name argument expr literal type number expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name argument expr lambda capture parameter_list parameter decl type name name parameter decl type name name block return expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name operator name operator literal type number argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name name index expr name decl type ref prev name init expr name name index expr name name index expr name if condition expr call name argument_list argument expr name argument expr name then block expr_stmt expr name operator name name index expr name name index expr name if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr name operator name operator literal type string operator call name name operator name argument_list operator literal type string for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type string for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name index expr name operator literal type string operator name name index expr name operator literal type string return expr literal type number 
