include directive file using namespace name class name block private type default public decl_stmt decl type name name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name init expr literal type number function_decl type name name parameter_list function_decl type name name parameter_list parameter decl type name name class name block private type default public decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name decl_stmt decl type name name argument_list type generic argument expr name name function type name name name operator name parameter_list block if condition expr name operator name then block type pseudo return expr name return expr name operator name name index expr name operator call name argument_list function type name name name operator name parameter_list parameter decl type name name block if condition expr name operator name operator name operator name name index expr name operator name then block expr_stmt expr name operator name else block expr_stmt expr name name index expr call name argument_list operator call name argument_list argument expr name name index expr name operator call name argument_list decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name return expr operator name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator name name index expr name operator name expr_stmt expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block expr_stmt expr name name index expr name operator name operator name operator block expr literal type number expr name expr name expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name operator name operator block expr literal type number expr name expr name expr operator name name index expr name operator name operator name name index expr name operator name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator name then block if condition expr operator operator name name index expr name name index expr name operator name operator name operator operator name name index expr name name index expr name operator name operator name operator operator name name index expr name name index expr name operator name operator call name argument_list operator name name index expr name name index expr name operator name operator call name argument_list then block if condition expr name name index expr name name index expr name operator name operator name then block decl_stmt decl type name name init expr name name index expr name name index expr name operator name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator name then block expr_stmt expr name name index expr name operator name operator literal type number if condition expr name name index expr name name index expr name operator name operator name then block decl_stmt decl type name name init expr name name index expr name name index expr name operator name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator name then block expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name expr name name index expr name operator name expr_stmt expr name operator name name index expr name operator name else block if condition expr operator name name index expr name name index expr name operator name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name name index expr name operator name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator call name argument_list operator name then block expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator name name index expr name operator name expr_stmt expr name operator name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type string for control init decl type name name argument_list type generic argument expr name argument expr name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator literal type string return expr literal type number 
