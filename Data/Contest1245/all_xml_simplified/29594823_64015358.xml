comment type line comment type line comment type line include directive file define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value using namespace name using namespace name function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type char then block type pseudo return expr operator name operator literal type char operator if condition expr name operator literal type char then block type pseudo return expr operator name operator literal type char operator if condition expr name operator literal type char then block type pseudo return expr operator name operator literal type char operator decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr literal type number decl_stmt decl type name modifier name init expr name name index expr name index expr name index expr name if condition expr operator name then block type pseudo return expr name for control init decl type name name range expr block expr literal type char expr literal type char expr literal type char block if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number argument expr name operator call name argument_list argument expr name argument expr name name index expr name else block type pseudo continue elseif if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name operator literal type number argument expr name argument expr name operator literal type number operator call name argument_list argument expr name argument expr name name index expr name else block type pseudo continue else block if condition expr name operator name operator name operator name then block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name operator literal type number argument expr name argument expr name operator call name argument_list argument expr name argument expr name name index expr name else block type pseudo continue return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name for control init decl type name name range expr block expr literal type char expr literal type char expr literal type char block if condition expr name operator literal type char then block if condition expr name then block if condition expr name operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number argument expr name operator call name argument_list argument expr name argument expr name name index expr name then block type pseudo expr_stmt expr name operator name operator expr name operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number argument expr name operator call name argument_list argument expr name argument expr name name index expr name else block type pseudo continue elseif if condition expr name operator literal type char then block if condition expr name then block if condition expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name operator literal type number operator call name argument_list argument expr name argument expr name name index expr name then block expr_stmt expr name operator name operator expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name operator literal type number operator call name argument_list argument expr name argument expr name name index expr name else block type pseudo continue else block if condition expr name operator name operator name operator name then block if condition expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name operator call name argument_list argument expr name argument expr name name index expr name then block type pseudo expr_stmt expr name operator name operator expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name operator call name argument_list argument expr name argument expr name name index expr name else block type pseudo continue expr_stmt expr call name name operator name argument_list argument expr name if condition expr name operator literal type char then block expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number argument expr name elseif if condition expr name operator literal type char then block expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name argument expr name operator literal type number else block expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list expr_stmt expr name operator name operator name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator operator literal type number if condition expr literal type number operator call name argument_list argument expr literal type number argument expr name argument expr name operator name then block expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr literal type number argument expr name argument expr name expr_stmt expr name operator name operator literal type string else block expr_stmt expr name operator literal type string function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list 
