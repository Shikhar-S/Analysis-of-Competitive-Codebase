include directive file include directive file include directive file include directive file include directive file define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name decl name name index expr name operator name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name then expr name name index expr name operator call name argument_list argument expr name name index expr name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr operator name operator call name argument_list argument expr name operator operator operator name operator call name argument_list argument expr name operator operator operator name name index expr name operator name operator decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl_stmt decl type name name operator name name argument_list type generic argument expr name name decl type ref prev name decl type ref prev name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr operator name operator block expr name operator literal type number expr name expr name name index expr name expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr operator name operator block expr name expr name expr operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name name index expr name operator name name index expr name operator expr literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name operator expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr operator name operator call name name operator name argument_list for control init condition expr operator call name name operator name argument_list incr expr call name name operator name argument_list block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list argument expr literal type string index expr call name name operator name argument_list operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init condition expr operator call name name operator name argument_list incr expr call name name operator name argument_list operator expr call name name operator name argument_list block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list argument expr call name name operator name argument_list 
