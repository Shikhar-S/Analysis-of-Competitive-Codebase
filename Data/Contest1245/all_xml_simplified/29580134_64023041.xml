comment type block include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name typedef type name name name define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number class name block private type default private decl_stmt decl type name name decl type ref prev name public constructor name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block return expr operator ternary condition expr name operator name name index expr name then expr name else expr operator name name index expr name operator call name argument_list argument expr name name index expr name operator operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator call name argument_list argument expr name argument expr name then block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number struct name block public type default decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name constructor name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block return expr name name operator name operator name name operator name function type name name parameter_list block decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr literal type number operator operator literal type number operator name name index expr name operator name name index expr name operator operator operator literal type number operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr literal type number argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr literal type number argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name if condition expr operator call name name operator name argument_list argument expr name name operator name argument expr name name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name expr_stmt expr name operator name name operator name if condition expr name name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name name operator name else block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name operator name argument expr name name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list macro name argument_list argument argument literal type number argument block if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list macro name argument_list argument argument literal type number argument block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name init expr literal type number comment type line expr_stmt expr name operator literal type number while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name argument expr operator name name index expr name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name comment type line expr_stmt expr call name argument_list return expr literal type number 
