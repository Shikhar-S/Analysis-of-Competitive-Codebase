include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr name while condition expr name name index expr name operator literal type number block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name init expr name expr_stmt expr name operator name while condition expr name operator name block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator expr name name index expr name operator name else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator expr name name index expr name operator name return expr literal type boolean function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator argument expr name argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init expr name operator name operator name block decl_stmt decl type name name name decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator name if condition expr call name argument_list argument expr name argument expr name then block expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator literal type number else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr name operator name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator literal type char operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator literal type char function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name argument_list return expr literal type number 
