include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type specifier name name init expr literal type boolean decl_stmt decl type specifier name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type boolean expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list if condition expr name then block type pseudo expr_stmt expr name operator operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type char using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type operator specifier type name name name parameter_list parameter decl type specifier name name specifier block return expr name operator name name operator name decl name name index expr name operator name operator name function specifier type name name parameter_list parameter decl type name name block return expr name name index expr name operator ternary condition expr name operator name name index expr name then expr name else expr call name argument_list argument expr name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator expr call name argument_list argument expr name name index expr name operator expr name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator expr name name index expr operator name operator name operator name name index expr name operator expr name name index expr name operator name operator literal type number operator expr name name index expr name operator name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr operator name operator name operator literal type number operator operator name name index expr name operator name name index expr name operator operator call name argument_list argument expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name operator name operator expr name name index expr name operator name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name decl_stmt decl type name name name decl type ref prev name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator name operator expr name operator call name argument_list argument expr name name index expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr name operator name name index expr name operator name if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr operator name operator name name index expr name operator name operator expr name name index expr name operator name name index expr name operator name else block type pseudo expr_stmt expr operator name operator expr name name index expr name name index expr name operator name operator literal type boolean expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr literal type char macro name argument_list argument argument literal type number argument if condition expr name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type char macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator expr call name argument_list argument expr literal type char operator expr call name argument_list argument expr name name index expr name operator expr call name argument_list argument expr literal type char return expr literal type number 
