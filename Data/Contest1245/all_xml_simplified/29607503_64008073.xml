include directive file define directive macro name value using namespace name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr literal type number index expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name name index expr literal type number index expr literal type number argument expr operator name name index expr literal type number index expr literal type number argument expr operator name name index expr literal type number index expr literal type number argument expr name operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name name index expr literal type number index expr literal type number operator name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type boolean argument expr sizeof name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name name index expr literal type number index expr literal type number then block expr_stmt expr name name index expr literal type number index expr literal type number operator expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator if condition expr name name index expr name operator literal type char operator name name index expr literal type number index expr literal type number then block expr_stmt expr name name index expr literal type number index expr literal type number operator expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator if condition expr name name index expr name operator literal type char operator name name index expr literal type number index expr literal type number then block expr_stmt expr name name index expr literal type number index expr literal type number operator expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name name index expr name then block expr_stmt expr call name argument_list argument expr literal type char if condition expr name name index expr name operator literal type char operator operator name name index expr name then block expr_stmt expr ternary condition expr name name index expr literal type number index expr literal type number then expr call name argument_list argument expr literal type char operator expr name name index expr literal type number index expr literal type number operator operator call name argument_list argument expr literal type char operator expr name name index expr literal type number index expr literal type number operator if condition expr name name index expr name operator literal type char operator name name index expr name then block expr_stmt expr call name argument_list argument expr literal type char if condition expr name name index expr name operator literal type char operator operator name name index expr name then block expr_stmt expr ternary condition expr name name index expr literal type number index expr literal type number then expr call name argument_list argument expr literal type char operator expr name name index expr literal type number index expr literal type number operator operator call name argument_list argument expr literal type char operator expr name name index expr literal type number index expr literal type number operator if condition expr name name index expr name operator literal type char operator name name index expr name then block expr_stmt expr call name argument_list argument expr literal type char if condition expr name name index expr name operator literal type char operator operator name name index expr name then block expr_stmt expr ternary condition expr name name index expr literal type number index expr literal type number then expr call name argument_list argument expr literal type char operator expr name name index expr literal type number index expr literal type number operator operator call name argument_list argument expr literal type char operator expr name name index expr literal type number index expr literal type number operator expr_stmt expr call name argument_list argument expr literal type string 
