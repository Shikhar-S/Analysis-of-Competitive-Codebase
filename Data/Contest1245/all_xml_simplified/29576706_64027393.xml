define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number operator literal type number then block if condition expr name operator literal type number then block type pseudo return expr block expr name expr name operator literal type number return expr block expr name operator literal type number expr literal type number if condition expr name operator literal type number then block type pseudo return expr block expr name expr name operator literal type number return expr block expr name operator literal type number expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr literal type number argument expr call name name argument_list type generic argument expr name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name operator name name index expr literal type number operator name index expr name expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator literal type number operator literal type number then block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator literal type number operator name name argument_list type generic argument expr literal type number operator name operator literal type number operator name literal type number then block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator call name argument_list argument expr name name index expr name index expr name argument expr name name index expr name operator name name index expr name index expr name index expr name expr_stmt expr name name index expr name index expr name operator name operator literal type number operator literal type number else block type pseudo for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr name operator literal type number operator name name argument_list type generic argument expr literal type number operator name operator literal type number operator name literal type number then block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator call name argument_list argument expr name name index expr name index expr name argument expr name name index expr name operator name name index expr name index expr name index expr name expr_stmt expr name name index expr name index expr name operator name operator literal type number operator literal type number expr_stmt expr name operator name name index expr literal type number index expr literal type number 
