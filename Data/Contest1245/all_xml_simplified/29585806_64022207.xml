include directive file using namespace name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr name operator literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char operator expr name operator call name argument_list if condition expr name then block type pseudo expr_stmt expr name operator operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr name operator name then expr name operator name operator expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator name name index expr name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name decl_stmt decl type name name name index expr name index expr literal type number decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator expr call name argument_list argument expr name name index expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo for control init decl type specifier name name init expr name condition expr operator name operator name incr block expr_stmt expr operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator literal type number operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr lambda capture parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name decl_stmt decl type specifier name name name init expr literal type number for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block decl_stmt decl type specifier name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo continue if condition expr name name index expr name operator name operator call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name then block type pseudo continue expr_stmt expr name operator name name index expr name operator name expr_stmt expr operator name expr_stmt expr name name index expr name index expr literal type number operator name name index expr name operator name expr_stmt expr name name index expr name index expr literal type number operator name name index expr name operator name expr_stmt expr name name index expr name operator name if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo if condition expr name name index expr name operator name then block expr_stmt expr name name index expr operator name operator name name index expr name expr_stmt expr name operator name name index expr name name index expr name expr_stmt expr call name argument_list argument expr name operator name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type specifier name name init expr literal type number condition expr operator name operator name incr block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name index expr literal type number argument expr name name index expr name index expr literal type number return expr literal type number 
