include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number typedef type name name name decl_stmt decl type name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr name struct name block public type default decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name function type operator type name name name parameter_list parameter decl type specifier name name specifier block return expr name operator name name operator name decl_stmt decl type name name name index expr name decl type ref prev name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr literal type number operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name decl_stmt decl type name name name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr block expr call name argument_list argument expr name argument expr name expr name expr name expr_stmt expr call name name operator name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name name operator name decl_stmt decl type name name init expr call name argument_list argument expr name name operator name if condition expr name name index expr name name operator name operator name name index expr name name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name name operator name operator name then block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr name name operator name expr_stmt expr name operator name name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name if condition expr name name index expr name operator name then block expr_stmt expr name operator expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator literal type char operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name operator literal type char expr_stmt expr name operator literal type char operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator literal type char 
