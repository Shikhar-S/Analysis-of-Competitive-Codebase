include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name function type operator type name name name parameter_list parameter decl type name name specifier block return expr name operator name name operator name decl name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name name name index expr name comment type line decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number function type name name parameter_list parameter decl type name name block while condition expr name operator name name index expr name block expr_stmt expr name name index expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name decl_stmt decl type name name name index expr name index expr name decl type ref prev name name index expr name operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr name operator name operator name expr_stmt expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator name operator name incr expr operator name block if condition expr operator call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name then block expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr name name index expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr name name index expr name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name else block expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name decl type ref prev name init expr literal type number decl_stmt decl type name name name index expr name function type name name argument_list type generic argument expr name name argument expr name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name argument_list type generic argument expr name name argument expr name name init expr block expr name name index expr name expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name name operator name operator name operator operator name name index expr name index expr name name operator name then block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name name operator name argument expr name return expr name function type name name parameter_list parameter decl type name name block comment type line decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name decl_stmt decl type name name name init expr name name index expr name operator name if condition expr call name argument_list argument expr name name operator name argument expr name name operator name operator name operator name name operator name operator name name operator name then block type pseudo return expr literal type boolean expr_stmt expr name name index expr name name operator name operator name name index expr name name operator name operator literal type boolean expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name name operator name argument expr name name operator name return expr literal type boolean function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr operator name operator literal type number operator operator name operator operator name operator literal type number operator operator block expr name expr name expr literal type number operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name then block expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator literal type number for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name name operator name then block type pseudo expr_stmt expr name operator name name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name operator name operator literal type number condition expr name operator literal type number incr expr operator name block if condition expr operator name name index expr name operator call name argument_list argument expr name then block expr_stmt expr name name index expr name name index expr name operator name index expr name name index expr name operator name operator name name index expr name name index expr name operator name index expr name name index expr name operator name operator literal type boolean expr_stmt expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr literal type string index expr operator name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name range expr name name index expr name block if condition expr name operator name name operator name operator operator name name index expr name index expr name name operator name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name name operator name return expr literal type number 
