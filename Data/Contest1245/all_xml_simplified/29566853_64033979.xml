define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value typedef type name name name using namespace name struct name block public type default decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name struct name block public type default function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr operator literal type number if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name else block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name return expr literal type number function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr operator name else expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr literal type number expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator if condition expr name operator literal type number then block type pseudo continue expr_stmt expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name while condition expr name operator name block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name name operator name argument expr name name operator name if condition expr name operator operator literal type number then block type pseudo continue expr_stmt expr name operator expr_stmt expr name operator name name operator name if condition expr name name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name name operator name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr name name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name range expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name range expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name argument expr name name operator name 
