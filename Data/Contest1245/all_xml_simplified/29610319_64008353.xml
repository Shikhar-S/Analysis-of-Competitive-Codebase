include directive file using namespace name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name function type name name parameter_list block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type char return if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type char return if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type char return function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name operator name operator name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr name operator operator expr name operator literal type char else block type pseudo expr_stmt expr call name argument_list if condition expr name name index expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr name operator operator expr name operator literal type char else block type pseudo expr_stmt expr call name argument_list if condition expr name name index expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr name operator operator expr name operator literal type char else block type pseudo expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr literal type number else block type pseudo expr_stmt expr call name argument_list argument expr literal type string define directive macro name value function type name name parameter_list block comment type line comment type line expr_stmt expr call name argument_list 
