comment type line format doxygen include directive file define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type name name decl_stmt decl type name name name index expr name index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name comment type line endif directive expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name index expr literal type number argument expr operator name name index expr name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name name argument_list type generic argument expr name operator name name operator name operator operator literal type number block decl_stmt decl type name name argument_list type generic argument expr name argument expr name argument expr name name init expr call name name operator name argument_list decl_stmt decl type name name init expr call name name argument_list type generic argument expr literal type number argument_list argument expr name decl_stmt decl type name name init expr call name name argument_list type generic argument expr literal type number argument_list argument expr name decl_stmt decl type name name init expr call name name argument_list type generic argument expr literal type number argument_list argument expr name expr_stmt expr call name name operator name argument_list if condition expr name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator literal type boolean if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr name operator name name index expr name else block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr name operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator call name argument_list argument expr name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block decl_stmt decl type name name init expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator call name argument_list argument expr name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name range expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name argument_list type generic argument expr name argument expr name name range expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name argument expr name name operator name return expr literal type number 
