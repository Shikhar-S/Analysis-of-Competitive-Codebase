include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name value struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name else block type pseudo return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name block return expr name name index expr call name argument_list argument expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name comment type line function type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr name name operator name operator name name operator name comment type line decl_stmt decl type name name name index expr name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name if condition expr operator call name name operator name argument_list argument expr name name operator name argument expr name name operator name then block decl_stmt decl type name name init expr name name operator name decl type ref prev name init expr name name operator name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name else block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name expr_stmt expr name operator name name operator name return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name operator literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator name name index expr name decl_stmt decl type name name decl type ref prev name name index expr name macro name argument_list argument argument block expr_stmt expr name operator name expr_stmt expr name name index expr name operator name block expr literal type number expr name operator literal type number expr name expr_stmt expr name operator macro name argument_list argument argument block expr_stmt expr name operator name name index expr name macro name argument_list argument argument block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name block expr name operator literal type number expr name operator literal type number expr operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name name index expr name operator name name index expr name operator expr_stmt expr name operator expr_stmt expr name operator call name argument_list operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name if condition expr name operator call name name operator name argument_list operator literal type number then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator name return expr literal type number 
