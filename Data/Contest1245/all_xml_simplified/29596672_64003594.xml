include directive file define directive macro name value define directive macro name value define directive macro name value function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name operator name name decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init expr name operator name operator name block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name argument expr name if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string decl_stmt decl type name name operator name name argument_list argument expr call name name operator name argument_list argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr operator name operator expr name name index expr name operator literal type char elseif if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr operator name operator expr name name index expr name operator literal type char elseif if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr operator name operator expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr operator name operator expr name name index expr name operator literal type char elseif if condition expr name then block type pseudo expr_stmt expr operator name operator expr name name index expr name operator literal type char elseif if condition expr name then block type pseudo expr_stmt expr operator name operator expr name name index expr name operator literal type char expr_stmt expr name operator name operator literal type char else block expr_stmt expr name operator literal type string return expr literal type number 
