include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name operator expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type number expr_stmt expr name name index expr name operator name return expr literal type number function type name name parameter_list parameter decl type name name block decl_stmt decl type name name argument_list argument expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list argument expr literal type number for control init expr name operator name operator name block if condition expr call name argument_list argument expr name name operator name argument expr name name operator name then block expr_stmt expr name operator name name operator name operator expr operator name expr_stmt expr name name index expr name name operator name operator call name argument_list argument expr name name operator name expr_stmt expr name name index expr name name operator name operator call name argument_list argument expr name name operator name if condition expr name operator name operator literal type number then block type pseudo break return expr name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name for control init decl type name name range expr name name index expr name block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator literal type number define directive macro name value function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr name operator literal type string operator name endif directive comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name argument_list argument expr literal type number decl type ref prev name argument_list argument expr literal type number while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument literal type number argument macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name index expr name operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr name name index expr name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name expr name name index expr name expr_stmt expr name operator call name argument_list argument expr name operator literal type number operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr operator literal type number argument expr literal type number expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument literal type number argument literal type number block if condition expr name then block type pseudo expr_stmt expr name operator literal type char expr_stmt expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr name operator name operator call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator literal type number block type pseudo expr_stmt expr name operator name name index expr name operator literal type char operator name name index expr name operator literal type number operator name return expr literal type number comment type line comment type block 
