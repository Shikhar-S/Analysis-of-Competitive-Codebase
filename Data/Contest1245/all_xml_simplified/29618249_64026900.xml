include directive file include directive file include directive file include directive file include directive file define directive macro name value using namespace name decl_stmt decl type name name name index expr name index expr name decl_stmt decl type name name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name index expr name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block type pseudo expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr literal type number if condition expr name name index expr name index expr name operator literal type number then block type pseudo return expr name name index expr name index expr name expr_stmt expr name name index expr name index expr name operator literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr literal type number for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr name operator literal type number operator name break decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr name name index expr name index expr name expr_stmt expr name operator name name operator name operator expr name operator name name operator name if condition expr name name index expr name index expr name then block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr call name argument_list argument expr name operator name name index expr name index expr name argument expr name else block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name argument expr name return expr name name index expr name index expr name operator operator name name index expr name index expr name operator literal type number operator operator operator literal type number operator name operator function type name name parameter_list block for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name operator operator literal type number operator expr name name index expr name index expr name operator call name argument_list for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo for control init decl type specifier name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name operator literal type number then block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name argument expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name operator literal type number argument expr literal type number else block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name operator literal type number argument expr name else block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr call name argument_list argument expr literal type number argument expr literal type number return expr literal type number 
