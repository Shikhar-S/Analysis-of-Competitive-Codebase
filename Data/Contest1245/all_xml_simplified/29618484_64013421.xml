include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file class name block private type default decl_stmt decl type specifier name name operator name name argument_list type generic argument expr name name public constructor name parameter_list parameter decl type specifier name name member_init_list call name argument_list argument expr name argument expr operator literal type number block empty_stmt function type name name parameter_list parameter decl type name name specifier block if condition expr name name index expr name operator literal type number then block type pseudo return expr name else block type pseudo return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name specifier block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name struct name block public type default decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name specifier block return expr call name name operator name argument_list argument expr name operator name name operator name operator call name name operator name argument_list argument expr name operator name name operator name function type name name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name name operator name operator name decl_stmt decl type name name operator name name argument_list type generic argument expr name name argument_list argument expr name for control init expr name operator name operator name block type pseudo expr_stmt expr name name operator name operator name name operator name operator name name operator name decl_stmt decl type name name operator name name argument_list type generic argument expr name name argument_list argument expr name for control init expr name operator name operator name block type pseudo expr_stmt expr name name operator name operator name decl_stmt decl type name name operator name name argument_list type generic argument expr name name name name argument_list argument expr name for control init expr name operator name operator name block type pseudo expr_stmt expr name name operator name operator name decl_stmt decl type name name init expr lambda capture parameter_list parameter decl type specifier name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name argument expr name name name modifier name parameter decl type specifier name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name argument expr name name name modifier name block return expr name name operator name operator name name operator name decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name argument expr name name name argument expr name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name argument expr name name name argument expr decltype argument_list argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name argument expr name argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name argument expr name argument expr operator name name index expr name operator name name index expr name operator operator name name index expr name operator call name argument_list argument expr name name index expr name decl_stmt decl type name name argument_list argument expr name operator literal type number decl_stmt decl type name name operator name name argument_list type generic argument expr name name decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block while condition expr call name name operator name argument_list argument expr call name name operator name argument_list operator name name operator name argument expr call name name operator name argument_list operator name name operator name block type pseudo expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name argument expr name name operator name operator name expr_stmt expr name operator name name operator name if condition expr name name operator name operator name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name operator literal type number else block expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name operator literal type number argument expr name name operator name operator name operator literal type number expr_stmt expr name name operator name operator name operator literal type char expr_stmt expr name name operator name operator call name name operator name argument_list operator literal type char if condition expr operator call name name operator name argument_list then block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name name operator name operator literal type char expr_stmt expr name name operator name operator name name index expr name expr_stmt expr name name operator name operator literal type char expr_stmt expr name name operator name operator call name name operator name argument_list operator literal type char if condition expr operator call name name operator name argument_list then block for control init decl type name name range expr name block expr_stmt expr name name operator name operator name name operator name operator literal type char operator name name operator name operator literal type char 
