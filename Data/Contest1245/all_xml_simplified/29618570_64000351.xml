comment type block include directive file using namespace name typedef type name name typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value using namespace name define directive macro name value decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name argument expr operator name argument expr name expr_stmt expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name elseif if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name elseif if condition expr name name index expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name if condition expr name operator operator operator name operator literal type number operator operator literal type number operator then block expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator continue if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator continue if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator continue expr_stmt expr call name argument_list argument expr name else block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
