include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator literal type char continue if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator literal type char continue if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator literal type char continue if condition expr name operator operator name operator literal type number operator operator operator name operator literal type number operator then block expr_stmt expr name operator literal type string return expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator literal type char continue if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator literal type char continue if condition expr name operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name name index expr name operator literal type char continue for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type string function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean operator expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list return expr literal type number 
