include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value ifdef directive name define directive macro name else directive define directive macro name value define directive macro name value endif directive comment type line decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name name index expr literal type number init expr literal type number decl type ref prev name name index expr literal type number init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator literal type number operator expr name name index expr name operator name name index expr name operator literal type number operator literal type number expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name name operator name argument_list expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr name operator literal type number operator name continue if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr operator name operator operator literal type number operator name operator operator then block expr_stmt expr name operator call name argument_list argument expr name argument expr name if condition expr operator name operator operator literal type number operator name operator operator then block expr_stmt expr name operator call name argument_list argument expr name argument expr name comment type line if condition expr name operator name then block if condition expr name then block type pseudo expr_stmt expr name operator literal type number operator name operator literal type number operator name else block type pseudo expr_stmt expr name operator literal type number operator name else block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo empty_stmt elseif if condition expr name operator operator literal type number operator name operator then block type pseudo empty_stmt else block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr operator name operator name operator operator operator literal type number operator name operator argument expr name expr_stmt expr name operator operator literal type number operator name operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block if condition expr name operator name then block type pseudo empty_stmt elseif if condition expr name operator operator literal type number operator name operator then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr operator name operator name operator argument expr name else block type pseudo empty_stmt expr_stmt expr name operator operator literal type number operator name operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator name operator literal type number incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr literal type number operator name argument expr name comment type line decl_stmt decl type name name init expr literal type number decl type ref prev name init expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator literal type number if condition expr operator name name index expr name operator name operator name name index expr name operator name operator operator literal type number then block type pseudo continue if condition expr name name index expr name operator name operator name name index expr name operator name then block for control init decl type name name init expr name name index expr name operator name condition expr name operator name name index expr name operator name incr expr name operator block type pseudo if condition expr operator operator operator literal type number operator name operator operator name name index expr name operator name operator operator operator literal type number then block type pseudo expr_stmt expr name operator expr_stmt expr name operator operator name name index expr name operator name name index expr name name index expr name operator name operator else block for control init decl type name name init expr name name index expr name operator name condition expr name operator name name index expr name operator name incr expr name operator block type pseudo if condition expr operator operator operator literal type number operator name operator operator name name index expr name operator name operator operator operator literal type number then block type pseudo expr_stmt expr name operator expr_stmt expr name operator operator name name index expr name operator name name index expr name name index expr name operator name operator comment type line expr_stmt expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator literal type number operator literal type number expr_stmt expr name operator name operator name 
