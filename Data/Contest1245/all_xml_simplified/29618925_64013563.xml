include directive file include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value using namespace name class template parameter_list parameter type name name parameter type name name name init expr literal type number name block private type default private decl_stmt decl type name name public constructor name parameter_list block constructor name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name operator name constructor name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name name operator name function type name name parameter_list specifier block return expr name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block if condition expr name operator name name operator name then block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator operator name operator name name operator name operator operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name modifier name block decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name name init expr name operator literal type number while condition expr name operator literal type number block if condition expr name operator literal type number then block expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator literal type number return expr operator name function type operator type specifier name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type specifier name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type specifier name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type specifier name name name parameter_list parameter decl type specifier name modifier name specifier block return expr call name argument_list argument expr operator name operator name function type operator type name name name parameter_list parameter decl type name block decl_stmt decl type name name argument_list argument expr operator name expr_stmt expr name operator operator ternary condition expr name operator literal type number operator name then expr literal type number else expr name operator literal type number operator return expr name function type operator type name name name parameter_list parameter decl type name block decl_stmt decl type name name argument_list argument expr operator name expr_stmt expr name operator operator ternary condition expr name operator literal type number operator literal type number then expr name operator literal type number else expr name operator literal type number operator return expr name friend function type operator type name name operator name modifier name name parameter_list parameter decl type name name operator name modifier name parameter decl type name modifier name block name expr_stmt expr operator name name operator name name name operator name expr_stmt expr operator name return expr name friend function type operator type name name operator name modifier name name parameter_list parameter decl type name name operator name modifier name parameter decl type specifier name modifier name block name expr_stmt expr operator name name operator name return expr name using name init type name name using name init type name name argument_list type generic argument expr name decl_stmt decl type name name name index expr literal type number index expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr operator name operator call name name operator name argument_list macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator literal type number operator name return expr literal type number expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name index expr literal type number operator name name index expr name operator literal type number index expr literal type number operator name name index expr name operator literal type number index expr literal type number if condition expr name name index expr name operator literal type number operator literal type char then block if condition expr name operator literal type number operator literal type number operator name name index expr name operator literal type number operator literal type char then block expr_stmt expr name name index expr name index expr literal type number operator name name index expr name operator literal type number index expr literal type number elseif if condition expr name name index expr name operator literal type number operator literal type char then block if condition expr name operator literal type number operator literal type number operator name name index expr name operator literal type number operator literal type char then block expr_stmt expr name name index expr name index expr literal type number operator name name index expr name operator literal type number index expr literal type number expr_stmt expr name operator name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator name return expr literal type number 
