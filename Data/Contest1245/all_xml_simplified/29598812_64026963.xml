include directive file define directive macro name value using namespace name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type specifier name name specifier block return expr name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name function specifier type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr operator name else expr name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name decl_stmt decl type name name init expr name operator literal type number decl type ref prev name init expr literal type number for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name name index expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator expr call name name operator name argument_list argument expr block expr name expr name operator literal type number expr name name index expr name operator expr name name index expr name operator name expr_stmt expr name name index expr name operator name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo for control init expr name operator name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr literal type number operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator decl_stmt decl type name name init expr literal type number while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr call name argument_list argument expr name name operator name decl type ref prev name init expr call name argument_list argument expr name name operator name if condition expr name operator name then block expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name operator name if condition expr name name operator name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr name operator name name operator name operator literal type char expr_stmt expr name operator name operator call name name operator name argument_list operator name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list expr_stmt expr name operator name name operator name operator literal type char operator name name operator name operator name return expr literal type number 
