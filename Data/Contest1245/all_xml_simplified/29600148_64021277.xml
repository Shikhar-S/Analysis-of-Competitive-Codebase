include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name decl_stmt decl type name name init expr literal type boolean do block expr_stmt expr name operator call name argument_list condition expr operator call name argument_list argument expr name operator name operator literal type char if condition expr name operator literal type char then block expr_stmt expr name operator literal type boolean expr_stmt expr name operator call name argument_list do block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list condition expr call name argument_list argument expr name if condition expr name then block type pseudo expr_stmt expr name operator operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr literal type char return if condition expr name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr name operator operator name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name block expr_stmt expr name name index expr operator name operator name operator literal type number operator literal type char expr_stmt expr name operator literal type number for control init decl type name name init expr name condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type char typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name constructor name parameter_list parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block empty_stmt function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name struct name block public type default decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator literal type number then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type number if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name return expr literal type number decl name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive comment type line expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator expr call name argument_list argument expr name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name function type name name parameter_list block macro name argument_list argument argument literal type number argument macro name argument_list argument argument literal type number argument block if condition expr name operator name then block type pseudo continue expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name argument expr call name argument_list argument expr name name index expr name operator name name index expr name operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator macro name argument_list argument argument literal type number argument expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr literal type number argument expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list function type name name parameter_list block decl_stmt decl type name name init expr literal type number expr_stmt expr call name name operator name argument_list macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name if condition expr call name name operator name argument_list argument expr name argument expr name then block type pseudo expr_stmt expr name operator name operator expr name name index expr name operator name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name then block if condition expr name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type char macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type char macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator name operator expr call name argument_list argument expr name name index expr name operator name operator expr call name argument_list argument expr literal type char function type name name parameter_list block expr_stmt expr call name argument_list expr_stmt expr call name argument_list expr_stmt expr call name argument_list return expr literal type number 
