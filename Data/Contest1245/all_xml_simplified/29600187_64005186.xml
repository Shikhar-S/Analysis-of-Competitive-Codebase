comment type line pragma directive name name name literal name include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value comment type line define directive macro name value define directive macro name parameter_list value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name modifier value function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name argument_list type generic argument expr name name parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator operator name operator literal type string operator name operator literal type string expr_stmt expr call name argument_list argument expr operator name argument expr name operator function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name function type operator template parameter_list parameter type template parameter_list parameter type name parameter type modifier name name parameter type name modifier name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier modifier name block expr_stmt expr name operator literal type string macro name argument_list argument argument expr_stmt expr name operator name operator literal type string expr_stmt expr name operator literal type string return expr name typedef type name name name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name struct name block public type default decl_stmt decl type name name decl type ref prev name constructor name parameter_list block constructor name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr literal type number function type name name parameter_list parameter decl type name name block return expr ternary condition expr operator name name index expr name operator name operator then expr name else expr operator name name index expr name operator call name argument_list argument expr name name index expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name operator expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type number if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator return expr literal type number decl name function type name name parameter_list block expr_stmt expr name expr_stmt expr name operator name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator name name index expr name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr block expr name expr name macro name argument_list argument argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument block macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr name operator name operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name expr block expr name expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name macro name argument_list argument argument block if condition expr name operator name operator literal type number then block type pseudo break if condition expr call name name operator name argument_list argument expr name name operator name operator name argument expr name name operator name operator name then block expr_stmt expr operator name expr_stmt expr name operator name name operator name if condition expr name name operator name operator name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name else block expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name return expr literal type number 
