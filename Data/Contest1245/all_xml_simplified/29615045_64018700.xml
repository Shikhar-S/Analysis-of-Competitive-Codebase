include directive file using namespace name typedef type name name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name parameter_list parameter type name parameter type name value comment type line define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name name block expr_stmt expr name operator literal type string operator name name operator name operator literal type string operator name name operator name operator literal type string return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name name block for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name operator name name index expr name return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name name argument_list type generic argument expr name name block for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name return expr name struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name argument expr operator literal type number block function type name name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name argument expr operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator literal type number then block type pseudo return expr name else block type pseudo return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name comment type line expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name return expr literal type boolean function type name name parameter_list parameter decl type name name block return expr operator name name index expr call name argument_list argument expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name macro name argument_list argument argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument block decl_stmt decl type name name init expr block expr name expr name expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr name macro name argument_list argument argument block macro name argument_list argument argument block if condition expr name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name init expr block expr name expr name expr operator name name index expr name operator name name index expr name operator operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument block decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name if condition expr call name name operator name argument_list argument expr name argument expr name then block expr_stmt expr name operator name if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name else block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator literal type number operator literal type string expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator name return expr literal type number 
