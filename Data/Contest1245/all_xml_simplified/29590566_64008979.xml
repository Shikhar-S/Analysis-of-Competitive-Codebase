include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value using namespace name decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number argument expr name if condition expr name operator literal type number operator literal type number then block return expr operator name operator name operator name operator operator name else block return expr operator name operator name operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block return expr name operator name return expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number operator name operator literal type number block comment type line if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type specifier name modifier name name index block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number comment type line decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type string expr literal type string expr literal type string macro name argument_list argument literal type number argument literal type number block expr_stmt expr name operator name operator name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number macro name argument_list argument literal type number argument literal type number block if condition expr name name index expr name operator literal type char then block expr_stmt expr name name index expr literal type number operator elseif if condition expr name name index expr name operator literal type char then block expr_stmt expr name name index expr literal type number operator else block expr_stmt expr name name index expr literal type number operator expr_stmt expr name operator call name argument_list argument expr name name index expr literal type number argument expr name expr_stmt expr name operator call name argument_list argument expr name name index expr literal type number argument expr name expr_stmt expr name operator call name argument_list argument expr name name index expr literal type number argument expr name expr_stmt expr name name index expr literal type number operator name operator name name index expr literal type number expr_stmt expr name name index expr literal type number operator name operator name name index expr literal type number expr_stmt expr name name index expr literal type number operator name operator name name index expr literal type number macro name argument_list argument literal type number argument literal type number block if condition expr name name index expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr literal type number operator name operator name name index expr literal type number expr_stmt expr name name index expr literal type number operator name operator name name index expr literal type number expr_stmt expr name name index expr literal type number operator name operator name name index expr literal type number comment type line if condition expr name operator literal type number operator name then block expr_stmt expr name operator literal type string operator name continue else block expr_stmt expr name operator literal type string operator name macro name argument_list argument literal type number argument literal type number block comment type line if condition expr name name index expr name operator literal type char then block if condition expr name name index expr literal type number operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name name index expr literal type number operator continue macro name argument_list argument literal type number argument literal type number block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator break elseif if condition expr name name index expr name operator literal type char then block if condition expr name name index expr literal type number operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name name index expr literal type number operator continue macro name argument_list argument literal type number argument literal type number block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator break else block if condition expr name name index expr literal type number operator literal type number then block expr_stmt expr name operator literal type string expr_stmt expr name name index expr literal type number operator continue macro name argument_list argument literal type number argument literal type number block if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator break expr_stmt expr name operator name return expr literal type number 
