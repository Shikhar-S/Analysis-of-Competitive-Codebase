include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name decl_stmt decl type name name name init expr literal type number operator literal type number typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr literal type number init expr block expr call name argument_list argument expr literal type string expr call name argument_list argument expr literal type string macro name argument_list argument literal type string function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name decl type ref prev name init expr name decl type ref prev name init expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator if condition expr name operator call name argument_list argument expr operator name name operator name operator literal type number then block expr_stmt expr name operator literal type string operator name continue expr_stmt expr name operator literal type string operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name name index expr name elseif if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator expr_stmt expr name operator name return expr literal type number 
