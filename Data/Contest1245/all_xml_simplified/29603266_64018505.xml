include directive file include directive file include directive file using namespace name using namespace name define directive macro name value typedef type name name name name typedef type name name name define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number define directive macro name value decl_stmt decl type name name name index expr name init expr block expr literal type number decl type ref prev name name index expr name init expr block expr literal type number decl type ref prev name name index expr name init expr block expr literal type number decl type ref prev name name index expr name init expr block expr literal type number decl type ref prev name name index expr name init expr block expr literal type number decl type ref prev name name index expr name init expr block expr literal type number function type name name parameter_list parameter decl type specifier name name parameter decl type specifier name name block decl_stmt decl type name name init expr call name name operator name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl type name name operator name name argument_list argument expr name decl_stmt decl type name name init expr call call name name operator name name argument_list type generic argument expr name argument_list argument expr name operator literal type number argument expr name argument_list argument expr name return expr ternary condition expr name operator literal type number operator literal type number then expr name operator literal type number else expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator name then block type pseudo return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number if condition expr name operator literal type number then block type pseudo return expr operator name operator operator operator name operator name operator operator name operator operator operator name else block type pseudo return expr operator name operator name operator operator name function type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name name index expr name operator call name argument_list argument expr operator name name index expr name operator name name index expr name operator name operator operator name operator operator name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name comment type line if condition expr name operator name then block type pseudo return expr literal type number if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator else block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator return expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr name name index expr name operator block expr name expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name name index expr name init expr block expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name decl_stmt decl type name name name index expr name init expr block expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number while condition expr call name name operator name argument_list block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr operator call name name operator name argument_list expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl type ref prev name init expr name name operator name if condition expr name operator name name index expr name then block expr_stmt expr name name index expr name operator expr_stmt expr name operator expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr call name name operator name argument_list condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr operator name if condition expr name name operator name operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name name operator name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name name operator name operator name operator operator operator name name index expr name operator name name index expr name name operator name operator then block expr_stmt expr name name index expr name name operator name operator name operator literal type number expr_stmt expr name name operator name operator call name argument_list argument expr name name operator name argument expr operator call name argument_list argument expr name name index expr name operator name operator name name index expr name name operator name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name name operator name operator name operator operator operator name name index expr name operator name name index expr name name operator name operator expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block type pseudo continue expr_stmt expr name operator name operator literal type number operator literal type string operator name name index expr name operator name 
