include directive file define directive macro name value define directive macro name value using namespace name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name init expr name decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name operator name name index expr name expr_stmt expr name name index expr name operator name operator operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr name operator operator name name index expr name operator name name index expr name operator if condition expr name name index expr name operator name operator name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name name init expr name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name init expr block expr name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo continue if condition expr name name index expr name operator name operator name then block expr_stmt expr name operator name name index expr name operator name expr_stmt expr name operator name expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator name name index expr name operator name if condition expr name name index expr name operator name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name else block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo continue decl_stmt decl type name name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr name operator operator name name index expr name operator name name index expr name operator if condition expr name name index expr name operator name operator name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type char expr_stmt expr name operator name operator call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type char operator name name index expr name operator name operator literal type number operator literal type string function type name name parameter_list block expr_stmt expr call name argument_list return expr literal type number 
