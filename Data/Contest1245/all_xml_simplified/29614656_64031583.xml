include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name function type name name parameter_list parameter decl type name name block if condition expr name operator name name index expr name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list block ifndef directive name decl_stmt decl type name endif directive name name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name operator name name index expr name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr name name index expr name decl type ref prev name init expr name macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr call name name operator name argument_list argument expr block expr call name argument_list argument expr name argument expr name operator operator name name index expr name operator name name index expr name operator expr block expr name expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name range expr name block decl_stmt decl type name name init expr name name operator name operator name decl type ref prev name init expr name name operator name operator name if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block type pseudo continue if condition expr name name index expr call name argument_list argument expr name operator name name index expr call name argument_list argument expr name then block if condition expr name name operator name operator name name index expr call name argument_list argument expr name then block expr_stmt expr name name index expr call name argument_list argument expr name operator name name index expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name elseif if condition expr name name operator name operator name name index expr call name argument_list argument expr name then block expr_stmt expr name name index expr call name argument_list argument expr name operator name name index expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument literal type number block if condition expr operator call name name operator name argument_list argument expr call name argument_list argument expr name then block type pseudo expr_stmt expr name name index expr call name argument_list argument expr name operator name name index expr name else block type pseudo expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name name index expr call name argument_list argument expr name argument expr name name index expr name for control init decl type name name range expr name block macro name argument_list argument argument literal type number argument literal type number block if condition expr call name argument_list argument expr name operator name name operator name operator name name operator name operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr name break decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name range expr name block expr_stmt expr name operator call name argument_list argument expr name name operator name argument expr name name operator name operator operator name name index expr name name operator name operator name name index expr name name operator name operator expr_stmt expr name operator name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string expr_stmt expr name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator literal type char 
