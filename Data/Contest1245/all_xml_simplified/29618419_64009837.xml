pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name include directive file using namespace name typedef type name name name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr operator operator literal type number operator literal type number operator decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number typedef type name name name name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator name operator operator name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name decl_stmt decl type name name struct name block public type default decl_stmt decl type name name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name block macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name decl_stmt decl type name name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name modifier name parameter decl type name name block expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name operator name name operator name decl_stmt decl type name name init expr name name index expr name operator name name operator name if condition expr operator call name name operator name argument_list argument expr name argument expr name then block if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name elseif if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name else block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name index expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name argument_list argument expr name decl_stmt decl type name name init expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument literal type number argument macro name argument_list argument argument literal type number argument block if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name argument expr name operator operator name name index expr name operator name name index expr name operator macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name index expr name operator name name index expr name expr_stmt expr name name index expr name index expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr call name name operator name argument_list argument expr call name name argument_list type generic argument expr name argument expr name argument_list argument expr name name index expr name index expr name argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number expr_stmt expr name operator name operator name expr_stmt expr name operator call name argument_list argument expr name operator name macro name argument_list argument argument expr_stmt expr name operator operator name operator literal type number operator literal type string expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator name macro name argument_list argument argument expr_stmt expr name operator name operator operator name operator operator name operator literal type number operator literal type string operator name operator operator name operator operator name operator literal type number operator name return expr literal type number 
