include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number namespace name block decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr operator name name index expr name operator call name argument_list argument expr name name index expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name name index expr name operator name return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name using namespace name decl_stmt decl type name name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name friend function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr name name operator name operator name name operator name decl name name index expr name operator name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name name block expr_stmt expr name name index expr operator name operator name block expr name expr name expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name init expr literal type number decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name init expr literal type number function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr literal type number operator operator name name index expr name operator name name index expr name operator operator call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name operator name name index expr name operator name then block if condition expr call name argument_list argument expr literal type number argument expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name operator name expr_stmt expr name name index expr operator name operator name name index expr name operator name else block if condition expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name operator name expr_stmt expr name name index expr operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr ternary condition expr name operator name then expr literal type char else expr literal type char expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr name name index expr name 
