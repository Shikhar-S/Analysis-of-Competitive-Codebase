include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name struct name block public type default decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name class name block private type default public function type operator type name name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block if condition expr name name operator name operator name name operator name then block return expr name name operator name operator name name operator name elseif if condition expr name name operator name operator name name operator name then block return expr name name operator name operator name name operator name else block return expr name name operator name operator name name operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr name block expr name name index expr name expr name expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator name block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr name name index expr name name operator name operator name name index expr name name operator name then block continue if condition expr name name operator name operator name name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name operator name else block expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr name name operator name expr_stmt expr name operator name name operator name expr_stmt expr name name index expr name name operator name operator literal type number expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block decl_stmt decl type name name init expr operator name name index expr name operator name name index expr name name operator name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name name operator name operator call name argument_list argument expr name name index expr name operator name name index expr name name operator name operator expr_stmt expr call name name operator name argument_list argument expr name block expr name expr name name operator name expr name expr_stmt expr name operator name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init expr name operator name operator name block expr_stmt expr name operator name operator literal type number operator literal type char expr_stmt expr name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init expr name operator name operator name block expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type char expr_stmt expr name operator literal type char 
