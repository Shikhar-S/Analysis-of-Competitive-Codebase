include directive file using namespace name typedef type name name name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name name index expr call name argument_list argument expr name operator name name index expr call name argument_list argument expr name then block expr_stmt expr name name index expr call name argument_list argument expr name operator literal type boolean expr_stmt expr name name index expr call name argument_list argument expr name operator literal type boolean expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr block expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr literal type number operator name name index expr name operator literal type number operator name name index expr name operator call name argument_list argument expr literal type number operator name name index expr name operator literal type number operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator operator name name index expr name operator name name index expr name operator expr block expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name operator name decl_stmt decl type name name init expr name name operator name operator name if condition expr name operator name then block if condition expr operator name name index expr call name argument_list argument expr name then block comment type line expr_stmt expr name name index expr call name argument_list argument expr name operator literal type boolean expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number else block if condition expr operator operator name name index expr call name argument_list argument expr name operator operator name name index expr call name argument_list argument expr name operator operator operator call name argument_list argument expr name argument expr name then block comment type line expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr name operator name operator literal type string expr_stmt expr name operator operator name operator call name name operator name argument_list operator literal type string for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator operator ternary condition expr name operator operator name operator call name name operator name argument_list operator literal type number then expr literal type string else expr literal type string operator expr_stmt expr name operator operator name operator call name name operator name argument_list operator literal type string for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator literal type string return expr literal type number 
