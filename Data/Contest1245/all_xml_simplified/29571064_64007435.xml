include directive file namespace name block using namespace name typedef type name name name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number for control init condition expr name incr expr name operator literal type number operator expr name operator literal type number operator name operator name operator name block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number operator name operator name operator name return expr name function specifier type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr name argument expr name operator literal type number function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator operator literal type number operator name operator name operator operator name return function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr operator name operator name operator then expr operator name operator name operator literal type number operator else expr literal type number function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr operator name operator name operator then expr operator name operator name operator literal type number operator else expr literal type number function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name function specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr call name argument_list argument expr literal type char if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type char return using namespace name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name decl name name index expr name operator literal type number decl type ref prev name name index expr name decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator name name index expr name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list block expr_stmt expr name operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator call name argument_list operator expr name name index expr name operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator call name argument_list macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name operator literal type number expr name name index expr name macro name argument_list argument argument literal type number argument macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name expr literal type number operator operator name name index expr name operator name name index expr name operator operator macro name argument_list argument argument macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block type pseudo continue expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name name index expr operator name operator name name index expr name if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name return expr literal type number 
