include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value comment type line define directive macro name value comment type line using namespace name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator ternary condition expr name operator literal type number then expr name else expr call name argument_list argument expr name argument expr name operator name operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number then block type pseudo return expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name operator literal type number argument expr name argument expr name if condition expr name operator literal type number then block return expr call name argument_list argument expr name operator call name argument_list argument expr name operator name argument expr name argument expr name else block type pseudo return expr call name argument_list argument expr name operator name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name class name block private type default public decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name call name argument_list argument expr name block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator expr name name index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator name name index expr name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name operator name operator name name operator name operator call name argument_list argument expr name name operator name operator name name operator name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr operator name operator name name operator name operator decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator name name index expr name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name function name parameter_list block expr_stmt expr name decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator name name operator name operator name name operator name decl_stmt decl type name name init expr literal type number for control init decl type name modifier name range expr name block expr_stmt expr name operator name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name argument_list argument expr name for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr operator name name index expr name operator name name index expr name operator operator macro name argument_list argument argument expr_stmt expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr operator call name name operator name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr call name argument_list argument expr name argument expr name name index expr call name argument_list argument expr name if condition expr operator name name index expr name operator name name index expr name operator operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator name then block if condition expr name operator name name index expr call name argument_list argument expr name then block expr_stmt expr name name index expr call name argument_list argument expr name operator literal type number else block type pseudo expr_stmt expr name name index expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator operator name name index expr name operator name name index expr name operator operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator name operator name expr_stmt expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr literal type number operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name modifier name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name 
