include directive file using namespace name typedef type name name name typedef type name name name name define directive macro name value function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr literal type number for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type char operator for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char if condition expr name then block type pseudo expr_stmt expr name operator operator name return expr name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator literal type number then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator name operator call name argument_list argument expr name operator operator operator name operator call name argument_list argument expr name operator then block type pseudo return expr literal type number expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name return expr literal type number decl_stmt decl type name name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name function name parameter_list block comment type line expr_stmt expr call name argument_list argument expr name argument expr operator literal type number expr_stmt expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator block expr name expr name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name operator expr call name name operator name argument_list argument expr block expr literal type number expr name expr name name index expr name macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument literal type number expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument if condition expr call name argument_list argument expr name name operator name argument expr name name operator name then block expr_stmt expr name operator name name operator name if condition expr name name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr name name operator name expr_stmt expr name operator name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string macro name argument_list argument argument expr_stmt expr name operator name operator literal type string expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string macro name argument_list argument argument expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator literal type string 
