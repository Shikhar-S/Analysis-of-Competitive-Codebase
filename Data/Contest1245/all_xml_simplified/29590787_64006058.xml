pragma directive name name name name literal name pragma directive name name name literal name pragma directive name name name literal name include directive file define directive macro name value using namespace name decl_stmt decl type name name name index expr literal type number index expr literal type number decl_stmt decl type name name init expr literal type number operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator call name argument_list comment type line expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name index expr literal type number operator operator name name index expr name operator literal type number index expr literal type number operator name name index expr name operator literal type number index expr literal type number operator operator name expr_stmt expr name name index expr name index expr literal type number operator name name index expr name operator literal type number index expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name init expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block decl_stmt decl type name name init expr literal type number while condition expr name name index expr name operator literal type char block expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator name then block type pseudo break expr_stmt expr name operator expr_stmt expr name operator operator name operator operator name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator operator operator name elseif if condition expr name name index expr name operator literal type char then block decl_stmt decl type name name init expr literal type number while condition expr name name index expr name operator literal type char block expr_stmt expr name operator expr_stmt expr name operator if condition expr name operator name then block type pseudo break expr_stmt expr name operator expr_stmt expr name operator operator name operator operator name name index expr name index expr literal type number operator name name index expr name index expr literal type number operator operator operator name elseif if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator literal type number return expr literal type number expr_stmt expr name operator name comment type line expr_stmt expr name operator call name argument_list operator name expr_stmt expr name operator name operator call name argument_list argument expr literal type number operator literal type string operator operator operator name operator name operator operator name operator literal type string return expr literal type number 
