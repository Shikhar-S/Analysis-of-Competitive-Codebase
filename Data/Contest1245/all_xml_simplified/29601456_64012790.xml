include directive file finished using namespace name finished finished define directive macro name finished value finished decl_stmt decl type name finished name name index expr name finished finished finished finished finished decl_stmt decl type name finished name name index expr name finished finished finished finished finished function type name finished name parameter_list block decl_stmt decl type name finished name finished decl type ref prev name finished decl type ref prev name finished decl type ref prev name finished decl type ref prev name finished decl type ref prev name finished decl type ref prev name finished decl type ref prev name finished finished expr_stmt expr call name argument_list argument expr literal type string finished finished argument expr operator name finished finished finished finished finished finished while condition expr name operator finished finished block expr_stmt expr call name argument_list argument expr literal type string finished finished argument expr operator name finished finished finished finished finished finished expr_stmt expr call name argument_list argument expr literal type string finished finished argument expr operator name finished finished argument expr operator name finished finished argument expr operator name finished finished finished finished finished finished expr_stmt expr call name argument_list argument expr literal type string finished finished argument expr name finished finished finished finished finished finished decl_stmt decl type name finished name init expr literal type number finished finished finished finished expr_stmt expr call name argument_list argument expr name finished finished argument expr literal type number finished finished argument expr sizeof argument_list argument expr name finished finished finished finished finished finished finished finished finished finished expr_stmt expr name operator literal type number finished finished expr_stmt expr name operator literal type number finished finished expr_stmt expr name operator literal type number finished finished for control init decl type name finished name init expr literal type number finished finished finished finished condition expr name operator name finished finished incr expr name operator finished finished finished block switch condition expr name name index expr name finished finished finished finished finished block case expr literal type char finished finished expr_stmt expr name operator finished finished break case expr literal type char finished finished expr_stmt expr name operator finished finished break case expr literal type char finished finished expr_stmt expr name operator finished finished break default break finished finished finished finished comment type line expr_stmt expr name operator call name argument_list argument expr name finished finished argument expr name finished finished finished finished operator call name argument_list argument expr name finished finished argument expr name finished finished finished finished operator call name argument_list argument expr name finished finished argument expr name finished finished finished finished finished finished if condition expr name operator literal type number operator name finished finished then block expr_stmt expr call name argument_list argument expr literal type string finished finished finished finished finished finished for control init decl type name finished name init expr literal type number finished finished finished finished condition expr name operator name finished finished incr expr name operator finished finished finished block if condition expr name name index expr name finished finished finished operator literal type char operator name finished finished then block expr_stmt expr name name index expr name finished finished finished operator literal type char finished finished expr_stmt expr name operator finished finished finished finished elseif if condition expr name name index expr name finished finished finished operator literal type char operator name finished finished then block expr_stmt expr name name index expr name finished finished finished operator literal type char finished finished expr_stmt expr name operator finished finished finished finished finished finished elseif if condition expr name name index expr name finished finished finished operator literal type char operator name finished finished then block expr_stmt expr name name index expr name finished finished finished operator literal type char finished finished expr_stmt expr name operator finished finished finished finished finished finished finished finished finished for control init decl type name finished name init expr literal type number finished finished finished finished condition expr name operator name finished finished incr expr name operator finished finished finished block if condition expr operator name name index expr name finished finished finished finished finished then block if condition expr name finished finished then block expr_stmt expr name name index expr name finished finished finished operator literal type char finished finished expr_stmt expr name operator finished finished finished finished elseif if condition expr name finished finished then block expr_stmt expr name name index expr name finished finished finished operator literal type char finished finished expr_stmt expr name operator finished finished finished finished finished finished else block expr_stmt expr name name index expr name finished finished finished operator literal type char finished finished expr_stmt expr name operator finished finished finished finished finished finished finished finished finished finished expr_stmt expr call name argument_list argument expr literal type string finished finished argument expr name finished finished finished finished finished finished finished finished else block expr_stmt expr call name argument_list argument expr literal type string finished finished finished finished finished finished finished finished finished finished finished return expr literal type number finished finished finished finished finished 
