include directive file using namespace name decl_stmt decl type name name decl_stmt decl type name name name name index expr literal type number decl_stmt decl type name name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name name parameter decl type name name name block return expr call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block comment type line comment type block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr operator name name index expr name expr block expr name expr name comment type block while condition expr operator call name name operator name argument_list block decl_stmt decl type name name name init expr operator call name name operator name argument_list operator name decl_stmt decl type name name init expr call name name operator name argument_list operator name name operator name decl type ref prev name init expr call name name operator name argument_list operator name name operator name expr_stmt expr call name name operator name argument_list if condition expr name name index expr name then block type pseudo continue if condition expr name operator name then block expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name operator name name index expr name then block type pseudo continue decl_stmt decl type name name name init expr name name index expr name operator name name index expr name expr_stmt expr name operator call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr operator name expr block expr name expr name continue if condition expr name operator name name index expr name then block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name name index expr name operator literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name operator name name index expr name then block type pseudo continue decl_stmt decl type name name name init expr name name index expr name operator name name index expr name expr_stmt expr name operator call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr operator name expr block expr name expr name comment type line expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name return expr literal type number comment type block comment type block comment type block 
