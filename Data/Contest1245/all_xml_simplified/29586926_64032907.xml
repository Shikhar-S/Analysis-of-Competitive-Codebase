include directive file using namespace name class name block private type default private decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name public constructor name parameter_list block empty_stmt constructor name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name argument expr operator literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name function specifier type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number comment type line function specifier type name name parameter_list parameter decl type name name block if condition expr name operator name name index expr name then block return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name constructor name parameter_list block empty_stmt constructor name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name name member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block empty_stmt function type operator type name name name parameter_list parameter decl type name specifier modifier name specifier block return expr name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name decl_stmt decl type name name name function type name name parameter_list block comment type line expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr name operator literal type number decl_stmt decl type name name argument_list argument expr name expr_stmt expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number for control init expr name operator name operator name block if condition expr operator call name name operator name argument_list argument expr name name operator name argument expr name name operator name then block expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name expr_stmt expr call name name operator name argument_list argument expr name if condition expr operator name operator name then block type pseudo break decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name name init expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name return expr name function type name name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name init expr name name index expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name return expr name function type name name parameter_list block comment type line expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name decl type ref prev name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name argument expr name argument expr operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator literal type number operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list expr_stmt expr call name name operator name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list for control init decl type name name range expr name block expr_stmt expr name name index expr name name operator name operator call name argument_list argument expr name name operator name expr_stmt expr name name index expr name name operator name operator call name argument_list argument expr name name operator name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name init expr literal type number for control init decl type name name range expr name block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name name operator name argument expr name name operator name argument expr call name argument_list argument expr name name operator name argument expr name name operator name if condition expr name operator name name operator name then block expr_stmt expr name name index expr name name operator name operator call name argument_list argument expr name name operator name expr_stmt expr name name index expr name name operator name operator call name argument_list argument expr name name operator name else block expr_stmt expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name expr_stmt expr name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator literal type string decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type number operator literal type char if condition expr name then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list expr_stmt expr name operator name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type char operator name name index expr name operator name operator literal type number operator literal type string return expr literal type number 
