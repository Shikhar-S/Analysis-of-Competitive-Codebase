include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type name name name index expr literal type number operator literal type number decl_stmt decl type name name name index expr literal type number operator literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr literal type number operator literal type number decl_stmt decl type name name name index expr literal type number operator literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr operator literal type number operator name name index expr name argument expr call name argument_list argument expr name argument expr operator literal type number expr_stmt expr name name index expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr call name name operator name argument_list argument expr name name operator name operator name operator call name name operator name argument_list then block type pseudo continue expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name if condition expr name name operator name operator name operator operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name else block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name operator name operator name argument expr name name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name name operator name operator name operator call name name operator name argument_list argument expr name operator call name name operator name argument_list then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name name operator name operator name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name name operator name operator name operator name expr_stmt expr name operator operator name name index expr name operator name name index expr name name operator name operator name operator if condition expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr operator literal type number operator name argument expr call name argument_list argument expr name argument expr name name operator name operator name expr_stmt expr name operator name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator literal type string return expr literal type number 
