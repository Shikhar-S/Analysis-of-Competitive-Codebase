include directive file using namespace name ifdef directive name define directive macro name value else directive define directive macro name value endif directive using name init type name name decl_stmt decl type specifier name name init expr literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name modifier name decl_stmt decl type name name init expr literal type number function type name modifier name parameter_list block if condition expr name operator literal type number then block type pseudo return expr name if condition expr name operator name then block type pseudo return expr name expr_stmt expr name operator call name name operator name argument_list return expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type name name block return expr name operator name name operator name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name operator name decl_stmt decl type name name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator operator name name index expr name operator name operator argument expr operator operator name name index expr name operator name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator operator name name index expr name operator name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator operator name name index expr name operator name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator operator name block expr literal type number expr name expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator operator name block expr name expr name expr operator name name index expr name operator name operator name name index expr name operator name operator operator macro name argument_list argument expr_stmt expr call name argument_list argument expr name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name modifier name init expr name name index expr name name index expr name operator name operator call name argument_list decl_stmt decl type name modifier name init expr name name index expr name name index expr name operator name operator call name argument_list if condition expr name operator name then block expr_stmt expr name name index expr name operator name operator literal type number if condition expr name name operator name operator name name operator name then block expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator elseif if condition expr name name operator name operator name name operator name then block expr_stmt expr name name operator name operator name else block type pseudo expr_stmt expr name name operator name operator name decl_stmt decl type name name name name init expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name operator name if condition expr name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block if condition expr name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block if condition expr name name index expr name operator name operator literal type number then block type pseudo empty_stmt else block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name return expr literal type number 
