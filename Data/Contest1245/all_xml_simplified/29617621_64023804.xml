include directive file comment type line define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name name typedef type name name name decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name argument_list argument expr operator name operator call name name operator name operator name argument_list operator call name argument_list operator call name argument_list namespace name block decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block return expr operator name name index expr name name operator name operator name name index expr name name operator name operator operator operator call name argument_list argument expr name name index expr name name operator name operator name name index expr name name operator name operator call name argument_list argument expr name name index expr name name operator name operator name name index expr name name operator name operator function type name name parameter_list parameter decl type name name block if condition expr name operator name name index expr name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name else block expr_stmt expr name name index expr name operator name if condition expr name name index expr name name index expr name operator name name index expr name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name function type name name parameter_list block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name operator name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr lambda capture parameter_list parameter decl type specifier specifier modifier name parameter decl type specifier specifier modifier name block return expr call name argument_list argument expr name operator call name argument_list argument expr name for control init expr name operator name operator name block decl_stmt decl type name name init expr call name argument_list argument expr name name operator name decl_stmt decl type name name init expr call name argument_list argument expr name name operator name if condition expr name operator name then block if condition expr name operator name name index expr name name index expr name operator name name index expr name name index expr name operator call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name operator call name argument_list argument expr name operator name then block expr_stmt expr name operator name operator name name index expr name name index expr name operator name name index expr name name index expr name operator call name argument_list argument expr name name index expr name name index expr name argument expr name name index expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr name name index expr call name argument_list argument expr name expr_stmt expr name operator name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block expr_stmt expr name operator name operator literal type number operator literal type char expr_stmt expr name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init expr name operator name operator name block expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type char return expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name name operator name ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name elif directive expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr name literal type string argument expr literal type string argument expr name endif directive return expr call name name operator name argument_list 
