comment type line include directive file typedef type name name name typedef type name name name using namespace name define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type modifier value function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name specifier modifier name block expr_stmt expr name operator literal type char operator name name operator name operator literal type string operator name name operator name operator literal type char return expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name specifier modifier name block decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type char if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator literal type number return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name block expr_stmt expr name operator name operator literal type string operator name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name parameter decl type name modifier modifier name block decl_stmt decl type specifier name modifier name init expr call name argument_list argument expr name operator literal type number argument expr literal type char expr_stmt expr call name name operator name argument_list argument expr name argument expr name operator name operator literal type string operator name operator literal type string expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator define directive macro name value decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name argument_list type generic argument expr name modifier name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block return if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name else block expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name modifier name block decl_stmt decl type name name init expr call name name operator name argument_list if condition expr name operator literal type number then block return expr name expr_stmt expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name index expr name expr name expr name comment type line expr_stmt expr call name argument_list argument expr call name argument_list argument expr name for control init decl type name name range expr name block decl_stmt decl type name name init expr name name index expr literal type number decl_stmt decl type name name init expr name name index expr literal type number decl_stmt decl type name name init expr name name index expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name return expr name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name modifier name parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block return expr call name argument_list argument expr name name operator name operator name name operator name operator call name argument_list argument expr name name operator name operator name name operator name function type name name parameter_list block decl_stmt decl type name name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list argument expr name argument expr call name name argument_list type generic argument expr name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator operator name name index expr name operator name name index expr name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name operator literal type string decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type number operator literal type string expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator literal type string return expr literal type number 
