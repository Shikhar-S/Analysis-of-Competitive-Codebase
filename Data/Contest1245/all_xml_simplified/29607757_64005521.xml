include directive file include directive file include directive file include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr name operator name operator name operator name operator name expr_stmt expr name operator name decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator literal type char decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator literal type number operator literal type number then block if condition expr name operator name operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator expr_stmt expr name operator literal type string operator name operator name else block type pseudo expr_stmt expr name operator literal type string elseif if condition expr name operator literal type number operator literal type number then block if condition expr name operator name operator literal type number operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name name index expr name operator literal type char operator name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char operator expr name operator expr_stmt expr name operator literal type string operator name operator name else block type pseudo expr_stmt expr name operator literal type string return expr literal type number comment type block 
