include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name struct name block public type default decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name constructor name parameter_list parameter decl type name name block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name else block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr operator name return expr literal type boolean function specifier type name name parameter_list block return expr name operator literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name argument expr call name argument_list argument expr literal type number argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator argument expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr call name name operator name argument_list argument expr name name operator name operator name argument expr name name operator name operator name then block expr_stmt expr name operator name name operator name if condition expr name name operator name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list if condition expr call name name operator name argument_list operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list operator literal type number incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name return expr literal type number 
