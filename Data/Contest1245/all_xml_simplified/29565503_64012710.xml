comment type block include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl name name index expr name operator name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name function type name name name parameter_list block decl_stmt decl specifier type specifier name name init expr literal type number operator literal type number decl_stmt decl specifier type name name name index expr name modifier decl type ref prev name modifier decl type ref prev name if condition expr name operator name then block expr_stmt expr name operator operator name operator name operator operator call name argument_list argument expr name argument expr literal type number argument expr name argument expr name if condition expr name operator name then block type pseudo return expr operator literal type number return expr operator name operator function template parameter_list parameter type name name type name name name parameter_list parameter decl type name modifier name block decl_stmt decl specifier type name name decl_stmt decl specifier type name name for control init expr name operator literal type number operator expr name operator call name argument_list condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number for control init expr name operator literal type number condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type char operator if condition expr name then block type pseudo expr_stmt expr name operator operator name function type name name name parameter_list parameter decl type name name parameter decl type name name block return expr literal type number operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator function type name name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name function type name name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list block comment type line expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator expr call name argument_list argument expr name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator expr name name index expr operator name operator operator name operator block expr name expr name operator literal type number expr name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name macro name argument_list argument argument literal type number argument macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name decl type ref prev name init expr call name argument_list argument expr name name index expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator name operator expr name operator name name index expr name operator name operator expr call name name operator name argument_list argument expr name name index expr name if condition expr call name name operator name argument_list operator name then block type pseudo break expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block type pseudo if condition expr name name operator name operator name operator literal type number then block type pseudo expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name range expr name block type pseudo if condition expr name name operator name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name range expr name block type pseudo if condition expr name name operator name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name argument expr name name operator name return expr literal type number 
