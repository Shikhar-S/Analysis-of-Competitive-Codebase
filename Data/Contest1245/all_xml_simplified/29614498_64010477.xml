include directive file using namespace name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name name function type name name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator operator literal type number operator name operator operator literal type number then block type pseudo return expr literal type number if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr name operator name operator literal type number if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name if condition expr name operator call name name operator name argument_list then block return expr name name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block if condition expr operator name operator operator literal type number operator name operator operator operator operator name operator operator literal type number operator name operator operator then block expr_stmt expr name operator name break decl_stmt decl type name name name init expr literal type number comment type line block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator literal type number operator name operator operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator literal type number operator name operator operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name comment type line if condition expr name operator operator literal type number operator name operator then block decl_stmt decl type name name init expr name operator operator literal type number operator name operator decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator literal type number operator name operator operator literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name comment type line if condition expr name operator operator literal type number operator name operator then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr operator literal type number operator name operator operator literal type number decl_stmt decl type name name init expr name operator operator literal type number operator name operator expr_stmt expr name operator call name argument_list argument expr name argument expr name return expr name name index expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr name operator literal type number operator call name argument_list argument expr name argument expr name operator literal type number operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name 
