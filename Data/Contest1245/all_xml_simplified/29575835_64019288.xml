include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name typedef type name name name name typedef type name name name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name init expr block expr literal type boolean function specifier type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator name name index expr name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name constructor name parameter_list parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block friend function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl name name index expr name operator name operator name struct name block public type default decl_stmt decl type name name decl type ref prev name constructor name parameter_list parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number member_init_list call name argument_list argument expr name call name argument_list argument expr name block decl name name index expr name function specifier type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block return expr literal type number operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name argument expr operator name name index expr name operator name for control init decl type name name init expr literal type number decl type ref prev name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr name name index expr name operator call name argument_list argument expr literal type number argument expr name argument expr name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr operator name operator call name argument_list argument expr name argument expr name argument expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number decl type ref prev name decl type ref prev name condition expr name operator name incr expr name operator block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator name expr_stmt expr name operator call name argument_list argument expr name name index expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr name operator name name index expr name operator name if condition expr name name index expr name operator name operator literal type number operator name name index expr name operator name operator literal type number then block expr_stmt expr name name index expr operator name operator operator name name index expr name operator name operator name name index expr name operator name operator expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr operator name operator call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line 
