include directive file using namespace name decl_stmt decl specifier type name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator name name index expr name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr literal type number operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator function type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name argument expr name name init expr block expr name expr operator literal type number expr operator literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr block expr name name index expr name expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name name operator name expr_stmt expr name operator call name argument_list argument expr block expr name expr name name operator name macro name argument_list argument argument argument return expr block expr name expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type null operator expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr name decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block if condition expr name operator literal type number then block type pseudo break decl_stmt decl type name name init expr call name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name if condition expr name operator name then block expr_stmt expr name name index expr name operator name expr_stmt expr operator name expr_stmt expr name name index expr call name name argument_list type generic argument expr literal type number argument_list argument expr name operator call name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name expr_stmt expr name name index expr call name name argument_list type generic argument expr literal type number argument_list argument expr name operator call name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr block expr name name index expr literal type number expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator call name argument_list argument expr name block expr_stmt expr name name index expr name operator expr name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name name index expr literal type number operator name name operator name decl_stmt decl type name name init expr name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name init expr block expr name expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name argument_list type generic argument expr name argument expr name argument expr name name init expr block expr name expr operator literal type number expr operator literal type number for control init decl type name name range expr name block expr_stmt expr name operator call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name operator name expr_stmt expr call name name operator name argument_list argument expr call name name argument_list type generic argument expr literal type number argument_list argument expr name expr_stmt expr name name index expr name operator call name name argument_list type generic argument expr literal type number argument_list argument expr name decl_stmt decl type name name init expr call name name argument_list type generic argument expr literal type number argument_list argument expr name decl type ref prev name init expr name name index expr name expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name operator call name name argument_list type generic argument expr literal type number argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name block expr_stmt expr name operator expr name empty_stmt expr_stmt expr name name index expr name operator block expr name expr name expr_stmt expr operator name name operator name operator literal type char operator name name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type char expr_stmt expr name operator literal type char operator name operator name name operator name operator literal type char for control init decl type name name init expr name condition expr name operator name name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type char operator name name index expr name operator name operator literal type number operator literal type char 
