include directive file using namespace name using name init type name name function type name name parameter_list block expr_stmt expr name operator literal type char function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name block for control init decl type specifier name modifier name range expr name block type pseudo expr_stmt expr name operator name operator literal type char function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block expr_stmt expr name operator name if condition expr sizeof type pack argument_list argument expr name then block type pseudo expr_stmt expr name operator literal type char expr_stmt expr call name argument_list argument expr name operator struct name block public type default decl_stmt decl type name name decl type ref prev name struct name block public type default decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name class name block private type default decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name public constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name block expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name else block type pseudo return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name name index expr name operator name return expr literal type boolean function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr name expr name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr literal type number operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator expr name expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list argument expr name operator literal type number for control init decl type name name range expr name block if condition expr call name name operator name argument_list argument expr name name operator name operator call name name operator name argument_list argument expr name name operator name then block if condition expr name name operator name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name operator name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr name name operator name expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name argument expr name name operator name expr_stmt expr name operator name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type char expr_stmt expr name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator literal type char for control init decl type name name argument_list type generic argument expr name argument expr name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type char return expr literal type number 
