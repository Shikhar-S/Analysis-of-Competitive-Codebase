include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list value define directive macro name parameter_list value define directive macro name value define directive macro name parameter_list value define directive macro name parameter_list value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name name argument expr name name name decl_stmt decl type name name name name index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name name decl type ref prev name decl_stmt decl type name name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator name operator expr name operator name operator expr name operator literal type boolean if condition expr name operator literal type number operator name operator literal type boolean then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean return function type name name parameter_list parameter decl type name name name parameter decl type name name name parameter decl type name name parameter decl type name name block expr_stmt expr name operator name operator expr name operator name operator expr name operator literal type boolean if condition expr name operator literal type number operator name operator literal type boolean then block type pseudo expr_stmt expr name operator literal type boolean if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type boolean return function type name name name parameter_list parameter decl type name name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name modifier name init expr name name index expr name index expr name index expr name index expr name index expr name if condition expr name operator operator literal type number then block type pseudo return expr name expr_stmt expr name operator literal type number decl_stmt decl type name name name init expr ternary condition expr operator operator literal type number operator name operator operator name operator then expr literal type number else expr literal type number decl_stmt decl type name name name init expr ternary condition expr operator operator literal type number operator name operator operator name operator then expr literal type number else expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator literal type number operator name operator literal type number then block type pseudo break if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name else block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name expr_stmt expr name operator name operator expr name operator name operator expr name operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name else block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name argument expr name argument expr name if condition expr name operator literal type boolean operator name operator literal type boolean then block type pseudo expr_stmt expr name operator name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name return expr name function name parameter_list block decl_stmt decl type name name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type boolean argument expr literal type boolean argument expr literal type boolean argument expr literal type boolean operator name return expr literal type number 
