include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value using namespace name function type name name parameter_list parameter decl type name modifier name block decl_stmt decl specifier type name name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator call name argument_list operator expr operator call name argument_list argument expr name block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number do block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator condition expr name operator call name argument_list operator expr call name argument_list argument expr name if condition expr name then block type pseudo expr_stmt expr name operator operator name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name index expr name operator name name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name operator name operator expr call name argument_list argument expr name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name decl_stmt decl type name name name init expr literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name name index expr name macro name argument_list argument argument literal type number argument block decl_stmt decl type name name name init expr operator call name argument_list argument expr name name index expr name name index expr name operator name operator name name index expr name name index expr name operator name operator call name argument_list argument expr name name index expr name name index expr name operator name operator name name index expr name name index expr name operator name operator operator literal type number operator operator name name index expr name name index expr name operator name name index expr name name index expr name operator if condition expr name operator name name index expr name name index expr name then block type pseudo expr_stmt expr name name index expr name name index expr name operator name name index expr name operator expr name name index expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name operator name operator literal type number argument expr name operator name operator literal type number argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument if condition expr operator name name index expr name then block expr_stmt expr operator name expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type char expr_stmt expr name operator name operator name operator name macro name argument_list argument argument literal type number argument if condition expr name name index expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr name return expr literal type number 
