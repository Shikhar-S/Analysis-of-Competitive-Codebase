include directive file define directive macro name value decl_stmt decl type specifier name name init expr literal type number using namespace name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name function type operator type specifier name name name parameter_list parameter decl type name name specifier block return expr name name operator name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name decl type ref prev name name index expr name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list block while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list if condition expr call name argument_list argument expr name name operator name operator call name argument_list argument expr name name operator name then block expr_stmt expr name name index expr name name index expr name name operator name operator name name index expr name name operator name expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list return expr name function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr operator name operator block expr name expr name macro name argument_list argument expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr operator name operator block expr name expr name expr name name index expr name expr_stmt expr call name name operator name argument_list argument expr operator name operator block expr name expr name expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name expr_stmt expr name operator call name argument_list operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name init expr name name index expr name if condition expr name name operator name operator name operator name name operator name operator name then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name init expr name name index expr name if condition expr name name operator name operator name then block type pseudo expr_stmt expr name operator name name operator name operator literal type string elseif if condition expr name name operator name operator name then block type pseudo expr_stmt expr name operator name name operator name operator literal type string expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name init expr name name index expr name if condition expr name name operator name operator name operator name name operator name operator name then block type pseudo expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name return expr literal type number 
