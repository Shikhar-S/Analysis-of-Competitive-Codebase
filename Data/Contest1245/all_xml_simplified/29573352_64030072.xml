include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name argument expr operator literal type number block function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name return expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator literal type number then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name block return expr operator name name index expr call name argument_list argument expr name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator call name argument_list argument expr literal type number operator name decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name operator name decl_stmt decl type name name init expr name name operator name operator name if condition expr name operator name then block decl_stmt decl type name name init expr call name name operator name argument_list argument expr name if condition expr operator name name index expr name then block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean else block decl_stmt decl type name name init expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr call name name operator name argument_list argument expr name if condition expr operator name operator name operator operator operator operator name name index expr name operator operator name name index expr name operator then block expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name if condition expr name name index expr name operator name name index expr name then block decl_stmt decl type name name init expr call name name operator name argument_list argument expr name expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type number if condition expr name operator literal type number operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type char expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type char operator name name index expr name operator name operator literal type number operator name 
