include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value using namespace name function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name function specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name argument expr name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name constructor name parameter_list block expr_stmt expr name operator name operator name operator literal type number decl name name index expr name operator name decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name operator name decl type ref prev name name index expr name decl_stmt decl type name name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator literal type number then block type pseudo return expr name else block type pseudo return expr call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr_stmt expr name operator name name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name name operator name operator call name argument_list argument expr name expr_stmt expr name name index expr name name operator name operator call name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name name operator name operator name then block type pseudo return expr name name operator name else block type pseudo return expr name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name name index expr name then block type pseudo return expr literal type boolean decl_stmt decl type name name init expr literal type boolean for control init decl type name name range expr name name index expr name block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name operator name then block type pseudo continue if condition expr name name index expr name name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name then block type pseudo if condition expr name name operator name operator name name operator name then block expr_stmt expr name operator name empty_stmt expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name comment type line expr_stmt expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name macro name argument_list argument argument literal type number argument macro name argument_list argument argument literal type number argument block expr_stmt expr operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator call name name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr name name index expr literal type number operator literal type boolean expr_stmt expr name operator name name index expr literal type number operator name expr_stmt expr call name name operator name argument_list argument expr literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name expr_stmt expr name name operator name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number if condition expr name name operator name operator name name index expr name operator name then block expr_stmt expr name operator name name operator name operator name name index expr name operator name expr_stmt expr name name index expr name name operator name operator literal type boolean expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator call name argument_list argument expr call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name index expr name operator name operator literal type string expr_stmt expr name operator name expr_stmt expr name operator name operator call name argument_list argument expr call name name operator name argument_list operator name for control init expr name range expr name block type pseudo if condition expr operator name name index expr name name operator name then block expr_stmt expr name operator name name index expr name name operator name operator name operator literal type string operator name name index expr name name operator name operator name operator name return expr literal type number 
