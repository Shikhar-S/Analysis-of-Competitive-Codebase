pragma directive name name name literal name pragma directive name name name literal name include directive file include directive file include directive file include directive file using namespace name using namespace name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value comment type line typedef type name name name name typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr operator name operator literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr literal type number expr literal type number expr operator literal type number decl_stmt decl type specifier name name name index init expr block expr literal type number expr literal type number expr literal type number expr operator literal type number expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name name index expr literal type number index expr literal type number index expr literal type number decl type ref prev name name index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name function specifier type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator expr call name name operator name argument_list argument expr name function specifier type name name parameter_list block expr_stmt expr name operator name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name index expr name index expr name operator name name index expr name index expr name index expr name operator literal type number expr_stmt expr name name index expr literal type number index expr name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name operator literal type number index expr name index expr name then block type pseudo continue decl_stmt decl type name name init expr name operator literal type number operator operator name operator name operator name operator name operator if condition expr name name argument_list type generic argument expr literal type number operator name name then block type pseudo continue if condition expr name then block expr_stmt expr name name index expr name index expr name operator literal type number index expr name operator literal type number if condition expr name name index expr name index expr name operator literal type number index expr name operator name name index expr name operator literal type number index expr name index expr name operator operator name name index expr name operator literal type char operator then block expr_stmt expr name name index expr name index expr name operator literal type number index expr name operator name name index expr name operator literal type number index expr name index expr name operator operator name name index expr name operator literal type char operator expr_stmt expr name name index expr name index expr name operator literal type number index expr name operator literal type number if condition expr name then block expr_stmt expr name name index expr name index expr name index expr name operator literal type number operator literal type number if condition expr name name index expr name index expr name index expr name operator literal type number operator name name index expr name operator literal type number index expr name index expr name operator operator name name index expr name operator literal type char operator then block expr_stmt expr name name index expr name index expr name index expr name operator literal type number operator name name index expr name operator literal type number index expr name index expr name operator operator name name index expr name operator literal type char operator expr_stmt expr name name index expr name index expr name index expr name operator literal type number operator literal type number if condition expr name operator name then block expr_stmt expr name name index expr name index expr name index expr name operator literal type number if condition expr name name index expr name index expr name index expr name operator name name index expr name operator literal type number index expr name index expr name operator operator name name index expr name operator literal type char operator then block expr_stmt expr name name index expr name index expr name index expr name operator name name index expr name operator literal type number index expr name index expr name operator operator name name index expr name operator literal type char operator expr_stmt expr name name index expr name index expr name index expr name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr operator literal type number decl type ref prev name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name index expr name index expr name then block if condition expr name operator name name index expr name index expr name index expr name then block type pseudo expr_stmt expr name operator name name index expr name index expr name index expr name operator expr name operator name operator expr name operator name if condition expr name operator operator name operator literal type number operator operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string while condition expr name block if condition expr name name index expr name index expr name index expr name operator literal type number then block type pseudo expr_stmt expr name operator operator expr call name name operator name argument_list argument expr literal type char elseif if condition expr name name index expr name index expr name index expr name operator literal type number then block type pseudo expr_stmt expr name operator operator expr call name name operator name argument_list argument expr literal type char else block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type char expr_stmt expr name operator expr_stmt expr call name argument_list argument expr call name argument_list argument expr name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list function name parameter_list block comment type line comment type line expr_stmt expr call name argument_list decl_stmt decl type name name init expr literal type number expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list return expr literal type number 
