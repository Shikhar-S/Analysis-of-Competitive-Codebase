include directive file using namespace name define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr name operator literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr operator operator name operator name operator operator literal type number operator operator literal type char expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name modifier name init expr name name index expr name index expr name index expr name index expr name index expr name if condition expr name operator operator literal type number then block type pseudo return expr name if condition expr name operator name then block type pseudo return expr name operator literal type number expr_stmt expr name operator literal type number decl_stmt decl type name name init expr operator ternary condition expr name then expr literal type number else expr name name index expr name operator literal type char operator decl type ref prev name init expr operator ternary condition expr name then expr literal type number else expr name name index expr name operator literal type char operator decl_stmt decl type name name init expr operator ternary condition expr name then expr literal type number else expr name name index expr name operator literal type char operator decl type ref prev name init expr operator ternary condition expr name then expr literal type number else expr name name index expr name operator literal type char operator for control init decl type name name init expr name condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr operator name block type pseudo if condition expr name operator literal type number operator name operator literal type number then block type pseudo continue else block type pseudo expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator operator name operator name name index expr name operator literal type char operator argument expr name operator operator name operator name name index expr name operator literal type char operator argument expr name operator operator name operator name name index expr name operator literal type char operator argument expr name operator operator name operator name name index expr name operator literal type char operator return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number operator literal type string 
