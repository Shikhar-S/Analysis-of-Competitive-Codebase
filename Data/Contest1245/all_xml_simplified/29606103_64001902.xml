comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type modifier value comment type line define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value typedef type name name name typedef type name name name name typedef type name name operator name name argument_list type generic argument expr name argument expr name name function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr literal type number decl type ref prev name while condition expr operator name operator call name argument_list operator operator literal type number operator literal type number operator name block type pseudo expr_stmt expr name operator operator operator name operator literal type number operator expr_stmt expr name operator operator name operator literal type number operator while condition expr literal type number operator operator name operator call name argument_list operator operator name operator literal type number block type pseudo expr_stmt expr name operator name operator literal type number operator operator name operator literal type number operator if condition expr name then block type pseudo expr_stmt expr name operator operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr call name argument_list argument expr literal type char if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr ternary condition expr name operator name then expr name else expr name decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block return expr name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number expr_stmt expr name operator call name argument_list argument expr name operator literal type number macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr call name argument_list argument expr literal type string return expr literal type number expr_stmt expr name name index expr literal type number operator literal type number operator expr name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr block if condition expr name name index expr name operator literal type char then block decl_stmt decl type name name init expr name while condition expr name operator name operator name name index expr name operator literal type char block type pseudo expr_stmt expr operator name expr_stmt expr name operator literal type number operator name operator call name argument_list argument expr name operator name operator name expr_stmt expr name operator name elseif if condition expr name name index expr name operator literal type char then block decl_stmt decl type name name init expr name while condition expr name operator name operator name name index expr name operator literal type char block type pseudo expr_stmt expr operator name expr_stmt expr name operator literal type number operator name operator call name argument_list argument expr name operator name operator name expr_stmt expr name operator name else block expr_stmt expr operator name expr_stmt expr call name argument_list argument expr name argument expr literal type char return expr literal type number 
