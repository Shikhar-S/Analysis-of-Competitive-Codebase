define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value typedef type name name name using namespace name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name operator literal type number then expr name else expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name while condition expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name modifier name init expr operator name name index expr name operator literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr call name argument_list if condition expr name operator literal type char then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number elseif if condition expr name operator literal type char then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number else block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue expr_stmt expr call name argument_list argument expr literal type string decl_stmt decl type name name name index expr literal type number init expr block expr name expr name expr name decl_stmt decl type name name name index expr literal type number init expr block expr name operator name expr name operator name expr name operator name decl_stmt decl type name name name index expr literal type number init expr block expr literal type char expr literal type char expr literal type char macro name argument_list argument argument literal type number argument block decl_stmt decl type name name decl_stmt decl type name name init expr operator name name index expr name operator literal type number operator operator literal type number if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator else block macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name operator expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator break expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string 
