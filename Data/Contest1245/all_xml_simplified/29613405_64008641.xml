pragma directive name name name literal name include directive file using namespace name using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block decl_stmt decl type name name init expr name operator name if condition expr name then block type pseudo expr_stmt expr name operator name return expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block decl_stmt decl type name name init expr name operator name if condition expr name then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name init expr name name operator name operator name name operator name decl type ref prev name init expr name name operator name operator name name operator name return expr call name argument_list argument expr name operator name operator name operator name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name while condition expr name block expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name return expr operator name operator name operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator call name argument_list argument expr name operator operator name decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name decl type ref prev name init expr call name name operator name argument_list if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator literal type number if condition expr operator name then block expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number expr_stmt expr name operator macro name argument_list argument argument argument literal type number block expr_stmt expr name name index expr name operator name name index expr name operator literal type number operator name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name operator name name index expr name operator name operator name name index expr name operator name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator name then block type pseudo return expr name return expr ternary condition expr operator name operator name operator literal type number operator then expr name else expr call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name operator call name argument_list argument expr name argument expr name operator name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block expr_stmt expr name operator literal type number expr_stmt expr name operator return expr name function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block expr_stmt expr name operator name operator literal type number expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name block if condition expr name then block expr_stmt expr name operator literal type string operator name else block expr_stmt expr name operator literal type string operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name decl type ref prev name init expr literal type number decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list decl_stmt decl type name name argument_list argument expr name operator literal type number argument expr literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument literal type number block expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name macro name argument_list argument argument block expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type char then block while condition expr name name index expr name operator literal type char block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator operator name operator name name index expr name operator operator name if condition expr name name index expr name operator literal type char then block while condition expr name name index expr name operator literal type char block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name operator operator name operator name name index expr name operator operator name if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator literal type number operator name return expr literal type number expr_stmt expr name operator name operator name return expr literal type number 
