include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr operator literal type number operator literal type number operator decl_stmt decl type specifier name name init expr operator literal type number operator literal type number operator decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number define directive macro name value function type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator name expr_stmt expr name operator name function type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator ternary condition expr operator name operator name operator then expr name else expr operator name operator name operator expr_stmt expr name operator ternary condition expr operator name operator name operator then expr name else expr operator name operator name operator expr_stmt expr name operator name expr_stmt expr name operator ternary condition expr operator name operator name operator then expr name else expr operator name operator name operator function type name name parameter_list parameter decl type name block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name for control init expr name operator literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator literal type string expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name comment type line expr_stmt expr name operator name for control init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr call name name operator name argument_list argument expr literal type char continue elseif if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr call name name operator name argument_list argument expr literal type char continue else block if condition expr name then block expr_stmt expr operator name expr_stmt expr operator name expr_stmt expr call name name operator name argument_list argument expr literal type char continue expr_stmt expr call name name operator name argument_list argument expr literal type char if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string operator name continue expr_stmt expr name operator literal type string operator name for control init expr name operator literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr operator name expr_stmt expr name operator literal type string elseif if condition expr name then block expr_stmt expr operator name expr_stmt expr name operator literal type string else block expr_stmt expr operator name expr_stmt expr name operator literal type string else block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name return expr literal type number 
