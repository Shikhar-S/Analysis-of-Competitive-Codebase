comment type block include directive file include directive file include directive file using namespace name using namespace name pragma directive name name name literal name using name init type name name using name init type name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number typedef type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name modifier value function type name name parameter_list parameter decl type name name argument_list type generic argument expr name name block function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name argument_list type generic argument expr name name parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator operator name operator literal type string operator name operator name expr_stmt expr call name argument_list argument expr operator name argument expr name operator define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value struct name block public type default decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number function type name name parameter_list parameter decl type name name name index parameter decl type name name block if condition expr name name index expr name operator name operator operator literal type number then block type pseudo return expr name return expr name name index expr name operator name operator call name argument_list argument expr name argument expr name name index expr name operator name function type name name parameter_list parameter decl type name name name index parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name else block expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name name index expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number comment type line comment type line comment type block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name name index expr name operator literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator literal type number operator name operator name name index expr name operator literal type number operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument block expr_stmt expr name operator name name index expr name operator literal type number operator name expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator literal type number operator name expr block expr literal type number expr name operator literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr name operator name macro name argument_list argument argument literal type number argument literal type number block macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr operator name name index expr name operator name operator name name index expr name operator name operator operator name expr block expr name expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name block decl_stmt decl type name name init expr name name operator name decl type ref prev name init expr name name operator name operator name decl type ref prev name init expr name name operator name operator name if condition expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name then block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name return expr literal type number 
