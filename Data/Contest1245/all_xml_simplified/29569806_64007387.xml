include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name empty_stmt typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr literal type number expr name expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr literal type number operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator operator name operator call name name operator name argument_list incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr name operator name expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr ternary condition expr name operator name operator literal type number then expr literal type char else expr literal type char expr_stmt expr name operator call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name return expr literal type number 
