pragma directive name name name literal name pragma directive name name name literal name include directive file define directive macro name value define directive macro name value define directive macro name value using namespace name using name init type name using name init type name name using name init type name name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name decl_stmt decl specifier type name name init expr literal type number operator literal type number function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator name while condition expr name operator name block type pseudo expr_stmt expr name operator name while condition expr name operator literal type number block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name name specifier type name name parameter_list parameter decl type name modifier name parameter decl type name name block if condition expr name operator name then block type pseudo expr_stmt expr name operator name function specifier type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name return expr name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name define directive macro name parameter_list parameter type name modifier value function type name name parameter_list block expr_stmt expr name operator literal type string operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block expr_stmt expr name operator name operator literal type char expr_stmt expr call name argument_list argument expr name operator function template parameter_list parameter type template parameter_list parameter type name modifier name name parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type specifier name modifier modifier name block for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr call name argument_list argument expr name operator function specifier type name name parameter_list block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block expr_stmt expr name operator name operator literal type char expr_stmt expr call name argument_list argument expr name operator function template parameter_list parameter type template parameter_list parameter type name modifier name name parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name parameter decl type specifier name modifier modifier name block for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr call name argument_list argument expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator literal type number return expr name comment type line decl_stmt decl type name name decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator operator literal type number operator name operator literal type number operator name operator literal type number operator name operator literal type number then block return expr literal type number elseif if condition expr name operator operator literal type number then block return expr literal type number decl_stmt decl type name modifier name init expr name name index expr name index expr name index expr name index expr name index expr name index expr name if condition expr name operator operator literal type number then block type pseudo return expr name expr_stmt expr name operator literal type number if condition expr name then block type pseudo return expr literal type number decl_stmt decl type name name init expr ternary condition expr name then expr name name index expr name else expr literal type number decl_stmt decl type name name init expr ternary condition expr name then expr name name index expr name else expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator operator name operator name name index expr name operator argument expr name operator operator name operator name name index expr name operator argument expr name operator operator name operator name operator argument expr name operator name argument expr name operator name return expr name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number operator name operator literal type number then block type pseudo return expr literal type number expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block expr_stmt expr name name index expr name operator operator name operator name operator operator literal type number expr_stmt expr name name index expr name operator operator name operator name operator operator literal type number return expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number function type name name parameter_list block expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block expr_stmt expr name operator name operator name operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name operator literal type number argument expr name operator call name argument_list argument expr name argument expr name operator literal type number operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr name operator name operator call name argument_list argument expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name operator block type pseudo expr_stmt expr call name argument_list return expr literal type number 
