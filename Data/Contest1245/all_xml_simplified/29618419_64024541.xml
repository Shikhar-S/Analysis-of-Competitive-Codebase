pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name include directive file using namespace name typedef type name name name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr operator operator literal type number operator literal type number operator decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number typedef type name name name name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator name operator operator name decl_stmt decl type name name init expr literal type string decl_stmt decl type name name init expr literal type string decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator call name argument_list argument expr name then block type pseudo return expr literal type number if condition expr name name index expr name index expr name index expr name index expr name index expr name operator operator literal type number then block return expr name name index expr name index expr name index expr name index expr name index expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number block macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator literal type number operator name operator literal type number then block type pseudo continue if condition expr name operator name operator name operator name then block expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name elseif if condition expr name operator name operator name operator operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name operator name name index expr name operator literal type char elseif if condition expr name operator name operator operator name operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name operator name name index expr name operator literal type char argument expr name elseif if condition expr name operator name operator operator name operator operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name operator name name index expr name operator literal type char argument expr name operator name name index expr name operator literal type char if condition expr operator name operator name operator name operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator name name index expr name operator literal type char argument expr name argument expr name argument expr name elseif if condition expr operator name operator name operator name operator operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name name argument_list type generic argument expr name name index expr name operator literal type char argument expr name argument expr name argument expr name name name index expr name operator literal type char elseif if condition expr operator name operator name operator operator name operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name name argument_list type generic argument expr name name index expr name operator literal type char argument expr name argument expr name name name index expr name operator literal type char argument expr name elseif if condition expr operator name operator name operator operator name operator operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name name argument_list type generic argument expr name name index expr name operator literal type char argument expr name argument expr name name name index expr name operator literal type char argument expr name operator name name index expr name operator literal type char if condition expr name operator operator name operator name operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name operator name name index expr name operator literal type char argument expr name argument expr name elseif if condition expr name operator operator name operator name operator operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name name argument_list type generic argument expr name name index expr name operator literal type char argument expr name argument expr name name name index expr name operator literal type char elseif if condition expr name operator operator name operator operator name operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name name argument_list type generic argument expr name name index expr name operator literal type char argument expr name name name index expr name operator literal type char argument expr name elseif if condition expr name operator operator name operator operator name operator operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name name argument_list type generic argument expr name name index expr name operator literal type char argument expr name name name index expr name operator literal type char argument expr name operator name name index expr name operator literal type char if condition expr operator name operator operator name operator name operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator name name index expr name operator literal type char argument expr name operator name name index expr name operator literal type char argument expr name argument expr name elseif if condition expr operator name operator operator name operator name operator operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator name name index expr name operator literal type char argument expr name name argument_list type generic argument expr name name index expr name operator literal type char argument expr name argument expr name name name index expr name operator literal type char elseif if condition expr operator name operator operator name operator operator name operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator name name index expr name operator literal type char argument expr name name argument_list type generic argument expr name name index expr name operator literal type char argument expr name name name index expr name operator literal type char argument expr name elseif if condition expr operator name operator operator name operator operator name operator operator name then block if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue if condition expr name name index expr name operator literal type char operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name name argument_list type generic argument expr name name index expr name operator literal type char argument expr name name argument_list type generic argument expr name name index expr name operator literal type char argument expr name name name index expr name operator literal type char argument expr name name name index expr name operator literal type char return expr name name index expr name index expr name index expr name index expr name index expr name operator name comment type block return expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name operator literal type string expr_stmt expr name operator literal type string macro name argument_list argument argument literal type number argument literal type number block if condition expr operator literal type number operator name operator operator operator name operator then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string macro name argument_list argument argument literal type number argument literal type number block if condition expr operator literal type number operator name operator operator operator name operator then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator literal type string while condition expr call name name operator name argument_list operator literal type char block type pseudo expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list while condition expr call name name operator name argument_list operator literal type char block type pseudo expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list while condition expr call name argument_list argument expr name operator call name argument_list argument expr name block type pseudo expr_stmt expr name operator literal type string operator name return expr call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number function type name name parameter_list block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list return expr literal type number 
