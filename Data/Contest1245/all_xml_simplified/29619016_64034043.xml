include directive file using namespace name define directive macro name value define directive macro name value function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list if condition expr name operator literal type number operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator comment type line if condition expr name operator literal type number operator literal type number then block type pseudo return expr literal type number return expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator literal type number decl_stmt decl type name name name index expr literal type number init expr block while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name argument expr name name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name name index expr name operator name operator literal type number decl_stmt decl type name name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name if condition expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name decl_stmt decl type name name init expr literal type number while condition expr name operator name block decl_stmt decl type name name init expr literal type number expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name if condition expr name operator name operator name name index expr name operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name expr_stmt expr name operator name name index expr name operator name name index expr name if condition expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator block expr name expr name expr_stmt expr name operator literal type number if condition expr name name index expr name operator name then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr name operator decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator expr_stmt expr name operator name name index expr name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator name operator literal type string expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name operator name operator literal type string operator name name index expr name operator name operator name 
