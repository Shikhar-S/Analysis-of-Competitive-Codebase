pragma directive name name name literal name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file decl_stmt decl type name name operator name name argument_list type generic argument expr name name decl type ref prev name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name return expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name struct name block public type default decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name function type name name parameter_list comment type block block decl_stmt decl type name name expr_stmt expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name decl_stmt decl type name name operator name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name operator operator name operator literal type number operator operator literal type number decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name name argument_list argument expr name decl_stmt decl type name name operator name name argument_list type generic argument expr name name argument_list argument expr name decl_stmt decl type name name operator name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name name operator name operator name operator name expr_stmt expr name name index expr name operator block expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name operator name operator name name index expr name operator expr call name name operator name argument_list argument expr block expr name name index expr name expr literal type boolean expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name operator name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr call name name operator name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name name operator name argument_list argument expr name name index expr name operator name operator name name index expr name operator name expr literal type boolean expr name expr name expr_stmt expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr lambda capture parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name operator name name argument_list type generic argument expr name name decl_stmt decl type name name operator name name argument_list type generic argument expr name name operator name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name if condition expr operator name name operator name then block if condition expr call name argument_list argument expr name name operator name operator call name argument_list argument expr name name operator name then block type pseudo continue expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr name name operator name expr_stmt expr call name argument_list argument expr name name operator name argument expr name name operator name else block if condition expr call name argument_list argument expr name operator call name argument_list argument expr name name operator name then block type pseudo continue comment type line expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr call name argument_list argument expr name name operator name argument expr name expr_stmt expr name name operator name operator name operator literal type char expr_stmt expr name name operator name operator call name name operator name argument_list operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name name operator name operator name operator literal type number operator literal type string expr_stmt expr name name operator name operator literal type char operator call name name operator name argument_list operator literal type char for control init expr name index expr name operator name operator name block type pseudo expr_stmt expr name name operator name operator name operator literal type number operator literal type string operator name operator literal type number operator literal type char expr_stmt expr name name operator name operator literal type char 
