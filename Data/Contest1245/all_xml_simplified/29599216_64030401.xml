comment type line ifndef directive name pragma directive name name name literal name pragma directive name name name literal name pragma directive name name name literal name endif directive include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number comment type line decl_stmt decl type specifier name name init expr operator literal type number decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name decl type ref prev name function type name name parameter_list block expr_stmt expr name operator name operator name decl_stmt decl type name name init expr name if condition expr operator name operator operator name then block expr_stmt expr name operator literal type number operator name expr_stmt expr name decl_stmt decl type name name init expr literal type number if condition expr operator name then block expr_stmt expr name operator name operator name operator literal type number expr_stmt expr operator name macro name argument_list argument literal type number expr_stmt expr name name index expr literal type number operator name operator literal type number operator operator name operator name operator macro name argument_list argument literal type number expr_stmt expr name name index expr literal type number operator name operator literal type number operator operator name operator name operator decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number index expr literal type number decl type ref prev name init expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name expr_stmt expr name name index expr literal type number index expr literal type number index expr literal type number index expr literal type number operator literal type number macro name argument_list argument literal type number macro name argument_list argument argument literal type number macro name argument_list argument argument literal type number macro name argument_list argument argument literal type number block if condition expr name operator literal type number then block type pseudo macro name argument_list argument argument literal type number macro name argument_list argument argument literal type number block if condition expr name operator name then block type pseudo continue if condition expr operator name operator name operator name then block type pseudo continue if condition expr operator name operator name operator name name index expr name then block type pseudo continue if condition expr operator name operator name operator name name index expr name then block type pseudo continue decl_stmt decl type name name init expr ternary condition expr name operator name then expr literal type number else expr name decl_stmt decl type name name init expr ternary condition expr name operator name name index expr name then expr literal type number else expr name decl_stmt decl type name name init expr ternary condition expr name operator name name index expr name then expr literal type number else expr name expr_stmt expr name name index expr name operator literal type number index expr name index expr name index expr name operator name name index expr name index expr name index expr name index expr name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name name index expr name index expr name index expr name index expr name expr_stmt expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator name operator name ifdef directive name if condition expr name operator name operator literal type number then block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr name condition expr name operator name incr expr operator name block type pseudo if condition expr operator name operator name operator operator literal type number then block type pseudo expr_stmt expr operator name expr_stmt expr name operator operator ternary condition expr name operator name then expr literal type string else expr literal type string operator expr_stmt expr name operator name operator name endif directive function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name else directive expr_stmt expr call name name operator name argument_list argument expr literal type number comment type line endif directive decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block type pseudo expr_stmt expr call name argument_list 
