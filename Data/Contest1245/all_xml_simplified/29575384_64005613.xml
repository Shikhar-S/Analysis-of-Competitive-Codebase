comment type block include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value comment type line comment type line comment type line using namespace name using name init type name name using name init type name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name operator name operator operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr name operator name macro name argument_list argument argument literal type number argument literal type number if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator literal type number return expr literal type number decl_stmt decl type name name init expr call name argument_list argument expr name expr_stmt expr name operator literal type string operator name expr_stmt expr name name index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type number operator literal type char then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type number operator literal type char then block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number expr_stmt expr name operator name name index expr name return expr literal type number 
