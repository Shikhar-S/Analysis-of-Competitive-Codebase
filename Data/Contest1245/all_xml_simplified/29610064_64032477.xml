include directive file include directive file using namespace name define directive macro name value typedef type name name name decl_stmt decl type specifier name name init expr literal type number class name block private type default decl_stmt decl type specifier specifier name name init expr literal type number decl_stmt decl type specifier specifier name name init expr literal type number decl_stmt decl type specifier specifier name name init expr literal type number decl_stmt decl type specifier specifier name name init expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name modifier decl type ref prev name modifier decl type ref prev name modifier decl type ref prev name decl_stmt decl type name name public constructor name parameter_list block expr_stmt expr name operator name operator expr name operator name operator expr name operator name expr_stmt expr name operator name destructor name name parameter_list block expr_stmt expr call name argument_list function specifier type name name parameter_list block return expr ternary condition expr name operator name operator operator name operator operator name operator name operator operator call name argument_list argument expr name argument expr literal type number argument expr name argument expr name operator name operator name operator then expr operator name operator name operator else expr operator name operator function type operator type name modifier name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator call name argument_list return expr operator name function type operator type name modifier name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator name then block type pseudo return expr operator name if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type number operator expr name operator call name argument_list expr_stmt expr name operator name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number while condition expr name operator literal type char operator name operator name operator name operator literal type char block expr_stmt expr name name index expr name operator operator name expr_stmt expr name operator call name argument_list expr_stmt expr name name index expr name operator literal type number return expr operator name function specifier type name name parameter_list parameter decl type name modifier name block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number while condition expr name operator literal type char operator name operator name block expr_stmt expr name name index expr name operator operator name expr_stmt expr name operator call name argument_list expr_stmt expr name name index expr name operator literal type number return expr name function type operator type name modifier name name parameter_list parameter decl type name name block expr_stmt expr call name argument_list argument expr name return expr operator name function type operator type name modifier name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr call name argument_list argument expr literal type char decl_stmt decl specifier type name name name index expr literal type number decl_stmt decl type name name init expr literal type number do block expr_stmt expr name name index expr name operator operator name operator literal type number operator expr name operator literal type number condition expr name while condition expr name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr operator name operator literal type char return expr operator name function type operator type name modifier name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator operator name operator expr call name argument_list argument expr literal type char decl_stmt decl specifier type name name name index expr literal type number decl_stmt decl type name name init expr literal type number do block expr_stmt expr name name index expr name operator operator name operator literal type number operator expr name operator literal type number condition expr name while condition expr name block type pseudo expr_stmt expr call name argument_list argument expr name name index expr operator name operator literal type char return expr operator name function type operator type name modifier name name parameter_list parameter decl type name modifier name block while condition expr operator name block type pseudo expr_stmt expr call name argument_list argument expr operator name operator return expr operator name function type operator specifier name name parameter_list specifier block return expr name operator name function type name name parameter_list parameter decl type specifier name name block if condition expr name operator name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name argument expr name operator expr name operator name expr_stmt expr operator name operator operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr name operator name argument expr name decl name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name function type name name parameter_list block comment type line expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block if condition expr name operator operator literal type number then block type pseudo expr_stmt expr name operator name elseif if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name expr_stmt expr name name index expr operator name operator block expr name name index expr name expr name if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator literal type number operator expr operator name expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name init expr operator name name index expr name operator name operator operator name operator name name index expr name operator name operator operator name if condition expr name name index expr name operator name then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator literal type char expr_stmt expr name operator name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator name operator literal type number operator name name index expr name operator name operator literal type number then block type pseudo continue expr_stmt expr name operator name name index expr name operator name operator literal type char operator name name index expr name operator name operator literal type char return expr literal type number 
