include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value using namespace name function type name name parameter_list parameter decl type name modifier name block decl_stmt decl specifier type name name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number while condition expr name operator call name argument_list operator expr operator call name argument_list argument expr name block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number do block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator condition expr name operator call name argument_list operator expr call name argument_list argument expr name if condition expr name then block type pseudo expr_stmt expr name operator operator name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr name while condition expr name operator block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number macro name argument_list argument argument literal type number argument block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name else block type pseudo expr_stmt expr operator name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name macro name argument_list argument argument literal type number argument if condition expr name name index expr name operator literal type number then block if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name elseif if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name else block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type char else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
