include directive file using namespace name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument expr name argument expr name name decl_stmt decl type name name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block if condition expr name operator name name index expr name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr literal type number argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name name init expr literal type number operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name init expr literal type number expr_stmt expr call name argument_list for control init expr name index expr name operator name operator name operator name block if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init expr name index expr name operator name operator name block if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name operator name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init expr name index expr name operator name operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name return expr literal type number 
