include directive file using namespace name typedef type name name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name class name block private type default private decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name public constructor name parameter_list parameter decl type name name block expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr operator name name index expr name operator name operator then expr name else expr operator name name index expr name operator call name argument_list argument expr name name index expr name operator function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator call name argument_list argument expr name argument expr name then block expr_stmt expr name operator decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name else block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name operator name name index expr name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator function type name name parameter_list block return expr name function type name name parameter_list parameter decl type name name block return expr name name index expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block return expr name name index expr operator call name argument_list argument expr name operator function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator literal type boolean expr_stmt expr name name index expr call name argument_list argument expr name operator literal type boolean function type name name parameter_list block decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name argument expr operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name operator name expr block expr name expr name for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr operator name name index expr name operator name operator name name index expr name operator name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator expr_stmt expr call name name operator name argument_list argument expr block expr name expr block expr name expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list argument expr name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list operator name decl type ref prev name init expr call name name operator name argument_list operator name name operator name decl type ref prev name init expr call name name operator name argument_list operator name name operator name if condition expr name operator name then block if condition expr operator call name name operator name argument_list argument expr name then block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number expr_stmt expr name operator name else block if condition expr operator call name name operator name argument_list argument expr name argument expr name operator operator operator call name name operator name argument_list argument expr name operator operator call name name operator name argument_list argument expr name operator then block expr_stmt expr call name name operator name argument_list argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name return expr literal type number 
