include directive file define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value using namespace name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr literal type number while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block type pseudo expr_stmt expr name operator name operator literal type char operator expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list if condition expr name then block type pseudo expr_stmt expr name operator operator name function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr call name argument_list argument expr operator name else block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type char function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name decl_stmt decl type specifier name name init expr literal type number decl type ref prev name init expr name operator name decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name function type operator specifier type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name decl name name index expr name function specifier type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator expr call name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number decl type ref prev name condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name expr_stmt expr name name index expr operator name operator operator name operator block expr literal type number expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo continue expr_stmt expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator name if condition expr name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name else block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator if condition expr name operator name then block type pseudo break expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name name index expr name operator name operator expr call name argument_list argument expr literal type char operator expr call name argument_list argument expr name name index expr name name index expr name operator name operator expr call name argument_list argument expr literal type char 
