include directive file define directive macro name parameter_list parameter type name modifier value ifdef directive name include directive file endif directive using namespace name using name init type name name using name init type name name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name function type operator template parameter_list parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name modifier name range expr name block expr_stmt expr name operator name return expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name index expr name decl_stmt decl type name name name index expr name index expr name function type name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name decl type ref prev name init expr name if condition expr name operator literal type number then block expr_stmt expr name operator name if condition expr name operator name then block expr_stmt expr name operator expr_stmt expr name operator name operator literal type number operator operator name operator name operator else block expr_stmt expr name operator name if condition expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name operator operator name operator literal type number if condition expr name operator literal type number then block return expr block expr name expr name elseif if condition expr name name index expr name index expr name operator literal type number then block return expr block expr name expr name else block return expr ternary condition expr name name index expr name index expr name operator name name index expr name operator name name index expr name index expr name index expr name then expr name block expr name expr name else expr name block expr name operator name name index expr name index expr name expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list comment type line comment type line comment type line comment type line comment type line comment type line comment type line for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name range expr ternary condition expr name operator literal type number then expr name else expr name block if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr name name index expr name index expr name operator literal type number else block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name index expr name operator name operator call name argument_list argument expr name argument expr name argument expr name if condition expr name operator name operator name operator name then block expr_stmt expr name name index expr name index expr name operator literal type number operator literal type number expr_stmt expr name operator literal type number operator literal type number else block expr_stmt expr name name index expr name index expr name operator operator literal type number operator name name index expr name index expr name operator operator literal type number expr_stmt expr name name index expr name index expr name operator name expr_stmt expr name operator name operator call name argument_list argument expr literal type number operator name name index expr name operator literal type number index expr literal type number operator name return expr literal type number 
