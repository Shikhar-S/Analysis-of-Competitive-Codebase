comment type block format doxygen include directive file include directive file include directive file using namespace name using name init type name name decl_stmt decl type name name init expr literal type number decl_stmt decl type name modifier name modifier decl type ref prev name using name init type name name argument_list type generic argument expr name name decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number function type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name parameter decl type name name block decl_stmt decl type name name init expr call name name operator name argument_list for control init decl type name name init expr literal type number decl type ref prev name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name operator literal type number for control init condition expr name operator name incr expr name operator literal type number block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator literal type number block decl_stmt decl type name name init expr literal type number operator name operator name operator operator ternary condition expr name then expr operator literal type number else expr literal type number operator decl_stmt decl type name name argument_list argument expr call name argument_list argument expr name argument expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator name block decl_stmt decl type name name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name operator name operator literal type number operator name expr_stmt expr name name index expr name operator name operator name operator name expr_stmt expr name name index expr name operator name operator name operator literal type number operator name operator name expr_stmt expr name operator name if condition expr name then block for control init decl type name modifier name range expr name block type pseudo expr_stmt expr name operator name function type name name argument_list type generic argument expr name name parameter_list parameter decl type name name argument_list type generic argument expr name specifier modifier name parameter decl type name name argument_list type generic argument expr name specifier modifier name block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl type ref prev name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number while condition expr name operator call name name operator name argument_list operator call name name operator name argument_list block type pseudo expr_stmt expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type boolean expr_stmt expr call name argument_list argument expr name argument expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr literal type boolean decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name operator call name argument_list return expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name decl type ref prev name init expr literal type number constructor name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name name member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block struct name block public type default decl_stmt decl type specifier name name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name decl type ref prev name init expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name name block expr_stmt expr call name name operator name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr name argument expr name argument expr literal type number expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name operator literal type number expr_stmt expr name operator literal type number function type name name parameter_list block while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list for control init decl type name name range expr name name index expr name block if condition expr name name index expr name operator name operator name name index expr name operator name operator literal type number then block type pseudo continue if condition expr name name index expr name name index expr name operator name operator operator literal type number then block type pseudo continue expr_stmt expr name name index expr name name index expr name operator name operator name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name return expr name name index expr name operator operator literal type number function type name name name parameter_list parameter decl type name name parameter decl type name name name block if condition expr name operator literal type number then block type pseudo return expr literal type number if condition expr name operator name then block type pseudo return expr name for control init decl type name modifier name init expr name name index expr name condition expr name operator operator name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name decl_stmt decl type name name init expr name name index expr name operator name if condition expr name name index expr name operator literal type number operator name name index expr name operator name name index expr name operator name operator name name index expr name operator name operator literal type number then block type pseudo continue decl_stmt decl type name name name init expr call name argument_list argument expr name argument expr call name argument_list argument expr name argument expr name name index expr name operator name operator name name index expr name operator name if condition expr name operator literal type number then block type pseudo continue expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator literal type number operator name operator name return expr name return expr literal type number function type name name name parameter_list block decl_stmt decl type name name name init expr literal type number while condition expr literal type boolean block expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr operator literal type number expr_stmt expr name name index expr name operator literal type number expr_stmt expr call name name operator name argument_list argument expr name if condition expr operator call name argument_list then block type pseudo break expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type number while condition decl type name name name init expr call name argument_list argument expr name argument expr name block expr_stmt expr name operator name return expr name comment type line struct template parameter_list parameter type name name parameter type name name name block public type default decl_stmt decl specifier type specifier name name init expr call name name name argument_list type generic argument expr name operator name argument_list operator literal type number decl_stmt decl type specifier name name init expr call name name name argument_list type generic argument expr name operator name argument_list operator literal type number struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name constructor name parameter_list parameter decl type name name init expr operator literal type number parameter decl type name name init expr operator literal type number parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block decl_stmt decl type name name init expr operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name modifier name constructor name parameter_list parameter decl type name name init expr operator literal type number block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name block constructor_decl name name operator name parameter_list parameter decl type name constructor_decl name name operator name parameter_list parameter decl type name constructor_decl name name operator name parameter_list parameter decl type name decl name name argument_list argument expr name name argument expr name name argument expr name name argument expr name name argument_list argument expr name call name argument_list argument expr name argument expr name name index expr name operator call name argument_list operator operator ternary condition expr name operator name then expr literal type number else expr literal type number operator argument expr name argument expr name argument expr name call name argument_list argument expr name argument expr name name index expr name operator call name argument_list argument expr literal type number argument expr operator name argument expr name name index expr name operator call name argument_list argument expr name argument expr name name index expr name operator call name argument_list argument expr name name modifier name argument_list argument expr specifier name operator name argument_list argument expr name name index expr name name operator name index expr name name operator name name name argument_list argument expr name name argument expr name name argument_list argument expr operator name name operator literal type number name operator name name operator operator block expr name name index expr name operator name expr name name index expr name operator operator literal type number expr name name index expr name operator literal type null name name argument_list type generic argument expr name call name argument_list argument expr name argument expr operator literal type number argument expr name name argument_list type generic argument expr name call name argument_list argument expr literal type number argument expr name argument expr name name index expr name operator literal type number argument expr operator name name operator literal type number name operator name name operator operator block expr name name argument_list type generic argument expr name name for control init decl type name name name block type pseudo for control init decl type name modifier name name name index expr name block type pseudo if condition expr name name operator name operator literal type number operator name name index expr name operator name name operator name operator name name index expr name name operator name then expr_stmt expr block expr name name index expr name name operator name operator name name index expr name operator name name operator name name name index expr name name operator name operator name name name index expr name name operator name operator operator name argument expr operator name name index expr name name operator name operator name operator block expr name name index expr name name operator name operator name expr call name name operator name argument_list argument expr name name operator name name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator operator literal type number macro name block decl_stmt decl type name name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name empty_stmt decl_stmt decl type name name argument_list argument expr name name argument expr name name argument expr name name argument expr name operator name argument expr name operator name argument_list argument expr operator name operator name name index expr name operator block expr name name index expr name operator name expr name name index expr name operator name expr name name index expr name operator name expr call name name operator name argument_list argument expr block expr name name index expr name expr name name name argument_list argument expr name name argument expr name name argument_list argument expr call name name operator name argument_list argument expr name argument expr name argument expr call name name operator name argument_list argument expr name argument expr operator literal type number argument expr call name name operator name argument_list argument expr name argument expr literal type null argument expr name name argument_list type generic argument expr name name argument expr call name argument_list argument expr name argument expr literal type number argument expr operator literal type number argument expr literal type null argument expr name argument expr operator operator call name name operator name argument_list operator block expr name name operator call name name operator name argument_list expr call name name operator name argument_list if condition expr name name operator name operator name name index expr name name operator name then block type pseudo continue for control init decl type name modifier name name name index expr name name operator name block type pseudo if condition expr name name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name name operator name argument expr name name operator name operator name name operator name argument expr name name operator name argument expr operator name argument expr name expr_stmt expr name name index expr name operator operator literal type number macro name argument_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name modifier name range expr name name index expr name block type pseudo expr_stmt expr name name operator name operator name name index expr name operator name name index expr name name operator name function type name name argument_list type generic argument expr name argument expr name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name block expr_stmt expr call name argument_list argument expr name operator literal type number if condition expr operator call name argument_list argument expr name argument expr name then block type pseudo return expr call name argument_list argument expr literal type number argument expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number do block expr_stmt expr call name argument_list expr_stmt expr name operator name name index expr name decl_stmt decl type name name init expr name operator name for control init decl type name name init expr name condition expr name name index expr name operator operator literal type number incr expr name operator name name index expr name block type pseudo expr_stmt expr name operator call name argument_list argument expr name argument expr name name index expr name operator name for control init decl type name name init expr name condition expr name name index expr name operator operator literal type number incr expr name operator name name index expr name block decl_stmt decl type name modifier name init expr name name index expr name expr_stmt expr call name argument_list argument expr name name operator name operator literal type number expr_stmt expr name name operator name operator name expr_stmt expr call name argument_list argument expr operator name operator name operator name expr_stmt expr name operator name expr_stmt expr name operator name operator name condition expr name operator name operator call name argument_list argument expr name argument expr name return expr call name argument_list argument expr name argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name operator name block decl_stmt decl type name name init expr literal type number while condition expr name block if condition expr name operator literal type number then block expr_stmt expr operator name operator name operator operator name expr_stmt expr operator name operator name operator operator name expr_stmt expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name name init expr name operator name block return expr call name argument_list argument expr name argument expr name operator literal type number argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name init expr name operator name block expr_stmt expr name operator operator name name index expr name operator literal type number expr_stmt expr name operator operator name name index expr name operator literal type number expr_stmt expr name name index expr literal type number operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator operator name operator name name index expr name operator literal type number operator operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator operator operator name operator literal type number operator operator name name index expr name operator literal type number operator operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name operator name block if condition expr name operator name operator name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr name name index expr name expr_stmt expr name operator name name index expr name expr_stmt expr name operator name expr_stmt expr name operator name name index expr name operator name expr_stmt expr name operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name init expr name operator name block if condition expr name operator name operator name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr name name index expr name expr_stmt expr name operator name name index expr name operator name return expr name operator name class name block private type default public decl_stmt decl type name modifier name modifier decl type ref prev name constructor name parameter_list parameter decl type name name block expr_stmt expr name operator operator name name index expr name operator literal type number expr_stmt expr name operator operator name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number destructor name name parameter_list block expr_stmt expr operator index name expr_stmt expr operator index name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name else block type pseudo expr_stmt expr name name index expr name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator return expr literal type boolean using namespace name decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name modifier name init expr name name index expr name index expr name index expr name index expr name index expr name if condition expr name operator operator literal type number then block type pseudo return expr name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr literal type number operator name decl_stmt decl type name name init expr name operator name decl_stmt decl type name name init expr name operator name comment type line if condition expr name then block if condition expr name operator name then block decl_stmt decl type name name decl type ref prev name if condition expr name then block expr_stmt expr name operator name operator literal type number else block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr literal type boolean argument expr literal type boolean else block decl_stmt decl type name name decl type ref prev name if condition expr name then block expr_stmt expr name operator name operator literal type number else block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name comment type line decl_stmt decl type name name init expr operator operator operator name operator operator operator name operator operator expr_stmt expr name operator name operator operator name operator operator operator name operator operator if condition expr name then block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name if condition expr name then block expr_stmt expr name operator name expr_stmt expr name operator name else block expr_stmt expr name operator literal type number expr_stmt expr name operator name if condition expr name then block expr_stmt expr name operator name expr_stmt expr name operator literal type number else block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name comment type line expr_stmt expr name operator operator operator operator name operator operator operator name operator operator expr_stmt expr name operator name operator operator name operator operator operator name operator operator if condition expr name then block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name if condition expr name then block expr_stmt expr name operator name expr_stmt expr name operator name else block expr_stmt expr name operator name expr_stmt expr name operator literal type number if condition expr name then block expr_stmt expr name operator literal type number expr_stmt expr name operator name else block expr_stmt expr name operator name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name argument expr name argument expr name argument expr name return expr name class name block private type default public function type name name parameter_list parameter decl type name name operator name modifier name parameter decl type name name operator name modifier name block comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line comment type line decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type boolean argument expr literal type boolean argument expr literal type boolean argument expr literal type boolean operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name name operator name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name operator name argument_list argument expr name expr_stmt expr call name name operator name operator name argument_list argument expr name decl_stmt decl type name name operator name modifier name argument_list argument expr name name operator name decl_stmt decl type name name operator name modifier name argument_list argument expr name name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr name return expr literal type number 
