comment type line include directive file define directive macro name value define directive macro name value using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name init expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name name index expr name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name expr_stmt expr name operator call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type char operator operator expr name operator call name argument_list return expr name operator name function specifier type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block type pseudo expr_stmt expr name operator call name argument_list return expr name function type name name parameter_list block expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator operator name name index expr name operator literal type number operator name name index expr name operator literal type number operator operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name operator literal type number decl_stmt decl type name name init expr call name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr block comment type line if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block type pseudo expr_stmt expr name operator literal type number if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator continue decl_stmt decl type name name init expr name while condition expr name operator name operator name name index expr name operator name name index expr name block type pseudo expr_stmt expr name operator decl_stmt decl type name name init expr name operator name comment type line expr_stmt expr name operator literal type number operator name operator name name index expr name operator name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name function type name name parameter_list block comment type line comment type line decl_stmt decl type name name init expr literal type number while condition expr name operator block type pseudo expr_stmt expr call name argument_list return expr literal type number 
