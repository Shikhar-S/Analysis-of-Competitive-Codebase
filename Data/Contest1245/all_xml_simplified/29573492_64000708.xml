include directive file using namespace name ifdef directive name define directive macro name parameter_list parameter type name value define directive macro name parameter_list value else directive define directive macro name parameter_list parameter type name define directive macro name parameter_list endif directive typedef type name name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name while condition expr name operator block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name decl_stmt decl type name name name index expr literal type number init expr block decl_stmt decl type name name init expr literal type number decl type ref prev name for control init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name if condition expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator elseif if condition expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator elseif if condition expr name operator literal type char operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator comment type line if condition expr operator name operator literal type number operator operator literal type number operator name then block expr_stmt expr name operator literal type string continue expr_stmt expr name operator literal type string for control init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char if condition expr name name index expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char else block if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name operator literal type char expr_stmt expr name operator else block expr_stmt expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator literal type char return expr literal type number 
