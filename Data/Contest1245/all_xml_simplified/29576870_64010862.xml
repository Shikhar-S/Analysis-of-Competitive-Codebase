include directive file using namespace name define directive macro name value define directive macro name value decl_stmt decl type name name function type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char elseif if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char else block type pseudo expr_stmt expr name operator literal type char function type name name parameter_list block comment type line decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name name index expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr literal type number argument expr operator name name index expr literal type number argument expr operator name name index expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name name index expr name operator literal type number index expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name decl_stmt decl type name name name index expr name expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block expr_stmt expr name name index expr name index expr literal type number operator expr_stmt expr name name index expr name operator literal type number elseif if condition expr name name index expr name operator literal type char then block expr_stmt expr name name index expr name index expr literal type number operator expr_stmt expr name name index expr name operator literal type number else block expr_stmt expr name name index expr name index expr literal type number operator expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name operator name name index expr name index expr name expr_stmt expr name name index expr name index expr name operator name decl_stmt decl type name name init expr literal type number expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name if condition expr name name index expr name operator literal type number then block expr_stmt expr name operator expr_stmt expr name name index expr name operator expr_stmt expr call name argument_list argument expr name else block decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo continue decl_stmt decl type name name init expr name name index expr name operator literal type number index expr name decl_stmt decl type name name init expr name name index expr name if condition expr name operator name then block expr_stmt expr name operator literal type boolean expr_stmt expr name name index expr name operator expr_stmt expr call name argument_list argument expr name break if condition expr name operator literal type boolean then block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo continue expr_stmt expr name name index expr name operator expr_stmt expr call name argument_list argument expr name break if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string operator name expr_stmt expr name operator name operator name else block expr_stmt expr name operator literal type string operator name 
