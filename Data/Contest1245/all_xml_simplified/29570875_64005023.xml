include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name operator literal type char operator name operator literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name function type name name name parameter_list block decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name operator literal type char operator name operator literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block expr_stmt expr name operator name operator literal type number operator name operator literal type char expr_stmt expr name operator call name argument_list return expr name operator name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator call name argument_list return expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name function type name name parameter_list block comment type line for control init decl type name name init expr call name argument_list condition expr name incr expr name operator block expr_stmt expr name operator call name argument_list expr_stmt expr name operator call name argument_list operator expr name operator call name argument_list operator expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list expr_stmt expr call name argument_list argument expr name argument expr literal type char argument expr sizeof argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr name name index expr name operator literal type char elseif if condition expr name name index expr name operator literal type char then block if condition expr name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr name name index expr name operator literal type char else block comment type line if condition expr name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr name name index expr name operator literal type char if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name else block if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string operator expr name operator elseif if condition expr name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string operator expr name operator else block type pseudo expr_stmt expr call name argument_list argument expr literal type string operator expr name operator expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
