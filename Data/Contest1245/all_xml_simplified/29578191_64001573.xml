include directive file using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index init expr literal type string function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type number elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr name operator literal type number else block type pseudo expr_stmt expr name name index expr name operator literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr operator name name index expr name operator literal type number operator operator literal type number if condition expr name name index expr name then block expr_stmt expr name name index expr name operator expr_stmt expr name name index expr name operator literal type number operator name expr_stmt expr name operator else block type pseudo expr_stmt expr name name index expr name operator literal type number operator operator literal type number if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator operator literal type number then block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block if condition expr name name index expr name then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator break expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name name index expr name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
