include directive file using namespace name namespace name block function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr operator name operator name operator operator literal type number then block type pseudo expr_stmt expr name operator comment type block return expr name using name init type name name decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name modifier name init expr name name index expr name index expr name index expr name index expr name index expr name if condition expr name operator operator literal type number then block type pseudo return expr name expr_stmt expr name operator literal type number decl_stmt decl type name name init expr ternary condition expr name then expr operator operator name operator name operator operator literal type number operator else expr literal type number decl_stmt decl type name name init expr ternary condition expr name then expr operator operator name operator name operator operator literal type number operator else expr literal type number decl_stmt decl type name name init expr ternary condition expr name then expr operator operator name operator name operator operator literal type number operator else expr literal type number decl_stmt decl type name name init expr ternary condition expr name then expr operator operator name operator name operator operator literal type number operator else expr literal type number for control init decl type name name init expr name condition expr name operator name incr expr name operator block for control init decl type name name init expr name condition expr name operator name incr expr name operator block if condition expr name operator literal type number operator name operator literal type number then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator operator operator operator name operator name operator operator literal type number operator operator name operator argument expr name operator operator operator operator name operator name operator operator literal type number operator operator name operator argument expr name operator operator operator operator name operator name operator operator literal type number operator operator name operator argument expr name operator operator operator operator name operator name operator operator literal type number operator operator name operator argument expr name operator literal type number return expr name function type name name parameter_list parameter decl type name name parameter decl type name specifier modifier name name index block comment type line decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof name expr_stmt expr name operator name operator name expr_stmt expr name operator call name argument_list argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number operator name return expr literal type number 
