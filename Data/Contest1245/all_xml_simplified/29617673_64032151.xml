include directive file define directive macro name value typedef type name name name using namespace name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl type ref prev name function specifier type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name name init expr name expr_stmt expr name operator literal type number while condition expr name block type pseudo expr_stmt expr name name index expr operator name operator name operator literal type number operator expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator name while condition expr name block type pseudo expr_stmt expr name name index expr operator name operator name operator literal type number operator expr name operator literal type number decl_stmt decl type name name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name name init expr name condition expr name incr expr name operator block expr_stmt expr name operator literal type number if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name operator literal type number if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name operator literal type number if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name if condition expr operator name name index expr name then block type pseudo expr_stmt expr name operator literal type number if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name if condition expr operator name name index expr name then block type pseudo expr_stmt expr name operator literal type number if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator literal type number return expr name operator name operator name operator name function type name name parameter_list block decl_stmt decl type name name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl specifier type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number return expr literal type number 
