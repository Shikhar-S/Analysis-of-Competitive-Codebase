include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value using namespace name typedef type struct block public type default decl_stmt decl type name name name name name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl type ref prev name function type name name parameter_list parameter decl type name name block return expr name name index expr name operator operator ternary condition expr name name index expr name operator name then expr name else expr call name argument_list argument expr name name index expr name operator function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr name operator name expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr operator name operator block expr literal type number expr name expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr operator name operator block expr name expr name expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name decl type ref prev name init expr call name argument_list argument expr name name index expr name operator name if condition expr name operator name then block expr_stmt expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator name if condition expr name name index expr name operator name operator literal type number operator name name index expr name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name operator name name index expr name operator name else block expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name if condition expr call name name operator name argument_list then block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name if condition expr call name name operator name argument_list then block for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator literal type string operator name name index expr name operator name expr_stmt expr name operator name return expr literal type number 
