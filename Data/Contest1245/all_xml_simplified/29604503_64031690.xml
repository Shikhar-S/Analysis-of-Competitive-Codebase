include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number function specifier type name name parameter_list block decl_stmt decl specifier type name name name index expr name modifier decl type ref prev name init expr name modifier decl type ref prev name init expr name return expr ternary condition expr name operator name operator operator name operator operator name operator name operator operator call name argument_list argument expr name argument expr literal type number argument expr name argument expr name operator name operator name operator then expr name else expr operator name operator function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr name operator name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name decl type ref prev name name index expr name decl type ref prev name decl_stmt decl type name name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name decl_stmt decl type name name decl name name index expr name operator name decl_stmt decl type name name name index expr name expr_stmt expr specifier macro name argument_list argument block return expr name name index expr name operator name operator name operator name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl_stmt decl type name name name decl_stmt decl type name name name index expr name decl type ref prev name decl type ref prev name name index expr name index expr literal type number decl type ref prev name function type name name parameter_list block expr_stmt expr name operator call name argument_list for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name operator call name argument_list operator expr name name index expr name operator name operator call name argument_list for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list expr_stmt expr name name index expr operator name operator operator name operator block expr name operator literal type number expr name expr name expr literal type number for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type specifier name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator expr literal type number expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator expr literal type number expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr name expr_stmt expr name operator for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name decl type ref prev name init expr call name argument_list argument expr name name index expr name operator name if condition expr name operator name then block type pseudo continue expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name operator name if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name name index expr operator name operator name name index expr name operator name else block expr_stmt expr name operator expr_stmt expr name name index expr name index expr literal type number operator name name index expr name operator name operator expr name name index expr name index expr literal type number operator name name index expr name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type string expr_stmt expr name operator name expr_stmt expr name operator name operator name for control init decl type specifier name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name index expr literal type number operator literal type string operator name name index expr name index expr literal type number operator name return expr literal type number 
