include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name index expr literal type number decl type ref prev name name index expr literal type number decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name name index block decl_stmt decl type name name init expr literal type number while condition expr name block expr_stmt expr name name index expr name operator name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr operator name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name if condition expr name operator operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name modifier name init expr name name index expr name index expr name index expr name index expr name index expr name if condition expr name operator operator literal type number then block expr_stmt expr name operator literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr name decl type ref prev name init expr name if condition expr operator name operator name operator name name index expr name then block type pseudo continue if condition expr operator name operator name operator name name index expr name then block type pseudo continue if condition expr operator name operator name operator name name index expr name then block type pseudo continue if condition expr operator name operator name operator name name index expr name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name operator literal type number argument expr name operator name name argument_list type generic argument expr name name index expr name argument expr name operator name name argument_list type generic argument expr name name index expr name argument expr name operator name name name index expr name argument expr name operator name name name index expr name return expr name define directive macro name value function type name name parameter_list block ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr name operator literal type string operator name endif directive comment type line expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name argument_list argument expr literal type number decl type ref prev name argument_list argument expr literal type number expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr operator literal type number argument expr sizeof argument_list argument expr name while condition expr name operator block comment type line macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name operator name operator name operator literal type number then block macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name name index expr name index expr name index expr name index expr name index expr name operator operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name operator name operator name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number argument expr literal type number argument expr literal type number argument expr literal type number operator name comment type line return expr literal type number comment type line comment type block 
