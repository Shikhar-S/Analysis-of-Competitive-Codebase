include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type operator specifier type name name name parameter_list parameter decl type specifier name modifier name specifier block return expr name operator name name operator name decl name name index expr name operator name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name name index expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name argument expr name operator name expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr operator name operator block expr literal type number expr name expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr operator name operator block expr name expr name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator expr name operator name name index expr name else block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name range expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name argument expr name name operator name return expr literal type number 
