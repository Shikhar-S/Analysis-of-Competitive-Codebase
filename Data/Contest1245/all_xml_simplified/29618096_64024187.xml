include directive file using namespace name define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name name name typedef type name name argument_list type generic argument expr name argument expr name name comment type line decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number typedef type name name name typedef type name name name decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number decl_stmt decl type specifier name name init expr operator literal type number operator decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name name index expr name function type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr call name argument_list argument expr name name operator name operator name name operator name operator call name argument_list argument expr name name operator name operator name name operator name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name function type name name parameter_list block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr literal type number argument expr call name argument_list argument expr literal type number argument expr operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list operator name name operator name decl_stmt decl type name name init expr call name name operator name argument_list operator name name operator name expr_stmt expr name operator call name name operator name argument_list operator name expr_stmt expr call name name operator name argument_list if condition expr name name index expr name then block type pseudo continue expr_stmt expr name name index expr name operator literal type boolean if condition expr name operator operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr call name argument_list argument expr name argument expr name argument expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name name index expr name operator call name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name index expr name operator name if condition expr operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name index expr name index expr name operator name argument expr call name argument_list argument expr name argument expr name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name operator operator name name index expr name operator name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name operator operator name name index expr name operator name name index expr name operator expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name name index expr name expr_stmt expr name name index expr name operator call name argument_list argument expr call name argument_list argument expr name argument expr name name index expr name decl_stmt decl type name name init expr call name argument_list expr_stmt expr name operator name operator literal type string decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name name index expr name operator name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name else block expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr name operator call name name operator name argument_list operator literal type string if condition expr call name name operator name argument_list operator literal type number then block expr_stmt expr name operator name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator literal type string operator name name index expr name operator literal type number if condition expr call name name operator name argument_list then block type pseudo expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator literal type string 
