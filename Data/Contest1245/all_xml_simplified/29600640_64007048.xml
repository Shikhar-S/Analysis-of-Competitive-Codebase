include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr literal type number while condition expr operator call name argument_list argument expr name block type pseudo expr_stmt expr name operator name operator literal type char operator expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr ternary condition expr name then expr operator name else expr name decl_stmt decl type name name name index expr name function type name name parameter_list block decl_stmt decl type name name init expr call name argument_list while condition expr name operator block decl_stmt decl type name name init expr call name argument_list decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr call name argument_list decl type ref prev name init expr call name argument_list decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type char argument expr sizeof argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char operator name then block type pseudo expr_stmt expr name operator operator expr name operator operator expr name name index expr name operator literal type char if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char operator name name index expr name operator literal type char then block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name else block if condition expr name then block type pseudo expr_stmt expr name operator operator expr call name argument_list argument expr literal type char elseif if condition expr name then block type pseudo expr_stmt expr name operator operator expr call name argument_list argument expr literal type char elseif if condition expr name then block type pseudo expr_stmt expr name operator operator expr call name argument_list argument expr literal type char expr_stmt expr call name argument_list argument expr literal type string else block type pseudo expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
