comment type line include directive file using namespace name using name init type name name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name name index expr name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl type ref prev name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name decl type ref prev name function type name name parameter_list parameter decl type name name block while condition expr name operator name name index expr name block expr_stmt expr name name index expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr call name argument_list argument expr name operator name name index expr call name argument_list argument expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr name for control init decl type name name range expr name name index expr name block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name if condition expr name operator name name index expr name then block expr_stmt expr name operator name name index expr name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name operator name then block type pseudo continue expr_stmt expr name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name operator operator name name index expr name operator name name index expr name operator expr block expr name expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name range expr name block if condition expr call name argument_list argument expr name name operator name operator name operator call name argument_list argument expr name name operator name operator name then block type pseudo continue expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr block expr name name operator name operator name expr name name operator name operator name expr_stmt expr name name index expr name name operator name operator name operator call name argument_list argument expr name name operator name operator name expr_stmt expr name name index expr name name operator name operator name operator call name argument_list argument expr name name operator name operator name expr_stmt expr call name argument_list argument expr name name operator name operator name argument expr name name operator name operator name expr_stmt expr name operator name name operator name expr_stmt expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name range expr name block decl_stmt decl type name name init expr call name argument_list argument expr name name operator name operator name argument expr name name operator name operator name decl_stmt decl type name name init expr call name argument_list argument expr name name operator name operator name argument expr name name operator name operator name decl_stmt decl type name name init expr literal type number if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator name name index expr name if condition expr call name name operator name argument_list argument expr name operator call name name operator name argument_list then block type pseudo expr_stmt expr name operator name name index expr name if condition expr name operator name name operator name then block expr_stmt expr name name index expr name name operator name operator name operator call name argument_list argument expr name name operator name operator name expr_stmt expr name name index expr name name operator name operator name operator call name argument_list argument expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name name operator name expr_stmt expr name operator name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name operator name expr name name operator name operator name expr_stmt expr name operator name operator literal type string operator call name name operator name argument_list operator literal type string for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type string expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type string for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator literal type string function type name name parameter_list parameter decl type name name parameter decl type name specifier modifier name name index block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name init expr literal type number comment type line while condition expr name operator block expr_stmt expr call name argument_list comment type line 
