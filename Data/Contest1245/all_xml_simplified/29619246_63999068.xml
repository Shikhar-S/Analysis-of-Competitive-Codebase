include directive file include directive file include directive file function type name name parameter_list block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl_stmt decl type name name operator name name expr_stmt expr name name operator name operator name operator name operator name operator name operator name decl_stmt decl type name name init expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type char decl_stmt decl type name name init expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type char decl_stmt decl type name name init expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr literal type char if condition expr call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name argument expr name operator call name name operator name argument_list argument expr name argument expr name operator name operator literal type number operator literal type number then block expr_stmt expr name name operator name operator literal type string decl_stmt decl type name name operator name name argument_list argument expr name argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name if condition expr name name index expr name operator literal type char then block type pseudo if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name if condition expr name name index expr name operator literal type char then block type pseudo if condition expr name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name name index expr name operator literal type char operator expr operator name continue if condition expr name then block expr_stmt expr name name index expr name operator literal type char operator expr operator name continue if condition expr name then block expr_stmt expr name name index expr name operator literal type char operator expr operator name continue expr_stmt expr name name operator name operator name operator literal type char else block type pseudo expr_stmt expr name name operator name operator literal type string function name parameter_list block expr_stmt expr call name name operator name operator name argument_list argument expr literal type number operator expr call name name operator name operator name argument_list argument expr literal type number decl_stmt decl type name name for control init expr name name operator name operator name condition expr name operator incr block type pseudo expr_stmt expr call name argument_list 
