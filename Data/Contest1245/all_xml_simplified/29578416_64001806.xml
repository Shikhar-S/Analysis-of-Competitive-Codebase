include directive file using namespace name function_decl type name name parameter_list function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr name name operator name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list return expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number comment type line decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name expr_stmt expr name operator name for control init expr name operator name operator name block if condition expr name operator literal type char then block expr_stmt expr name name index expr literal type number operator elseif if condition expr name operator literal type char then block expr_stmt expr name name index expr literal type number operator else block expr_stmt expr name name index expr literal type number operator decl_stmt decl type name name init expr literal type number expr_stmt expr name operator call name argument_list argument expr name name index expr literal type number argument expr name expr_stmt expr name operator call name argument_list argument expr name name index expr literal type number argument expr name expr_stmt expr name operator call name argument_list argument expr name name index expr literal type number argument expr name if condition expr name operator operator name operator literal type number operator operator literal type number then block decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo continue if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator expr_stmt expr name operator literal type string for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name expr_stmt expr name operator literal type char else block expr_stmt expr name operator literal type string 
