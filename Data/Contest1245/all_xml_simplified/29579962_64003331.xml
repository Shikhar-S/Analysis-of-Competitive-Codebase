include directive file using namespace name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name init expr literal type string function type name name parameter_list block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr operator name block type pseudo expr_stmt expr name operator literal type char while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name expr_stmt expr name operator name expr_stmt expr name operator name operator name operator name expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator operator operator name operator literal type number operator operator operator name operator literal type number operator literal type number operator operator then block type pseudo expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char elseif if condition expr name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char elseif if condition expr name then block expr_stmt expr operator name expr_stmt expr name name index expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator literal type char return expr literal type number 
