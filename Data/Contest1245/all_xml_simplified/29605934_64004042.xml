define directive macro name include directive file include directive file include directive file include directive file include directive file using namespace name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name argument expr operator name decl_stmt decl specifier type name name name index expr literal type number decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block switch condition expr name name index expr name block case expr literal type char expr_stmt expr name operator break case expr literal type char expr_stmt expr name operator break case expr literal type char expr_stmt expr name operator break decl_stmt decl type name name init expr literal type number decl_stmt decl type name name name index expr literal type number init expr block expr literal type number expr literal type number expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue if condition expr name operator name operator name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type number expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name expr_stmt expr name name index expr literal type number operator name if condition expr name then block expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator name name index expr literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block switch condition expr name name index expr name block case expr literal type char if condition expr name operator name name index expr literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator break case expr literal type char if condition expr name operator name name index expr literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator break case expr literal type char if condition expr name operator name name index expr literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator else block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr name operator break expr_stmt expr call name argument_list argument expr literal type string argument expr name else block expr_stmt expr call name argument_list argument expr literal type string 
