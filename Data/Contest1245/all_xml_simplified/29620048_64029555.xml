include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name value decl_stmt decl type specifier name name init expr operator name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number elseif if condition expr name operator literal type number operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number return expr name operator name operator name else block type pseudo return expr call name argument_list argument expr name argument expr name operator literal type number operator name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr literal type number elseif if condition expr name operator literal type number operator literal type number then block decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator literal type number return expr name operator name else block type pseudo return expr call name argument_list argument expr name argument expr name operator literal type number operator name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator literal type number then block type pseudo return expr name else block type pseudo return expr call name argument_list argument expr name argument expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block if condition expr call name name operator name argument_list operator name then block type pseudo return expr name name index expr name if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number while condition expr call name name operator name argument_list operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr call name name operator name argument_list operator literal type number operator call name name operator name argument_list operator name return expr name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block if condition expr call name name operator name argument_list operator name then block type pseudo return expr name name index expr name if condition expr call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr literal type number while condition expr call name name operator name argument_list operator name block type pseudo expr_stmt expr call name name operator name argument_list argument expr name name index expr call name name operator name argument_list operator literal type number operator call name argument_list argument expr call name name operator name argument_list argument expr name operator literal type number operator name return expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr name operator name then block type pseudo return expr literal type number comment type line if condition expr name operator name operator name operator literal type number then block type pseudo return expr literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator name expr_stmt expr name operator call name argument_list argument expr name operator name expr_stmt expr name operator name return expr name decl_stmt decl type name name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block return expr name else block return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name block expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name decl type ref prev name decl type ref prev name macro name argument_list argument argument block decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name macro name argument_list argument argument literal type number block expr_stmt expr name name index expr name operator name macro name argument_list argument argument block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name macro name argument_list argument argument block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument block macro name argument_list argument argument block if condition expr name operator name then block type pseudo continue expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr name name index expr name expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr lambda capture parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr name name operator name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument block decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block continue if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr name else block expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator literal type number if condition expr name operator call name name operator name argument_list operator literal type number then block type pseudo expr_stmt expr name operator literal type string else block type pseudo expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name macro name argument_list argument argument block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator name return expr literal type number 
