include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl name name index expr name operator literal type number decl_stmt decl type name name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr operator name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number decl_stmt decl type name name decl_stmt decl type name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name operator name name index expr name operator name name index expr name then block expr_stmt expr name operator name if condition expr name operator literal type number then block break expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block continue expr_stmt expr name operator operator name name index expr name operator name operator name name index expr name operator name operator operator literal type number operator call name argument_list argument expr name argument expr name if condition expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name friend function type operator type name name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl name name index expr name operator literal type number decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name decl_stmt decl type name name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number operator literal type number decl type ref prev name name index expr name operator literal type number operator literal type number decl type ref prev name decl_stmt decl type name name name index expr name operator literal type number index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name name index expr name operator literal type number decl_stmt decl type name name decl type ref prev name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr name operator name for control init decl type name name init expr name name index expr name condition expr name incr expr name operator name name index expr name block decl_stmt decl type name name init expr name name index expr name if condition expr name name index expr name operator operator operator name operator name operator name operator name operator operator operator name operator name operator name operator name operator operator name name index expr name index expr name operator then block continue expr_stmt expr call name argument_list argument expr name argument expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name argument expr operator name name index expr name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name if condition expr name operator literal type number operator name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name expr_stmt expr call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr operator name operator name operator name name index expr name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator operator name name index expr name operator name operator name name index expr name name index expr name operator name operator operator literal type number operator call name argument_list argument expr name argument expr name name index expr name expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name operator name argument expr literal type number expr_stmt expr name operator literal type number operator expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number operator name operator operator literal type number then block if condition expr name name index expr name then block expr_stmt expr name operator operator literal type number if condition expr name operator literal type number operator name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name operator name if condition expr name name index expr name operator literal type number operator name operator operator literal type number then block if condition expr name name index expr name then block expr_stmt expr name operator operator literal type number if condition expr name operator literal type number operator name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name operator name if condition expr name operator operator literal type number operator name operator operator literal type number then block expr_stmt expr name operator name name index expr name operator name else block if condition expr name operator operator literal type number then block if condition expr name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name name index expr name operator name expr_stmt expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator name index expr name name index expr name operator name operator name name index expr name name index expr name operator name index expr name name index expr name operator name operator literal type number else block if condition expr name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name name index expr name operator name expr_stmt expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name name index expr name operator name index expr name name index expr name operator name operator name name index expr name name index expr name operator name index expr name name index expr name operator name operator literal type number expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name return expr literal type number 
