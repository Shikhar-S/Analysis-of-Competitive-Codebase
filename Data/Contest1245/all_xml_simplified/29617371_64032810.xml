include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name name name index expr name index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number comment type line decl_stmt decl type name name name decl type ref prev name function type name name parameter_list block function type name name name parameter_list parameter decl type name name name parameter decl type name name block return expr operator literal type number operator name operator operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name expr_stmt expr name operator operator expr name operator function type name name parameter_list block decl_stmt decl type name name init expr operator ternary condition expr name operator literal type number then expr literal type boolean else expr literal type boolean operator expr_stmt expr name operator call name argument_list argument expr name argument expr literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name expr_stmt expr name name index expr name operator literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number index expr literal type number operator literal type number decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr name operator literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name init expr operator name operator call name argument_list argument expr name argument expr name decl_stmt decl type name name init expr operator name operator call name argument_list argument expr name argument expr name comment type line for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block decl_stmt decl type name name name init expr name name index expr name index expr name index expr name index expr name index expr name index expr name if condition expr name operator literal type number then block type pseudo continue for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block comment type line if condition expr operator name operator name operator operator literal type number operator name then block type pseudo continue comment type line if condition expr name operator name operator name then block type pseudo continue if condition expr name operator name operator name then block type pseudo continue if condition expr name operator name operator name then block type pseudo continue if condition expr name operator name operator name then block type pseudo continue comment type line decl_stmt decl type name name init expr operator name operator name operator name operator operator literal type number decl_stmt decl type name name init expr name operator name if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr operator name operator name operator name operator decl_stmt decl type name name init expr operator name operator name operator name operator decl_stmt decl type name name init expr operator name operator name operator name operator decl_stmt decl type name name init expr operator name operator name operator name operator if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type number index expr name index expr name index expr name index expr name index expr name operator name else block if condition expr name operator name operator name operator name operator name operator literal type number then block expr_stmt expr name operator name if condition expr name then block expr_stmt expr name operator operator name operator literal type number operator literal type number operator operator literal type number operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr name function type name name parameter_list block comment type line comment type line expr_stmt expr call name argument_list decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list expr_stmt expr call name argument_list return expr literal type number 
