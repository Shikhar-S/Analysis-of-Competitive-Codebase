include directive file include directive file include directive file include directive file include directive file using namespace name using namespace name define directive macro name value typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name argument expr name name argument_list type generic argument expr name argument expr name argument expr name name decl_stmt decl type name name argument_list argument expr call name name operator name operator name argument_list operator call name argument_list operator call name argument_list struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name argument expr operator literal type number block function type name name parameter_list parameter decl type name name parameter decl type name name block if condition expr operator name operator call name argument_list argument expr name operator operator operator name operator call name argument_list argument expr name operator then block type pseudo return expr literal type boolean if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name return expr literal type boolean function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator literal type number then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name operator name operator call name argument_list argument expr name operator name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number comment type line comment type line decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name decl type ref prev name argument_list argument expr name decl type ref prev name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr operator name name index expr name operator name name index expr name operator operator call name argument_list argument expr name name index expr name argument expr name name index expr name argument expr name name index expr name argument expr name name index expr name expr block expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr block expr name expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name name operator name decl_stmt decl type name name init expr name name index expr name operator name name operator name decl_stmt decl type name name init expr name name index expr name operator name if condition expr call name name operator name argument_list argument expr name argument expr name then block expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name if condition expr name operator name operator name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name operator literal type number operator literal type string index expr name operator literal type number operator call name name operator name argument_list expr_stmt expr name operator call name name operator name argument_list operator name for control init expr name operator name operator name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type string operator name name operator name operator literal type number operator name return expr literal type number 
