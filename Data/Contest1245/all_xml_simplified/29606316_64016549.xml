define directive macro name include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file comment type line include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file pragma directive name name name name literal name using namespace name define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type name name name init comment type block comment type block expr literal type number operator literal type number comment type block decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name name init expr call name argument_list argument expr operator literal type number decl_stmt decl type name name argument_list argument expr literal type string decl_stmt decl type name name argument_list argument expr literal type string decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name comment type line block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name decl_stmt decl type name name argument_list type generic argument expr name name name decl type ref prev name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number decl_stmt decl type name name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr operator name call name argument_list argument expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator operator operator name name index expr name operator name name index expr name operator expr block expr name expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name name operator name decl_stmt decl type name name init expr name name index expr name operator name name operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block decl_stmt decl type name name name init expr call name argument_list argument expr name name index expr name argument expr name name index expr name if condition expr name operator name name index expr name operator name then block expr_stmt expr name operator name expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr call name argument_list argument expr name argument expr name else block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator literal type string decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator expr_stmt expr name operator name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator name then block expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator literal type string operator call name name operator name argument_list operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator literal type string expr_stmt expr name 
