include directive file ifdef directive name include directive file else directive define directive macro name parameter_list parameter type modifier value endif directive using namespace name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value using name init type name name using template parameter_list parameter type name name name init type name name argument_list type generic argument expr name using template parameter_list parameter type name name parameter type name name name init type name name argument_list type generic argument expr name argument expr name namespace name block function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr call name argument_list argument expr name name operator name operator expr call name argument_list argument expr name name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block for control init decl type name modifier name range expr name block type pseudo expr_stmt expr call name argument_list argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr call name argument_list argument expr name name operator name operator expr call name argument_list argument expr literal type char operator expr call name argument_list argument expr name name operator name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name name argument_list type generic argument expr name modifier name block macro name argument_list argument argument block expr_stmt expr call name argument_list argument expr name name index expr name if condition expr name operator literal type number operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type char function type name name parameter_list block function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name modifier name parameter decl type name modifier modifier name block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name operator function type name name parameter_list block function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier modifier name block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr ternary condition expr sizeof type pack argument_list argument expr name then expr literal type char else expr literal type char expr_stmt expr call name argument_list argument expr name operator using name name operator name using name name operator name class template parameter_list parameter type name name name block private type default decl_stmt decl type name name using name init type name using name init type name public constructor name parameter_list block expr_stmt expr name operator literal type number constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name operator name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name operator name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name operator name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name constructor name parameter_list parameter decl type name name member_init_list call name argument_list argument expr name operator name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name constructor name parameter_list parameter decl type specifier name modifier name block expr_stmt expr name name operator name operator name name operator name function type operator specifier name name parameter_list specifier block return expr name function type operator type name modifier name name parameter_list parameter decl type specifier name name block expr_stmt expr name name operator name operator name name operator name if condition expr name name operator name operator name then block type pseudo expr_stmt expr name name operator name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name name block expr_stmt expr name name operator name operator name name operator name if condition expr name name operator name operator literal type number then block type pseudo expr_stmt expr name name operator name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name name block expr_stmt expr name name operator name operator operator name operator name name operator name operator name name operator name operator name return expr operator name function type operator type name modifier name name parameter_list parameter decl type specifier name name block expr_stmt expr operator name operator call name name operator name argument_list return expr operator name function type name name parameter_list parameter decl type name name specifier block decl_stmt decl type name name argument_list argument expr literal type number decl type ref prev name init expr operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator call name name operator name argument_list operator expr name operator operator name for control init condition expr name operator literal type number incr expr name operator literal type number operator expr name operator name block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name return expr name function type name name parameter_list specifier block decl_stmt decl type name name init expr name decl type ref prev name init expr name name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number while condition expr name operator literal type number block decl_stmt decl type name name init expr name operator name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name operator name expr_stmt expr call name argument_list argument expr name argument expr name return expr name friend function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block decl_stmt decl type name name init expr name name expr_stmt expr operator name return expr name friend function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block decl_stmt decl type name name init expr name name expr_stmt expr operator name return expr name friend function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block decl_stmt decl type name name init expr name name expr_stmt expr operator name return expr name friend function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block decl_stmt decl type name name init expr name name expr_stmt expr operator name return expr name friend function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr name name operator name operator name name operator name friend function type operator type name name name parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name block return expr name name operator name operator name name operator name friend function type operator type name modifier name name parameter_list parameter decl type name modifier name parameter decl type name modifier name block decl_stmt decl type name name name expr_stmt expr operator name operator expr name operator name return expr name friend function type operator type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name modifier name block return expr name operator name name operator name decl_stmt decl type specifier name name init expr literal type number operator literal type number using name init type name name argument_list type generic argument expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name modifier name block expr_stmt expr call name argument_list argument expr call name argument_list argument expr name operator expr call name name operator name argument_list argument expr call name argument_list argument expr call name argument_list argument expr name argument expr call name name operator name argument_list function template parameter_list parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr name operator name return expr call name argument_list argument expr name argument expr name operator name operator name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr operator name operator name operator then expr operator name operator name operator literal type boolean operator else expr literal type boolean function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name modifier name parameter decl type name name block return expr ternary condition expr operator name operator name operator then expr operator name operator name operator literal type boolean operator else expr literal type boolean function type name name parameter_list parameter decl type specifier name modifier name parameter decl type name name block return expr call name name operator name argument_list argument expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name decl type ref prev name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument macro name argument_list argument argument block if condition expr name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr operator name operator name operator operator name name index expr name operator name name index expr name operator macro name argument_list argument argument expr_stmt expr call name name operator name argument_list argument expr name name index expr name expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr call name argument_list argument expr name macro name argument_list argument argument macro name argument_list argument argument block if condition expr name operator name then block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr operator name operator name operator operator name name index expr name operator name name index expr name operator operator call name name operator name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr block expr name expr name macro name argument_list argument argument block decl_stmt decl type name name init expr call name argument_list argument expr call name argument_list argument expr name argument expr name name index expr name operator call name name operator name argument_list expr_stmt expr name name index expr name operator call name argument_list argument expr block expr name expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr call name argument_list argument expr name argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name operator name operator name init expr lambda capture argument modifier parameter_list parameter decl type name name type name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name incr expr name operator block for control init expr name operator name operator name name index expr name block decl_stmt decl type name name init expr name name operator name decl type ref prev name init expr name name operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo continue expr_stmt expr name operator name name index expr name operator expr call name name operator name argument_list argument expr block expr name expr name operator expr name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init expr name operator name operator name block decl_stmt decl type name name init expr name name operator name decl type ref prev name init expr name name operator name if condition expr name operator name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name operator literal type number else block type pseudo expr_stmt expr call name name operator name argument_list argument expr block expr name operator literal type number expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr call name argument_list argument expr name operator expr call name argument_list argument expr name operator expr call name argument_list argument expr call name argument_list argument expr name macro name argument_list argument argument expr_stmt expr call name argument_list argument expr name name index expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null operator expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr name name operator name operator expr call name name operator name argument_list argument expr literal type number decl_stmt decl type name name init expr literal type number comment type line while condition expr name operator block type pseudo expr_stmt expr call name argument_list 
