include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name typedef type name name argument_list type generic argument expr name name argument expr name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl specifier type name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name name constructor name parameter_list parameter decl type name name init expr literal type number parameter decl type name name init expr literal type number parameter decl type name name name init expr literal type number member_init_list call name argument_list argument expr name call name argument_list argument expr name call name argument_list argument expr name block function type name name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name else block type pseudo return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name name init expr operator name name index expr name operator name name index expr name operator operator call name argument_list argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr literal type number argument expr name argument expr name name index expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list argument expr lambda capture parameter_list parameter decl type specifier name modifier name parameter decl type specifier name modifier name type name block return expr name name operator name operator name name operator name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name init expr literal type number for control init decl type name name range expr name block decl_stmt decl type name name init expr call name argument_list argument expr name name operator name decl_stmt decl type name name init expr call name argument_list argument expr name name operator name if condition expr name operator name then block expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name name operator name if condition expr name name operator name operator literal type number operator name name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name name operator name argument expr name name operator name else block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name argument expr literal type string index expr name operator call name name operator name argument_list operator literal type number expr_stmt expr call name argument_list argument expr literal type string argument expr call name name operator name argument_list for control init decl type name name range expr name block expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name argument expr name name operator name return expr literal type number 
