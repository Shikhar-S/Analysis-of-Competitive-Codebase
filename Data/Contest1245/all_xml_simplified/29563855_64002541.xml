pragma directive name name name literal name include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name comment type line function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive comment type line expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number comment type line decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name comment type line decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr name operator literal type char expr_stmt expr operator name else block expr_stmt expr name operator literal type char if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr name operator literal type char expr_stmt expr operator name else block expr_stmt expr name operator literal type char if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr operator name expr_stmt expr name operator literal type char expr_stmt expr operator name else block expr_stmt expr name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name else block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name if condition expr name operator literal type number operator name then block expr_stmt expr name operator literal type string expr_stmt expr name operator name operator literal type char else block type pseudo expr_stmt expr name operator literal type string return expr literal type number 
