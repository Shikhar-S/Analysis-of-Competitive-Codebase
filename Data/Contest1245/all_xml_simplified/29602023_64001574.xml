include directive file using namespace name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name index expr literal type number decl_stmt decl type name name function type name name parameter_list parameter decl type name modifier name parameter decl type name name block expr_stmt expr name operator name if condition expr name operator name then block type pseudo expr_stmt expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator operator name operator literal type char operator name operator literal type char operator operator operator name operator literal type char operator name operator literal type char operator operator function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list expr_stmt expr name operator literal type string operator name expr_stmt expr name name index expr literal type number index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name name index expr name index expr literal type number argument expr name name index expr name operator literal type number index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name index expr literal type number argument expr name name index expr name operator literal type number index expr literal type number if condition expr name operator literal type number operator call name argument_list argument expr name name index expr name argument expr name name index expr name operator literal type number then block expr_stmt expr call name argument_list argument expr name name index expr name index expr literal type number argument expr name name index expr name operator literal type number index expr literal type number expr_stmt expr call name argument_list argument expr name name index expr name index expr literal type number argument expr name name index expr name operator literal type number index expr literal type number decl_stmt decl type name name init expr literal type boolean for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char operator name name index expr name operator literal type char then block expr_stmt expr name operator literal type boolean break if condition expr operator name then block type pseudo return expr name operator literal type number operator expr literal type number decl_stmt decl type name name init expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name name index expr name index expr literal type number expr_stmt expr call name argument_list argument expr name argument expr name name index expr name index expr literal type number expr_stmt expr name operator name return expr literal type number 
