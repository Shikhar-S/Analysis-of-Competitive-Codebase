include directive file define directive macro name value define directive macro name value define directive macro name value define directive macro name value using namespace name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list for control init condition expr operator call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number for control init condition expr call name argument_list argument expr name incr expr name operator call name argument_list block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char return expr name operator name function type name name parameter_list block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name decl_stmt decl type name name init expr call name argument_list decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list operator expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr literal type number index expr name operator name name index expr name index expr literal type number operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name index expr name operator name name index expr name index expr name operator operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name operator expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition incr block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator operator literal type number then block type pseudo continue if condition expr name name index expr name operator name name index expr name index expr name then block type pseudo expr_stmt expr name name index expr name operator name name index expr name index expr name operator expr name name index expr name operator name expr_stmt expr name operator name name index expr name operator expr name name index expr name operator operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator operator literal type number then block type pseudo continue if condition expr name name index expr name operator operator literal type number operator name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name if condition expr name name index expr name operator operator literal type number then block type pseudo break expr_stmt expr name operator name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name then block type pseudo expr_stmt expr name operator else block type pseudo expr_stmt expr name operator expr_stmt expr name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr operator name name index expr name then block type pseudo expr_stmt expr name operator name operator literal type string expr_stmt expr name operator name operator name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name operator literal type string operator name name index expr name operator name return expr literal type number 
