include directive file using namespace name typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr name decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value comment type line ifdef directive name define directive macro name else directive define directive macro name value define directive macro name value endif directive comment type line decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number comment type line decl_stmt decl type name name name index expr literal type number function type name name parameter_list block decl_stmt decl type name name name while condition expr name operator block expr_stmt expr name name index expr literal type number operator call name argument_list operator expr name name index expr literal type number operator call name argument_list operator expr name name index expr literal type number operator call name argument_list expr_stmt expr name operator name operator name operator name operator name operator name expr_stmt expr name operator literal type number operator expr name operator literal type number operator expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator call name argument_list argument expr name elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr name name index expr literal type number operator call name argument_list argument expr name else block type pseudo expr_stmt expr name name index expr literal type number operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof argument_list argument expr name if condition expr call name argument_list argument expr call name argument_list argument expr name name index expr literal type number argument expr name operator call name argument_list argument expr call name argument_list argument expr name name index expr literal type number argument expr name operator call name argument_list argument expr call name argument_list argument expr name name index expr literal type number argument expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string operator name for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr call name argument_list argument expr name name index expr literal type number argument expr name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr literal type number index expr name operator literal type char operator expr name operator for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr call name argument_list argument expr name name index expr literal type number argument expr name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr literal type number index expr name operator literal type char operator expr name operator for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr call name argument_list argument expr name name index expr literal type number argument expr name incr expr name operator block type pseudo expr_stmt expr name name index expr name name index expr literal type number index expr name operator literal type char operator expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name name index expr name operator literal type number then block type pseudo empty_stmt elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator elseif if condition expr name operator name then block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator else block type pseudo expr_stmt expr name name index expr name operator literal type char operator expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name operator name name index expr name expr_stmt expr name operator name else block type pseudo expr_stmt expr name operator literal type string operator name 
