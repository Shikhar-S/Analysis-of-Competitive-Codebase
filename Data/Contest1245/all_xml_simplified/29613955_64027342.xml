comment type line include directive file using namespace name comment type line ifdef directive name define directive macro name parameter_list parameter type modifier value define directive macro name parameter_list parameter type modifier value function type operator template parameter_list parameter type name name parameter type name name type name modifier name name parameter_list parameter decl type name modifier name parameter decl type specifier name name argument_list type generic argument expr name argument expr name modifier name block expr_stmt expr name operator literal type char operator name name operator name operator literal type string operator name name operator name operator literal type char return expr name function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name block while condition expr operator name operator literal type char operator operator name operator literal type char block type pseudo expr_stmt expr name operator expr_stmt expr name name operator name operator name operator literal type string for control init decl type specifier specifier modifier name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator literal type string function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name parameter decl type name modifier modifier name block while condition expr operator name operator literal type char operator operator name operator literal type char block type pseudo expr_stmt expr name operator decl_stmt decl type specifier name modifier name init expr call name argument_list argument expr name argument expr literal type char expr_stmt expr call name name operator name operator name argument_list argument expr name argument expr name operator name operator literal type string for control init decl type specifier specifier modifier name range expr name block type pseudo expr_stmt expr name operator name operator literal type char expr_stmt expr name operator literal type string expr_stmt expr call name argument_list argument expr name argument expr name operator function template parameter_list parameter type name name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name block expr_stmt expr name name operator name operator name operator literal type string operator name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type specifier name modifier name parameter decl type name modifier name parameter decl type name modifier modifier name block decl_stmt decl type specifier name modifier name init expr call name argument_list argument expr name operator literal type number argument expr literal type char expr_stmt expr call name name operator name operator name argument_list argument expr name argument expr name operator name operator literal type string operator name expr_stmt expr call name argument_list argument expr name argument expr name operator else directive define directive macro name parameter_list parameter type modifier define directive macro name parameter_list parameter type modifier endif directive using name init type name name define directive macro name value define directive macro name value define directive macro name value decl_stmt decl type name name init expr call name name operator name operator name argument_list decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name using name init type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name operator name then block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr block expr name expr name expr_stmt expr name name index expr name operator name name index expr name else block type pseudo expr_stmt expr name name index expr name operator call name argument_list argument expr block expr name expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator decl_stmt decl type name name decl type ref prev name expr_stmt expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name while condition expr operator call name name operator name argument_list block decl_stmt decl type name name init expr call name name operator name argument_list expr_stmt expr call name name operator name argument_list if condition expr name name index expr name name operator name operator name then block type pseudo continue expr_stmt expr name name index expr name name operator name operator name operator literal type boolean expr_stmt expr name operator name name operator name if condition expr name name operator name operator name operator name name operator name operator name then block expr_stmt expr name operator expr_stmt expr name name index expr name name operator name operator name operator literal type boolean else block expr_stmt expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name operator name expr name name operator name operator name for control init decl type name name range expr name name index expr name name operator name operator name block if condition expr name name index expr name name operator name then block type pseudo continue if condition expr name name index expr name name operator name operator name name operator name then block expr_stmt expr name name index expr name name operator name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name expr block expr name name operator name expr name name operator name operator name expr_stmt expr name operator name operator literal type char expr_stmt expr name operator name operator literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name operator literal type number operator literal type char expr_stmt expr name operator literal type char expr_stmt expr name operator name operator literal type char for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator literal type char function type name name parameter_list block ifndef directive name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number endif directive decl_stmt decl type name name init expr literal type number ifdef directive name expr_stmt expr name operator name endif directive for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr name ifdef directive name expr_stmt expr name operator literal type string operator call name name operator name name argument_list type generic argument expr name argument_list argument expr call name name operator name operator name argument_list operator name operator call name argument_list operator literal type string endif directive return expr literal type number 
