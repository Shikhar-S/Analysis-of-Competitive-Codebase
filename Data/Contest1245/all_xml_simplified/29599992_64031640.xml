include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value decl_stmt decl type name name init expr literal type string decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number comment type line decl_stmt decl type name name name index expr name decl type ref prev name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block while condition expr name name index expr name operator name block expr_stmt expr name name index expr name operator name name index expr name name index expr name expr_stmt expr name operator name name index expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name argument expr name name index expr name expr_stmt expr name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator literal type boolean decl_stmt decl type name name init expr name for control init decl type name name range expr name name index expr name block if condition expr operator name name index expr name then block decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name operator name return expr name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr literal type number ifndef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive comment type line decl_stmt decl type name name expr_stmt expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name operator name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name macro name argument_list argument argument literal type number argument block macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name operator name name index expr name decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr block expr name operator name expr block expr name expr name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list expr_stmt expr name operator call name name argument_list type generic argument expr name name argument_list type generic argument expr name argument_list argument expr name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument expr_stmt expr name operator name name index expr name for control init decl type name name range expr name block decl_stmt decl type name name init expr name name operator name decl_stmt decl type name name init expr name name operator name operator name decl_stmt decl type name name init expr name name operator name operator name if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block type pseudo continue decl_stmt decl type name name init expr name operator call name argument_list argument expr name name index expr call name argument_list argument expr name argument expr name name index expr call name argument_list argument expr name if condition expr name operator literal type number then block type pseudo continue expr_stmt expr name operator name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr name name index expr name operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr block expr name expr name operator name name index expr block expr name expr name operator name expr_stmt expr call name name operator name argument_list argument expr block expr name expr name expr_stmt expr name operator name operator name macro name argument_list argument argument literal type number argument block if condition expr operator name name index expr name then block expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name operator literal type number operator literal type char expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type number operator literal type char operator name name operator name operator literal type number operator name return expr literal type number 
