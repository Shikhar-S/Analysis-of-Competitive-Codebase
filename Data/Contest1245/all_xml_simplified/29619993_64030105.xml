include directive file using namespace name typedef type name name name name decl_stmt decl type name name argument_list type generic argument expr name name decl type ref prev name function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number function type name name parameter_list parameter decl type name name block if condition expr name operator name name index expr name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name function type operator type name name name parameter_list parameter decl type name specifier modifier name block return expr name operator name name operator name function type name name parameter_list block decl_stmt decl type name name decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr name name operator name operator literal type number expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name name index expr name expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator literal type number expr_stmt expr name name operator name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name init expr operator name name index expr name operator name name index expr name operator operator literal type number operator operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator decl_stmt decl type name name decl type ref prev name expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr name name operator name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name operator literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list for control init decl type name name range expr name block if condition expr call name argument_list argument expr name name operator name operator call name argument_list argument expr name name operator name then block expr_stmt expr name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr name name operator name argument expr name name operator name decl_stmt decl type name name argument_list type generic argument expr name name for control init decl type name name range expr name block if condition expr name name operator name operator literal type number operator name name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block expr_stmt expr name operator operator ternary condition expr name name operator name operator literal type number then expr name name operator name else expr name name operator name operator operator literal type string expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator call name name operator name argument_list operator name for control init decl type name name range expr name block if condition expr name name operator name operator literal type number operator name name operator name operator literal type number then block type pseudo continue expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator literal type char return expr literal type number 
