include directive file using namespace name typedef type name name name define directive macro name value define directive macro name value define directive macro name value define directive macro name value function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name modifier name block expr_stmt expr name operator literal type number decl_stmt decl type specifier name name init expr call name argument_list decl_stmt decl type specifier name name init expr literal type number while condition expr operator call name argument_list argument expr name block if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name operator name operator literal type char operator expr name operator call name argument_list while condition expr call name argument_list argument expr name block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list if condition expr name then block type pseudo expr_stmt expr name operator operator name return expr literal type boolean function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name block if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type char operator expr name operator operator name if condition expr name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr name operator literal type number operator literal type number function template parameter_list parameter type name name specifier type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name operator expr call name argument_list argument expr name decl_stmt decl type name name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator name operator name expr_stmt expr name name index expr name operator name operator name expr_stmt expr name name index expr name operator name operator name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo return if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name if condition expr name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name name index expr name operator function type name name parameter_list block expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name operator name expr_stmt expr name operator if condition expr name operator name then block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name elseif if condition expr name then block expr_stmt expr name name index expr operator name operator name elseif if condition expr name then block expr_stmt expr name name index expr operator name operator name if condition expr name operator name operator literal type number then block type pseudo return function type name name parameter_list block comment type line expr_stmt expr call name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name operator expr call name argument_list argument expr name name index expr name decl_stmt decl type name name decl type ref prev name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type number argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr name argument expr literal type char expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number expr_stmt expr call name argument_list argument expr name argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block type pseudo expr_stmt expr call name argument_list argument expr name name index expr name argument expr literal type char expr_stmt expr call name argument_list argument expr name name index expr name argument expr literal type char expr_stmt expr call name argument_list argument expr name operator name argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr operator name name index expr name then block type pseudo continue expr_stmt expr call name argument_list argument expr name name index expr name argument expr literal type char expr_stmt expr call name argument_list argument expr name name index expr name argument expr literal type char return expr literal type number 
