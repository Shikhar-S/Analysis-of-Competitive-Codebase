include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number operator name for control init expr name operator name condition expr name incr expr name operator name operator name operator name operator expr name operator literal type number block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name return expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr literal type number else expr call name argument_list argument expr name operator name operator operator name operator name operator name operator operator name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block type pseudo expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name comment type line ifdef directive name decl_stmt decl type specifier name name init expr literal type number operator literal type number else directive decl_stmt decl type specifier name name init expr literal type number operator literal type number endif directive decl_stmt decl type name name name index expr literal type number index expr literal type number index expr literal type number comment type line function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr literal type number argument expr sizeof name expr_stmt expr name name index expr literal type number index expr literal type number index expr literal type number operator literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block decl_stmt decl type name modifier name init expr name name index expr name operator literal type number index expr name index expr name if condition expr operator name then block type pseudo continue decl_stmt decl type name name init expr name operator operator operator name operator name operator literal type number operator decl type ref prev name init expr name operator operator operator name operator name operator literal type number operator macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number block if condition expr name operator name then block type pseudo continue if condition expr name operator name then block type pseudo continue if condition expr operator name operator name operator operator name operator name then block type pseudo continue decl_stmt decl type name name init expr name operator name operator operator name operator name operator literal type number operator decl type ref prev name init expr name operator name operator operator name operator name operator literal type number operator expr_stmt expr name name index expr name index expr name index expr name operator name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument literal type number macro name argument_list argument argument literal type number argument literal type number expr_stmt expr name operator name name index expr literal type number index expr name index expr name return expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name argument expr operator name if condition expr name operator literal type number operator name operator literal type number then block expr_stmt expr call name argument_list argument expr literal type string continue decl_stmt decl type name name init expr literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type number operator name operator literal type number operator expr operator name expr_stmt expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator literal type number operator call name argument_list argument expr name operator literal type number argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr name 
