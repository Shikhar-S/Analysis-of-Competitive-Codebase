include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name value struct name block public type default decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name constructor name parameter_list parameter decl type name name block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr literal type number function type name name parameter_list parameter decl type name name block if condition expr name name index expr name operator name then block type pseudo return expr name return expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator call name argument_list argument expr name if condition expr name operator name then block type pseudo return expr literal type boolean expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator name name index expr name return expr literal type boolean function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator call name argument_list argument expr name operator call name argument_list argument expr name operator function type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name return expr name name index expr name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name name argument_list argument expr name decl type ref prev name argument_list argument expr name decl type ref prev name argument_list argument expr name decl type ref prev name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name name argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block if condition expr name operator name then block type pseudo continue decl_stmt decl type name name name init expr call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name decl_stmt decl type name name name init expr name name index expr name operator name name index expr name expr_stmt expr call name name operator name argument_list argument expr name operator name argument expr call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr name name index expr name argument expr call name argument_list argument expr name argument expr name decl_stmt decl type name name name init expr literal type number decl_stmt decl type name name argument_list argument expr name operator literal type number expr_stmt expr call name argument_list argument expr call name name operator name argument_list argument expr call name name operator name argument_list decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr call name name operator name argument_list argument expr name name index expr name operator name name operator name argument expr name name index expr name operator name name operator name then block type pseudo continue expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name name operator name argument expr name name index expr name operator name name operator name if condition expr name name index expr name operator name name operator name operator name then block expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name name operator name else block expr_stmt expr call name name operator name argument_list argument expr name name index expr name operator name name operator name argument expr name name index expr name operator name name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator literal type char expr_stmt expr name operator name name index expr name operator literal type number expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type char operator name name index expr name operator name operator literal type number operator name return expr literal type number 
