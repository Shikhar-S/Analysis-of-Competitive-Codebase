include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value using namespace name typedef type name name name typedef type name name argument_list type generic argument expr name argument expr name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr ternary condition expr name then expr call name argument_list argument expr name argument expr name operator name else expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number operator name for control init expr name operator name condition expr name incr expr name operator name operator name operator name operator expr name operator literal type number block type pseudo if condition expr name operator literal type number then block type pseudo expr_stmt expr name operator name operator name operator name return expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name operator literal type number then expr literal type number else expr call name argument_list argument expr name operator name operator operator name operator name operator name operator operator name function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block type pseudo expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator name operator literal type number operator name operator literal type char operator expr name operator call name argument_list return expr name comment type line ifdef directive name decl_stmt decl type specifier name name init expr literal type number operator literal type number else directive decl_stmt decl type specifier name name init expr literal type number operator literal type number endif directive comment type line comment type line comment type line comment type line comment type line decl_stmt decl type name name struct name block public type default decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl name name index expr name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name then expr name name index expr name operator call name argument_list argument expr name name index expr name else expr name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name argument expr operator name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name operator name macro name argument_list argument argument literal type number argument expr_stmt expr name name index expr operator name operator block expr name operator literal type number expr name expr operator name operator name name index expr name operator name macro name argument_list argument argument literal type number argument macro name argument_list argument argument literal type number argument block if condition expr name operator name then block type pseudo expr_stmt expr name name index expr operator name operator block expr name expr name expr operator name operator call name argument_list argument expr name argument expr name operator operator name name index expr name operator name operator name name index expr name operator name operator expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator literal type number operator name argument expr lambda capture parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl_stmt decl type name name init expr literal type number macro name argument_list argument argument literal type number argument block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name decl_stmt decl type name name init expr call name argument_list argument expr name decl type ref prev name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo continue if condition expr name operator name operator literal type number operator name operator name operator literal type number then block type pseudo expr_stmt expr call name name operator name argument_list argument expr call name argument_list argument expr name argument expr name else block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number if condition expr name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr name name index expr name operator name expr_stmt expr name operator name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name argument_list type generic argument expr name name macro name argument_list argument argument literal type number argument if condition expr name name index expr name then block type pseudo expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr name expr_stmt expr call name argument_list argument expr literal type string argument expr operator name operator call name name operator name argument_list for control init decl type name name range expr name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name operator name argument expr name name operator name 
