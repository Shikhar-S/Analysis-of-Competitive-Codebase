include directive file include directive file include directive file include directive file include directive file include directive file typedef type name name name decl_stmt decl type specifier name name init expr literal type number operator literal type number decl type ref prev name init expr name operator name using namespace name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name define directive macro name value define directive macro name value define directive macro name value function specifier type name name parameter_list block decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name init expr call name argument_list while condition expr name name argument_list type generic argument expr literal type char operator name literal type char block if condition expr name operator literal type char then block type pseudo expr_stmt expr name operator operator literal type number expr_stmt expr name operator call name argument_list while condition expr name operator literal type char operator name operator literal type char block type pseudo expr_stmt expr name operator operator name operator literal type number operator operator operator name operator literal type number operator operator operator name operator literal type number operator operator expr name operator call name argument_list return expr name operator name decl_stmt decl type name name decl type ref prev name decl type ref prev name decl_stmt decl type name name name index expr name decl type ref prev name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl name name index expr name operator literal type number comment type line function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr operator name operator operator name operator block expr name name index expr name expr name expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block expr_stmt expr call name argument_list argument expr name argument expr name argument expr name expr_stmt expr call name argument_list argument expr name argument expr name argument expr name decl_stmt decl type name name name index expr name decl_stmt decl type name name name index expr name decl type ref prev name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl name name index expr name struct name block public type default decl_stmt decl type name name decl type ref prev name decl_stmt decl type name name decl name name index expr name operator literal type number decl type ref prev name name index expr name operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr name name operator name operator name name operator name decl_stmt decl type name name name index expr name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name name index expr name operator name then expr name name index expr name else expr name name index expr name operator call name argument_list argument expr name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block expr_stmt expr name name index expr call name argument_list argument expr name operator call name argument_list argument expr name decl_stmt decl type name name init expr literal type number function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name expr_stmt expr call name argument_list argument expr name operator literal type number argument expr name operator name operator literal type number argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr name name index expr name operator name decl type ref prev name init expr name name index expr name operator name decl_stmt decl type name name init expr name name index expr name operator name if condition expr call name argument_list argument expr name operator call name argument_list argument expr name then block type pseudo continue expr_stmt expr name operator name expr_stmt expr call name argument_list argument expr name argument expr name expr_stmt expr operator name expr_stmt expr name name index expr name operator operator name operator block expr name expr name expr name if condition expr name operator name then block type pseudo break function type name name parameter_list block expr_stmt expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator operator name operator block expr operator name operator call name argument_list expr operator name operator macro name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator call name argument_list for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr operator name name index expr name operator name name index expr name operator operator operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator expr_stmt expr name name index expr operator name operator operator name operator block expr name expr name expr name expr_stmt expr name name index expr operator name operator operator name operator block expr literal type number expr name expr name name index expr name expr_stmt expr call name argument_list expr_stmt expr call name argument_list argument expr literal type string argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name operator literal type number operator name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr operator name expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name operator literal type number operator name name index expr name operator name operator literal type number then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name operator name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name operator name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name name index expr name operator name argument expr name name index expr name operator name expr_stmt expr call name argument_list argument expr literal type string return expr literal type number 
