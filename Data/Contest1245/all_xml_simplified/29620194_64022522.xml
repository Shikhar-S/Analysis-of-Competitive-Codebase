comment type block include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file include directive file using namespace name define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value typedef type name name name typedef type name name name typedef type name name typedef type name name name name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr name expr_stmt expr call name name operator name argument_list argument expr name ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name decl type ref prev name init expr literal type number expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name expr_stmt expr name operator name if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator expr_stmt expr name name index expr name operator literal type char for control init expr name operator name operator name block if condition expr name operator literal type char then block if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type char elseif if condition expr name then block expr_stmt expr name operator expr_stmt expr name operator literal type char else block expr_stmt expr name operator expr_stmt expr name operator literal type char if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string for control init decl type name name range expr name block type pseudo expr_stmt expr name operator name expr_stmt expr name operator name else block expr_stmt expr name operator literal type string return expr literal type number 
