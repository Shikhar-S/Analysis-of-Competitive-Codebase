include directive file using namespace name function type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type boolean decl_stmt decl type name name expr_stmt expr name operator name while condition expr name operator block decl_stmt decl type name name decl type ref prev name decl type ref prev name decl type ref prev name expr_stmt expr name operator name operator name operator name operator name decl_stmt decl type name name init expr literal type number decl type ref prev name init expr literal type number decl type ref prev name init expr literal type number decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name elseif if condition expr name name index expr name operator literal type char then block type pseudo expr_stmt expr operator name else block type pseudo expr_stmt expr operator name decl_stmt decl type name name init expr call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name operator call name argument_list argument expr name argument expr name if condition expr name operator operator name operator literal type number operator operator literal type number then block expr_stmt expr name operator literal type string else block expr_stmt expr name operator literal type string continue decl_stmt decl type name name init expr call name argument_list argument expr name argument expr literal type char for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block type pseudo continue expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name elseif if condition expr name name index expr name operator literal type char then block if condition expr name operator literal type number then block type pseudo continue expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name else block if condition expr name operator literal type number then block type pseudo continue expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name operator literal type char then block type pseudo continue if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name elseif if condition expr name operator literal type number then block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name else block expr_stmt expr name name index expr name operator literal type char expr_stmt expr operator name expr_stmt expr name operator name operator literal type char 
