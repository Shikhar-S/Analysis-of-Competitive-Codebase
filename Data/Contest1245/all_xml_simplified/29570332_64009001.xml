include directive file define directive macro name value define directive macro name value decl_stmt decl type specifier name name init expr operator name operator literal type number operator operator name operator literal type number decl_stmt decl type name name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name decl type ref prev name name index expr name init expr block expr literal type number decl type ref prev name name index expr name decl_stmt decl type name name init expr literal type number decl type ref prev name name index expr name index expr name init expr block expr literal type number decl type ref prev name name index expr name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr call name name operator name argument_list argument expr name name index expr name operator name name index expr name operator call name name operator name argument_list argument expr name name index expr name operator name name index expr name function type name name parameter_list block expr_stmt expr name operator for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name name index expr name operator call name name operator name argument_list argument expr name name index expr name argument expr name name index expr name index expr name expr_stmt expr name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr name name index expr name then block type pseudo continue if condition expr operator name operator name name index expr name operator name name index expr name then block type pseudo expr_stmt expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block if condition expr name name index expr name operator name name index expr name index expr name then block type pseudo expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator call name name operator name argument_list argument expr name name index expr name argument expr name name index expr name index expr name function type name name parameter_list block expr_stmt expr call name argument_list argument expr literal type string argument expr operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name index expr name operator call name argument_list argument expr name name index expr name operator name name index expr name operator call name argument_list argument expr name argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name name index expr name operator literal type number index expr name operator name name index expr name expr_stmt expr call name argument_list expr_stmt expr name name operator name operator name operator name name operator name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr name operator expr_stmt expr call name argument_list argument expr literal type string argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string expr_stmt expr call name argument_list argument expr literal type string argument expr name operator name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name operator name then block type pseudo expr_stmt expr call name argument_list argument expr literal type string argument expr name argument expr name name index expr name return expr literal type number 
