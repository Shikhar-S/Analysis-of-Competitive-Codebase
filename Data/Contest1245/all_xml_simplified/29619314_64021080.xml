include directive file using namespace name include directive file include directive file using namespace name define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name parameter type name parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number decl_stmt decl type specifier name name init expr literal type number decl_stmt decl type specifier name name init expr literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr literal type number while condition expr name operator literal type number block if condition expr name operator literal type number operator literal type number then block type pseudo expr_stmt expr name operator operator name operator name operator operator name expr_stmt expr name operator literal type number expr_stmt expr name operator operator name operator name operator operator name return expr name struct name block public type default decl_stmt decl type name name name index expr literal type number decl_stmt decl type name name name index expr literal type number function type name name parameter_list block for control init decl type name name init expr literal type number condition expr name operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator name expr_stmt expr name name index expr name operator literal type number function type name name parameter_list parameter decl type name name block while condition expr name operator name name index expr name block expr_stmt expr name operator name name index expr name expr_stmt expr name name index expr name operator name name index expr name name index expr name return expr name function type name name parameter_list parameter decl type name name parameter decl type name name block decl_stmt decl type name name init expr call name argument_list argument expr name decl_stmt decl type name name init expr call name argument_list argument expr name if condition expr name operator name then block type pseudo return if condition expr name name index expr name operator name name index expr name then block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name else block expr_stmt expr name name index expr name operator name name index expr name expr_stmt expr name name index expr name operator name function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator call name argument_list argument expr name operator call name argument_list argument expr name operator decl name function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name operator literal type number decl type ref prev name argument_list argument expr name operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr name operator name name index expr name decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block for control init decl type name name init expr name operator literal type number condition expr name operator name incr expr name operator block decl_stmt decl type name name init expr call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name decl_stmt decl type name name init expr name operator operator name name index expr name operator name name index expr name operator expr_stmt expr call name name operator name argument_list argument expr block expr name expr block expr name expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr name operator block expr_stmt expr call name name operator name argument_list argument expr block expr name name index expr name expr block expr name operator literal type number expr name expr_stmt expr call name name operator name argument_list expr_stmt expr call name argument_list argument expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name name index expr literal type number decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name for control init decl type name name range expr name block if condition expr call name name operator name argument_list argument expr name name operator name operator name argument expr name name operator name operator name then block continue expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name argument expr name name operator name operator name expr_stmt expr name name index expr name name operator name operator name operator call name argument_list argument expr name name operator name operator name expr_stmt expr name name index expr name name operator name operator name operator call name argument_list argument expr name name operator name operator name expr_stmt expr name operator name name operator name if condition expr call name argument_list argument expr name name operator name operator name argument expr name name operator name operator name operator name operator literal type number then block expr_stmt expr call name name operator name argument_list argument expr block expr name name operator name operator name expr name name operator name operator name expr_stmt expr name operator name operator name expr_stmt expr name operator name name index expr name operator literal type number operator call name argument_list operator name for control init decl type name name range expr name name index expr name operator literal type number block expr_stmt expr name operator name operator literal type string expr_stmt expr name operator name expr_stmt expr name operator call name name operator name argument_list operator name for control init decl type name name range expr name block expr_stmt expr name operator name name operator name operator literal type string operator name name operator name operator name return expr literal type number 
