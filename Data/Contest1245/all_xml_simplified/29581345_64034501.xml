include directive file pragma directive name name name literal name pragma directive name name name literal name define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value using namespace name typedef type name name argument_list type generic argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name typedef type name name argument_list type generic argument expr name argument expr name name function specifier type name name parameter_list block expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type null expr_stmt expr call name name operator name argument_list argument expr literal type null decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name argument_list type generic argument expr name name decl_stmt decl type name name decl_stmt decl type name name decl_stmt decl type specifier name name init expr literal type number operator literal type number operator literal type number function type name name parameter_list parameter decl type name name parameter decl type name name block return expr operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator call name argument_list argument expr name name index expr name operator name operator name name index expr name operator name operator function type name name parameter_list parameter decl type name name block expr_stmt expr name name index expr name operator literal type number if condition expr name name index expr name operator operator literal type number then block expr_stmt expr name name index expr name operator literal type number return expr_stmt expr call name name operator name argument_list argument expr block expr name expr name name index expr name if condition expr operator name name index expr name name index expr name then block expr_stmt expr call name argument_list argument expr name name index expr name decl_stmt decl type name name init expr literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr operator literal type number expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block expr_stmt expr name operator name name index expr name operator name operator name name index expr name operator name comment type block decl_stmt decl type name name argument_list type generic argument expr name name argument_list type generic argument expr name argument expr name name argument_list argument expr name argument expr block expr literal type number expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name operator name decl_stmt decl type name name argument_list type generic argument expr name name argument_list argument expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo expr_stmt expr name operator name name index expr name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block decl_stmt decl type name name init expr operator literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block if condition expr name operator operator literal type number then block expr_stmt expr name operator name continue if condition expr operator name name index expr name operator name name index expr name operator name operator name name index expr name operator name then block expr_stmt expr name operator name comment type line comment type line expr_stmt expr name operator name name index expr name operator name expr_stmt expr name name index expr name operator literal type number expr_stmt expr name name index expr name operator name name index expr name operator name for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block expr_stmt expr name name index expr name operator call name argument_list argument expr name name index expr name block expr_stmt expr operator name name index expr name operator name name index expr name operator operator call name argument_list argument expr name argument expr name operator expr name empty_stmt expr_stmt expr name operator name operator literal type string comment type line expr_stmt expr call name name operator name argument_list argument expr name argument expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block if condition expr operator name name index expr name then block type pseudo expr_stmt expr call name argument_list argument expr name decl_stmt decl type name name init expr literal type number for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name then block type pseudo expr_stmt expr name operator expr_stmt expr name operator name operator literal type string for control init decl type name name init expr literal type number condition expr name operator name incr expr operator name block type pseudo if condition expr name name index expr name then block type pseudo expr_stmt expr name operator name operator literal type number operator literal type string expr_stmt expr name operator literal type string expr_stmt expr name operator call name name operator name argument_list operator literal type string for control init decl type name name init expr literal type number condition expr name operator call name name operator name argument_list incr expr operator name block expr_stmt expr name operator name name index expr name operator name operator literal type number operator literal type string operator name name index expr name operator name operator literal type number operator literal type string comment type line function name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name endif directive expr_stmt expr call name argument_list expr_stmt expr call name argument_list 
