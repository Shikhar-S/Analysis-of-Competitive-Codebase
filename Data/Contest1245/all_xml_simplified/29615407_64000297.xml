include directive file using namespace name function type name name parameter_list parameter decl type name name block return expr ternary condition expr name then expr literal type string else expr literal type string function type name name parameter_list parameter decl type name name block return expr call name argument_list argument expr literal type number argument expr name function type name name parameter_list parameter decl type name name block return expr literal type char operator name operator literal type char function type name name parameter_list parameter decl type specifier name modifier name block return expr call name argument_list argument expr operator name operator name function template parameter_list parameter type name name parameter type name name type name name parameter_list parameter decl type name name argument_list type generic argument expr name argument expr name name block return expr literal type string operator call name argument_list argument expr name name operator name operator literal type string operator call name argument_list argument expr name name operator name operator literal type string function template parameter_list parameter type name name type name name parameter_list parameter decl type name name block decl_stmt decl type name name init expr literal type boolean decl_stmt decl type name name init expr literal type string for control init decl type specifier specifier modifier name range expr name block if condition expr operator name then block expr_stmt expr name operator literal type string expr_stmt expr name operator literal type boolean expr_stmt expr name operator call name argument_list argument expr name expr_stmt expr name operator literal type string return expr name function type name name parameter_list block expr_stmt expr name operator name function template parameter_list parameter type name name parameter type name modifier name type name name parameter_list parameter decl type name name parameter decl type name modifier name block expr_stmt expr name operator literal type string operator call name argument_list argument expr name expr_stmt expr call name argument_list argument expr name operator ifdef directive name define directive macro name parameter_list parameter type modifier value else directive define directive macro name parameter_list parameter type modifier value endif directive define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name value define directive macro name value define directive macro name value define directive macro name value define directive macro name parameter_list parameter type name value define directive macro name parameter_list parameter type name parameter type name value using name init type name name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name name argument_list type generic argument expr name using name init type name name argument_list type generic argument expr name using name init type name name using name init type name name argument_list type generic argument expr name decl_stmt decl type name name argument_list argument expr operator name name operator call name name operator name operator name argument_list operator call name argument_list operator call name argument_list decl_stmt decl type specifier name name init expr call name argument_list argument expr literal type number operator literal type number function type name name parameter_list block decl_stmt decl type name name expr_stmt expr name operator name for control init decl type name name range expr name block if condition expr name operator literal type char operator name operator literal type char then block expr_stmt expr name operator literal type number operator name return decl_stmt decl type name name argument_list argument expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number expr_stmt expr name name index expr literal type number operator literal type number for control init decl type name name init expr literal type number condition expr name operator literal type number operator literal type number incr expr name operator block expr_stmt expr name name index expr name operator name name index expr name operator literal type number if condition expr name operator literal type number then block type pseudo expr_stmt expr name name index expr name operator name name index expr name operator literal type number expr_stmt expr name name index expr name operator name decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr literal type number decl_stmt decl type name name init expr name name index expr literal type number for control init decl type name name init expr literal type number condition expr name operator call name argument_list argument expr name incr expr name operator block if condition expr name name index expr name operator literal type number operator name name index expr name then block expr_stmt expr name operator else block if condition expr name operator literal type char operator name operator literal type char then block expr_stmt expr name operator operator name operator name name index expr name operator literal type number operator operator name expr_stmt expr name operator literal type number expr_stmt expr name operator name name index expr name if condition expr name operator literal type char operator name operator literal type char then block expr_stmt expr name operator operator name operator name name index expr name operator literal type number operator operator name expr_stmt expr name operator name operator name function type name name parameter_list block ifdef directive name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name expr_stmt expr call name argument_list argument expr literal type string argument expr literal type string argument expr name decl_stmt decl type name name init expr call name argument_list else directive comment type line endif directive expr_stmt expr call name name operator name argument_list argument expr literal type boolean expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name name operator name argument_list argument expr name name operator name operator name name operator name expr_stmt expr call name name operator name argument_list argument expr literal type number expr_stmt expr call name argument_list ifdef directive name decl_stmt decl type name name init expr call name argument_list expr_stmt expr name operator literal type string operator operator name operator name operator operator literal type number operator name operator name endif directive return expr literal type number 
